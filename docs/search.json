[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "RDKit blog",
    "section": "",
    "text": "Building a similarity comparison set\n\n\n\n\n\n\nreference\n\n\nsimilarity\n\n\n\nCreating reference data for other projects\n\n\n\n\n\nMar 16, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nConstructing SAR tables in Jupyter\n\n\n\n\n\n\ntutorial\n\n\nrgd\n\n\n\nBuilding a common dataset visualization\n\n\n\n\n\nMar 15, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nDrawing on drawings\n\n\n\n\n\n\ntutorial\n\n\ndrawing\n\n\n\nMaking more complex figures with the RDKit molecule drawing code.\n\n\n\n\n\nMar 7, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nTuning substructure queries\n\n\n\n\n\n\ntutorial\n\n\nsubstructure\n\n\n\nMaking querying more flexible without using SMARTS\n\n\n\n\n\nMar 1, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nHighlight atoms in drawings\n\n\n\n\n\n\ntutorial\n\n\ndrawing\n\n\n\nOne way to add information to molecular drawings\n\n\n\n\n\nFeb 21, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nStoring molecules in images\n\n\n\n\n\n\ntutorial\n\n\ndrawing\n\n\n\nPNG as a format for storing molecules.\n\n\n\n\n\nFeb 15, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nMore on generalized substructure search\n\n\n\n\n\n\ntutorial\n\n\nsubstructure\n\n\n\nAdvanced substructure search features\n\n\n\n\n\nFeb 8, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nChEMBL Document Similarity\n\n\n\n\n\n\nexploration\n\n\nsimilarity\n\n\n\nUsing compound similarity to define document similarity\n\n\n\n\n\nFeb 2, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nA tutorial on properties\n\n\n\n\n\n\ntutorial\n\n\n\nStoring arbitrary data on molecules, atoms, bonds, etc.\n\n\n\n\n\nJan 24, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nEfficient molecule editing\n\n\n\n\n\n\ntutorial\n\n\n\nFor those cases when you need to do a bit of tweaking.\n\n\n\n\n\nJan 18, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nUsing custom atom and bond invariants with fingerprint generators\n\n\n\n\n\n\nfingerprints\n\n\ntutorial\n\n\n\nMore fine-grained control over the details of how a fingerprint is generated.\n\n\n\n\n\nJan 10, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nIntroducing Synthon Searching\n\n\n\n\n\n\nrelease\n\n\ntutorial\n\n\n\nSearching unreasonably large chemical spaces in reasonable amounts of time.\n\n\n\n\n\nDec 3, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nUsing lwreg with the RDKit cartridge\n\n\n\n\n\n\ncartridge\n\n\ntutorial\n\n\n\nIncludes a tutorial on installing PostgreSQL and the cartridge with conda.\n\n\n\n\n\nOct 31, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nUsing the ACS1996 drawing style in PandasTools\n\n\n\n\n\n\ndocumentation\n\n\ntutorial\n\n\n\nMaking small structure drawings more legible\n\n\n\n\n\nOct 22, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nWhat’s new in 2024.09.1, part II\n\n\n\n\n\n\ndocumentation\n\n\nrelease\n\n\n\nSecond of a series of short posts describing new features since the 2024.03.1 release\n\n\n\n\n\nOct 10, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nWhat’s new in 2024.09.1, part I\n\n\n\n\n\n\ndocumentation\n\n\nrelease\n\n\n\nFirst of a series of short posts describing new features since the 2024.03.1 release\n\n\n\n\n\nSep 29, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nAdditive fingerprints\n\n\n\n\n\n\nexploration\n\n\nsimilarity\n\n\nfingerprints\n\n\n\nGenerating molecular fingerprints from fragment fingerprints\n\n\n\n\n\nSep 20, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nConformer generation and intramolecular H-bonds\n\n\n\n\n\n\ntutorial\n\n\nconformers\n\n\n\nSteering conformer generation\n\n\n\n\n\nJul 28, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nThe problem(s) with scaffold splits, part 1\n\n\n\n\n\n\nmachine learning\n\n\nrants\n\n\nreference\n\n\n\nI get a bit ranty… again.\n\n\n\n\n\nMay 31, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nThe impact of single-atom changes on similarity\n\n\n\n\n\n\nfingerprints\n\n\nreference\n\n\nexploration\n\n\n\nMainly I just wanted to write “topologically complex”.\n\n\n\n\n\nMay 14, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nA stub a day keeps the docstrings at bay\n\n\n\n\n\n\ndocumentation\n\n\nrelease\n\n\n\nImproving python usability\n\n\n\n\n\nMar 8, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nUsing custom standardization rules / Using the python logger from the RDKit\n\n\n\n\n\n\ntutorial\n\n\ndocumentation\n\n\n\nTwo topics for the price of one!\n\n\n\n\n\nFeb 23, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nSome new ways to speed RDKit calls up using multiple threads\n\n\n\n\n\n\ntutorial\n\n\n\nLet’s take advantage of modern CPUs\n\n\n\n\n\nFeb 11, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nAdding molecules to matplotlib plots\n\n\n\n\n\n\ntutorial\n\n\n\nYou got your molecules in my scatter plots!\n\n\n\n\n\nJan 18, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nUsing abbreviations in the RDKit\n\n\n\n\n\n\ntutorial\n\n\ndocumentation\n\n\n\nMaking more compact structure drawings.\n\n\n\n\n\nJan 11, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nCalculating the SA_Score and NP_Score descriptors\n\n\n\n\n\n\ntutorial\n\n\ndocumentation\n\n\ndescriptors\n\n\n\nHow to use Python code from the RDKit Contrib directory.\n\n\n\n\n\nDec 1, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nIntro to Stereo Groups and Enhanced Stereochemistry\n\n\n\n\n\n\ntutorial\n\n\nstereochemistry\n\n\ndocumentation\n\n\n\nA powerful way to express partial knowledge.\n\n\n\n\n\nNov 19, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nUsing the Multithreaded Mol Readers\n\n\n\n\n\n\ntutorial\n\n\n\nAnother way to do more than one thing at a time.\n\n\n\n\n\nNov 11, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nIntroducing RascalMCES\n\n\n\n\n\n\nrelease\n\n\ntutorial\n\n\n\nA fast new implementation of pairwise MCES.\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nNew MCS features in 2023.09.1\n\n\n\n\n\n\nrelease\n\n\ntutorial\n\n\n\nA big collection of fixes and features.\n\n\n\n\n\nOct 27, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nPlotting rows and columns of molecules with MolsMatrixToGridImage\n\n\n\n\n\n\nrelease\n\n\ntutorial\n\n\n\nA new way to draw multiple molecules in a grid\n\n\n\n\n\nOct 25, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nTemplates for ring systems\n\n\n\n\n\n\nrelease\n\n\ntutorial\n\n\n\nImproving 2D coordinate generation\n\n\n\n\n\nOct 21, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nWhat’s new in the 2023.09.1 release, part 1\n\n\n\n\n\n\nrelease\n\n\ndocumentation\n\n\n\nGeneralized substructure search\n\n\n\n\n\nOct 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nRethinking the RDKit versioning model\n\n\n\n\n\n\nprocess\n\n\nquestions\n\n\n\nDo we need to be so conservative about rolling out new features?\n\n\n\n\n\nAug 25, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nVariability of x-fold cross validation results\n\n\n\n\n\n\nmachine learning\n\n\nexploration\n\n\n\nShould multiple splits be run?\n\n\n\n\n\nAug 13, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nThe comparative safety of combining data from Ki assays\n\n\n\n\n\n\nrants\n\n\nexploration\n\n\n\nthe saga contines\n\n\n\n\n\nJun 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nThe hazards of combining data from IC50 assays\n\n\n\n\n\n\nrants\n\n\nexploration\n\n\n\nA data-supported rant\n\n\n\n\n\nJun 12, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nDrawing options explained\n\n\n\n\n\n\ndocumentation\n\n\ndrawing\n\n\n\nMaking sense of all the options\n\n\n\n\n\nMay 26, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nUnderstanding conformer generation failures\n\n\n\n\n\n\n3d\n\n\ndocumentation\n\n\n\nGetting more information when the conformer generation doesn’t work\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nBinary molecules and the cartridge\n\n\n\n\n\n\ncartridge\n\n\ntutorial\n\n\nexploration\n\n\n\nWith a diversion into using PostgreSQL like a document store\n\n\n\n\n\nMay 7, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nNew stuff from the 2023.03 RDKit release\n\n\n\n\n\n\nrelease\n\n\n\nA few highlights\n\n\n\n\n\nMay 3, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nWhat are the VSA Descriptors?\n\n\n\n\n\n\ndescriptors\n\n\n\nMaking sense of something “uninterpretable”\n\n\n\n\n\nApr 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nDoing similarity searches with highly folded fingerprints\n\n\n\n\n\n\nreference\n\n\nfingerprints\n\n\n\nAre very short fingerprints useful for doing similarity searches?\n\n\n\n\n\nMar 26, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nSetting up an RDKit development environment 1\n\n\n\n\n\n\ntutorial\n\n\ntechnical\n\n\n\nIt’s surprisingly straightforward\n\n\n\n\n\nMar 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nUsing intake for chemistry\n\n\n\n\n\n\ntutorial\n\n\ndatasets\n\n\n\nA tool for organizing datasets and collections of datasets\n\n\n\n\n\nMar 9, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nClustering conformers\n\n\n\n\n\n\ntutorial\n\n\n3d\n\n\nconformers\n\n\n\nTutorial on how to cluster molecular conformers.\n\n\n\n\n\nMar 2, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nUsing Feature Maps\n\n\n\n\n\n\ntutorial\n\n\n3d\n\n\n\nA useful tool for working with collections of chemical features.\n\n\n\n\n\nFeb 24, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nMore on constrained embedding\n\n\n\n\n\n\ntutorial\n\n\n3d\n\n\n\nGenerating conformers where some atomic coordinates are constrained.\n\n\n\n\n\nFeb 10, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nWorking with conformers\n\n\n\n\n\n\ntutorial\n\n\n3d\n\n\n\nTutorial on how atomic coordinates are stored\n\n\n\n\n\nFeb 4, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nColliding bits III, expanded\n\n\n\n\n\n\nreference\n\n\nfingerprints\n\n\n\nLooking at numbers of collisions and their impact on similarity\n\n\n\n\n\nJan 23, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nFingerprintGenerator tutorial\n\n\n\n\n\n\ntutorial\n\n\nfingerprints\n\n\n\nA better way to generate molecular fingerprints\n\n\n\n\n\nJan 18, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nR-Group Decomposition Tutorial\n\n\n\n\n\n\ntutorial\n\n\nrgd\n\n\n\nGetting started with RGD\n\n\n\n\n\nJan 9, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nR-Group Decomposition: Edge Cases\n\n\n\n\n\n\nreference\n\n\nrgd\n\n\n\nMore complicated than it seems at first glance.\n\n\n\n\n\nJan 5, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nColliding bits II, revisited\n\n\n\n\n\n\nreference\n\n\nfingerprints\n\n\n\nThe impact of bit collisions on machine-learning performance\n\n\n\n\n\nDec 25, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nDescriptor calculation tutorial\n\n\n\n\n\n\ntutorial\n\n\ndescriptors\n\n\n\nThis will eventually be in the docs\n\n\n\n\n\nDec 23, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nIntroducing rdDetermineBonds\n\n\n\n\n\n\ntutorial\n\n\n3d\n\n\n\nAssigning bonds from 3D coordinates\n\n\n\n\n\nDec 18, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nTiming methods for serializing molecules\n\n\n\n\n\n\nreference\n\n\noptimization\n\n\n\nQuickly saving/restoring molecules from text formats\n\n\n\n\n\nDec 9, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nDealing with multiconformer SD files\n\n\n\n\n\n\n3d\n\n\nconformers\n\n\ntutorial\n\n\n\nIf only we could reliably use better file formats\n\n\n\n\n\nOct 28, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nOptimizing conformer generation parameters\n\n\n\n\n\n\n3d\n\n\nconformers\n\n\noptimization\n\n\n\nImproving the speed of the RDKit’s conformer generator\n\n\n\n\n\nSep 29, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n3D maximum common substructure\n\n\n\n\n\n\ntutorial\n\n\n3d\n\n\nmcs\n\n\n\nTaking atomic coordinates into account when doing MCS\n\n\n\n\n\nJun 23, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nVariability of PMI descriptors\n\n\n\n\n\n\n3d\n\n\nquestions\n\n\n\nWhich is more important, stereochemistry or conformational variability?\n\n\n\n\n\nJun 22, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nSearching with generic groups\n\n\n\n\n\n\ntutorial\n\n\nsubstructure\n\n\n\nUsing generics to get more specific\n\n\n\n\n\nApr 5, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nSome thoughts on refactoring the MolDraw2D code\n\n\n\n\n\n\ntechnical\n\n\n\nA bit of rambling and an overview of some new features\n\n\n\n\n\nMar 18, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nR-group decomposition and molzip\n\n\n\n\n\n\ntutorial\n\n\nrgd\n\n\n\nGenerating molecules from all possible combinations of R groups\n\n\n\n\n\nMar 14, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nThe number of unique fingerprint bits\n\n\n\n\n\n\nexploratory\n\n\nreference\n\n\n\nHow many distinct atom environments are there in organic molecules?\n\n\n\n\n\nJan 4, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nA Ternary GHOST\n\n\n\n\n\n\nexploratory\n\n\nmachinelearning\n\n\n\nExtending the threshold-shifting algorithm to three-class problems\n\n\n\n\n\nDec 23, 2021\n\n\n\n\n\n\n\n\n\n\n\n\nSome new features in the SubstructLibrary\n\n\n\n\n\n\ntutorial\n\n\nsubstructure\n\n\n\nChanging the search order, refining searches, and assigning keys\n\n\n\n\n\nDec 20, 2021\n\n\n\n\n\n\n\n\n\n\n\n\nUsing single-molecule reactions\n\n\n\n\n\n\ntutorial\n\n\nreactions\n\n\n\nA fast and easy way to apply simple reactions\n\n\n\n\n\nDec 15, 2021\n\n\n\n\n\n\n\n\n\n\n\n\nHighlighting changing atoms and bonds in reactions\n\n\n\n\n\n\ntutorial\n\n\nreactions\n\n\n\nA compact view of what changed in a product molecule\n\n\n\n\n\nNov 26, 2021\n\n\n\n\n\n\n\n\n\n\n\n\nR-Group Decomposition and Highlighting\n\n\n\n\n\n\ntutorial\n\n\nprototypes\n\n\ndrawing\n\n\nrgd\n\n\n\nMaking pretty pictures for SAR analysis\n\n\n\n\n\nAug 7, 2021\n\n\n\n\n\n\n\n\n\n\n\n\nGeneralized substructure search\n\n\n\n\n\n\ntutorial\n\n\nsubstructure\n\n\n\nUsing advanced query features\n\n\n\n\n\nAug 3, 2021\n\n\n\n\n\n\n\n\n\n\n\n\nUsing the RDKit in a C++ program\n\n\n\n\n\n\ntutorial\n\n\ntechnical\n\n\n\nIt’s actually pretty easy\n\n\n\n\n\nJul 24, 2021\n\n\n\n\n\n\n\n\n\n\n\n\nLooking at the number of bits set by different fingerprints\n\n\n\n\n\n\nfingerprints\n\n\nreference\n\n\n\nHow many features do we find?\n\n\n\n\n\nJul 6, 2021\n\n\n\n\n\n\n\n\n\n\n\n\nSimulating count fingerprints\n\n\n\n\n\n\nfingerprints\n\n\ntechnical\n\n\nreference\n\n\n\nAn approximation to make working with count vectors more efficient\n\n\n\n\n\nJul 6, 2021\n\n\n\n\n\n\n\n\n\n\n\n\nSome observations about similarity search thresholds\n\n\n\n\n\n\nsimilarity\n\n\nreference\n\n\n\nFingerprint efficiency\n\n\n\n\n\nMay 26, 2021\n\n\n\n\n\n\n\n\n\n\n\n\nFingerprint similarity thresholds for database searches\n\n\n\n\n\n\nsimilarity\n\n\nreference\n\n\n\nFOMO and similarity search\n\n\n\n\n\nMay 21, 2021\n\n\n\n\n\n\n\n\n\n\n\n\nThresholds for “random” in fingerprints the RDKit supports\n\n\n\n\n\n\nfingerprints\n\n\nsimilarity\n\n\nreference\n\n\n\nWhen is it just noise?\n\n\n\n\n\nMay 18, 2021\n\n\n\n\n\n\n\n\n\n\n\n\nIntro to the molecule enumerator\n\n\n\n\n\n\ntutorial\n\n\nsubstructure\n\n\n\nUsing some advanced query features\n\n\n\n\n\nMay 13, 2021\n\n\n\n\n\n\n\n\n\n\n\n\nA new way to use the RDKit from other languages\n\n\n\n\n\n\ntechnical\n\n\n\nIntroducing the RDKit CFFI interface\n\n\n\n\n\nMay 1, 2021\n\n\n\n\n\n\n\n\n\n\n\n\nETKDG and distance constraints\n\n\n\n\n\n\nconformers\n\n\nexploration\n\n\n\nBiasing the conformational search\n\n\n\n\n\nFeb 22, 2021\n\n\n\n\n\n\n\n\n\n\n\n\nLooking at random-coordinate embedding\n\n\n\n\n\n\nconformers\n\n\nexploration\n\n\n3d\n\n\n\nAn alternative starting point for conformer generation\n\n\n\n\n\nJan 31, 2021\n\n\n\n\n\n\n\n\n\n\n\n\nSphere exclusion clustering with the RDKit\n\n\n\n\n\n\nsimilarity\n\n\ntutorial\n\n\n\nVery fast clustering for larger datasets\n\n\n\n\n\nNov 18, 2020\n\n\n\n\n\n\n\n\n\n\n\n\nSetting up an environment to make Python contributions to the RDKit\n\n\n\n\n\n\ncontributing\n\n\ntutorial\n\n\n\nA relatively simple way to become a code contributor\n\n\n\n\n\nMar 30, 2020\n\n\n\n\n\n\n\n\n\n\n\n\nFinding regioisomers\n\n\n\n\n\n\nsubstructure\n\n\ntutorial\n\n\n\nAdvanced substructure searching technique\n\n\n\n\n\nJan 30, 2020\n\n\n\n\n\n\n\n\n\n\n\n\nTrying out the new tautomer canonicalization code\n\n\n\n\n\n\nprototypes\n\n\ntechnical\n\n\n\nEnumerating tautomers and picking a canonical one\n\n\n\n\n\nJan 25, 2020\n\n\n\n\n\n\n\n\n\n\n\n\nSome thoughts on the performance of the RDKit cartridge\n\n\n\n\n\n\ncartridge\n\n\n\nData, hints, and even a bit of ranting\n\n\n\n\n\nJan 21, 2020\n\n\n\n\n\n\n\n\n\n\n\n\nSimilarity maps with the new drawing code\n\n\n\n\n\n\ntutorial\n\n\n\nA new, and nicer, way to generate similarity maps\n\n\n\n\n\nJan 3, 2020\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2021-12-15-single-molecule-reactions.html",
    "href": "posts/2021-12-15-single-molecule-reactions.html",
    "title": "Using single-molecule reactions",
    "section": "",
    "text": "This short post was inspired by a recent question on the RDKit-discuss mailing list: https://www.mail-archive.com/rdkit-discuss@lists.sourceforge.net/msg10905.html\nThe idea is to provide a quick introduction to a piece of chemical reaction functionality which was added to the 2021.09 RDKit release.\n\nfrom rdkit import Chem\nfrom rdkit.Chem import rdChemReactions\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit.Chem import Draw\nimport rdkit\nprint(rdkit.__version__)\n\n2021.09.3\n\n\nThis was the molecule that Lewis asked about.\n\nm1 = Chem.MolFromSmiles('COC(=O)C1=C(C=CC=C1)C1=CC=C(C[N+]#[N]=[N-])C=C1',sanitize=False)\nm1\n\n\n\n\n\n\n\n\nThe RDKit won’t accept this with default settings because there’s an odd representation of an azide group which includes a five-valent neutral nitrogen.\nIt’s straight forward to define a reaction which can convert this odd azide form to the more normal variant:\n\ntf1 = rdChemReactions.ReactionFromSmarts('[#6:1]-[N+:2]#[N:3]=[N-:4]&gt;&gt;[#6:1]-[N+0:2]=[N+1:3]=[N-:4]')\ntf1\n\n\n\n\n\n\n\n\nThe usual way to use this would be with the RunReactants() method, which returns a list of lists of new molecules. In this case though, we have a reaction which operates on a single reactant and has a single product, so we can take advantage of the new RunReactantInPlace() method.\nAs the method name implies, this modifies the reactant molecule in place instead of creating new molecules which are returned as products:\n\ntf1.RunReactantInPlace(m1)\n\n# now sanitize the molecule so that we do chemistry perception and can get decent drawings:\nChem.SanitizeMol(m1)\nm1\n\n\n\n\n\n\n\n\nIt’s important to note that his only modifies one match at a time, so if we have multiple functional groups which need to be modified, we’ll need to call RunReactantInPlace() multiple times.\nHere’s a demonstration of that using a molecule which has two of these weird azide constructions\n\nm1 = Chem.MolFromSmiles('c1cc([N+]#[N]=[N-])ccc1[N+]#[N]=[N-]',sanitize=False)\nm1\n\n\n\n\n\n\n\n\nThe first application of RunReactantInPlace() changes one of the groups:\n\ntf1.RunReactantInPlace(m1)\nm1\n\n\n\n\n\n\n\n\nIf we call RunReactantInPlace() again, the second occurance is replaced:\n\ntf1.RunReactantInPlace(m1)\nm1\n\n\n\n\n\n\n\n\nRunReactantInPlace() makes it easy to know when to stop because it returns a boolean letting you know whether or not the molecule was modified. So in this case we’ll get false:\n\ntf1.RunReactantInPlace(m1)\n\nFalse\n\n\nThis makes it easy to do all the transformations to a molecule with a while loop:\n\nm1 = Chem.MolFromSmiles('c1cc([N+]#[N]=[N-])ccc1[N+]#[N]=[N-]',sanitize=False)\nwhile tf1.RunReactantInPlace(m1):\n    pass\nChem.SanitizeMol(m1)\nm1\n\n\n\n\n\n\n\n\nRunReactantInPlace() is limited, it can only be used with reactions which only have one reactant and product and which do not add atoms in the product.\n\ntf2 = rdChemReactions.ReactionFromSmarts('[#6:1]-[NH2:2]&gt;&gt;[#6:1]-[NH2:2]C')\ntmp = Chem.MolFromSmiles('CCN')\ntf2.RunReactantInPlace(tmp)\n\n\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n&lt;ipython-input-10-98e2aab1842b&gt; in &lt;module&gt;\n      1 tf2 = rdChemReactions.ReactionFromSmarts('[#6:1]-[NH2:2]&gt;&gt;[#6:1]-[NH2:2]C')\n      2 tmp = Chem.MolFromSmiles('CCN')\n----&gt; 3 tf2.RunReactantInPlace(tmp)\n\nValueError: ChemicalParserException: single component reactions which add atoms in the product are not supported\n\n\n\nNote that it can be used with reactions which remove atoms:\n\ntf2 = rdChemReactions.ReactionFromSmarts('[#6:1]-[NH2:2]&gt;&gt;[#6:1]')\ntmp = Chem.MolFromSmiles('CCN')\ntf2.RunReactantInPlace(tmp)\n\nTrue\n\n\n\ntmp\n\n\n\n\n\n\n\n\nAside from being easier to use when working with this simple transformations, it’s worth pointing out that RunReactantInPlace() is significantly faster than using RunReactants() with the same reaction:\n\nm1 = Chem.MolFromSmiles('COC(=O)C1=C(C=CC=C1)C1=CC=C(C[N+]#[N]=[N-])C=C1',sanitize=False)\n%timeit tf1.RunReactantInPlace(Chem.Mol(m1))\n\n9.93 µs ± 125 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)\n\n\n\nm1 = Chem.MolFromSmiles('COC(=O)C1=C(C=CC=C1)C1=CC=C(C[N+]#[N]=[N-])C=C1',sanitize=False)\n%timeit tf1.RunReactants((Chem.Mol(m1),))\n\n22.6 µs ± 81.2 ns per loop (mean ± std. dev. of 7 runs, 10000 loops each)"
  },
  {
    "objectID": "posts/2021-07-06-simulating-counts.html",
    "href": "posts/2021-07-06-simulating-counts.html",
    "title": "Simulating count fingerprints",
    "section": "",
    "text": "Many of the RDKit’s fingerprints are available as either bit vectors or count vectors. Bit vectors track whether or not features appear in a molecule while count vectors track the number of times each feature appears. It seems intuitive that a count vector is a better representation of similarity than bit vectors, but we often use bit vector representations for computational expediency - bit vectors require less memory and are much faster to operate on.\nWhat impact does this using bit vectors have on computed similarity values and the ordering of similarities? This notebook attempts to provide at least a partial answer to that question and also examines a strategy for simulating counts using bit vectors. I look at the following fingerprints: - Morgan 2 - Topological Torsion - Atom Pair - RDKit\nAnd I use two sets of compunds: - Random pairs of compounds taken from this blog post - Pairs of “related compounds” taken from this blog post"
  },
  {
    "objectID": "posts/2021-07-06-simulating-counts.html#bit-vector-similarity-vs-count-based-similarity",
    "href": "posts/2021-07-06-simulating-counts.html#bit-vector-similarity-vs-count-based-similarity",
    "title": "Simulating count fingerprints",
    "section": "Bit vector similarity vs count-based similarity",
    "text": "Bit vector similarity vs count-based similarity\nLet’s start with two molecules where this makes a big difference:\n\nThe calculated similarity with MFP2 and counts is 0.6 while with bits it’s 0.29. That’s easy to understand since with the bit-based fingerprints the long alkyl chains don’t make the large ontribution to the similarity that they do when using counts.\nTo demonstrate that this isn’t all about long chains, here’s another pair where there’s a significant difference:\n\nIn this case the count-based similarity is 0.59 while with bits it’s 0.35.\nThose were a couple of anecdotes, but let’s look at the differences across the entire datasets:\n\nHere I’ve plotted bit-based similarity vs count-based similarity and included statistics on the correlation in the title. The left plot is for the random compound pairs and the right plot is for the related compound pairs. There are significant differences in similarity here, with the bit vector similarities being consistently lower than the count-based equivalent, but it’s worth pointing out that the rankings of the similarities (as measured by the Spearman rank-order correlation values) are reasonably equivalent, particularly for the related compound pairs.\nThe equivalent plots for the RDKit fingerprint show the same qualitative behavior with the difference that bit vector similarities tend to be higher than count based similarities:"
  },
  {
    "objectID": "posts/2021-07-06-simulating-counts.html#simulating-counts",
    "href": "posts/2021-07-06-simulating-counts.html#simulating-counts",
    "title": "Simulating count fingerprints",
    "section": "Simulating counts",
    "text": "Simulating counts\nThe RDKit has a simple mechanism for simulating counts using bit vectors: set multiple bits for each feature where the number of bits set is determined by the count. The approach uses a fixed number of potential bits which each have a threshold value; if the count for the feature exceeds the threshold value then the corresponding bit is set. Here’s a schematic illustration for count simulation with four bits and the thresholds 1, 2, 4, and 8:\n\nThe example shown, with the first two bits set for feature N, is what we’d get if feature N is set either 2 or 3 times in a molecule. Note that we aren’t just using a binary representation of the count itself. In that case a feature which is present one time in the first molecule, representation 1000, and two times in the second molecule, representation 0100, would contribute zero to the overall similarity. That’s not desirable.\nNote that since the count simulation approach uses multiple bits per feature, it decreases the effective length of the fingerprint by a factor equal to the number of bits used. With the default setting of four bits per feature a 2048 bit fingerprint will have the same number of bit collisions as a 512 bit fingerprint without count simulation. This becomes more relevant the more bits a fingerprint tends to set. For example using count simulation to calculate similarity with the RDKit fingerprint, which sets a large number of bits, actually decreases the correlation with the similarity calculated with count vectors (see below for the plot) unless I also increase the overall length of the fingerprint."
  },
  {
    "objectID": "posts/2021-07-06-simulating-counts.html#results-and-discussion",
    "href": "posts/2021-07-06-simulating-counts.html#results-and-discussion",
    "title": "Simulating count fingerprints",
    "section": "Results and discussion",
    "text": "Results and discussion\nHere’s a summary of the results for the fingerprints I examine here\n\nRandom pairs\n\n\n\n\n\n\n\n\n\n\n\n\n\nFingerprint\nbits Spearman r\nbits MAE\nbits RMSE\ncount-simulation Spearman r\ncount-simulation MAE\ncount-simulation RMSE\nNote\n\n\n\n\nMorgan 2\n0.84\n0.097\n0.10\n0.90\n0.024\n0.036\n\n\n\nTopological torsions\n0.92\n0.026\n0.051\n0.98\n0.018\n0.029\n\n\n\nTopological torsions\n0.92\n0.026\n0.051\n0.99\n0.010\n0.021\n8192 bits for count simulation\n\n\nAtom pairs\n0.82\n0.031\n0.049\n0.90\n0.055\n0.066\n\n\n\nAtom pairs\n0.82\n0.031\n0.049\n0.96\n0.014\n0.023\n8192 bits for count simulation\n\n\nRDKit\n0.83\n0.079\n0.10\n0.94\n0.029\n0.045\n8192 bits for count simulation\n\n\n\n\n\nRelated pairs\n\n\n\n\n\n\n\n\n\n\n\n\n\nFingerprint\nbits Spearman r\nbits MAE\nbits RMSE\ncount-simulation Spearman r\ncount-simulation MAE\ncount-simulation RMSE\nNote\n\n\n\n\nMorgan 2\n0.94\n0.043\n0.062\n0.98\n0.019\n0.028\n\n\n\nTopological torsions\n0.90\n0.050\n0.079\n0.98\n0.021\n0.035\n\n\n\nTopological torsions\n0.90\n0.050\n0.079\n0.98\n0.018\n0.032\n8192 bits for count simulation\n\n\nAtom pairs\n0.91\n0.043\n0.067\n0.97\n0.052\n0.063\n\n\n\nAtom pairs\n0.91\n0.043\n0.067\n0.98\n0.020\n0.032\n8192 bits for count simulation\n\n\nRDKit\n0.91\n0.077\n0.11\n0.98\n0.034\n0.053\n8192 bits for count simulation\n\n\n\nUsing the count simulation strategies does improve the match between similarities calculated with bit vectors and those calculated with count vectors. The differences are statistically significant (results not shown here) and large enough to potentially be meaningful. MAE and RMSE values for the various fingerprints typically decrease by at least a factor of two and Spearman rank-order correlation in general increases quite a bit. These conclusions hold for both randomly paired molecules and related pairs with more dramatic differences seen at the lower ends of the similarity scale (the random pairs).\nNote that this analysis focuses solely on similarity. The extra information added by doing count simulation will most likely also influence the performance of machine learning models built using these fingerprints. But that’s for a future blog post.\nThe code to reproduce all of this, along with more plots, is below.\n\nfrom rdkit import Chem\nfrom rdkit.Chem import rdFingerprintGenerator\nfrom rdkit.Chem import rdMolDescriptors\nfrom rdkit import DataStructs\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit.Chem import rdDepictor\nrdDepictor.SetPreferCoordGen(True)\nimport numpy as np\nfrom scipy.stats import spearmanr\nfrom sklearn.metrics import median_absolute_error, mean_squared_error\nimport rdkit\nprint(rdkit.__version__)\n%pylab inline\n\n2021.09.1pre\nPopulating the interactive namespace from numpy and matplotlib"
  },
  {
    "objectID": "posts/2021-07-06-simulating-counts.html#some-technical-notes",
    "href": "posts/2021-07-06-simulating-counts.html#some-technical-notes",
    "title": "Simulating count fingerprints",
    "section": "Some technical notes:",
    "text": "Some technical notes:\n\nNote that this notebook uses a couple of features which did not work properly until the v2021.03.4 of the RDKit (which will be released in July).\nCount simulation is only generally available when working with the “new” fingerprint generators, so those are used throughout this notebook.\nCount simulation is used by default for atom pair and topological torsion fingerprints, both with the “new” fingerprint generators and the older fingerprinting functions."
  },
  {
    "objectID": "posts/2021-07-06-simulating-counts.html#construct-the-dataset.",
    "href": "posts/2021-07-06-simulating-counts.html#construct-the-dataset.",
    "title": "Simulating count fingerprints",
    "section": "Construct the dataset.",
    "text": "Construct the dataset.\nStart with our standard similarity comparison set:\n\nimport gzip\nwith gzip.open('../data/chembl21_25K.pairs.txt.gz','rt') as inf:\n    ls = [x.split() for x in inf.readlines()]\nms = [(Chem.MolFromSmiles(x[1]),Chem.MolFromSmiles(x[3])) for x in ls]\n\nThat’s weighted towards lower similarity values, get some pairs from the related compounds set:\n\nimport pickle\nfrom collections import namedtuple\nMCSRes=namedtuple('MCSRes',('smarts','numAtoms','numMols','avgNumMolAtoms','mcsTime'))\n\ndata = pickle.load(open('../data/scaffolds_revisited_again.simplified.pkl','rb'))\ndata2 = pickle.load(open('../data/scaffolds_expanded.simplified.pkl','rb'))\ndata += data2\n\n# keep only sets where the MCS was at least 50% of the average number of atoms:\nkeep = [x for x in data if x[2].numAtoms&gt;=np.mean(x[2].avgNumMolAtoms)/2]\nlen(keep)\n\nimport random\nrandom.seed(0xf00d)\nrelated_pairs = []\n# keep only molecules matching the MCS:\nfor i,tpl in enumerate(keep):\n    assay,smis,mcs,svg = tpl\n    patt = Chem.MolFromSmarts(mcs.smarts)\n    smis = [(x,y) for x,y in smis if Chem.MolFromSmiles(y).HasSubstructMatch(patt)]\n    ssmis = smis[:]\n    random.shuffle(ssmis)\n    related_pairs.extend([(x[0],x[1],y[0],y[1]) for x,y in zip(smis,ssmis)][:10])\nprint(f'{len(related_pairs)} related pairs')\nrelated_ms = [(Chem.MolFromSmiles(x[1]),Chem.MolFromSmiles(x[3])) for x in related_pairs]\n\n10470 related pairs\n\n\n\nlen(ms)\n\n25000\n\n\n\nimport random\nrandom.seed(0xf00d)\nindices = list(range(len(ms)))\nrandom.shuffle(indices)\nrandom_pairs = [ms[x] for x in indices[:5000]]\nindices = list(range(len(related_ms)))\nrandom.shuffle(indices)\nrelated_pairs = [related_ms[x] for x in indices[:5000]]"
  },
  {
    "objectID": "posts/2021-07-06-simulating-counts.html#performance-of-similarity-comparisons",
    "href": "posts/2021-07-06-simulating-counts.html#performance-of-similarity-comparisons",
    "title": "Simulating count fingerprints",
    "section": "Performance of similarity comparisons",
    "text": "Performance of similarity comparisons\n\nfpgen = rdFingerprintGenerator.GetMorganGenerator(radius=2,fpSize=2048,countSimulation=False)\nbv_pairs = [(fpgen.GetFingerprint(x[0]),fpgen.GetFingerprint(x[1])) for x in random_pairs]\ncv_pairs = [(fpgen.GetCountFingerprint(x[0]),fpgen.GetCountFingerprint(x[1])) for x in random_pairs]\n\n\n%timeit _ = [DataStructs.TanimotoSimilarity(x,y) for x,y in bv_pairs]\n\n5.06 ms ± 75 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)\n\n\n\n%timeit _ = [DataStructs.TanimotoSimilarity(x,y) for x,y in cv_pairs]\n\n8.37 ms ± 160 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)\n\n\nNot a huge difference there, but what about a fingerprint which sets a much larger number of bits?\n\nfpgen = rdFingerprintGenerator.GetRDKitFPGenerator(fpSize=2048,countSimulation=False)\nbv_pairs = [(fpgen.GetFingerprint(x[0]),fpgen.GetFingerprint(x[1])) for x in random_pairs]\ncv_pairs = [(fpgen.GetCountFingerprint(x[0]),fpgen.GetCountFingerprint(x[1])) for x in random_pairs]\n\n\n%timeit _ = [DataStructs.TanimotoSimilarity(x,y) for x,y in bv_pairs]\n\n6.22 ms ± 404 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)\n\n\n\n%timeit _ = [DataStructs.TanimotoSimilarity(x,y) for x,y in cv_pairs]\n\n189 ms ± 1.53 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)\n\n\nHere the performance difference is quite noticeable."
  },
  {
    "objectID": "posts/2021-07-06-simulating-counts.html#morgan-2",
    "href": "posts/2021-07-06-simulating-counts.html#morgan-2",
    "title": "Simulating count fingerprints",
    "section": "Morgan 2",
    "text": "Morgan 2\n\nfpgen1 = rdFingerprintGenerator.GetMorganGenerator(radius=2,fpSize=2048,countSimulation=False)\nfpsims = [DataStructs.TanimotoSimilarity(fpgen1.GetFingerprint(x[0]),fpgen1.GetFingerprint(x[1])) for x in ms]\ncountsims = [DataStructs.TanimotoSimilarity(fpgen1.GetCountFingerprint(x[0]),fpgen1.GetCountFingerprint(x[1])) for x in ms]\nrelated_fpsims = [DataStructs.TanimotoSimilarity(fpgen1.GetFingerprint(x[0]),fpgen1.GetFingerprint(x[1])) for x in related_ms]\nrelated_countsims = [DataStructs.TanimotoSimilarity(fpgen1.GetCountFingerprint(x[0]),fpgen1.GetCountFingerprint(x[1])) for x in related_ms]\n\n\nfpgen2 = rdFingerprintGenerator.GetMorganGenerator(radius=2,fpSize=2048,countSimulation=True)\nfpsims_countsim = [DataStructs.TanimotoSimilarity(fpgen2.GetFingerprint(x[0]),fpgen2.GetFingerprint(x[1])) for x in ms]\nrelated_fpsims_countsim = [DataStructs.TanimotoSimilarity(fpgen2.GetFingerprint(x[0]),fpgen2.GetFingerprint(x[1])) for x in related_ms]\n\n\ndelts = sorted([(countsims[i]-fpsims[i],i) for i in range(len(fpsims))])\nprint(delts[:5])\nprint(delts[-5:])\n\n[(-0.20329670329670324, 12408), (-0.19358178053830222, 14793), (-0.19191919191919193, 126), (-0.17673378076062635, 1391), (-0.17493796526054584, 13034)]\n[(0.31300539083557954, 20013), (0.3151412702245835, 12445), (0.3157622739018088, 13430), (0.3207792207792208, 4381), (0.37206896551724133, 11692)]\n\n\n\nidx = 13430\nprint(f'Count: {countsims[idx]:.2f}, Bits: {fpsims[idx]:.2f}, Simulated counts: {fpsims_countsim[idx]:.2f}')\nDraw.MolsToGridImage(ms[idx],subImgSize=(350,250),molsPerRow=2)\n\nCount: 0.60, Bits: 0.29, Simulated counts: 0.42\n\n\n\n\n\n\n\n\n\n\ndelts = sorted([(related_countsims[i]-related_fpsims[i],i) for i in range(len(related_fpsims))])\nprint(delts[:5])\nprint(delts[-5:])\n\n[(-0.26508684133058585, 4359), (-0.24506749740394607, 1322), (-0.2321428571428572, 7602), (-0.21353383458646613, 10080), (-0.20879676440849337, 3804)]\n[(0.24318181818181822, 1962), (0.24456938410426782, 1961), (0.24456938410426782, 1969), (0.2455492835432045, 1963), (0.273972602739726, 7774)]\n\n\n\nidx = 1969\nprint(f'Count: {related_countsims[idx]:.2f}, Bits: {related_fpsims[idx]:.2f}, Simulated counts: {related_fpsims_countsim[idx]:.2f}')\nDraw.MolsToGridImage(related_ms[idx],subImgSize=(350,250),molsPerRow=2)\n\nCount: 0.59, Bits: 0.35, Simulated counts: 0.52\n\n\n\n\n\n\n\n\n\n\nidx = 4359\nprint(f'Count: {related_countsims[idx]:.2f}, Bits: {related_fpsims[idx]:.2f}, Simulated counts: {related_fpsims_countsim[idx]:.2f}')\nDraw.MolsToGridImage(related_ms[idx],subImgSize=(350,250),molsPerRow=2)\n\nCount: 0.39, Bits: 0.65, Simulated counts: 0.51\n\n\n\n\n\n\n\n\n\n\nfigsize(18,9)\nsubplot(1,2,1)\ny,x = fpsims,countsims\nhexbin(x,y,cmap='Blues',bins='log');\nplot((0,1),(0,1),'k');\nxlabel('count')\nylabel('bits');\nsr,p = spearmanr(x,y)\nmae = median_absolute_error(x,y)\nrmse = sqrt(mean_squared_error(x,y))\ntitle(f'Random pairs, Morgan2 spearman r={sr:.3f} MAE={mae:.3f} RMSE={rmse:.3f}');\n\nsubplot(1,2,2)\ny,x = related_fpsims,related_countsims\nhexbin(x,y,cmap='Blues',bins='log');\nplot((0,1),(0,1),'k');\nxlabel('count')\nylabel('bits');\nsr,p = spearmanr(x,y)\nmae = median_absolute_error(x,y)\nrmse = sqrt(mean_squared_error(x,y))\ntitle(f'Related pairs, Morgan2 spearman r={sr:.3f} MAE={mae:.3f} RMSE={rmse:.3f}');\n\n\n\n\n\n\n\n\n\nfigsize(18,9)\nsubplot(1,2,1)\nx,y = countsims,fpsims_countsim\nhexbin(x,y,cmap='Blues',bins='log');\nplot((0,1),(0,1),'k');\nylabel('count simulation')\nxlabel('count');\nsr,p = spearmanr(x,y)\nmae = median_absolute_error(x,y)\nrmse = sqrt(mean_squared_error(x,y))\ntitle(f'Random pairs, Morgan2 spearman r={sr:.3f} MAE={mae:.3f} RMSE={rmse:.3f}');\n\nsubplot(1,2,2)\nx,y = related_countsims,related_fpsims_countsim\nhexbin(x,y,cmap='Blues',bins='log');\nplot((0,1),(0,1),'k');\nylabel('count simulation')\nxlabel('count');\nsr,p = spearmanr(x,y)\nmae = median_absolute_error(x,y)\nrmse = sqrt(mean_squared_error(x,y))\ntitle(f'Related pairs, Morgan2 spearman r={sr:.3f} MAE={mae:.3f} RMSE={rmse:.3f}');\n\n\n\n\n\n\n\n\n\nfpgen3 = rdFingerprintGenerator.GetMorganGenerator(radius=2,fpSize=8192,countSimulation=True)\nfpsims_countsim2 = [DataStructs.TanimotoSimilarity(fpgen3.GetFingerprint(x[0]),fpgen3.GetFingerprint(x[1])) for x in ms]\nrelated_fpsims_countsim2 = [DataStructs.TanimotoSimilarity(fpgen3.GetFingerprint(x[0]),fpgen3.GetFingerprint(x[1])) for x in related_ms]\n\n\nfigsize(18,9)\nsubplot(1,2,1)\nx,y = countsims,fpsims_countsim2\nhexbin(x,y,cmap='Blues',bins='log');\nplot((0,1),(0,1),'k');\nylabel('count simulation 8192')\nxlabel('count');\nsr,p = spearmanr(x,y)\nmae = median_absolute_error(x,y)\nrmse = sqrt(mean_squared_error(x,y))\ntitle(f'Random pairs, Morgan2 spearman r={sr:.3f} MAE={mae:.3f} RMSE={rmse:.3f}');\n\nsubplot(1,2,2)\nx,y = related_countsims,related_fpsims_countsim2\nhexbin(x,y,cmap='Blues',bins='log');\nplot((0,1),(0,1),'k');\nylabel('count simulation 8192')\nxlabel('count');\nsr,p = spearmanr(x,y)\nmae = median_absolute_error(x,y)\nrmse = sqrt(mean_squared_error(x,y))\ntitle(f'Related pairs, Morgan2 spearman r={sr:.3f} MAE={mae:.3f} RMSE={rmse:.3f}');"
  },
  {
    "objectID": "posts/2021-07-06-simulating-counts.html#topological-torsions",
    "href": "posts/2021-07-06-simulating-counts.html#topological-torsions",
    "title": "Simulating count fingerprints",
    "section": "Topological Torsions",
    "text": "Topological Torsions\n\nfpgen1 = rdFingerprintGenerator.GetTopologicalTorsionGenerator(fpSize=2048,countSimulation=False)\nfpsims = [DataStructs.TanimotoSimilarity(fpgen1.GetFingerprint(x[0]),fpgen1.GetFingerprint(x[1])) for x in ms]\ncountsims = [DataStructs.TanimotoSimilarity(fpgen1.GetCountFingerprint(x[0]),fpgen1.GetCountFingerprint(x[1])) for x in ms]\nrelated_fpsims = [DataStructs.TanimotoSimilarity(fpgen1.GetFingerprint(x[0]),fpgen1.GetFingerprint(x[1])) for x in related_ms]\nrelated_countsims = [DataStructs.TanimotoSimilarity(fpgen1.GetCountFingerprint(x[0]),fpgen1.GetCountFingerprint(x[1])) for x in related_ms]\nfpgen2 = rdFingerprintGenerator.GetTopologicalTorsionGenerator(fpSize=2048,countSimulation=True)\nfpsims_countsim = [DataStructs.TanimotoSimilarity(fpgen2.GetFingerprint(x[0]),fpgen2.GetFingerprint(x[1])) for x in ms]\nrelated_fpsims_countsim = [DataStructs.TanimotoSimilarity(fpgen2.GetFingerprint(x[0]),fpgen2.GetFingerprint(x[1])) for x in related_ms]\n\n\nfigsize(18,9)\nsubplot(1,2,1)\ny,x = fpsims,countsims\nhexbin(x,y,cmap='Blues',bins='log');\nplot((0,1),(0,1),'k');\nxlabel('count')\nylabel('bits');\nsr,p = spearmanr(x,y)\nmae = median_absolute_error(x,y)\nrmse = sqrt(mean_squared_error(x,y))\ntitle(f'Random pairs, TT spearman r={sr:.3f} MAE={mae:.3f} RMSE={rmse:.3f}');\nsubplot(1,2,2)\ny,x = related_fpsims,related_countsims\nhexbin(x,y,cmap='Blues',bins='log');\nplot((0,1),(0,1),'k');\nxlabel('count')\nylabel('bits');\nsr,p = spearmanr(x,y)\nmae = median_absolute_error(x,y)\nrmse = sqrt(mean_squared_error(x,y))\ntitle(f'Related pairs, TT spearman r={sr:.3f} MAE={mae:.3f} RMSE={rmse:.3f}');\n\n\n\n\n\n\n\n\n\nfigsize(18,9)\nsubplot(1,2,1)\nx,y = countsims,fpsims_countsim\nhexbin(x,y,cmap='Blues',bins='log');\nplot((0,1),(0,1),'k');\nylabel('count simulation')\nxlabel('count');\nsr,p = spearmanr(x,y)\nmae = median_absolute_error(x,y)\nrmse = sqrt(mean_squared_error(x,y))\ntitle(f'Random pairs, TT spearman r={sr:.3f} MAE={mae:.3f} RMSE={rmse:.3f}');\n\nsubplot(1,2,2)\nx,y = related_countsims,related_fpsims_countsim\nhexbin(x,y,cmap='Blues',bins='log');\nplot((0,1),(0,1),'k');\nylabel('count simulation')\nxlabel('count');\nsr,p = spearmanr(x,y)\nmae = median_absolute_error(x,y)\nrmse = sqrt(mean_squared_error(x,y))\ntitle(f'Related pairs, TT spearman r={sr:.3f} MAE={mae:.3f} RMSE={rmse:.3f}');\n\n\n\n\n\n\n\n\n\nfpgen3 = rdFingerprintGenerator.GetTopologicalTorsionGenerator(fpSize=8192,countSimulation=True)\nfpsims_countsim2 = [DataStructs.TanimotoSimilarity(fpgen3.GetFingerprint(x[0]),fpgen3.GetFingerprint(x[1])) for x in ms]\nrelated_fpsims_countsim2 = [DataStructs.TanimotoSimilarity(fpgen3.GetFingerprint(x[0]),fpgen3.GetFingerprint(x[1])) for x in related_ms]\nfigsize(18,9)\nsubplot(1,2,1)\nx,y = countsims,fpsims_countsim2\nhexbin(x,y,cmap='Blues',bins='log');\nplot((0,1),(0,1),'k');\nylabel('count simulation 8192')\nxlabel('count');\nsr,p = spearmanr(x,y)\nmae = median_absolute_error(x,y)\nrmse = sqrt(mean_squared_error(x,y))\ntitle(f'Random pairs, TT spearman r={sr:.3f} MAE={mae:.3f} RMSE={rmse:.3f}');\n\nsubplot(1,2,2)\nx,y = related_countsims,related_fpsims_countsim2\nhexbin(x,y,cmap='Blues',bins='log');\nplot((0,1),(0,1),'k');\nylabel('count simulation 8192')\nxlabel('count');\nsr,p = spearmanr(x,y)\nmae = median_absolute_error(x,y)\nrmse = sqrt(mean_squared_error(x,y))\ntitle(f'Related pairs, TT spearman r={sr:.3f} MAE={mae:.3f} RMSE={rmse:.3f}');"
  },
  {
    "objectID": "posts/2021-07-06-simulating-counts.html#atom-pairs",
    "href": "posts/2021-07-06-simulating-counts.html#atom-pairs",
    "title": "Simulating count fingerprints",
    "section": "Atom pairs",
    "text": "Atom pairs\n\nfpgen1 = rdFingerprintGenerator.GetAtomPairGenerator(fpSize=2048,countSimulation=False)\nfpsims = [DataStructs.TanimotoSimilarity(fpgen1.GetFingerprint(x[0]),fpgen1.GetFingerprint(x[1])) for x in ms]\ncountsims = [DataStructs.TanimotoSimilarity(fpgen1.GetCountFingerprint(x[0]),fpgen1.GetCountFingerprint(x[1])) for x in ms]\nrelated_fpsims = [DataStructs.TanimotoSimilarity(fpgen1.GetFingerprint(x[0]),fpgen1.GetFingerprint(x[1])) for x in related_ms]\nrelated_countsims = [DataStructs.TanimotoSimilarity(fpgen1.GetCountFingerprint(x[0]),fpgen1.GetCountFingerprint(x[1])) for x in related_ms]\n\nfpgen2 = rdFingerprintGenerator.GetAtomPairGenerator(fpSize=2048,countSimulation=True)\nfpsims_countsim = [DataStructs.TanimotoSimilarity(fpgen2.GetFingerprint(x[0]),fpgen2.GetFingerprint(x[1])) for x in ms]\nrelated_fpsims_countsim = [DataStructs.TanimotoSimilarity(fpgen2.GetFingerprint(x[0]),fpgen2.GetFingerprint(x[1])) for x in related_ms]\n\n\nfigsize(18,9)\nsubplot(1,2,1)\ny,x = fpsims,countsims\nhexbin(x,y,cmap='Blues',bins='log');\nplot((0,1),(0,1),'k');\nxlabel('count')\nylabel('bits');\nsr,p = spearmanr(x,y)\nmae = median_absolute_error(x,y)\nrmse = sqrt(mean_squared_error(x,y))\ntitle(f'Random pairs, AP spearman r={sr:.3f} MAE={mae:.3f} RMSE={rmse:.3f}');\n\nsubplot(1,2,2)\ny,x = related_fpsims,related_countsims\nhexbin(x,y,cmap='Blues',bins='log');\nplot((0,1),(0,1),'k');\nxlabel('count')\nylabel('bits');\nsr,p = spearmanr(x,y)\nmae = median_absolute_error(x,y)\nrmse = sqrt(mean_squared_error(x,y))\ntitle(f'Related pairs, AP spearman r={sr:.3f} MAE={mae:.3f} RMSE={rmse:.3f}');\n\n\n\n\n\n\n\n\n\nfigsize(18,9)\nsubplot(1,2,1)\nx,y = countsims,fpsims_countsim\nhexbin(x,y,cmap='Blues',bins='log');\nplot((0,1),(0,1),'k');\nylabel('count simulation')\nxlabel('count');\nsr,p = spearmanr(x,y)\nmae = median_absolute_error(x,y)\nrmse = sqrt(mean_squared_error(x,y))\ntitle(f'Random pairs, AP spearman r={sr:.3f} MAE={mae:.3f} RMSE={rmse:.3f}');\n\nsubplot(1,2,2)\nx,y = related_countsims,related_fpsims_countsim\nhexbin(x,y,cmap='Blues',bins='log');\nplot((0,1),(0,1),'k');\nylabel('count simulation')\nxlabel('count');\nsr,p = spearmanr(x,y)\nmae = median_absolute_error(x,y)\nrmse = sqrt(mean_squared_error(x,y))\ntitle(f'Related pairs, AP spearman r={sr:.3f} MAE={mae:.3f} RMSE={rmse:.3f}');\n\n\n\n\n\n\n\n\n\nfpgen3 = rdFingerprintGenerator.GetAtomPairGenerator(fpSize=8192,countSimulation=True)\nfpsims_countsim2 = [DataStructs.TanimotoSimilarity(fpgen3.GetFingerprint(x[0]),fpgen3.GetFingerprint(x[1])) for x in ms]\nrelated_fpsims_countsim2 = [DataStructs.TanimotoSimilarity(fpgen3.GetFingerprint(x[0]),fpgen3.GetFingerprint(x[1])) for x in related_ms]\n\n\nfigsize(18,9)\nsubplot(1,2,1)\nx,y = countsims,fpsims_countsim2\nhexbin(x,y,cmap='Blues',bins='log');\nplot((0,1),(0,1),'k');\nylabel('count simulation 8192')\nxlabel('count');\nsr,p = spearmanr(x,y)\nmae = median_absolute_error(x,y)\nrmse = sqrt(mean_squared_error(x,y))\ntitle(f'Random pairs, AP spearman r={sr:.3f} MAE={mae:.3f} RMSE={rmse:.3f}');\n\n\nsubplot(1,2,2)\nx,y = related_countsims,related_fpsims_countsim2\nhexbin(x,y,cmap='Blues',bins='log');\nplot((0,1),(0,1),'k');\nylabel('count simulation 8192')\nxlabel('count');\nsr,p = spearmanr(x,y)\nmae = median_absolute_error(x,y)\nrmse = sqrt(mean_squared_error(x,y))\ntitle(f'Related pairs, AP spearman r={sr:.3f} MAE={mae:.3f} RMSE={rmse:.3f}');"
  },
  {
    "objectID": "posts/2021-07-06-simulating-counts.html#rdkit-fingerprint",
    "href": "posts/2021-07-06-simulating-counts.html#rdkit-fingerprint",
    "title": "Simulating count fingerprints",
    "section": "RDKit Fingerprint",
    "text": "RDKit Fingerprint\n\nfpgen1 = rdFingerprintGenerator.GetRDKitFPGenerator(fpSize=2048,countSimulation=False)\nfpsims = [DataStructs.TanimotoSimilarity(fpgen1.GetFingerprint(x[0]),fpgen1.GetFingerprint(x[1])) for x in ms]\ncountsims = [DataStructs.TanimotoSimilarity(fpgen1.GetCountFingerprint(x[0]),fpgen1.GetCountFingerprint(x[1])) for x in ms]\nrelated_fpsims = [DataStructs.TanimotoSimilarity(fpgen1.GetFingerprint(x[0]),fpgen1.GetFingerprint(x[1])) for x in related_ms]\nrelated_countsims = [DataStructs.TanimotoSimilarity(fpgen1.GetCountFingerprint(x[0]),fpgen1.GetCountFingerprint(x[1])) for x in related_ms]\n\nfpgen2 = rdFingerprintGenerator.GetRDKitFPGenerator(fpSize=2048,countSimulation=True)\nfpsims_countsim = [DataStructs.TanimotoSimilarity(fpgen2.GetFingerprint(x[0]),fpgen2.GetFingerprint(x[1])) for x in ms]\nrelated_fpsims_countsim = [DataStructs.TanimotoSimilarity(fpgen2.GetFingerprint(x[0]),fpgen2.GetFingerprint(x[1])) for x in related_ms]\n\n\nfigsize(18,9)\n\nsubplot(1,2,1)\ny,x = fpsims,countsims\nhexbin(x,y,cmap='Blues',bins='log');\nplot((0,1),(0,1),'k');\nxlabel('count')\nylabel('bits');\nsr,p = spearmanr(x,y)\nmae = median_absolute_error(x,y)\nrmse = sqrt(mean_squared_error(x,y))\ntitle(f'Random pairs, RDKit spearman r={sr:.3f} MAE={mae:.3f} RMSE={rmse:.3f}');\n\nsubplot(1,2,2)\ny,x = related_fpsims,related_countsims\nhexbin(x,y,cmap='Blues',bins='log');\nplot((0,1),(0,1),'k');\nxlabel('count')\nylabel('bits');\nsr,p = spearmanr(x,y)\nmae = median_absolute_error(x,y)\nrmse = sqrt(mean_squared_error(x,y))\ntitle(f'Related pairs, RDKit spearman r={sr:.3f} MAE={mae:.3f} RMSE={rmse:.3f}');\n\n\n\n\n\n\n\n\n\nfigsize(18,9)\n\nsubplot(1,2,1)\nx,y = countsims,fpsims_countsim\nhexbin(x,y,cmap='Blues',bins='log');\nplot((0,1),(0,1),'k');\nylabel('count simulation')\nxlabel('count');\nsr,p = spearmanr(x,y)\nmae = median_absolute_error(x,y)\nrmse = sqrt(mean_squared_error(x,y))\ntitle(f'Random pairs, RDKit spearman r={sr:.3f} MAE={mae:.3f} RMSE={rmse:.3f}');\n\nsubplot(1,2,2)\nx,y = related_countsims,related_fpsims_countsim\nhexbin(x,y,cmap='Blues',bins='log');\nplot((0,1),(0,1),'k');\nylabel('count simulation')\nxlabel('count');\nsr,p = spearmanr(x,y)\nmae = median_absolute_error(x,y)\nrmse = sqrt(mean_squared_error(x,y))\ntitle(f'Related pairs, RDKit spearman r={sr:.3f} MAE={mae:.3f} RMSE={rmse:.3f}');\n\n\n\n\n\n\n\n\nThis is terrible, but I suspect that has to do with the number of bits set by RDKit fingerprints just totally overloading things.\n\nfpgen3 = rdFingerprintGenerator.GetRDKitFPGenerator(fpSize=8192,countSimulation=True)\nfpsims_countsim2 = [DataStructs.TanimotoSimilarity(fpgen3.GetFingerprint(x[0]),fpgen3.GetFingerprint(x[1])) for x in ms]\nrelated_fpsims_countsim2 = [DataStructs.TanimotoSimilarity(fpgen3.GetFingerprint(x[0]),fpgen3.GetFingerprint(x[1])) for x in related_ms]\n\nfigsize(18,9)\nsubplot(1,2,1)\nx,y = countsims,fpsims_countsim2\nhexbin(x,y,cmap='Blues',bins='log');\nplot((0,1),(0,1),'k');\nylabel('count simulation 8192')\nxlabel('count');\nsr,p = spearmanr(x,y)\nmae = median_absolute_error(x,y)\nrmse = sqrt(mean_squared_error(x,y))\ntitle(f'Random pairs, RDKit spearman r={sr:.3f} MAE={mae:.3f} RMSE={rmse:.3f}');\n\nsubplot(1,2,2)\nx,y = related_countsims,related_fpsims_countsim2\nhexbin(x,y,cmap='Blues',bins='log');\nplot((0,1),(0,1),'k');\nylabel('count simulation 8192')\nxlabel('count');\nsr,p = spearmanr(x,y)\nmae = median_absolute_error(x,y)\nrmse = sqrt(mean_squared_error(x,y))\ntitle(f'Related pairs, RDKit spearman r={sr:.3f} MAE={mae:.3f} RMSE={rmse:.3f}');\n\n\n\n\n\n\n\n\nThat’s way better"
  },
  {
    "objectID": "posts/2023-02-24-using-feature-maps.html",
    "href": "posts/2023-02-24-using-feature-maps.html",
    "title": "Using Feature Maps",
    "section": "",
    "text": "This is a revised and updated version of an older post.\nThis post provides a short demonstration of how to use the RDKit’s feature map implementation to score aligned 3D conformations against each other based on the overlap of their pharmacophoric features. The idea of the feature map is not a new one and there are numerous publications on the topic. These two come closest to describing the RDKit implementation:\n\nPutta, S., Landrum, G. A. & Penzotti, J. E. “Conformation mining: An algorithm for finding biologically relevant conformations.” J. Med. Chem. 48, 3313–3318 (2005). http://pubs.acs.org/doi/abs/10.1021/jm049066l\nLandrum, G. A., Penzotti, J. E. & Putta, S. “Feature-map vectors: a new class of informative descriptors for computational drug discovery.” J. Comput. Aided. Mol. Des. 20, 751–762 (2007). https://link.springer.com/article/10.1007/s10822-006-9085-8\n\n\nfrom rdkit.Chem import AllChem\nfrom rdkit import Chem\nfrom rdkit.Chem.Draw import IPythonConsole\nIPythonConsole.ipython_3d = True\nfrom rdkit.Chem import Draw\nimport time\nprint(time.asctime())\nfrom rdkit import rdBase\nprint(rdBase.rdkitVersion)\n\nFri Feb 24 09:44:30 2023\n2022.09.4\n\n\nFor this post we’ll use a set of three 5HT-3 ligands.\n\nsmis = ['CC(OC(=O)c1c[nH]c2ccccc12)C1CCCCN1C',\n 'CN1CCOc2c(C(=O)NC3CC4CCC(C3)N4C)cc(Cl)cc21',\n 'CN1CC2CCC1CC2n1nnc2ccc(Cl)cc2c1=O']\nms = [Chem.MolFromSmiles(x) for x in smis]\nDraw.MolsToGridImage(ms)\n\n\n\n\n\n\n\n\nStart by generating a conformation for each:\n\nms = [Chem.AddHs(m) for m in ms]\nps = AllChem.ETKDGv3()\nps.randomSeed = 0xf00d  # we seed the RNG so that this is reproducible\nfor m in ms:\n    AllChem.EmbedMolecule(m,ps)\n\nTo get sensible scores for the feature maps, we need to start from aligned structures. For this example we’ll just use the RDKit’s Open3D Align implementation:\n\nfrom rdkit.Chem import rdMolAlign\no3d = rdMolAlign.GetO3A(ms[1],ms[0])\no3d.Align()\n\n0.2892771161742461\n\n\n\no3d = rdMolAlign.GetO3A(ms[2],ms[0])\no3d.Align()\n\n0.5564120832536971\n\n\n\nimport py3Dmol\ndef drawit(ms, p=None, confId=-1, removeHs=True,colors=('cyanCarbon','redCarbon','blueCarbon')):\n        if p is None:\n            p = py3Dmol.view(width=400, height=400)\n        p.removeAllModels()\n        for i,m in enumerate(ms):\n            if removeHs:\n                m = Chem.RemoveHs(m)\n            IPythonConsole.addMolToView(m,p,confId=confId)\n        for i,m in enumerate(ms):\n            p.setStyle({'model':i,},\n                            {'stick':{'colorscheme':colors[i%len(colors)]}})\n        p.zoomTo()\n        return p.show()\n\n\ndrawit(ms)\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol\n        \n\n\n\nNow let’s build a feature map.\nWe need to start by building a FeatureFactory object which defines the set of pharmacophore features being used. We’ll use this to find features on the molecules.\n\nimport os\nfrom rdkit import RDConfig\nfrom rdkit.Chem.FeatMaps import FeatMaps\nfdef = AllChem.BuildFeatureFactory(os.path.join(RDConfig.RDDataDir,'BaseFeatures.fdef'))\nprint(fdef.GetFeatureFamilies())\n\n('Donor', 'Acceptor', 'NegIonizable', 'PosIonizable', 'ZnBinder', 'Aromatic', 'Hydrophobe', 'LumpedHydrophobe')\n\n\nWe also need the parameters for the points used to make up the feature map. The feature points are defined by - a FeatProfile - Gaussian, Triangle, or Box. Gaussian is the default. - a width - the precise meaning is determined by the profile, but this is the sigma factor for the Gaussian. The default value is 1.0. - a cutoff radius - Feature-feature overlaps at a distance longer than this will not be considered. The default is 2.5.\nHere we’ll take the defaults.\n\nfmParams = {}\nfor k in fdef.GetFeatureFamilies():\n    fparams = FeatMaps.FeatMapParams()\n    fmParams[k] = fparams\n\nNext go through and find the features on each molecule. We’ll only consider a subset of the features defined by the FeatureFactory. In “real” use we’d more likely use a FeatureFactory that only defines the features we are interested in, but this example of how to limit the features returned may still be interesting:\n\nkeep = ('Donor','Acceptor','NegIonizable','PosIonizable','Aromatic')\nfeatLists = []\nfor m in ms:\n    rawFeats = fdef.GetFeaturesForMol(m)\n    # filter that list down to only include the ones we're intereted in \n    featLists.append([f for f in rawFeats if f.GetFamily() in keep])\n\nLet’s look at the features:\n\nimport py3Dmol\nfrom rdkit.Chem.Features.ShowFeats import _featColors as featColors\ndef colorToHex(rgb):\n    rgb = [f'{int(255*x):x}' for x in rgb]\n    return '0x'+''.join(rgb)\ndef drawit(m, feats, p=None, confId=-1, removeHs=True):\n        if p is None:\n            p = py3Dmol.view(width=400, height=400)\n        p.removeAllModels()\n        if removeHs:\n            m = Chem.RemoveHs(m)\n        IPythonConsole.addMolToView(m,p,confId=confId)\n        for feat in feats:\n            pos = feat.GetPos()\n            clr = featColors.get(feat.GetFamily(),(.5,.5,.5))\n            p.addSphere({'center':{'x':pos.x,'y':pos.y,'z':pos.z},'radius':.5,'color':colorToHex(clr)});\n        p.zoomTo()\n        return p.show()\n\n\ndrawit(ms[0],featLists[0])\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol\n        \n\n\n\n\ndrawit(ms[1],featLists[1])\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol\n        \n\n\n\n\ndrawit(ms[2],featLists[2])\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol\n        \n\n\n\nThe fact that this one has neither acceptors nor an aromatic feature in the second planar six-ring indicates that we should take a look at the feature definitions. That’s a topic for another blog post.\nNow it’s straightforward to create FeatMap objects from the feature lists:\n\nfms = [FeatMaps.FeatMap(feats = x,weights=[1]*len(x),params=fmParams) for x in featLists]\n\nWe can, of course, draw a feature map as well. In these simple cases the feature maps look the same as drawing all of the molecule’s features:\n\ndef drawFeatMap(m, fMap, p=None, confId=-1, removeHs=True):\n        if p is None:\n            p = py3Dmol.view(width=400, height=400)\n        p.removeAllModels()\n        if removeHs:\n            m = Chem.RemoveHs(m)\n        IPythonConsole.addMolToView(m,p,confId=confId)\n        for feat in fMap.GetFeatures():\n            pos = feat.GetPos()\n            clr = featColors.get(feat.GetFamily(),(.5,.5,.5))\n            p.addSphere({'center':{'x':pos.x,'y':pos.y,'z':pos.z},'radius':feat.weight*.5,'color':colorToHex(clr)});\n        p.zoomTo()\n        return p.show()\n\n\ndrawFeatMap(ms[0],fms[0])\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol\n        \n\n\n\nNow let’s look at scoring the features from each molecule against the feature map. Since scores are affected by the number of features in each FeatMap, we’ll normalize here using the number of features in the molecule with less features.\n\nfms[0].ScoreFeats(fms[1].GetFeatures())/min(fms[0].GetNumFeatures(),fms[1].GetNumFeatures())\n\n0.31955076703314267\n\n\n\nfms[0].ScoreFeats(fms[2].GetFeatures())/min(fms[0].GetNumFeatures(),fms[2].GetNumFeatures())\n\n0.815994417450649\n\n\n\nfms[1].ScoreFeats(fms[2].GetFeatures())/min(fms[1].GetNumFeatures(),fms[2].GetNumFeatures())\n\n0.12773080957394894\n\n\nAn aside: since the weights on the features in FeatMap are all 1.0, the scoring is symmetric:\n\nfms[2].ScoreFeats(fms[1].GetFeatures())/min(fms[0].GetNumFeatures(),fms[2].GetNumFeatures())\n\n0.12773080957394894\n\n\nThe ScoreFeats() method can also generate a feature map vector: the breakdown of the score by the contributions of individual features in the feature map.\n\nscoreVect = [0]*fms[2].GetNumFeatures()\nfms[2].ScoreFeats(featLists[1],mapScoreVect=scoreVect)\nscoreVect\n\n[0.0, 0.47597567297942583, 0.0, 0.03494756531636994]\n\n\n\nscoreVect = [0]*fms[2].GetNumFeatures()\nfms[2].ScoreFeats(featLists[0],mapScoreVect=scoreVect)\nscoreVect\n\n[0.900252447002704, 0.4636038094112722, 0.900252447002704, 0.999868966385916]\n\n\nFeature map vectors can also be used as descriptors for machine learning, as shown in the second reference mentioned above. If I find a good example system I’ll try and do a blog post on that as well.\nHopefully others find this brief introduction to the RDKit’s FeatMap implementation useful."
  },
  {
    "objectID": "posts/2022-10-28-dealing-with-multiconformer-sd-files.html",
    "href": "posts/2022-10-28-dealing-with-multiconformer-sd-files.html",
    "title": "Dealing with multiconformer SD files",
    "section": "",
    "text": "A recurring question is how to save and share multi-conformer molecules. The easiest (and fastest) way to do this in the RDKit is to just pickle the molecules. It’s not significantly more difficult to use rdMolInterchange.MolToJSON() to serialize the molecules as JSON. Neither of these methods work if you want to work with other tools, so we’re frequently stuck with using something like SD files.\nThe topic came up in the lab today, so I figured I’d do a blog post looking at how to create and work with multi-conformer SD files as well as multi-molecule, multi-conformer SD files with the RDKit. Memo to myself: some of this should probably also end up in the Cookbook.\n\nfrom rdkit import Chem\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem import rdDepictor\nrdDepictor.SetPreferCoordGen(True)\n\nimport rdkit\nprint(rdkit.__version__)\n\n2022.03.5\n\n\nStart by generating conformers for doravirine, lenalidomide, and mutanobactin:\n\ndorav = Chem.MolFromSmiles('Cn1c(n[nH]c1=O)Cn2ccc(c(c2=O)Oc3cc(cc(c3)Cl)C#N)C(F)(F)F')\nlenal = Chem.MolFromSmiles('O=C1NC(=O)CCC1N3C(=O)c2cccc(c2C3)N')\nmutanob = Chem.MolFromSmiles('CCCCCCCCCC(=O)[C@@H]1[C@@H]2CNC(=O)[C@H](CS2)NC(=O)[C@@H](NC(=O)[C@@H]3CCCN3C(=O)[C@H](NC(=O)[C@@H](NC1=O)CC(C)C)C)C(C)C')\n\nDraw.MolsToGridImage([dorav,lenal,mutanob],subImgSize=(300,250))\n\n\n\n\n\n\n\n\n\nfrom rdkit.Chem import rdDistGeom\n\nps = rdDistGeom.ETKDGv3()\nps.randomSeed = 0xf00d\nps.numThreads = 4\nps.pruneRmsThresh = 0.5\n\n\ndorav = Chem.AddHs(dorav)\nlenal = Chem.AddHs(lenal)\nmutanob = Chem.AddHs(mutanob)\n\nd_cids = rdDistGeom.EmbedMultipleConfs(dorav,200,ps)\nl_cids = rdDistGeom.EmbedMultipleConfs(lenal,200,ps)\nm_cids = rdDistGeom.EmbedMultipleConfs(mutanob,200,ps)\n\n\n\nprint(dorav.GetNumConformers(),lenal.GetNumConformers(),mutanob.GetNumConformers())\n\n58 7 200\n\n\nNow let’s start with a digression and quickly demo the two easy ways of storing and retrieving this multi-conformer molecule: pickling and using JSON:\n\nimport pickle\n\npkl = pickle.dumps(dorav)\nnmol = pickle.loads(pkl)\nnmol.GetNumConformers()\n\n58\n\n\n\nfrom rdkit.Chem import rdMolInterchange\nmjs = rdMolInterchange.MolToJSON(dorav)\nnmol = rdMolInterchange.JSONToMols(mjs)[0]\nnmol.GetNumConformers()\n\n58\n\n\nJust out of curiosity let’s see how long those take:\n\n%timeit pickle.dumps(dorav)\n\n162 µs ± 1.33 µs per loop (mean ± std. dev. of 7 runs, 10,000 loops each)\n\n\n\n%timeit pickle.loads(pkl)\n\n175 µs ± 1.44 µs per loop (mean ± std. dev. of 7 runs, 10,000 loops each)\n\n\n\n%timeit rdMolInterchange.MolToJSON(dorav)\n\n646 µs ± 12.7 µs per loop (mean ± std. dev. of 7 runs, 1,000 loops each)\n\n\n\n%timeit rdMolInterchange.JSONToMols(mjs)[0]\n\n252 µs ± 3.5 µs per loop (mean ± std. dev. of 7 runs, 1,000 loops each)\n\n\nWrite those to an SDF “file”\n\nfrom io import StringIO\nsio = StringIO()\nw = Chem.SDWriter(sio)\nfor cid in d_cids:\n    w.write(dorav,confId=cid)\nw.flush()\nsdf = sio.getvalue()\n\n\nsdf[:100]\n\n'\\n     RDKit          3D\\n\\n 40 42  0  0  0  0  0  0  0  0999 V2000\\n   -3.5730   -0.0689    0.9965 C   '\n\n\n\nfrom io import BytesIO\n\nbio = BytesIO(sdf.encode())\nsuppl = Chem.ForwardSDMolSupplier(bio)\n\nref = next(suppl)\nfor mol in suppl:\n    ref.AddConformer(mol.GetConformer(),assignId=True)\n\nprint(ref.GetNumConformers())\n\n58\n\n\nAgain: how long does this take?\n\n%timeit sio=StringIO();w=Chem.SDWriter(sio);[w.write(dorav,confId=cid) for cid in d_cids];w.flush();sdf=sio.getvalue()\n\n9.85 ms ± 213 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)\n\n\n\n%timeit bio=BytesIO(sdf.encode());suppl=Chem.ForwardSDMolSupplier(bio);ref=next(suppl);[ref.AddConformer(m.GetConformer(),assignId=True) for m in suppl]\n\n13.1 ms ± 250 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)\n\n\nOk, that was pretty easy. What about handling SDFs which contain multiple conformers of more than one molecule?\nStart by creating an SDF with all conformers of all three molecules:\n\nfrom io import StringIO\nsio = StringIO()\nw = Chem.SDWriter(sio)\n\nmol = Chem.Mol(dorav)\nmol.SetProp('_Name','doravirine')\nfor cid in d_cids:\n    w.write(mol,confId=cid)\nmol = Chem.Mol(lenal)\nmol.SetProp('_Name','lenalidomide')\nfor cid in l_cids:\n    w.write(mol,confId=cid)\nmol = Chem.Mol(mutanob)\nmol.SetProp('_Name','mutanobactin')\nfor cid in m_cids:\n    w.write(mol,confId=cid)\n\n    \nw.flush()\nmultimol_sdf = sio.getvalue()\n\nAnd here’s a function to return the molecules from a multi-molecule, multi-conformer supplier:\n\ndef mols_from_multimol_multiconf_supplier(supplier,propertyName='_Name'):\n    mol = None\n    for itm in supplier:\n        if itm is None:\n            continue\n        if mol is None:\n            mol = itm\n            refVal = mol.GetProp(propertyName)\n            continue\n        pVal = itm.GetProp(propertyName)\n        if pVal == refVal:\n            mol.AddConformer(itm.GetConformer(),assignId=True)\n        else:\n            # we're done with the last molecule, so let's restart the next one\n            res = mol\n            mol = itm\n            refVal = pVal\n            yield res\n    \n    yield mol\n\nNow try that out:\n\nfrom io import BytesIO\n\nbio = BytesIO(multimol_sdf.encode())\nsuppl = Chem.ForwardSDMolSupplier(bio)\n\nms = [x for x in mols_from_multimol_multiconf_supplier(suppl)]\nprint([m.GetNumConformers() for m in ms])\n\n[58, 7, 200]\n\n\nBy default the function uses the molecule names, but we can use other property names if we want:\n\nfrom io import StringIO\nsio = StringIO()\nw = Chem.SDWriter(sio)\n\nmol = Chem.Mol(dorav)\nmol.SetProp('molecule_id','doravirine')\nfor cid in d_cids:\n    w.write(mol,confId=cid)\nmol = Chem.Mol(lenal)\nmol.SetProp('molecule_id','lenalidomide')\nfor cid in l_cids:\n    w.write(mol,confId=cid)\nmol = Chem.Mol(mutanob)\nmol.SetProp('molecule_id','mutanobactin')\nfor cid in m_cids:\n    w.write(mol,confId=cid)\n\n    \nw.flush()\nmultimol_sdf = sio.getvalue()\n\nbio = BytesIO(multimol_sdf.encode())\nsuppl = Chem.ForwardSDMolSupplier(bio)\n\nms = [x for x in mols_from_multimol_multiconf_supplier(suppl,propertyName='molecule_id')]\nprint([m.GetNumConformers() for m in ms])\n\n[58, 7, 200]"
  },
  {
    "objectID": "posts/2023-05-17-understanding-confgen-errors.html",
    "href": "posts/2023-05-17-understanding-confgen-errors.html",
    "title": "Understanding conformer generation failures",
    "section": "",
    "text": "When the RDKit generates conformers for a molecule it performs a number of checks along the way to make sure that the atomic coordinates are reasonable/correct. When one of these checks fails, the current conformer is abandoned and the coordinate generation process starts from scratch. The maximum number of times this restart can happen is controlled by the maxIterations parameter: after maxIterations restarts the conformer generation fails. If you’ve called EmbedMolecule(), asking for a single conformer, you’ll get a conformation ID of -1 to mark this failure. If you’ve asked for multiple conformers, you won’t get as many as you requested.\nOne of the changes for the 2023.03.1 release of the RDKit was the addition of an option to track which checks are failing during conformer generation. This can help understand what problems were encountered and to understand why conformer generation is not generating the expected results. Since, as is often the case, the RDKit’s capabilities are ahead of its documentation, this short blog post will explain how to use this functionality and interpret the results.\nA general overview of the conformer generation process can be found in the documentation.\n\nfrom rdkit import Chem\nfrom rdkit.Chem import rdDistGeom\nfrom rdkit.Chem import rdDepictor\nrdDepictor.SetPreferCoordGen(True)\nfrom rdkit.Chem.Draw import IPythonConsole\nIPythonConsole.ipython_3d = True\nimport rdkit\nprint(rdkit.__version__)\n\n2023.03.1\n\n\nMolecules containing chiral centers in bridged rings can cause problems, so let’s start with a norbornane derivative:\n\nm = Chem.MolFromSmiles('C1C[C@]2(F)CC[C@@]1(Cl)C2')\nm\n\n\n\n\n\n\n\n\n\nmh = Chem.AddHs(m)\nps = rdDistGeom.ETKDGv3()\nps.randomSeed = 0xf00d\nrdDistGeom.EmbedMolecule(mh,ps)\n\n0\n\n\n\nmh\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol\n        \n\n\n\n\n\n\nNow invert one of the stereocenters to create the stereoisomer which can’t actually exist as a stable structure. Imagine inverting one of the chiral centers in the above molecule and you will see the problem: we’d have to point the attached halogen into the center of the cage.\n\nbad_m = Chem.MolFromSmiles('C1C[C@]2(F)CC[C@]1(Cl)C2')\nbad_m\n\n\n\n\n\n\n\n\nTry creating a conformer for that:\n\nbad_mh = Chem.AddHs(bad_m)\nps = rdDistGeom.ETKDGv3()\nps.randomSeed = 0xf00d\nrdDistGeom.EmbedMolecule(bad_mh,ps)\n\n-1\n\n\nThe new functionality allows us to keep track of why the embedding failed:\n\nps.trackFailures = True\nprint(rdDistGeom.EmbedMolecule(bad_mh,ps))\ncounts = ps.GetFailureCounts()\ncounts\n\n-1\n\n\n(7, 11, 30, 0, 0, 0, 142, 0, 0, 0)\n\n\nHere’s a quick loop over all the failure causes to see where the problems were:\n\ndef print_failure_causes(counts):\n    for i,k in enumerate(rdDistGeom.EmbedFailureCauses.names):\n        print(k,counts[i])\n    # in v2022.03.1 two names are missing from `rdDistGeom.EmbedFailureCauses`:\n    print('LINEAR_DOUBLE_BOND',counts[i+1])\n    print('BAD_DOUBLE_BOND_STEREO',counts[i+2])    \n\n\nprint_failure_causes(counts)\n\nINITIAL_COORDS 7\nFIRST_MINIMIZATION 11\nCHECK_TETRAHEDRAL_CENTERS 30\nCHECK_CHIRAL_CENTERS 0\nMINIMIZE_FOURTH_DIMENSION 0\nETK_MINIMIZATION 0\nFINAL_CHIRAL_BOUNDS 142\nFINAL_CENTER_IN_VOLUME 0\nLINEAR_DOUBLE_BOND 0\nBAD_DOUBLE_BOND_STEREO 0\n\n\nHere’s what the individual failures mean:\n\nINITIAL_COORDS: generation of the initial coordinates from the random distance matrix (default) or from a set of random coordinates (when using random coordinate embedding) failed.\nFIRST_MINIMIZATION: the initial optimization of the atom positions using the distance-geometry force field failed to produce a low-enough energy conformer. The check here has thresholds for both average energy per atom and the individual atom energies. I’m not providing the threshold values here since the energies from the distance-geometry force field are not physically meaningful - the threshold values are not interpretable.\nCHECK_TETRAHEDRAL_CENTERS: at least one tetrahedral C and N centers either has a volume around it which is too small or is outside the volume defined by its neighbors\nMINIMIZE_FOURTH_DIMENSION: the minmization to force the values of the fourth-dimensional component of each atom position failed\nETK_MINIMIZATION: after the minimization with the ET and/or K terms, at least one atom which should have been planar was not\nFINAL_CHIRAL_BOUNDS: the neighborhood of an atom with specified chirality was too distorted (it violated distance constraints)\nFINAL_CENTER_IN_VOLUME: an atom with specified chirality was outside of the volume defined by its neighbors\nLINEAR_DOUBLE_BOND: one of the end atoms of a double bond had a linear geometry\nBAD_DOUBLE_BOND_STEREO: the stereochemistry of a double bond with specified stereochemistry was wrong in the generated conformer\n\nJust for comparison, the starting molecule had no failures:\n\nps.trackFailures = True\nprint(rdDistGeom.EmbedMolecule(mh,ps))\ncounts = ps.GetFailureCounts()\ncounts\n\n0\n\n\n(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\n\n\nLet’s try a more complicated molecule from ChEMBL; specified bond stereochemistry in macrocycles can also make conformer generation challenging.\n\nm = Chem.MolFromSmiles(r'COc1cc(O)c2CSC[C@H](\\N=C(/S)\\CCC[C@@H](CO)OC(=O)c2c1C)c3onc(C)n3')\nm\n\n\n\n\n\n\n\n\n\nmh = Chem.AddHs(m)\nps = rdDistGeom.ETKDGv3()\nps.randomSeed = 0xbadd06\nps.trackFailures = True\nprint(rdDistGeom.EmbedMolecule(mh,ps))\nprint_failure_causes(ps.GetFailureCounts())\n\n0\nINITIAL_COORDS 2\nFIRST_MINIMIZATION 0\nCHECK_TETRAHEDRAL_CENTERS 0\nCHECK_CHIRAL_CENTERS 0\nMINIMIZE_FOURTH_DIMENSION 0\nETK_MINIMIZATION 0\nFINAL_CHIRAL_BOUNDS 0\nFINAL_CENTER_IN_VOLUME 0\nLINEAR_DOUBLE_BOND 3\nBAD_DOUBLE_BOND_STEREO 4\n\n\nHere we did get a conformer, but there were some rejected conformers along the way. The double-bond-related failures indicate that the code had some problems with the ring double bond with specified stereochemistry."
  },
  {
    "objectID": "posts/2022-04-05-searching-with-generic-groups.html",
    "href": "posts/2022-04-05-searching-with-generic-groups.html",
    "title": "Searching with generic groups",
    "section": "",
    "text": "One of the features added for the v2022.03 RDKit release is support for “Reaxys/Beilstein” generic groups - atoms with labels like “ARY” or “ACY” which can be used to make substructure searches more specific.\nThis post provides a quick overview of that functionality.\nfrom rdkit import Chem\nfrom rdkit.Chem import rdMolEnumerator\nfrom rdkit.Chem import rdTautomerQuery\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import IPythonConsole\nIPythonConsole.drawOptions.minFontSize = 10\nIPythonConsole.molSize = 350,300\n\nDraw.SetComicMode(IPythonConsole.drawOptions)\nfrom rdkit.Chem import rdDepictor\nrdDepictor.SetPreferCoordGen(True)\nimport rdkit\nprint(rdkit.__version__)\nimport time\nprint(time.asctime())\n\n2022.03.1\nTue Apr  5 06:10:45 2022\nLoad a SubstructLibrary created using ChEMBL_30. The code used to construct this is below. Note that I’ve configured the SubstructLibrary to return search results sorted by the number of heavy atoms so that I get smaller, more specific results first.\nimport pickle\nwith open('./results/chembl30_ssslib.pkl','rb') as inf:\n    sslib = pickle.load(inf)\nprint(f'SubstructLibrary loaded with {len(sslib)} molecules')\n\nSubstructLibrary loaded with 2035013 molecules"
  },
  {
    "objectID": "posts/2022-04-05-searching-with-generic-groups.html#aside",
    "href": "posts/2022-04-05-searching-with-generic-groups.html#aside",
    "title": "Searching with generic groups",
    "section": "Aside",
    "text": "Aside\nSince the ARY query mainly returns molecules which have a phenyl group attached at the ARY position, let’s compare search performance with a query where we explicitly include the phenyl. Here the extra atoms/bonds will slow the substructure search down but they will also make the fingerprint screenout more effective. The question is which effect is dominant.\n\nfullqry = Chem.MolFromSmiles('c1ccccc1-c1nc2ccccc2[nH]1')\nfullqry\n\n\n\n\n\n\n\n\n\n%timeit matches = sslib.GetMatches(fullqry,maxResults=5000)\n\n1.05 s ± 54.3 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n\n\nIn this case the larger query is a bit faster.\nIt’s worth mentioning that the query with the phenyl group returns different search results than the version with the ARY:\n\nfull_matches = sslib.GetMatches(fullqry,params,maxResults=-1)\nary_matches = sslib.GetMatches(ary_qry,params,maxResults=-1)\nlen(full_matches),len(ary_matches)\n\n(6866, 6488)\n\n\n\nfull_not_ary = set(full_matches).difference(ary_matches)\nmols = [sslib.GetMol(x) for x in full_not_ary]\nprint(f'There are {len(mols)} matches')\nDraw.MolsToGridImage(mols[:12],molsPerRow=4)\n\nThere are 379 matches\n\n\n\n\n\n\n\n\n\nAs you’d expect, there are a bunch of molecules with heterocyclic aromatic systems here. The ARY query only matches carboaryl systems.\nThere is only one molecule returned by the ARY query but not the full query; this one has an unusual aromatic ring system:\n\nary_not_full = set(ary_matches).difference(full_matches)\nmols = [sslib.GetMol(x) for x in ary_not_full]\nprint(f'There are {len(mols)} matches')\nDraw.MolsToGridImage(mols[:12],molsPerRow=4)\n\nThere are 1 matches\n\n\n\n\n\n\n\n\n\nThat’s a good one to ignite a round of “but that’s not aromatic!” arguments, but before you start down that road, please read this section of the RDKit docs: https://www.rdkit.org/docs/RDKit_Book.html#aromaticity and possibly the section on aromaticity in the Daylight Theory manual.\nThis seems like a great place to close this post. :-)"
  },
  {
    "objectID": "posts/2022-01-04-number-of-unique-fp-bits.html",
    "href": "posts/2022-01-04-number-of-unique-fp-bits.html",
    "title": "The number of unique fingerprint bits",
    "section": "",
    "text": "How many molecules do we need to add before we’ve seen all the bits?\nI did an updated post last year looking at the average number of bits set per molecule by the various fingerprinting algorithms in the RDKit.\nThis one explores a couple of related topics: 1. If we look at a large set of organic molecules, how many different atom environments (as defined by the individual fingerprints) do we observe? 2. How quickly does this number converge with the number of compounds considered?\nObviously the answer to these questions is extremely dependent on the set of molecules you use. For this post I will use a set of around six million random molecules from Zinc20’s “in-stock” set. The six million included all have less than 50 heavy atoms after being salt stripped.\nThe experiment itself could hardly be simpler: read in the molecules, generate fingerprints, and keep track of the unique bits set as a function of number of molecules considered. For this analysis I limit myself to fingerprints which have not been “folded” to fit into a particular bit length (with the exception of the Avalon FP, which currently only supports generating folded forms).\nThe code and raw data are below, here are the curves showing the saturation behavior for the various fingerprints: \nNote that the saturation behavior of the avalon fingerprint here is an artifact of the fact that the fingerprint being used was only 9192 bits long (yes, I made a typo when I entered the value in the script to generate the data); 9185 of those bits end up being set.\nFor a bit more resolution, here’s a table with the number of unique bits set per fingerprint in that set of 6 million, the number of new bits found in the last 100K of the 6 million, as well as how many molecules needed to be considered to reach 90, 95, and 99% of the number of unique bits:\n\n\n\n\n\n\n\n\n\n\n\n\n# unique bits\n# in last 100K\n0.90\n0.95\n0.99\n\n\n\n\nFeatMorgan0\n15\n0\nN/A\nN/A\nN/A\n\n\nFeatMorgan1\n1621\n2\n2760000\n4080000\n5460000\n\n\nFeatMorgan2\n116975\n464\n4000000\n4870000\n5750000\n\n\nFeatMorgan3\n1350464\n7478\n4400000\n5130000\n5810000\n\n\nMorgan0\n143\n0\n2850000\n4080000\n5080000\n\n\nMorgan1\n19428\n67\n3870000\n4750000\n5720000\n\n\nMorgan2\n575817\n2941\n4320000\n5080000\n5790000\n\n\nMorgan3\n3606676\n22970\n4580000\n5240000\n5830000\n\n\nRDKit5\n131029\n347\n3490000\n4600000\n5690000\n\n\nRDKit6\n538500\n1627\n3600000\n4680000\n5700000\n\n\nRDKit7\n1989958\n6897\n3740000\n4760000\n5720000\n\n\nRDKit-linear5\n49852\n136\n3400000\n4520000\n5680000\n\n\nRDKit-linear6\n133904\n402\n3480000\n4570000\n5690000\n\n\nRDKit-linear7\n315293\n1032\n3570000\n4640000\n5700000\n\n\nap-counts\n16585\n18\n2470000\n3840000\n5410000\n\n\navalon\n9185\n0\n20000\n70000\n490000\n\n\ntt-counts\n20723\n49\n3530000\n4570000\n5640000\n\n\n\nTo help with the interpretation of this: a total of 131029 unique bits were found for the RDKit5 fingerprint in the set of 6 million molecules and 95% of those bits had been found after looking at 4.6 million molecules. The last 100K molecules added 347 new bits.\nThe thing that I find most interesting (and somewhat surprising) about these results is how far we are from having encountered “all” of the bits; new bits are being encountered for almost all of the fingerprint types even after 5.9 million molecules have been encountered. I can probably still wave my hands and estimate the order-of-magnitude number of distinct bits for each of the FP types in the full set of ~14 million substances in the ZINC20 “in-stock” set. Here’s a few of those estimates: - FeatMorgan2: 120-150K - FeatMorgan3: 1.4-1.6 million - Morgan1: 20-25K - Morgan2: 600-700K - Morgan3: 3.6-4.0 million\nThese are also rough lower bounds on the number of atom environments in those compounds (it’s a lower bound due to the possibility of hash collisions causing multiple atom environments to hash to the same fingerprint bit).\n\nAside: it’s worth mentioning that this, of course, isn’t the first time someone has looked at this topic. I don’t normally include references for blog posts, but this paper from the PubChem team is a nice look at the atom environments in the (huge) PubChem dataset: http://www.jcheminf.com/content/7/1/41\n\nThe rest of the post has the code for generating the data and doing the analysis.\n\nfrom rdkit import Chem,DataStructs\nimport time,random,gzip,pickle,copy\nimport numpy as np\nfrom collections import Counter,defaultdict\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem import rdMolDescriptors\nfrom rdkit.Chem.MolStandardize import rdMolStandardize\nfrom rdkit.Avalon import pyAvalonTools\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit import DataStructs\nfrom rdkit import rdBase\nfrom rdkit import RDLogger\n%pylab inline\n\nprint(rdBase.rdkitVersion)\nimport time\nprint(time.asctime())\n\nPopulating the interactive namespace from numpy and matplotlib\n2021.09.3\nTue Jan  4 13:17:00 2022\n\n\n/home/glandrum/miniconda3/envs/rdkit_blog/lib/python3.9/site-packages/IPython/core/magics/pylab.py:159: UserWarning: pylab import has clobbered these variables: ['random', 'copy']\n`%matplotlib` prevents importing * from pylab and numpy\n  warn(\"pylab import has clobbered these variables: %s\"  % clobbered +\n\n\n\ntry:\n    import ipyparallel as ipp\n    rc = ipp.Client()\n    dview = rc[:]\n    dview.execute('from rdkit import Chem')\n    dview.execute('from rdkit import Descriptors')\n    dview.execute('from rdkit.Chem import rdMolDescriptors')\n    dview.execute('from rdkit.Avalon import pyAvalonTools')\nexcept:\n    print(\"could not use ipyparallel\")\n    dview = None\n\nHere’s my local copy of the ~14 million “in stock” compounds I grabbed from ZINC (this file is too big for github):\n\nfilen='/scratch/RDKit_git/LocalData/Zinc20/purchasable/zinc20_instock.pkl.shuffled.gz'\n\nLoop over the molecules, strip salts, skip anything with more than 50 atoms, and build fingerprints for all the others.\nThe fingerprints I generate for this analysis are: - Sparse Morgan with radii 1, 2, and 3 - Sparse FeatureMorgan with radii 1, 2, and 3 - Sparse RDKit with maxPath 5, 6, and 7 - Sparse RDKit, no branches, with maxPath 5, 6, and 7 - Avalon BitVect - Sparse Atom Pairs - Sparse Topological Torsions\nAll of the BitVect fingerprints are 4096 bits long\n\nimport copy\nfrom collections import defaultdict\nhistoryf = gzip.open('../data/fp_bit_counts.history.pkl.gz','wb+')\nRDLogger.DisableLog('rdApp.info')\nfrm = rdMolStandardize.LargestFragmentChooser()\ncounts=defaultdict(list)\naccum=defaultdict(set)\nt1 = time.time()\nwith gzip.open(filen,'rb') as inf:\n    i = 0\n    ms = []\n    while 1:\n        try:\n            m,nm = pickle.load(inf)\n        except EOFError:\n            break\n        if not m:\n            continue\n        # strip salts:\n        m = frm.choose(m)\n        if m.GetNumHeavyAtoms()&gt;50: \n            continue\n        ms.append(m)\n        i+=1\n        if len(ms)&gt;=10000:\n            for v in 0,1,2,3:\n                k = ('Morgan',v)\n                cnts = dview.map_sync(lambda x,v=v:set(rdMolDescriptors.GetMorganFingerprint(x,v).GetNonzeroElements().keys()),\n                                     ms)\n                for obc in cnts:\n                    accum[k].update(obc)\n                counts[k].append((i,len(accum[k])))\n            for v in 0,1,2,3:\n                k = ('FeatMorgan',v)\n                cnts = dview.map_sync(lambda x,v=v:set(rdMolDescriptors.GetMorganFingerprint(x,v,useFeatures=True).GetNonzeroElements().keys()),\n                                     ms)\n                for obc in cnts:\n                    accum[k].update(obc)\n                counts[k].append((i,len(accum[k])))\n            for v in 5,6,7:\n                k = ('RDKit',v)\n                cnts = dview.map_sync(lambda x,v=v:set(Chem.UnfoldedRDKFingerprintCountBased(x,maxPath=v).GetNonzeroElements().keys()),\n                                      ms)\n                for obc in cnts:\n                    accum[k].update(obc)\n                counts[k].append((i,len(accum[k])))\n            for v in 5,6,7:\n                k = ('RDKit-linear',v)\n                cnts = dview.map_sync(lambda x,v=v:set(Chem.UnfoldedRDKFingerprintCountBased(x,maxPath=v,branchedPaths=False).GetNonzeroElements().keys()),\n                                      ms)\n                for obc in cnts:\n                    accum[k].update(obc)\n                counts[k].append((i,len(accum[k])))\n\n            k = ('avalon',-1)\n            cnts = dview.map_sync(lambda x:set(pyAvalonTools.GetAvalonFP(x,nBits=9192).GetOnBits()),\n                                  ms)\n            for obc in cnts:\n                accum[k].update(obc)\n            counts[k].append((i,len(accum[k])))\n            \n            k = ('ap-counts',-1)\n            cnts = dview.map_sync(lambda x:set(rdMolDescriptors.GetAtomPairFingerprint(x).GetNonzeroElements().keys()),\n                                  ms)\n            for obc in cnts:\n                accum[k].update(obc)\n            counts[k].append((i,len(accum[k])))\n            k = ('tt-counts',-1)\n            cnts = dview.map_sync(lambda x:set(rdMolDescriptors.GetTopologicalTorsionFingerprint(x).GetNonzeroElements().keys()),\n                                  ms)\n            for obc in cnts:\n                accum[k].update(obc)\n            counts[k].append((i,len(accum[k])))\n            ms = []\n            \n        if not i%50000:\n            t2 = time.time()\n            print(\"Done %d in %.2f sec\"%(i,t2-t1))\n        if not i%500000:\n            pickle.dump(dict(counts),historyf)\n            pickle.dump(dict(accum),historyf)\n        if i&gt;=5500000:\n            break\n\n\nwith gzip.open('../data/fp_bit_counts.history.pkl.gz','wb+') as outf:\n    pickle.dump(dict(counts),outf)\n    pickle.dump(dict(accum),outf)\n        \n\n\nwith gzip.open('../data/fp_bit_counts.history.pkl.gz','rb') as inf:\n    counts = pickle.load(inf)\n\nNow plot the distributions of the number of bits set\nWe have a few extra data points, let’s stick to the first 6 million molecules\n\nfor k,v in counts.items():\n    v = [x for x in v if x[0]&lt;6000000]\n    counts[k] = v\n\n\nmorgan_ks = [x for x in sorted(counts.keys()) if x[0] =='Morgan']\nfeatmorgan_ks = [x for x in sorted(counts.keys()) if x[0] =='FeatMorgan']\nrdkit_ks = [x for x in sorted(counts.keys()) if x[0] == 'RDKit']\nrdkitlin_ks = [x for x in sorted(counts.keys()) if x[0] == 'RDKit-linear']\n\nfigure(figsize=(15,20))\n\npidx=1\nsubplot(3,2,pidx)\nfor n,r in rdkit_ks:\n    cnts = counts[(n,r)]\n    \n    plot([x for x,y in cnts],[y for x,y in cnts],label=\n        f\"r={r}\")\n_=title(\"RDKit\")\n_=ylabel(\"unique bits observed\")\n_=xlabel(\"num molecules\")\n_=legend()\n\npidx=2\nsubplot(3,2,pidx)\nfor n,r in rdkitlin_ks:\n    cnts = counts[(n,r)]\n    \n    plot([x for x,y in cnts],[y for x,y in cnts],label=\n        f\"r={r}\")\n_=title(\"RDKit linear\")\n_=ylabel(\"unique bits observed\")\n_=xlabel(\"num molecules\")\n_=legend()\n\n\n\npidx=3\nsubplot(3,2,pidx)\nfor n,r in morgan_ks:\n    cnts = counts[(n,r)]\n    \n    plot([x for x,y in cnts],[y for x,y in cnts],label=\n        f\"r={r}\")\n_=title(\"Morgan\")\n_=ylabel(\"unique bits observed\")\n_=xlabel(\"num molecules\")\n_=legend()\n\npidx=4\nsubplot(3,2,pidx)\nfor n,r in featmorgan_ks:\n    cnts = counts[(n,r)]\n    \n    plot([x for x,y in cnts],[y for x,y in cnts],label=\n        f\"r={r}\")\n_=title(\"FeatMorgan\")\n_=ylabel(\"unique bits observed\")\n_=xlabel(\"num molecules\")\n_=legend()\n\npidx+=1\nsubplot(3,2,pidx)\nfor k in counts.keys():\n    if k[0].startswith('Morgan') or k[0].startswith('FeatMorgan') or k[0].startswith('RDKit'):\n        continue\n    pidx+=1\n    cnts = counts[k]\n    plot([x for x,y in cnts],[y for x,y in cnts],label=k[0])\n_=title('others')\n_=ylabel(\"unique bits observed\")\n_=xlabel(\"num molecules\")\n_=legend()\n   \ntight_layout();\n\n\n\n\n\n\n\n\nMabye better to plot those on a log scale?\n\nmorgan_ks = [x for x in sorted(counts.keys()) if x[0] =='Morgan']\nfeatmorgan_ks = [x for x in sorted(counts.keys()) if x[0] =='FeatMorgan']\nrdkit_ks = [x for x in sorted(counts.keys()) if x[0] == 'RDKit']\nrdkitlin_ks = [x for x in sorted(counts.keys()) if x[0] == 'RDKit-linear']\n\nfigure(figsize=(15,20))\n\npidx=1\nsubplot(3,2,pidx)\nfor n,r in rdkit_ks:\n    cnts = counts[(n,r)]\n    \n    plot([x for x,y in cnts],[y for x,y in cnts],label=\n        f\"r={r}\")\n_=title(\"RDKit\")\n_=ylabel(\"unique bits observed\")\n_=xlabel(\"num molecules\")\n_=yscale('log')\n_=legend()\n\npidx=2\nsubplot(3,2,pidx)\nfor n,r in rdkitlin_ks:\n    cnts = counts[(n,r)]\n    \n    plot([x for x,y in cnts],[y for x,y in cnts],label=\n        f\"r={r}\")\n_=title(\"RDKit linear\")\n_=ylabel(\"unique bits observed\")\n_=xlabel(\"num molecules\")\n_=yscale('log')\n_=legend()\n\n\n\npidx=3\nsubplot(3,2,pidx)\nfor n,r in morgan_ks:\n    cnts = counts[(n,r)]\n    \n    plot([x for x,y in cnts],[y for x,y in cnts],label=\n        f\"r={r}\")\n_=title(\"Morgan\")\n_=ylabel(\"unique bits observed\")\n_=xlabel(\"num molecules\")\n_=yscale('log')\n_=legend()\n\npidx=4\nsubplot(3,2,pidx)\nfor n,r in featmorgan_ks:\n    cnts = counts[(n,r)]\n    \n    plot([x for x,y in cnts],[y for x,y in cnts],label=\n        f\"r={r}\")\n_=title(\"FeatMorgan\")\n_=ylabel(\"unique bits observed\")\n_=xlabel(\"num molecules\")\n_=yscale('log')\n_=legend()\n\npidx+=1\nsubplot(3,2,pidx)\nfor k in counts.keys():\n    if k[0].startswith('Morgan') or k[0].startswith('FeatMorgan') or k[0].startswith('RDKit'):\n        continue\n    pidx+=1\n    cnts = counts[k]\n    plot([x for x,y in cnts],[y for x,y in cnts],label=k[0])\n_=title('others')\n_=ylabel(\"unique bits observed\")\n_=yscale('log')\n_=xlabel(\"num molecules\")\n_=legend()\n\ntight_layout();\n\n\n\n\n\n\n\n\nNotes: - FeatMorgan with r=0 is super boring since there are only 15 types observed and 14 of them appear within the first 10K compounds (the last appears after around 1.2 million compounds). By way of comparison, there are 143 different Morgan0 types observed and the last of those doesn’t show up until after about 5.1 million compounds. - The Avalon fingerprint was 9192 bits long and it ends up setting all essentially of those bits (9185). It probably would have been better to run this with a longer fingerprint.\nHow many compounds do we need to look at in order to see particular fractions of the total number of bits there?\n\nbins = (0.9,0.95,0.99)\nprint('|',' '*15,'|','# unique bits','|','# in last 100K','|',' | '.join(f'{x:7.2f}' for x in bins),'|')\nprint('|','-'*15,'|','-'*13,'|','-'*14,'|',' | '.join('-'*7 for x in bins),'|')\nfor k,cnts in sorted(counts.items()):\n    label = ''.join(str(x) for x in k if x!=-1)\n    maxv = cnts[-1][1]\n    last100K = cnts[-1][1] - cnts[-11][1]\n    if label=='FeatMorgan0':\n        accum = ' | '.join([f'{\"N/A\":7s}']*3)\n    else:\n        accum = []\n        for bin in bins:\n            for idx in range(len(cnts),0,-1):\n                if cnts[idx-1][1]&lt;bin*maxv:\n                    accum.append(cnts[idx-1][0])\n                    break\n        accum = ' | '.join(f'{x:7d}' for x in accum)\n    print('|',f'{label:15s}','|',f'{maxv:13d}','|',f'{last100K:14d}','|',accum,'|')\n\n|                 | # unique bits | # in last 100K |    0.90 |    0.95 |    0.99 |\n| --------------- | ------------- | -------------- | ------- | ------- | ------- |\n| FeatMorgan0     |            15 |              0 | N/A     | N/A     | N/A     |\n| FeatMorgan1     |          1621 |              2 | 2760000 | 4080000 | 5460000 |\n| FeatMorgan2     |        116975 |            464 | 4000000 | 4870000 | 5750000 |\n| FeatMorgan3     |       1350464 |           7478 | 4400000 | 5130000 | 5810000 |\n| Morgan0         |           143 |              0 | 2850000 | 4080000 | 5080000 |\n| Morgan1         |         19428 |             67 | 3870000 | 4750000 | 5720000 |\n| Morgan2         |        575817 |           2941 | 4320000 | 5080000 | 5790000 |\n| Morgan3         |       3606676 |          22970 | 4580000 | 5240000 | 5830000 |\n| RDKit5          |        131029 |            347 | 3490000 | 4600000 | 5690000 |\n| RDKit6          |        538500 |           1627 | 3600000 | 4680000 | 5700000 |\n| RDKit7          |       1989958 |           6897 | 3740000 | 4760000 | 5720000 |\n| RDKit-linear5   |         49852 |            136 | 3400000 | 4520000 | 5680000 |\n| RDKit-linear6   |        133904 |            402 | 3480000 | 4570000 | 5690000 |\n| RDKit-linear7   |        315293 |           1032 | 3570000 | 4640000 | 5700000 |\n| ap-counts       |         16585 |             18 | 2470000 | 3840000 | 5410000 |\n| avalon          |          9185 |              0 |   20000 |   70000 |  490000 |\n| tt-counts       |         20723 |             49 | 3530000 | 4570000 | 5640000 |\n\n\nWhat fraction of the overall number of bits appear in the last 100K compounds?\n\nbins = (0.9,0.95,0.99)\nfor k,cnts in sorted(counts.items()):\n    label = ''.join(str(x) for x in k if x!=-1)\n    maxv = cnts[-1][1]\n    last100K = cnts[-1][1] - cnts[-11][1]\n    print(label,last100K/maxv)\n\nFeatMorgan0 0.0\nFeatMorgan1 0.0012338062924120913\nFeatMorgan2 0.003966659542637315\nFeatMorgan3 0.005537356049476328\nMorgan0 0.0\nMorgan1 0.0034486308420835906\nMorgan2 0.005107525481185863\nMorgan3 0.006368745071639371\nRDKit5 0.0026482687038747147\nRDKit6 0.003021355617455896\nRDKit7 0.0034659022954253308\nRDKit-linear5 0.0027280751023028163\nRDKit-linear6 0.003002150794599116\nRDKit-linear7 0.00327314593092774\nap-counts 0.0010853180584865843\navalon 0.0\ntt-counts 0.002364522511219418"
  },
  {
    "objectID": "posts/2023-01-09-rgd-tutorial.html",
    "href": "posts/2023-01-09-rgd-tutorial.html",
    "title": "R-Group Decomposition Tutorial",
    "section": "",
    "text": "R-group decomposition (RGD) is a standard approach for analyzing chemical datasets and doing SAR analysis. Of course the RDKit provides code supporting RGD. Since there are a lot of different RGD use cases, and it turns out that doing R-group decomposition and providing useful results on arbitrary datasets is considerably more complicated than it may initially seem, the RDKit’s RGD implementation needs to be quite flexible (and the implementation is fairly complex). Unfortunately the code is also quite “underdocumented”… this tutorial is a first pass at fixing that. It will eventually end up in the RDKit documentation.\nHere I will demonstrate some of the more useful (in my opinion) options of the RGD code using some real-world datasets. I may revisit this topic at some point in the future to explain some of the more advanced topics. If there are pieces you think I should cover, please let me know in the comments!\nOther RGD-related blog posts:\nYou can also use the rgd tag to find these.\nThe first two datasets I’ll use in this post are created using the SMILES provided in the Supplementary Information from a couple of open-acess J Med Chem papers (Aside: isn’t it great that J. Med. Chem. encourages authors to provide SMILES for the structures in their papers and so many authors actually do so? Isn’t it depressing that the journals which focus on computational topics don’t do so?).\nfrom rdkit import Chem\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import IPythonConsole\nimport pandas as pd\nfrom rdkit.Chem import PandasTools\nPandasTools.RenderImagesInAllDataFrames(images=True)\nimport rdkit\nprint(rdkit.__version__)\n\n2022.09.1\nimport os\nbaseDir = '../data/RGD_sets'"
  },
  {
    "objectID": "posts/2023-01-09-rgd-tutorial.html#working-without-r-labels",
    "href": "posts/2023-01-09-rgd-tutorial.html#working-without-r-labels",
    "title": "R-Group Decomposition Tutorial",
    "section": "Working without R labels",
    "text": "Working without R labels\nIt’s also possible to do RGD by providing a core without labeled R groups:\n\ncore_without_labels = Chem.MolFromSmarts('Cc1nc(=O)c(O)c(C=O)n1')\ncore_without_labels\n\n\n\n\n\n\n\n\n\ncrgd,fails = rdRGroupDecomposition.RGroupDecompose([core_without_labels],mols,asRows=False)\nprint(len(fails))\nPandasTools.RGroupDecompositionToFrame(crgd,[mols[i] for i in range(len(mols)) if i not in fails],).head()\n\n1\n\n\n[14:15:54] No core matches\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMol\nR1\nR2\nR3\nR4\n\n\n\n\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHere the R labels are automatically assigned, but the result is otherwise the same as what we saw above."
  },
  {
    "objectID": "posts/2021-05-13-intro-to-the-molecule-enumerator.html",
    "href": "posts/2021-05-13-intro-to-the-molecule-enumerator.html",
    "title": "Intro to the molecule enumerator",
    "section": "",
    "text": "The V3000 mol file format allows a number of interesting and useful advanced query features. Here I’ll look at two of them: position variation bonds (a.k.a. variable attachment points) and link nodes.\nThis blog post uses features from the 2021.03.1 RDKit release; some of this will not work with older releases.\n\nfrom rdkit import Chem\nfrom rdkit.Chem.Draw import rdDepictor\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit.Chem import rdMolEnumerator\nimport rdkit\nprint(rdkit.__version__)\n\n2021.03.1\n\n\n\nPosition variation bonds\nHere’s a molecule with a position variation bond:\n\npv1 = Chem.MolFromMolBlock('''\n  Mrv2007 06232015292D          \n\n  0  0  0     0  0            999 V3000\nM  V30 BEGIN CTAB\nM  V30 COUNTS 9 8 0 0 0\nM  V30 BEGIN ATOM\nM  V30 1 C -1.7083 2.415 0 0\nM  V30 2 C -3.042 1.645 0 0\nM  V30 3 C -3.042 0.105 0 0\nM  V30 4 N -1.7083 -0.665 0 0\nM  V30 5 C -0.3747 0.105 0 0\nM  V30 6 C -0.3747 1.645 0 0\nM  V30 7 * -0.8192 1.3883 0 0\nM  V30 8 O -0.8192 3.6983 0 0\nM  V30 9 C 0.5145 4.4683 0 0\nM  V30 END ATOM\nM  V30 BEGIN BOND\nM  V30 1 1 1 2\nM  V30 2 2 2 3\nM  V30 3 1 3 4\nM  V30 4 2 4 5\nM  V30 5 1 5 6\nM  V30 6 2 1 6\nM  V30 7 1 7 8 ENDPTS=(3 1 5 6) ATTACH=ANY\nM  V30 8 1 8 9\nM  V30 END BOND\nM  V30 END CTAB\nM  END''')\npv1\n\n\n\n\n\n\n\n\nThe query is describing a molecule consisting of a pyriding ring with an methoxy substituted either ortho, meta, or para to the N atom.\nThe RDKit includes functionality in the rdkit.Chem.rdMolEnumerator module which allows you enumerate all of the molecules which are described by this query.\nThe function rdMolEnumerator.Enumerate() is straightforward to use: given a molecule with supported query features it returns a MolBundle object which includes each possible expansion of the query:\n\npv1_bundle = rdMolEnumerator.Enumerate(pv1)\npv1_bundle\n\n&lt;rdkit.Chem.rdchem.MolBundle at 0x7fc138399b20&gt;\n\n\nWe can render the molecules in the bundle using Draw.MolsToGridImage():\n\nDraw.MolsToGridImage(pv1_bundle)\n\n\n\n\n\n\n\n\nThese are pretty ugly since the enumeration hasn’t generated new coordinates for the atom which correspond to the new connectivity.\nI’ll use this convenience function to find the common core shared by the molecules in a bundle and generate 2D coordinates for all the molecules with the core oriented consistently:\n\nfrom rdkit.Chem import rdFMCS\ndef align_bundle_coords(bndl):\n    ps = rdFMCS.MCSParameters()\n    for m in bndl:\n        Chem.SanitizeMol(m)\n    mcs = rdFMCS.FindMCS(bndl,completeRingsOnly=True)\n    q = Chem.MolFromSmarts(mcs.smartsString)\n    rdDepictor.Compute2DCoords(q)\n    for m in bndl:\n        rdDepictor.GenerateDepictionMatching2DStructure(m,q)\n\nNow let’s apply that to our bundle:\n\npv1_bundle = rdMolEnumerator.Enumerate(pv1)\nalign_bundle_coords(pv1_bundle)\nDraw.MolsToGridImage(pv1_bundle)\n\n\n\n\n\n\n\n\nOf course a molecule can have more than one position variation bond:\n\npv2 = Chem.MolFromMolBlock('''\n  Mrv2007 06242006032D          \n\n  0  0  0     0  0            999 V3000\nM  V30 BEGIN CTAB\nM  V30 COUNTS 10 8 0 0 0\nM  V30 BEGIN ATOM\nM  V30 1 C -1.7083 2.415 0 0\nM  V30 2 C -3.042 1.645 0 0\nM  V30 3 C -3.042 0.105 0 0\nM  V30 4 N -1.7083 -0.665 0 0\nM  V30 5 C -0.3747 0.105 0 0\nM  V30 6 C -0.3747 1.645 0 0\nM  V30 7 * -3.042 0.875 0 0\nM  V30 8 F -5.0434 0.875 0 0\nM  V30 9 * -1.0415 2.03 0 0\nM  V30 10 Cl -1.0415 4.34 0 0\nM  V30 END ATOM\nM  V30 BEGIN BOND\nM  V30 1 1 1 2\nM  V30 2 2 2 3\nM  V30 3 1 3 4\nM  V30 4 2 4 5\nM  V30 5 1 5 6\nM  V30 6 2 1 6\nM  V30 7 1 7 8 ENDPTS=(2 2 3) ATTACH=ANY\nM  V30 8 1 9 10 ENDPTS=(2 1 6) ATTACH=ANY\nM  V30 END BOND\nM  V30 END CTAB\nM  END\n''')\npv2\n\n\n\n\n\n\n\n\nThis is also supported by the enumerator:\n\npv2_bundle = rdMolEnumerator.Enumerate(pv2)\nalign_bundle_coords(pv2_bundle)\nDraw.MolsToGridImage(pv2_bundle)\n\n\n\n\n\n\n\n\n\n\nLink nodes\nAnother useful query feature, link nodes, allow you to describe rings of various sizes or chains with different lengths:\n\nlink1 = Chem.MolFromMolBlock('''one linknode\n  Mrv2007 06222005102D          \n\n  0  0  0     0  0            999 V3000\nM  V30 BEGIN CTAB\nM  V30 COUNTS 6 6 0 0 0\nM  V30 BEGIN ATOM\nM  V30 1 C 8.25 12.1847 0 0\nM  V30 2 C 6.9164 12.9547 0 0\nM  V30 3 C 6.9164 14.4947 0 0\nM  V30 4 C 9.5836 14.4947 0 0\nM  V30 5 C 9.5836 12.9547 0 0\nM  V30 6 O 8.25 10.6447 0 0\nM  V30 END ATOM\nM  V30 BEGIN BOND\nM  V30 1 1 1 2\nM  V30 2 1 2 3\nM  V30 3 1 4 5\nM  V30 4 1 1 5\nM  V30 5 1 3 4\nM  V30 6 1 1 6\nM  V30 END BOND\nM  V30 LINKNODE 1 4 2 1 2 1 5\nM  V30 END CTAB\nM  END''')\nlink1\n\n\n\n\n\n\n\n\nAnd we can enumerate and display these in the same way. Here there’s not much sense in doing the MCS analysis to get the shared coordinates, so I just generate coordinates for the molecules directly:\n\nlink1_bundle = rdMolEnumerator.Enumerate(link1)\nfor m in link1_bundle:\n     Chem.SanitizeMol(m)\n     rdDepictor.Compute2DCoords(m)\nDraw.MolsToGridImage(link1_bundle)\n\n\n\n\n\n\n\n\n\n\nCombining them\nWe can also combine link nodes and position variation bonds in the same molecule:\n\ncombined = Chem.MolFromMolBlock('''\n  Mrv2108 05132110052D          \n\n  0  0  0     0  0            999 V3000\nM  V30 BEGIN CTAB\nM  V30 COUNTS 19 20 0 0 0\nM  V30 BEGIN ATOM\nM  V30 1 N -2.2078 4.3165 0 0\nM  V30 2 C -2.9544 2.9695 0 0\nM  V30 3 C -2.1612 1.6495 0 0\nM  V30 4 C -0.6214 1.6763 0 0\nM  V30 5 C 0.1252 3.0233 0 0\nM  V30 6 C -0.668 4.3433 0 0\nM  V30 7 C 1.6649 3.0501 0 0\nM  V30 8 C -4.4941 2.9427 0 0\nM  V30 9 C 2.4581 1.7301 0 0\nM  V30 10 C 2.985 3.8433 0 0\nM  V30 11 C 3.7781 2.5233 0 0\nM  V30 12 C -6.3747 4.5774 0 0\nM  V30 13 C -6.9764 3.1598 0 0\nM  V30 14 C -5.8142 2.1495 0 0\nM  V30 15 C -4.8405 4.4431 0 0\nM  V30 16 F -7.1678 5.8974 0 0\nM  V30 17 O 3.3575 5.3376 0 0\nM  V30 18 * -1.1502 2.5564 0 0\nM  V30 19 C -1.1502 0.2464 0 0\nM  V30 END ATOM\nM  V30 BEGIN BOND\nM  V30 1 1 1 2\nM  V30 2 2 2 3\nM  V30 3 1 3 4\nM  V30 4 2 4 5\nM  V30 5 1 5 6\nM  V30 6 2 1 6\nM  V30 7 1 5 7\nM  V30 8 1 2 8\nM  V30 9 1 9 11\nM  V30 10 1 10 11\nM  V30 11 1 7 9\nM  V30 12 1 7 10\nM  V30 13 1 12 13\nM  V30 14 1 13 14\nM  V30 15 1 12 15\nM  V30 16 1 14 8\nM  V30 17 1 8 15\nM  V30 18 1 12 16\nM  V30 19 1 10 17\nM  V30 20 1 18 19 ENDPTS=(3 6 3 4) ATTACH=ANY\nM  V30 END BOND\nM  V30 LINKNODE 1 2 2 10 7 10 11\nM  V30 LINKNODE 1 2 2 12 13 12 15\nM  V30 END CTAB\nM  END\n''')\ncombined\n\n\n\n\n\n\n\n\nEnumerating that produces 12 molecules:\n\ncombined_bundle = rdMolEnumerator.Enumerate(combined)\nalign_bundle_coords(combined_bundle)\nDraw.MolsToGridImage(combined_bundle,subImgSize=(300,250))\n\n\n\n\n\n\n\n\n\n\nUsing MolBundles for substructure search\nMolBundles can also be used as substructure search queries.\nHere’s another query molecule:\n\nqry= Chem.MolFromMolBlock('''\n  Mrv2108 05132113572D          \n\n  0  0  0     0  0            999 V3000\nM  V30 BEGIN CTAB\nM  V30 COUNTS 13 13 0 0 0\nM  V30 BEGIN ATOM\nM  V30 1 C 1.2124 -2.4845 0 0\nM  V30 2 N 2.5461 -3.2545 0 0\nM  V30 3 C 2.5461 -4.7945 0 0\nM  V30 4 C 1.2124 -5.5645 0 0\nM  V30 5 C 1.2124 -7.1045 0 0\nM  V30 6 C -0.0335 -8.0097 0 0\nM  V30 7 O 0.4424 -9.4744 0 0\nM  V30 8 C 1.9824 -9.4744 0 0\nM  V30 9 C 2.4583 -8.0097 0 0\nM  V30 10 C -0.1212 -4.7945 0 0\nM  V30 11 C -0.1212 -3.2545 0 0\nM  V30 12 * 0.5456 -2.8695 0 0\nM  V30 13 C -0.6094 -0.869 0 0\nM  V30 END ATOM\nM  V30 BEGIN BOND\nM  V30 1 2 1 2\nM  V30 2 1 2 3\nM  V30 3 2 3 4\nM  V30 4 1 4 5\nM  V30 5 1 6 7\nM  V30 6 1 7 8\nM  V30 7 1 8 9\nM  V30 8 1 5 9\nM  V30 9 1 4 10\nM  V30 10 2 10 11\nM  V30 11 1 1 11\nM  V30 12 1 12 13 ENDPTS=(2 11 1) ATTACH=ANY\nM  V30 13 1 5 6\nM  V30 END BOND\nM  V30 LINKNODE 1 2 2 6 5 6 7\nM  V30 END CTAB\nM  END\n''')\nqry\n\n\n\n\n\n\n\n\nAnd a set of molecules to search through which I pulled from ChEMBL\n\nsmis = '''Cc1nc(C(C)(C)NC(=O)c2ccc(C3CCOCC3)c(OCC3CC3)n2)no1\n CC(C)(CO)NC(=O)c1ccc(C2CCOC2)c(OCC2CC2)n1\n CC(C)(NC(=O)c1ccc(C2CCOCC2)c(OCC2CC2)n1)c1nccs1\n Cc1c(-c2cncc(C3(O)CCOCC3)c2)cnc2c1CCCN2C(N)=O\n CC(C)Oc1cc(NC(=O)N2CCCc3cc(C4CCOC4)c(C=O)nc32)ncc1C#N\n NC(=O)N1CCCc2cc(-c3cncc(C4(O)CCOC4)c3)cnc21\n CCC(CC)(NC(=O)c1ccc(C2CCOCC2)c(OCC2CC2)n1)C(=O)NC\n CC(C)(NC(=O)c1ccc(C2CCOCC2)c(OCC2CC2)n1)c1ncco1\n N#Cc1cc(-c2ccoc2)c2ccc(OCc3cncc(C4(O)CCOCC4)c3)cc2c1\n Nc1cc(-c2cc(C3CCOCC3)cnc2N)ccc1C(=O)N[C@H](CO)c1ccccc1\n Nc1ncc(C2CCOCC2)cc1-c1ccc(C(=O)NCc2cccnc2)cc1\n Cc1nc(C(C)(C)NC(=O)c2ccc(C3CCOC3)c(OCC3CC3)n2)no1\n CC(C)C[C@H](NC(=O)c1ccc(C2CCOC2)c(OCC2CC2)n1)C(N)=O\n Nc1ncc(C2CCOCC2)cc1-c1ccc(C(=O)N[C@H](CO)c2ccccc2)cc1Cl\n NC(=O)[C@H](CC1CC1)NC(=O)c1ccc(C2CCOC2)c(OCC2CC2)n1\n'''\nmols = [Chem.MolFromSmiles(x.strip()) for x in smis.split('\\n') if x.strip()]\n\nThe query itself doesn’t match most of these molecules:\n\nmatches = [x for x in mols if x.HasSubstructMatch(qry)]\nlen(mols),len(matches)\n\n(15, 6)\n\n\nBut if we enumerate it into a MolBundle and use that as the substructure query then all the molecules match:\n\nqry_bundle = rdMolEnumerator.Enumerate(qry)\nmatches = [x for x in mols if x.HasSubstructMatch(qry_bundle)]\nlen(mols),len(matches)\n\n(15, 15)\n\n\nLet’s look at a few of those matches\n\nmatches = []\nmatched_ats = []\nfor x in mols:\n    match = x.GetSubstructMatch(qry_bundle)\n    if match:\n        matches.append(x)\n        matched_ats.append(match)\nDraw.MolsToGridImage(matches[:6],highlightAtomLists=matched_ats,subImgSize=(300,250))\n\n\n\n\n\n\n\n\nWe’re working on expanding support for the MolBundle in other RDKit code. For example, it would be really nice to be able to use them directly as queries for the SubstructLibrary\n\n\nFinal bit: input from CXSMILES\nIt’s also possible to read both variable attachment points and link nodes from CXSMILES:\n\nm = Chem.MolFromSmiles('CO*.C1=CC=NC=C1 |c:2,4,6,m:2:3.5.4|')\nm\n\n\n\n\n\n\n\n\nAs that example shows, the coordinate generation code is currently not great at setting the atom positions for these. That’s a ToDo for a future release.\n\nm = Chem.MolFromSmiles('OC1CCCC1 |LN:1:1.4.2.5|')\nm\n\n\n\n\n\n\n\n\nThe RDKit currently does not write either link nodes or variable attachment points to CXSMILES, that’s another ToDo for a future release."
  },
  {
    "objectID": "posts/2024-02-23-custom-transformations-and-logging.html",
    "href": "posts/2024-02-23-custom-transformations-and-logging.html",
    "title": "Using custom standardization rules / Using the python logger from the RDKit",
    "section": "",
    "text": "This post looks at two things:\n\nSupplying your own parameters when normalizing molecules using the RDKit’s MolStandardize\nCapturing and parsig the RDKit’s C++ logs from within Python\n\nThe RDKit’s MolStandardize module includes functionality for “normalizing” input molecules: applying a set of chemical transformations expressed as reactions to standardize the representation of particular functional groups or substructures of the input molecule. This kind of normalization is a common step in preparing molecules for a compound registration system. MolStandardize has a collection of default transformations adapted from Matt Swain’s MolVS (MolStandardize itself started as a C++ port of MolVS) which cover standardizing a variety of common functional groups. The full list is in the RDKit source.\nThough we have tried to provide a broad and useful set of transformations, we know that they won’t fit everybody’s needs, so the MolStandardize allows the user to provide their own transformations. The first part of this post demonstrates how to do that.\nThe normalization funcationality in MolStandarize sends information about what transformations have been applied to the console using the RDKit’s logging functionality. This can be useful when working with small numbers of molecules in the shell or a notebook, and when debugging new transformations, but quickly becomes irritating when working with larger sets of molecules. In the second part of the post I’ll show how to disable this logging information as well as how to capture it and parse the logs to find out which transformations were applied to each molecule.\n\nfrom rdkit import Chem\nfrom rdkit.Chem.MolStandardize import rdMolStandardize\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import IPythonConsole\n\nimport rdkit\nprint(rdkit.__version__)\n\n2023.09.5\n\n\n\nProviding your own normalization transformations\nLet’s start with a simple molecule to demonstrate the default behavor of the normalization code.\nThe easiest way to apply the defaults to a molecule is to use the function rdMolStandardize.Normalize():\n\nm = Chem.MolFromSmiles('[O-]c1[n+](C)cccc1')\nm2 = rdMolStandardize.Normalize(m)\nDraw.MolsToGridImage([m,m2])\n\n[05:54:00] Initializing Normalizer\n[05:54:00] Running Normalizer\n[05:54:00] Rule applied: Recombine 1,3-separated charges\n\n\n\n\n\n\n\n\n\nAn aside: as was mentioned in another recent blog post, it’s possible to call NormalizeInPlace() to modify the molecule in place instead of making a copy and working on it. This will be a bit faster and can be used with mulitiple threads when working with more than one molecule.\nWe can accomplish the same thing by creating a Normalizer object and using it to normalize the molecule:\n\nnrm = rdMolStandardize.Normalizer()\nm2 = nrm.normalize(m)\nDraw.MolsToGridImage([m,m2])\n\n[05:54:01] Initializing Normalizer\n[05:54:01] Running Normalizer\n[05:54:01] Rule applied: Recombine 1,3-separated charges\n\n\n\n\n\n\n\n\n\nNow let’s look at another molecule where the normalization doesn’t do anything:\n\nm = Chem.MolFromSmiles('CC(C)(C)OC(=O)NCCC(=O)O[Na]')\nm2 = nrm.normalize(m)\nDraw.MolsToGridImage([m,m2])\n\n[05:54:02] Running Normalizer\n\n\n\n\n\n\n\n\n\nAs a demonstration, let’s construct a normalizer which will break the bond to the alkali metal and remove the Boc protecting group. This is, of course, an artificial example, but it shows how to provide new transformations to MolStandardize\n\n# we provide the transformations in a string with one line per transformation.\n# Lines starting with // are comments and are ignored. Each line contains the\n# name of the transformation, a tab character, and then the reaction SMARTS for\n# the transformation itself. It's also possible to skip the names; in that case\n# just provide the reaction SMARTS (the tab is not needed)\ntfs = '''\n// this is from Deprotect.cpp:\nremove_Boc\\t[C;R0][C;R0]([C;R0])([O;R0][C;R0](=[O;R0])[NX3;H0,H1:1])C&gt;&gt;[N:1]\n// this should go last, because later transformations will\n// lose the alkali metal\ndisconnect_alkali_metals\\t[Li,Na,K,Rb:1]-[A:2]&gt;&gt;([*+:1].[*-:2])\n'''\n# create the new Normalizer:\ncps = rdMolStandardize.CleanupParameters()\nnrm2 = rdMolStandardize.NormalizerFromData(tfs,cps)\n\n# and apply it:\nm2 = nrm2.normalize(m)\nDraw.MolsToGridImage([m,m2])\n\n[05:54:08] Initializing Normalizer\n[05:54:08] Running Normalizer\n[05:54:08] Rule applied: remove_Boc\n[05:54:08] Rule applied: disconnect_alkali_metals\n\n\n\n\n\n\n\n\n\nIf you’re processing a lot of molecules, you probably don’t want those log messages filling your console or notebook. It’s possible to disable the logging:\n\nfrom rdkit import RDLogger\nRDLogger.DisableLog('rdApp.info')\nm2 = nrm2.normalize(m)\n\n\n\nConnecting the RDKit logs to the Python logger\nIt’s also possible to have the logging the RDKit’s C++ backend does sent to Python’s built-in logging facilities. This has been available since the 2022.03.1 release of the RDKit.\nI won’t do a complete introduction to Python’s logging capabilities here (I’m not an expert!), but here’s a quick demonstration of what we might do:\n\nimport logging\n\nlogger = logging.getLogger('rdkit')\n# set the log level for the default log handler (the one which sense output to the console/notebook):\nlogger.handlers[0].setLevel(logging.WARN)\n# format the messages so that it's clear they come from the RDKit:\nlogger.handlers[0].setFormatter(logging.Formatter('[RDKit] %(levelname)s:%(message)s'))\n\n# Tell the RDKit's C++ backend to log to use the python logger:\nfrom rdkit import rdBase\nrdBase.LogToPythonLogger()\n\nNow do something which generates an error message:\n\nChem.MolFromSmiles('C1C')\n\n[RDKit] ERROR:[06:18:05] SMILES Parse Error: unclosed ring for input: 'C1C'\n\n\nYou can tell that this went through the Python logger because it has the prefix we set up above.\nSince we’re only logging at the WARN (and above) level, the INFO messages from doing normalizations don’t appear:\n\nm2 = nrm2.normalize(m)\n\nLet’s create an additional log message handler that catches INFO messages too but that saves them in a StringIO object instead of outputting them to the console:\n\nfrom io import StringIO\n\nlogger_sio = StringIO()\n# create a handler that uses the StringIO and set its log level:\nhandler = logging.StreamHandler(logger_sio)\nhandler.setLevel(logging.INFO)\n\n# add the handler to the Python logger:\nlogger.addHandler(handler)\n\n# we also need to change the level of the main logger so that the INFO messages get sent to the handlers:\nlogger.setLevel(logging.INFO)\n\nNow normalize a molecule:\n\nm2 = nrm2.normalize(m)\n\nWe don’t see anything in the notebook because the main handler (the one which goes to the console/notebook) is still set to only show WARN and above, but logger_sio has the message:\n\ntext = logger_sio.getvalue()\nprint(text)\n\n[06:20:44] Running Normalizer\n[06:20:44] Rule applied: remove_Boc\n[06:20:44] Rule applied: disconnect_alkali_metals\n\n\n\nWe can use a regular expression to extract the rules that were applied to the molecule from this output:\n\nimport re\nrules = re.findall(r'Rule applied: (.*?)\\n',text)\nrules\n\n['remove_Boc', 'disconnect_alkali_metals']\n\n\nIf we now sanitize another molecule (or, in this case, the same one again), the log messages are appended to logger_sio:\n\nm2 = nrm2.normalize(m)\n\n\ntext = logger_sio.getvalue()\nprint(text)\n\n[06:20:44] Running Normalizer\n[06:20:44] Rule applied: remove_Boc\n[06:20:44] Rule applied: disconnect_alkali_metals\n[15:22:05] Running Normalizer\n[15:22:05] Rule applied: remove_Boc\n[15:22:05] Rule applied: disconnect_alkali_metals\n\n\n\nBut we can reset the StringIO object:\n\nlogger_sio.truncate(0)\nlogger_sio.seek(0)\n\n# Create and normalize a new molecule:\nnew_m = Chem.MolFromSmiles('CCCO[Na]')\nnew_m2 = nrm2.normalize(new_m)\n\n# show the normalizations that were applied:\nre.findall(r'Rule applied: (.*?)\\n',logger_sio.getvalue())\n\n['disconnect_alkali_metals']\n\n\nWe can now combine everything to write a function which applies a collection of custom transformations to a list of molecules and returns the transformed molecules along with which transformations were applied to each molecule:\n\nimport logging\nfrom io import StringIO\nfrom rdkit import rdBase\nimport re\n\ndef normalize_molecules(mols,standardization_rules):\n    # Tell the RDKit's C++ backend to log to use the python logger:\n    rdBase.LogToPythonLogger()\n\n    logger = logging.getLogger('rdkit')\n    # set the log level for the default log handler (the one which sense output to the console/notebook):\n    logger.handlers[0].setLevel(logging.WARN)\n\n    logger_sio = StringIO()\n    # create a handler that uses the StringIO and set its log level:\n    handler = logging.StreamHandler(logger_sio)\n    handler.setLevel(logging.INFO)\n    # add the handler to the Python logger:\n    logger.addHandler(handler)\n\n    \n    # create the new Normalizer:\n    cps = rdMolStandardize.CleanupParameters()\n    nrm = rdMolStandardize.NormalizerFromData(standardization_rules,cps)\n\n    match_expr = re.compile(r'Rule applied: (.*?)\\n')\n    \n    res_mols = []\n    tfs_applied = []\n    for mol in mols:\n        mol = nrm.normalize(mol)\n        res_mols.append(mol)\n        \n        text = logger_sio.getvalue()\n        tfs_applied.append(match_expr.findall(text))\n        \n        logger_sio.truncate(0)\n        logger_sio.seek(0)\n\n    return res_mols,tfs_applied\n\n    \n    \n\n\ntfs = '''\n// this is from Deprotect.cpp:\nremove_Boc\\t[C;R0][C;R0]([C;R0])([O;R0][C;R0](=[O;R0])[NX3;H0,H1:1])C&gt;&gt;[N:1]\n// this should go last, because later transformations will\n// lose the alkali metal\ndisconnect_alkali_metals\\t[Li,Na,K,Rb:1]-[A:2]&gt;&gt;([*+:1].[*-:2])\n'''\n\nmols = [Chem.MolFromSmiles(smi) for smi in \n        ('CC(C)(C)OC(=O)NCCC(=O)O[Na]','CCCO[Na]','CC(C)(C)OC(=O)NCCC','c1ccccc1')]\ntmols,tapplied = normalize_molecules(mols,tfs)\n\n\nDraw.MolsToGridImage(tmols,legends=['\\n'.join(x) for x in tapplied])"
  },
  {
    "objectID": "posts/2022-12-25-colliding-bits-ii-revisited.html",
    "href": "posts/2022-12-25-colliding-bits-ii-revisited.html",
    "title": "Colliding bits II, revisited",
    "section": "",
    "text": "Note: This is a significantly revised version of an earlier post.\nIn an earlier post I looked at the minimal impact bit collisions in the RDKit’s Morgan fingerprints has on calculated similarity between molecules. This time I’m going to look at the impact of fingerprint size (as a surrogate for number of collisions) on the performance of machine-learning algorithms.\nI will use Datasets II from our model fusion paper to do the analysis. I’ve covered these datasets, which are available as part of the benchmarkng platform, in some detail in an earlier post.\nWhile working on this post I updated the benchmarking platform to work with Python 3 (the paper was a long time ago!) and added a few additional learning methods and one additional evaluation metric. Those will be merged back to the github repo soon (probably by the time this blog post actually appears), in the meantime it’s here (if that branch is missing, it indicates that the code is already merged to the main repo).\nThe fingerprints examined here:\n\nMFP2: Morgan fingerprint, radius = 2\nMFP3: Morgan fingerprint, radius = 3\nRDK5: RDKit fingerprint, max path length = 5\nHashAP: atom pairs, using count simulation\nHashTT: topological torsions, using count simulation\n\nThe benchmarking platform is pre-configured to support a short (1K) and long (16K) form of the fingerprints, so that part was easy.\nThe learning algorithms:\n\nLR: logistic regression, sklearn implementation\nLMNB: Laplacian Naive Bayes, NIBR implementation\nNB: Naive Bayes, sklearn implementation. Note that something went wrong with these calculations, so they won’t be included in any summaries.\nRF: random forest, sklearn implementation\nBRF: balanced random forest, imbalanced-learn implementation\nXGB: extreme gradient boosting, XGBoost implementation\n\nHere’s a summary of the results using AUC as a metric (there’s a giant table at the bottom with the other metrics). The result column indicates whether the AUC value for the short fingerprint is usually less than (lt), the same as (same), or greater than (gt) the AUC value for the long fingerprint. The P column provides the P value for the difference (assessed using scipy’s Wilcoxon signed-rank test). The delt column has the median difference between the short-fingerprint AUC and long-fingerprint AUC. The pct_delt column indicates the median percentage change in AUC relative to the short-fingerprint AUC.\n\n\n\nalg\nfp\nmetric\nresult\nP\ndelt\npct_delt\n\n\n\n\nlr\nmfp2\nAUC\nlt\n8.68e-51\n-0.011\n-0.0142\n\n\nlr\nmfp3\nAUC\nlt\n2.6e-64\n-0.019\n-0.0243\n\n\nlr\nrdk5\nAUC\nlt\n2.09e-24\n-0.011\n-0.0143\n\n\nlr\nhashap\nAUC\nlt\n8.77e-37\n-0.026\n-0.0325\n\n\nlr\nhashtt\nAUC\nlt\n8.02e-54\n-0.022\n-0.0294\n\n\nlmnb\nmfp2\nAUC\nlt\n3.2e-104\n-0.042\n-0.0573\n\n\nlmnb\nmfp3\nAUC\nlt\n6.05e-107\n-0.077\n-0.109\n\n\nlmnb\nrdk5\nAUC\nlt\n4.32e-60\n-0.071\n-0.193\n\n\nlmnb\nhashap\nAUC\ngt\n1.67e-18\n0.031\n0.0494\n\n\nlmnb\nhashtt\nAUC\nlt\n7.52e-105\n-0.051\n-0.0767\n\n\nrf\nmfp2\nAUC\nlt\n1.45e-102\n-0.087\n-0.132\n\n\nrf\nmfp3\nAUC\nlt\n2.23e-92\n-0.074\n-0.115\n\n\nrf\nrdk5\nAUC\ngt\n4.27e-11\n0.015\n0.0212\n\n\nrf\nhashap\nAUC\nsame\n0.00227\n0.0036\n0.00503\n\n\nrf\nhashtt\nAUC\nlt\n1.25e-63\n-0.046\n-0.0677\n\n\nbrf\nmfp2\nAUC\nlt\n6.61e-37\n-0.024\n-0.0304\n\n\nbrf\nmfp3\nAUC\nlt\n9.25e-40\n-0.031\n-0.04\n\n\nbrf\nrdk5\nAUC\ngt\n2.77e-09\n0.01\n0.0131\n\n\nbrf\nhashap\nAUC\ngt\n5.32e-07\n0.011\n0.0152\n\n\nbrf\nhashtt\nAUC\nlt\n8.45e-29\n-0.027\n-0.0362\n\n\nxgb\nmfp2\nAUC\nsame\n0.831\n0.00097\n0.00109\n\n\nxgb\nmfp3\nAUC\nsame\n0.00162\n-0.0051\n-0.00719\n\n\nxgb\nrdk5\nAUC\ngt\n1.36e-07\n0.012\n0.0157\n\n\nxgb\nhashap\nAUC\ngt\n1.49e-20\n0.027\n0.0358\n\n\nxgb\nhashtt\nAUC\nsame\n0.0265\n-0.0043\n-0.00645\n\n\n\nThe TL;DR from this: for most methods and fingerprints you can get a small, but real improvement in model performance (as measured by AUC) by using the longer fingerprints. There are a few cases, e.g. LMNB+rdk5 and RF+mfp2, where the model built with the longer fingerprint is &gt;10% better. Exceptions to the general rule, which it could be interesting to investigate more deeply, include: - The rdk5 and hashap fingerprints: for this use case it looks like the additional information in the longer fingerprints tends to degrade performance. The “simpler” learning algorithms - lr and lmnb - either don’t show this effect or show it less… a strong suggestion that the problem is overfitting. - XGB doesn’t show improved performance for the longer fingerprint with any of the methods.\nNote that we’ve only looked at one type of data set here - training on reasonably homogeneous active molecules and then testing with diverse actives - so the results could well be different for models built/tested on things like screening data (where both the training and test sets are chemically diverse).\n\nfrom rdkit import Chem\nfrom rdkit.Chem import rdFingerprintGenerator\nimport numpy as np\n\nimport rdkit\nprint(rdkit.__version__)\nimport time\nprint(time.asctime())\n%pylab inline\n\n2022.09.1\nMon Dec 19 20:00:39 2022\n%pylab is deprecated, use %matplotlib inline and import the required libraries.\nPopulating the interactive namespace from numpy and matplotlib"
  },
  {
    "objectID": "posts/2022-12-25-colliding-bits-ii-revisited.html#logistic-regression",
    "href": "posts/2022-12-25-colliding-bits-ii-revisited.html#logistic-regression",
    "title": "Colliding bits II, revisited",
    "section": "Logistic regression",
    "text": "Logistic regression\n\ndo_scatter_plots('lr_mfp2','lr_lmfp2')"
  },
  {
    "objectID": "posts/2022-12-25-colliding-bits-ii-revisited.html#balanced-random-forests",
    "href": "posts/2022-12-25-colliding-bits-ii-revisited.html#balanced-random-forests",
    "title": "Colliding bits II, revisited",
    "section": "Balanced random forests",
    "text": "Balanced random forests\n\ndo_scatter_plots('brf_mfp2','brf_lmfp2')"
  },
  {
    "objectID": "posts/2022-12-25-colliding-bits-ii-revisited.html#random-forests",
    "href": "posts/2022-12-25-colliding-bits-ii-revisited.html#random-forests",
    "title": "Colliding bits II, revisited",
    "section": "Random forests",
    "text": "Random forests\n\ndo_scatter_plots('rf_mfp2','rf_lmfp2')"
  },
  {
    "objectID": "posts/2022-12-25-colliding-bits-ii-revisited.html#xgboost",
    "href": "posts/2022-12-25-colliding-bits-ii-revisited.html#xgboost",
    "title": "Colliding bits II, revisited",
    "section": "XGBoost",
    "text": "XGBoost\n\ndo_scatter_plots('xgb_mfp2','xgb_lmfp2')"
  },
  {
    "objectID": "posts/2022-12-25-colliding-bits-ii-revisited.html#laplacian-naive-bayes",
    "href": "posts/2022-12-25-colliding-bits-ii-revisited.html#laplacian-naive-bayes",
    "title": "Colliding bits II, revisited",
    "section": "Laplacian Naive Bayes",
    "text": "Laplacian Naive Bayes\n\ndo_scatter_plots('lmnb_mfp2_2','lmnb_lmfp2_2')"
  },
  {
    "objectID": "posts/2022-12-25-colliding-bits-ii-revisited.html#naive-bayes",
    "href": "posts/2022-12-25-colliding-bits-ii-revisited.html#naive-bayes",
    "title": "Colliding bits II, revisited",
    "section": "Naive Bayes",
    "text": "Naive Bayes\n\ndo_scatter_plots('nb_mfp2','nb_lmfp2')\n\n\n\n\n\n\n\n\nSomething isn’t right with the NB results… I need to look into that"
  },
  {
    "objectID": "posts/2022-12-25-colliding-bits-ii-revisited.html#auc",
    "href": "posts/2022-12-25-colliding-bits-ii-revisited.html#auc",
    "title": "Colliding bits II, revisited",
    "section": "AUC",
    "text": "AUC\n\n\n\nalg\nfp\nmetric\nresult\nP\ndelt\npct_delt\n\n\n\n\nlr\nmfp2\nAUC\nlt\n8.68e-51\n-0.011\n-0.0142\n\n\nlr\nmfp3\nAUC\nlt\n2.6e-64\n-0.019\n-0.0243\n\n\nlr\nrdk5\nAUC\nlt\n2.09e-24\n-0.011\n-0.0143\n\n\nlr\nhashap\nAUC\nlt\n8.77e-37\n-0.026\n-0.0325\n\n\nlr\nhashtt\nAUC\nlt\n8.02e-54\n-0.022\n-0.0294\n\n\nlmnb\nmfp2\nAUC\nlt\n3.2e-104\n-0.042\n-0.0573\n\n\nlmnb\nmfp3\nAUC\nlt\n6.05e-107\n-0.077\n-0.109\n\n\nlmnb\nrdk5\nAUC\nlt\n4.32e-60\n-0.071\n-0.193\n\n\nlmnb\nhashap\nAUC\ngt\n1.67e-18\n0.031\n0.0494\n\n\nlmnb\nhashtt\nAUC\nlt\n7.52e-105\n-0.051\n-0.0767\n\n\nrf\nmfp2\nAUC\nlt\n1.45e-102\n-0.087\n-0.132\n\n\nrf\nmfp3\nAUC\nlt\n2.23e-92\n-0.074\n-0.115\n\n\nrf\nrdk5\nAUC\ngt\n4.27e-11\n0.015\n0.0212\n\n\nrf\nhashap\nAUC\nsame\n0.00227\n0.0036\n0.00503\n\n\nrf\nhashtt\nAUC\nlt\n1.25e-63\n-0.046\n-0.0677\n\n\nbrf\nmfp2\nAUC\nlt\n6.61e-37\n-0.024\n-0.0304\n\n\nbrf\nmfp3\nAUC\nlt\n9.25e-40\n-0.031\n-0.04\n\n\nbrf\nrdk5\nAUC\ngt\n2.77e-09\n0.01\n0.0131\n\n\nbrf\nhashap\nAUC\ngt\n5.32e-07\n0.011\n0.0152\n\n\nbrf\nhashtt\nAUC\nlt\n8.45e-29\n-0.027\n-0.0362\n\n\nxgb\nmfp2\nAUC\nsame\n0.831\n0.00097\n0.00109\n\n\nxgb\nmfp3\nAUC\nsame\n0.00162\n-0.0051\n-0.00719\n\n\nxgb\nrdk5\nAUC\ngt\n1.36e-07\n0.012\n0.0157\n\n\nxgb\nhashap\nAUC\ngt\n1.49e-20\n0.027\n0.0358\n\n\nxgb\nhashtt\nAUC\nsame\n0.0265\n-0.0043\n-0.00645"
  },
  {
    "objectID": "posts/2022-12-25-colliding-bits-ii-revisited.html#auprc",
    "href": "posts/2022-12-25-colliding-bits-ii-revisited.html#auprc",
    "title": "Colliding bits II, revisited",
    "section": "AUPRC",
    "text": "AUPRC\n\n\n\nalg\nfp\nmetric\nresult\nP\ndelt\npct_delt\n\n\n\n\nlr\nmfp2\nAUPRC\nlt\n9.58e-55\n-0.0079\n-0.0535\n\n\nlr\nmfp3\nAUPRC\nlt\n1.72e-71\n-0.011\n-0.0758\n\n\nlr\nrdk5\nAUPRC\nlt\n2.93e-38\n-0.0042\n-0.0508\n\n\nlr\nhashap\nAUPRC\nlt\n1.11e-13\n-0.01\n-0.0857\n\n\nlr\nhashtt\nAUPRC\nlt\n2.33e-60\n-0.0091\n-0.102\n\n\nlmnb\nmfp2\nAUPRC\nlt\n9.34e-31\n-0.009\n-0.101\n\n\nlmnb\nmfp3\nAUPRC\nlt\n5.43e-27\n-0.0099\n-0.135\n\n\nlmnb\nrdk5\nAUPRC\ngt\n0.000113\n0.00025\n0.00953\n\n\nlmnb\nhashap\nAUPRC\nlt\n1.02e-18\n-0.0052\n-0.114\n\n\nlmnb\nhashtt\nAUPRC\nlt\n2.39e-17\n-0.0039\n-0.0839\n\n\nrf\nmfp2\nAUPRC\nlt\n3.24e-46\n-0.017\n-0.174\n\n\nrf\nmfp3\nAUPRC\nlt\n3.09e-59\n-0.019\n-0.211\n\n\nrf\nrdk5\nAUPRC\nsame\n0.41\n1.1e-05\n0.000428\n\n\nrf\nhashap\nAUPRC\ngt\n2.54e-05\n0.011\n0.1\n\n\nrf\nhashtt\nAUPRC\nlt\n8.39e-42\n-0.011\n-0.14\n\n\nbrf\nmfp2\nAUPRC\nlt\n1.41e-22\n-0.0086\n-0.0915\n\n\nbrf\nmfp3\nAUPRC\nlt\n4.72e-35\n-0.012\n-0.119\n\n\nbrf\nrdk5\nAUPRC\nsame\n0.455\n-0.00027\n-0.00484\n\n\nbrf\nhashap\nAUPRC\ngt\n0.00023\n0.0058\n0.0642\n\n\nbrf\nhashtt\nAUPRC\nlt\n3.38e-26\n-0.0075\n-0.121\n\n\nxgb\nmfp2\nAUPRC\nlt\n1.34e-12\n-0.0044\n-0.0558\n\n\nxgb\nmfp3\nAUPRC\nlt\n1.74e-25\n-0.0088\n-0.113\n\n\nxgb\nrdk5\nAUPRC\nlt\n1.32e-08\n-0.0034\n-0.0545\n\n\nxgb\nhashap\nAUPRC\nsame\n0.221\n0.008\n0.0872\n\n\nxgb\nhashtt\nAUPRC\nlt\n1.07e-13\n-0.0044\n-0.0792"
  },
  {
    "objectID": "posts/2022-12-25-colliding-bits-ii-revisited.html#ef1",
    "href": "posts/2022-12-25-colliding-bits-ii-revisited.html#ef1",
    "title": "Colliding bits II, revisited",
    "section": "EF1",
    "text": "EF1\n\n\n\nalg\nfp\nmetric\nresult\nP\ndelt\npct_delt\n\n\n\n\nlr\nmfp2\nEF1\nlt\n4.4e-23\n-1\n-0.0357\n\n\nlr\nmfp3\nEF1\nlt\n1.24e-36\n-1\n-0.0625\n\n\nlr\nrdk5\nEF1\nlt\n7.74e-16\n0\n0\n\n\nlr\nhashap\nEF1\nlt\n3.05e-06\n-1\n-0.0556\n\n\nlr\nhashtt\nEF1\nlt\n5.74e-36\n-1\n-0.0833\n\n\nlmnb\nmfp2\nEF1\nlt\n2.32e-74\n-3\n-0.167\n\n\nlmnb\nmfp3\nEF1\nlt\n9.4e-69\n-3\n-0.25\n\n\nlmnb\nrdk5\nEF1\ngt\n1.97e-58\n4\nnan\n\n\nlmnb\nhashap\nEF1\nsame\n0.147\n-1\nnan\n\n\nlmnb\nhashtt\nEF1\nlt\n5.42e-48\n-2\n-0.2\n\n\nrf\nmfp2\nEF1\nlt\n4.12e-11\n-1\n-0.0706\n\n\nrf\nmfp3\nEF1\nlt\n1.94e-14\n-1\n-0.0833\n\n\nrf\nrdk5\nEF1\nsame\n0.0619\n0\n0\n\n\nrf\nhashap\nEF1\ngt\n3.15e-06\n2\n0.1\n\n\nrf\nhashtt\nEF1\nlt\n1.33e-09\n-1\n-0.0476\n\n\nbrf\nmfp2\nEF1\nlt\n2.84e-09\n-1\n-0.0421\n\n\nbrf\nmfp3\nEF1\nlt\n4.46e-13\n-1\n-0.0769\n\n\nbrf\nrdk5\nEF1\nsame\n0.301\n0\nnan\n\n\nbrf\nhashap\nEF1\ngt\n9.93e-09\n1\n0.0779\n\n\nbrf\nhashtt\nEF1\nlt\n7.97e-14\n-1\n-0.0871\n\n\nxgb\nmfp2\nEF1\nlt\n1.06e-14\n-1\n-0.075\n\n\nxgb\nmfp3\nEF1\nlt\n2.22e-17\n-1\n-0.0625\n\n\nxgb\nrdk5\nEF1\nlt\n4.54e-09\n-1\nnan\n\n\nxgb\nhashap\nEF1\nsame\n0.335\n1\n0.0769\n\n\nxgb\nhashtt\nEF1\nlt\n6.27e-09\n0\n0"
  },
  {
    "objectID": "posts/2022-12-25-colliding-bits-ii-revisited.html#ef5",
    "href": "posts/2022-12-25-colliding-bits-ii-revisited.html#ef5",
    "title": "Colliding bits II, revisited",
    "section": "EF5",
    "text": "EF5\n\n\n\nalg\nfp\nmetric\nresult\nP\ndelt\npct_delt\n\n\n\n\nlr\nmfp2\nEF5\nlt\n4.32e-23\n-0.2\n-0.0357\n\n\nlr\nmfp3\nEF5\nlt\n3.64e-38\n-0.4\n-0.0559\n\n\nlr\nrdk5\nEF5\nlt\n8.96e-26\n-0.2\n-0.0469\n\n\nlr\nhashap\nEF5\nlt\n1.42e-08\n-0.2\n-0.0385\n\n\nlr\nhashtt\nEF5\nlt\n6.58e-38\n-0.4\n-0.0769\n\n\nlmnb\nmfp2\nEF5\nlt\n1.44e-82\n-1\n-0.154\n\n\nlmnb\nmfp3\nEF5\nlt\n2.57e-92\n-1.4\n-0.264\n\n\nlmnb\nrdk5\nEF5\nsame\n0.725\n-0.4\nnan\n\n\nlmnb\nhashap\nEF5\nlt\n1.47e-64\n-1\n-0.217\n\n\nlmnb\nhashtt\nEF5\nlt\n6.85e-73\n-0.81\n-0.185\n\n\nrf\nmfp2\nEF5\nlt\n3.72e-39\n-0.61\n-0.118\n\n\nrf\nmfp3\nEF5\nlt\n3.14e-26\n-0.4\n-0.0948\n\n\nrf\nrdk5\nEF5\nsame\n0.988\n0\n0\n\n\nrf\nhashap\nEF5\ngt\n6.9e-14\n0.61\n0.0769\n\n\nrf\nhashtt\nEF5\nlt\n2.61e-19\n-0.4\n-0.0811\n\n\nbrf\nmfp2\nEF5\nlt\n4.02e-16\n-0.4\n-0.0476\n\n\nbrf\nmfp3\nEF5\nlt\n8.91e-25\n-0.6\n-0.0854\n\n\nbrf\nrdk5\nEF5\nsame\n0.319\n0\n0\n\n\nbrf\nhashap\nEF5\ngt\n9.01e-07\n0.4\n0.0674\n\n\nbrf\nhashtt\nEF5\nlt\n1.18e-22\n-0.4\n-0.101\n\n\nxgb\nmfp2\nEF5\nlt\n3.14e-05\n-0.2\n-0.0308\n\n\nxgb\nmfp3\nEF5\nlt\n4.57e-13\n-0.4\n-0.0797\n\n\nxgb\nrdk5\nEF5\nsame\n0.00432\n-0.2\n-0.0354\n\n\nxgb\nhashap\nEF5\ngt\n1.24e-09\n0.61\n0.1\n\n\n\nI am sorely tempted to compare the individual methods and fingerprints to each other as well, but that’s not the point of this post, so I’ll hold that for another time."
  },
  {
    "objectID": "posts/2023-10-21-2d-molecular-templates.html",
    "href": "posts/2023-10-21-2d-molecular-templates.html",
    "title": "Templates for ring systems",
    "section": "",
    "text": "This guest post by Rachel Walker (github: @rachelnwalker) is the second of a few posts covering some of the new or improved features in the 2023.09.1 RDKit release.\nfrom rdkit import Chem\nfrom rdkit.Chem import rdDepictor\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import IPythonConsole\n\nIPythonConsole.ipython_useSVG=True\n%pylab inline\nimport rdkit\nprint(rdkit.__version__)\n\n%pylab is deprecated, use %matplotlib inline and import the required libraries.\nPopulating the interactive namespace from numpy and matplotlib\n2023.09.1"
  },
  {
    "objectID": "posts/2023-10-21-2d-molecular-templates.html#example-uses-of-default-templates",
    "href": "posts/2023-10-21-2d-molecular-templates.html#example-uses-of-default-templates",
    "title": "Templates for ring systems",
    "section": "Example uses of default templates",
    "text": "Example uses of default templates\nTemplates can be used for common, complex ring systems that the standard 2D coordinate generation algorithm distorts. They are also useful if you want certain ring systems to be laid out in a specific way (for example, cubane).\n\nTemplates by themselves\n\nmols = [Chem.MolFromSmiles(\"C1=C2CN3CCC45CCN6CCC(OC1)C(C2CC34)C65\"),\n        Chem.MolFromSmiles(\"C1CCC2C(C1)C1CCN2NN1\"),\n        Chem.MolFromSmiles(\"c1cc2nnc1CCNCCNCCCCO2\"),\n        Chem.MolFromSmiles(\"C12C3C4C1C1C2C3C41\")]\nmols_with_templates = [Chem.Mol(m) for m in mols]\n\nlegends = []\nallmols = []\nfor m, m_with_t in zip(mols, mols_with_templates):\n    rdDepictor.Compute2DCoords(m, useRingTemplates=False)\n    rdDepictor.Compute2DCoords(m_with_t, useRingTemplates=True)\n    allmols.append(m)\n    allmols.append(m_with_t)\n    legends.append(\"Without templating\")\n    legends.append(\"With templating\")\n    \nDraw.MolsToGridImage(allmols, legends=legends, molsPerRow=2, subImgSize=(400,400))\n\n\n\n\n\n\n\n\n\n\nTemplate matches within a larger structure\n\nmols = [Chem.MolFromSmiles(\"CCC1CN2CC(CC3=CC=CC=C3)C34CCN5CC6=CCOC1C(C23)C6CC45\"),\n        Chem.MolFromSmiles(\"C1CC2C3CCN(NN3)C2CC1C1=CC2=C(C=CC=C2)C=C1\"),\n        Chem.MolFromSmiles(\"CCc1cc2CCNCC(CC3CCCCC3)NCCCCOc1nn2\")]\nmols_with_templates = [Chem.Mol(m) for m in mols]\n\nlegends = []\nallmols = []\nfor m, m_with_t in zip(mols, mols_with_templates):\n    rdDepictor.Compute2DCoords(m, useRingTemplates=False)\n    rdDepictor.Compute2DCoords(m_with_t, useRingTemplates=True)\n    allmols.append(m)\n    legends.append(\"Without templating\")\n    allmols.append(m_with_t)\n    legends.append(\"With templating\")\n    \nDraw.MolsToGridImage(allmols, legends=legends, molsPerRow=2, subImgSize=(400,400))\n\n\n\n\n\n\n\n\n\n\nMultiple template matches in a single structure\n\nm1 = Chem.MolFromSmiles(\"NC(CCC1CCC2C(C1)C1CCN2NN1)CC(=O)CCC1=CCCC2CCCCC2CCCCC2CCCC(CCCCCCC1)C2\")\nm2 = Chem.MolFromSmiles(\"NC(CCC1CCC2C(C1)C1CC(CCC(=O)CC(N)CCC3C4CC5CC3CC5C4)N2NN1)CC(=O)CCC1=CCCC2CCCCC2CCCCC2CCCC(CCCCCCC1)C2\")\nm1_templates = Chem.Mol(m1)\nm2_templates = Chem.Mol(m2)\n\nrdDepictor.Compute2DCoords(m1, useRingTemplates=False)\nrdDepictor.Compute2DCoords(m2, useRingTemplates=False)\nrdDepictor.Compute2DCoords(m1_templates, useRingTemplates=True)\nrdDepictor.Compute2DCoords(m2_templates, useRingTemplates=True)\n\nDraw.MolsToGridImage([m1, m1_templates, m2, m2_templates], legends=['Without templating', 'With templating', 'Without templating', 'With templating'], molsPerRow=2, subImgSize=(400,400))"
  },
  {
    "objectID": "posts/2023-10-21-2d-molecular-templates.html#setting-custom-templates",
    "href": "posts/2023-10-21-2d-molecular-templates.html#setting-custom-templates",
    "title": "Templates for ring systems",
    "section": "Setting custom templates",
    "text": "Setting custom templates\nYou can set your own templates using rdDepictor.SetRingSystemTemplates. This will replace all of the default templates, while rdDepictor.AddRingSystemTemplates will add to any templates that are already present (the most recently added templates will be given preference).\nCustom templates should be defined in a .smi file, with each line representing a single template using CXSMILES. Templates must be a connected graph (no fragments) and have 2D coordinates defined, and they need to consist of a single ring or fused ring system (spiros are OK).\nExample: I made my_templates.smi with a single template:\nC1CC2CCOC3OC4CCC(C1)C23OO4 |(-0.5537,-3.1595,;-1.6057,-2.003,;-1.4262,-0.4072,;-2.9804,0.0271,;-3.5191,1.502,;-2.2028,2.3562,;-0.6818,1.8511,;1.0592,1.4391,;2.6123,1.8366,;3.5191,0.5341,;2.6067,-0.7521,;1.0061,-0.773,;0.7888,-2.3546,;-0.0405,0.5251,;0.4049,2.3,;1.7604,3.1594,)|\n\nm = Chem.MolFromSmiles(\"C1CC2CCOC3OC4CCC(C1)C23OO4\")\nm_default_templates = Chem.Mol(m)\nm_custom_templates = Chem.Mol(m)\n\nrdDepictor.Compute2DCoords(m, useRingTemplates=False)\nrdDepictor.Compute2DCoords(m_default_templates, useRingTemplates=True)\n\n# Set ring system templates\nrdDepictor.SetRingSystemTemplates(\"../data/my_templates.smi\")\nrdDepictor.Compute2DCoords(m_custom_templates, useRingTemplates=True)\n\nDraw.MolsToGridImage([m, m_default_templates, m_custom_templates], legends=['No templates', 'Default templates', 'Custom templates'], molsPerRow=3, subImgSize=(300,300))\n\n\n\n\n\n\n\n\nYou can set the templates back to the original ones by calling LoadDefaultRingSystemTemplates\n\nrdDepictor.LoadDefaultRingSystemTemplates()\nrdDepictor.Compute2DCoords(m, useRingTemplates=True)\nm"
  },
  {
    "objectID": "posts/2023-10-21-2d-molecular-templates.html#limitations",
    "href": "posts/2023-10-21-2d-molecular-templates.html#limitations",
    "title": "Templates for ring systems",
    "section": "Limitations",
    "text": "Limitations\nAs of this release, there are several limitations to the templating that we plan on addressing in the future:\n\nOnly ring system templates are supported, it would be nice to be able to template some complicated stereochemistry\nTemplate matching only considers the first substructure match, even when other matches would result in better depictions\nQuality and quantity of templates could be vastly improved, we still don’t have a wide variety of macrocycles and the existing templates are specific bond order and atom type\n\nExample where #2 would be helpful:\n\ncubane = Chem.MolFromSmiles(\"C12C3C4C1C1C2C3C41\")\ncubane_with_path = Chem.MolFromSmiles(\"CCCC12C3C4C5C3C1C5C24\")\n\nrdDepictor.Compute2DCoords(cubane, useRingTemplates=True)\nrdDepictor.Compute2DCoords(cubane_with_path, useRingTemplates=True)\n\nDraw.MolsToGridImage([cubane, cubane_with_path], subImgSize=(400,400))"
  },
  {
    "objectID": "posts/2020-01-30-finding-regioisomers.html",
    "href": "posts/2020-01-30-finding-regioisomers.html",
    "title": "Finding regioisomers",
    "section": "",
    "text": "This is one that came up recently on the mailing list that I thought made for a good example to demonstrate how to write Python to do some more advanced structural searches with the RDKit.\n\nfrom rdkit import Chem\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import IPythonConsole\nimport rdkit\nprint(rdkit.__version__)\n\n2019.09.3\n\n\nRDKit WARNING: [05:43:19] Enabling RDKit 2019.09.3 jupyter extensions\n\n\nMy paraphrasing of the problem: Alexis wanted to be able to do the equivalent of a substructure search that finds all aromatic rings that have both Cl and Br substituents. So he wanted to be able to match the first two of these, but not the second:\n\nms = [Chem.MolFromSmiles(x) for x in 'Clc1c(Br)cccc1 Clc1cc(Br)ccc1 Clc1cccc2c1c(Br)ccc2'.split()]\nDraw.MolsToGridImage(ms,legends='match match no-match'.split())\n\n\n\n\n\n\n\n\nIt’s really non-trivial to do this with SMARTS since it has no way to express that two atoms should be in the same ring without making the ring explicit in the SMARTS. I was able to come up with this SMARTS, which works, but is unwieldy (at best):\n\np = Chem.MolFromSmarts('Cl[c;$(c1(Cl)c(Br)cccc1),$(c1(Cl)cc(Br)ccc1),$(c1(Cl)ccc(Br)cc1)]')\nprint([m.HasSubstructMatch(p) for m in ms])\n\n[True, True, False]\n\n\nSo that does what we want, but it only handles six rings where every atom is a C. That second part is easy enough to change in the SMARTS, but handling other ring sizes starts to make the SMARTS really long.\nA more difficult problem is that, because we use recursive SMARTS, we can’t get the atoms matching the query. The pattern I used above would only return the Cl atom and the C atom it’s connected to. I’m not sure Alexis even wanted to do that, but by this point I was interested in the problem and decided to write some Python to solve the problem flexibly.\nHere we go.\nBefore introducing the code and showing what it can do, a quick intro on the two pieces of functionality I’m going to be using from Python’s itertools module. These are really useful.\nLet’s start with using itertools to flatten a sequence of sequences:\n\nimport itertools\nseqs = [[1,2,3],['a','b'],[10,20]]\nlist(itertools.chain.from_iterable(seqs))\n\n[1, 2, 3, 'a', 'b', 10, 20]\n\n\nAnd to generate all the permutations of combinations of those sequences:\n\nlist(itertools.product(*seqs))\n\n[(1, 'a', 10),\n (1, 'a', 20),\n (1, 'b', 10),\n (1, 'b', 20),\n (2, 'a', 10),\n (2, 'a', 20),\n (2, 'b', 10),\n (2, 'b', 20),\n (3, 'a', 10),\n (3, 'a', 20),\n (3, 'b', 10),\n (3, 'b', 20)]\n\n\nOk, that’s the background, let’s define the functions we’ll use:\n\nimport itertools\ndef getAromaticRings(mol):\n    \"\"\" generator returning all aromatic rings (=only aromatic bonds) in a molecule \n    \n    Parameters\n    ----------\n    mol : Mol\n\n    Yields\n    ------\n    set\n        IDs of the atoms in an aromatic ring\n    \n    \"\"\"\n    ri = mol.GetRingInfo()\n    for ring in ri.BondRings():\n        ats = set()\n        isArom = True\n        for bi in ring:\n            bnd = mol.GetBondWithIdx(bi)\n            if not bnd.GetIsAromatic():\n                isArom = False\n                break\n            ats.add(bnd.GetBeginAtomIdx())\n            ats.add(bnd.GetEndAtomIdx())\n        if isArom:\n            yield ats\n\ndef getSharedRings(mol,queries,rings=None,excludeQueries=None):\n    \"\"\" generator returning all rings that contain all the atoms defined in queries \n        the first atom matching each query should be in the ring\n\n    Parameters\n    ----------\n    mol : Mol\n    queries : sequence of Mols\n    rings : list/tuple/set of list/tuple/sets, optional\n        sequence of rings defined by sequences of atom ids\n        If this isn't provided, all of the molecule's rings will be used\n    excludeQueries : sequence of Mols, optional\n        any ring containing an atom matching the first atom in any of these queries\n        will be excluded\n\n    Yields\n    -------\n    set\n       containing atom IDs for a matching ring\n\n    \"\"\"\n    if rings is None:\n        rings = mol.GetRingInfo().AtomRings()\n    alreadySeen = []\n    rings = [set(x) for x in rings]\n    matchSets = [[x[0] for x in mol.GetSubstructMatches(q)] for q in queries]\n    if excludeQueries is not None:\n        exclude = [[x[0] for x in mol.GetSubstructMatches(q)] for q in excludeQueries]\n        # flatten the lists of matches into a set:\n        exclude = set(itertools.chain.from_iterable(exclude))\n    else:\n        exclude = set()\n    for combo in itertools.product(*matchSets):\n        scombo = set(combo)\n        if len(scombo) &lt; len(combo):\n            # degenerate:\n            continue\n        for ring in rings:\n            if ring in alreadySeen:\n                continue\n            if scombo.issubset(ring) and exclude.isdisjoint(ring):\n                alreadySeen.append(ring)\n                yield ring\n\ndef drawMolWithRings(mol,rings):\n    \"\"\" draws a molecule with a set of rings highlighted\n    \n    Parameters\n    ----------\n    mol : Mol\n    rings : list/tuple/set of list/tuple/sets\n        sequence of rings defined by sequences of atom IDs\n\n    Returns\n    -------\n    Image\n\n    \"\"\"\n    bondsToHighlight=[]\n    for bnd in mol.GetBonds():\n        keep = False\n        ats = set([bnd.GetBeginAtomIdx(),bnd.GetEndAtomIdx()])\n        for ring in rings:\n            if ats.issubset(ring):\n                keep = True\n                break\n        if keep:\n            bondsToHighlight.append(bnd.GetIdx())\n    highlightAtoms = list(itertools.chain.from_iterable(rings))\n\n    tmol = Draw.PrepareMolForDrawing(mol)\n    d2d = Draw.MolDraw2DCairo(300, 250)\n    d2d.DrawMolecule(tmol, highlightAtoms=highlightAtoms, \n                     highlightBonds = bondsToHighlight)\n    d2d.FinishDrawing()\n    return Draw._drawerToImage(d2d)\n\nThis is the molecule we’ll work with:\n\nmol = Chem.MolFromSmiles('c1c(Cl)cc(Br)c2c1CCc3c2cc(Cl)c4c3CCC(Cl)C4Br')\nmol\n\n\n\n\n\n\n\n\nShow what the getAromaticRings() function returns here:\n\nrings = list(getAromaticRings(mol))\nrings\n\n[{0, 1, 3, 4, 6, 7}, {10, 11, 12, 13, 15, 16}]\n\n\nWe can use drawMolWithRings() to highlight those atoms:\n\ndrawMolWithRings(mol,rings)\n\n\n\n\n\n\n\n\nNow let’s look at Alexis’ question: find all the aromatic rings that have a Cl and a Br attached:\n\nmatches = list(getSharedRings(mol,[Chem.MolFromSmarts(sma) for sma in ('[a]-Cl','[a]-Br')],\n                              rings=getAromaticRings(mol)))\nprint(matches)\ndrawMolWithRings(mol,matches)\n\n[{0, 1, 3, 4, 6, 7}]\n\n\n\n\n\n\n\n\n\nWhat about aromatic rings that have both a Cl and an aliphatic C attached?\n\nmatches = list(getSharedRings(mol,[Chem.MolFromSmarts(sma) for sma in ('[a]-Cl','[a]-C')],\n                             rings=getAromaticRings(mol)))\nprint(matches)\ndrawMolWithRings(mol,matches)\n\n[{0, 1, 3, 4, 6, 7}, {16, 10, 11, 12, 13, 15}]\n\n\n\n\n\n\n\n\n\nWhat about just finding any rings (not just aromatic) that have both Cl and Br connected?\nHere we just drop the rings argument to getSharedRings(), it will use all of the molecule’s rings:\n\nmatches = list(getSharedRings(mol,[Chem.MolFromSmarts(sma) for sma in ('[*]-Cl','[*]-Br')]))\nprint(matches)\ndrawMolWithRings(mol,matches)\n\n[{0, 1, 3, 4, 6, 7}, {15, 16, 17, 18, 19, 21}]\n\n\n\n\n\n\n\n\n\nWe can also find any rings that have a Cl, but not a Br:\n\nmatches = list(getSharedRings(mol,[Chem.MolFromSmarts(sma) for sma in ('[*]-Cl',)],\n                              excludeQueries=[Chem.MolFromSmarts(sma) for sma in ('[*]-Br',)]))\nprint(matches)\ndrawMolWithRings(mol,matches)\n\n[{10, 11, 12, 13, 15, 16}]\n\n\n\n\n\n\n\n\n\nWe aren’t limited to just six membered rings, of course. Go back to the original query for aromatic rings with both Cl and Br attached:\n\nmol = Chem.MolFromSmiles('Clc1[nH]c(Br)c(c2ccc(Cl)c(Br)c2)c1')\nmatches = list(getSharedRings(mol,[Chem.MolFromSmarts(sma) for sma in ('[*]-Cl','[*]-Br')],\n                              rings=getAromaticRings(mol)))\nprint(matches)\ndrawMolWithRings(mol,matches)\n\n[{1, 2, 3, 5, 14}, {6, 7, 8, 9, 11, 13}]\n\n\n\n\n\n\n\n\n\nWhat about aromatic rings that have both Cl and Br attached, but that don’t contain a heteroatom?\n\nmol = Chem.MolFromSmiles('Clc1[nH]c(Br)c(c2ccc(Cl)c(Br)c2)c1')\nmatches = list(getSharedRings(mol,[Chem.MolFromSmarts(sma) for sma in ('[*]-Cl','[*]-Br')],\n                              rings=getAromaticRings(mol),\n                              excludeQueries=[Chem.MolFromSmarts(sma) for sma in ('[a;!#6]',)]))\nprint(matches)\ndrawMolWithRings(mol,matches)\n\n[{6, 7, 8, 9, 11, 13}]\n\n\n\n\n\n\n\n\n\nHopefully there’s some useful stuff in here for you!"
  },
  {
    "objectID": "posts/2021-08-07-rgd-and-highlighting.html",
    "href": "posts/2021-08-07-rgd-and-highlighting.html",
    "title": "R-Group Decomposition and Highlighting",
    "section": "",
    "text": "Note: This is a slightly updated version of a post from 2020\nThis one was inspired by a conversation that happened at the 2020 RDKit (virtual) UGM.\nDuring Dominique Sydow’s presentation she showed some pictures of molecules with some regions of the molecule highlighted (in her case to indicate which kinase pocket they interact with). Dominique had created the images by hand, but I wanted to explore what’s possible using the 2020.09 RDKit release.\nWhat this post is going to demonstrate is doing R-group decomposition (RGD) on a set of molecules that share a common scaffold, generating coordinates for those molecules that are aligned to the scaffold, and generating images of the molecules where the R groups are colored to make them easy to pick out.\nThe final images we create will look like this:\n\n\n\nrgd-and-highlighting1-1.png\n\n\nThe rest of this post will go through the steps to create images like this.\nLet’s get started\n\nfrom rdkit import Chem\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import IPythonConsole\nIPythonConsole.molSize=(450,350)\nfrom rdkit.Chem import rdRGroupDecomposition\nfrom rdkit.Chem import rdqueries\nfrom rdkit.Chem import rdDepictor\nfrom rdkit.Chem.Draw import rdMolDraw2D\nfrom rdkit import Geometry\nrdDepictor.SetPreferCoordGen(True)\nimport pandas as pd\n\nfrom IPython.display import SVG,Image\nfrom ipywidgets import interact\n\nimport rdkit\nprint(rdkit.__version__)\n\n2021.03.4\n\n\nStart by reading in the data we will use. This is a collection of ChEMBL compounds with Ki data measured for CDK2. The dataset includes compounds from a number of different documents and, since these are medchem papers, many of the documents contain groups of compounds that share a common scaffold.\n\ndf = pd.read_csv('../data/cdk2_rgd_dataset.csv')\ndf.head()\n\n\n\n\n\n\n\n\nassay_id\ndoc_id\ndescription\nassay_organism\nassay_chembl_id\naidx\npref_name\nactivity_id\nmolregno\nstandard_relation\n...\nsrc_id (#1)\ntype\nrelation\nvalue\nunits\ntext_value\nstandard_text_value\nstandard_inchi_key\ncanonical_smiles\ncompound_chembl_id\n\n\n\n\n0\n50641\n17759\nInhibitory activity against human CDK2 (Cyclin...\nNaN\nCHEMBL658107\nCLD0\nCyclin-dependent kinase 2\n265814\n68026\n&gt;\n...\n1\nKi\n&gt;\n20.00\nuM\nNaN\nNaN\nRPXWUUDZINQPTJ-UHFFFAOYSA-N\nCNc1nccc(n1)c2sc(C)nc2C\nCHEMBL46474\n\n\n1\n50641\n17759\nInhibitory activity against human CDK2 (Cyclin...\nNaN\nCHEMBL658107\nCLD0\nCyclin-dependent kinase 2\n265817\n67880\n=\n...\n1\nKi\n=\n0.14\nuM\nNaN\nNaN\nGDZTURHUKDAJGD-UHFFFAOYSA-N\nCc1nc(C)c(s1)c2ccnc(Nc3ccc(O)cc3)n2\nCHEMBL442957\n\n\n2\n50641\n17759\nInhibitory activity against human CDK2 (Cyclin...\nNaN\nCHEMBL658107\nCLD0\nCyclin-dependent kinase 2\n267078\n67751\n=\n...\n1\nKi\n=\n6.50\nuM\nNaN\nNaN\nCTFDMGIBHFQWKB-UHFFFAOYSA-N\nCc1nc(C)c(s1)c2ccnc(N)n2\nCHEMBL47302\n\n\n3\n50641\n17759\nInhibitory activity against human CDK2 (Cyclin...\nNaN\nCHEMBL658107\nCLD0\nCyclin-dependent kinase 2\n267081\n67782\n=\n...\n1\nKi\n=\n1.20\nuM\nNaN\nNaN\nHOKDXVAONYXHJK-UHFFFAOYSA-N\nCc1nc(C)c(s1)c2ccnc(Nc3ccccc3F)n2\nCHEMBL297447\n\n\n4\n50641\n17759\nInhibitory activity against human CDK2 (Cyclin...\nNaN\nCHEMBL658107\nCLD0\nCyclin-dependent kinase 2\n267084\n67961\n=\n...\n1\nKi\n=\n0.11\nuM\nNaN\nNaN\nXNKSRGHGPSHYIW-UHFFFAOYSA-N\nCNc1nc(C)c(s1)c2ccnc(Nc3cccc(O)c3)n2\nCHEMBL44119\n\n\n\n\n5 rows × 28 columns\n\n\n\nWe pick a group of compounds by selecting all the rows with a given assay ID:\n\ndf_doc1 = df[df.assay_chembl_id=='CHEMBL827377']\nprint(len(df_doc1))\ndf_doc1.head()\n\n91\n\n\n\n\n\n\n\n\n\nassay_id\ndoc_id\ndescription\nassay_organism\nassay_chembl_id\naidx\npref_name\nactivity_id\nmolregno\nstandard_relation\n...\nsrc_id (#1)\ntype\nrelation\nvalue\nunits\ntext_value\nstandard_text_value\nstandard_inchi_key\ncanonical_smiles\ncompound_chembl_id\n\n\n\n\n47\n302524\n21080\nBinding affinity for human cyclin-dependent ki...\nHomo sapiens\nCHEMBL827377\nCLD0\nCyclin-dependent kinase 2\n1438958\n305637\n&gt;\n...\n1\nKi\n&gt;\n19.95\nuM\nNaN\nNaN\nTWQUOUJLNRGSRZ-UHFFFAOYSA-N\nCc1ccc2c(c3ccnc(Nc4cccc(c4)C(F)(F)F)n3)c(nn2n1...\nCHEMBL182493\n\n\n48\n302524\n21080\nBinding affinity for human cyclin-dependent ki...\nHomo sapiens\nCHEMBL827377\nCLD0\nCyclin-dependent kinase 2\n1438962\n305651\n&gt;\n...\n1\nKi\n&gt;\n19.95\nuM\nNaN\nNaN\nCYHPFZLFUXOCJJ-UHFFFAOYSA-N\nCc1ccc2c(c3ccnc(Nc4ccc(F)c(F)c4)n3)c(nn2n1)c5c...\nCHEMBL182326\n\n\n49\n302524\n21080\nBinding affinity for human cyclin-dependent ki...\nHomo sapiens\nCHEMBL827377\nCLD0\nCyclin-dependent kinase 2\n1439061\n305664\n&gt;\n...\n1\nKi\n&gt;\n19.95\nuM\nNaN\nNaN\nMYSOMHSTKVRJRA-UHFFFAOYSA-N\nCc1ccc2c(c3ccnc(Nc4ccc5OCCOc5c4)n3)c(nn2n1)c6c...\nCHEMBL183064\n\n\n50\n302524\n21080\nBinding affinity for human cyclin-dependent ki...\nHomo sapiens\nCHEMBL827377\nCLD0\nCyclin-dependent kinase 2\n1439063\n305674\n&gt;\n...\n1\nKi\n&gt;\n19.95\nuM\nNaN\nNaN\nVUGNSTAXWJUVEZ-UHFFFAOYSA-N\nCc1ccc2c(c3ccnc(Nc4ccc(Cl)c(c4)C(F)(F)F)n3)c(n...\nCHEMBL361038\n\n\n51\n302524\n21080\nBinding affinity for human cyclin-dependent ki...\nHomo sapiens\nCHEMBL827377\nCLD0\nCyclin-dependent kinase 2\n1439065\n305687\n=\n...\n1\nKi\n=\n3.98\nuM\nNaN\nNaN\nBWBMBCPGRIOUNV-UHFFFAOYSA-N\nC1CC1c2nn3ncccc3c2c4ccnc(Nc5ccccc5)n4\nCHEMBL362296\n\n\n\n\n5 rows × 28 columns\n\n\n\nLook at some of the compounds:\n\nrdDepictor.SetPreferCoordGen(True)\nsmis = df_doc1['canonical_smiles']\ncids = list(df_doc1.compound_chembl_id)\nms = [Chem.MolFromSmiles(x) for x in smis]\nfor m in ms:\n    rdDepictor.Compute2DCoords(m)\nDraw.MolsToGridImage(ms[:12],legends=cids,molsPerRow=4)\n\n\n\n\n\n\n\n\nDefine a core. I’m doing this manually and am only specifically labeling four of the seven R-groups in this set of molecules. The others will be labelled automatically by the RGD code.\n\ncore = Chem.MolFromSmiles('c1cc(-c2c([*:1])nn3nc([*:2])ccc23)nc(N(c2ccc([*:4])c([*:3])c2))n1')\nrdDepictor.SetPreferCoordGen(True)\nrdDepictor.Compute2DCoords(core)\ncore\n\n\n\n\n\n\n\n\nSome pre-processing work we need to do: - convert the dummy atoms in the scaffold into query atoms that match anything - add hydrogens to the molecules - select only the subset of molecules which match the core - set a property on each atom which is used to track its original index (we use this later in the RGD analysis)\n\nps = Chem.AdjustQueryParameters.NoAdjustments()\nps.makeDummiesQueries=True\nqcore = Chem.AdjustQueryProperties(core,ps)\nmhs = [Chem.AddHs(x,addCoords=True) for x in ms]\nmms = [x for x in mhs if x.HasSubstructMatch(qcore)]\nfor m in mms:\n    for atom in m.GetAtoms():\n        atom.SetIntProp(\"SourceAtomIdx\",atom.GetIdx())\nprint(len(mhs),len(mms))\n\n91 91\n\n\nNow do the actual RGD:\n\nrdkit.RDLogger.DisableLog('rdApp.warning')\ngroups,_ = rdRGroupDecomposition.RGroupDecompose([qcore],mms,asSmiles=False,asRows=True)\n\nThis is the function that actually does the work of generating aligned coordinates and creating the image with highlighted R groups\n\nfrom collections import defaultdict\n\ndef highlight_rgroups(mol,row,core,width=350,height=200,\n                      fillRings=True,legend=\"\",\n                      sourceIdxProperty=\"SourceAtomIdx\",\n                      lbls=('R1','R2','R3','R4')):\n    # copy the molecule and core\n    mol = Chem.Mol(mol)\n    core = Chem.Mol(core)\n\n    # -------------------------------------------\n    # include the atom map numbers in the substructure search in order to \n    # try to ensure a good alignment of the molecule to symmetric cores\n    for at in core.GetAtoms():\n        if at.GetAtomMapNum():\n            at.ExpandQuery(rdqueries.IsotopeEqualsQueryAtom(200+at.GetAtomMapNum()))\n            \n    for lbl in row:\n        if lbl=='Core':\n            continue\n        rg = row[lbl]\n        for at in rg.GetAtoms():\n            if not at.GetAtomicNum() and at.GetAtomMapNum() and \\\n            at.HasProp('dummyLabel') and at.GetProp('dummyLabel')==lbl:\n                # attachment point. the atoms connected to this\n                # should be from the molecule\n                for nbr in at.GetNeighbors():\n                    if nbr.HasProp(sourceIdxProperty):\n                        mAt = mol.GetAtomWithIdx(nbr.GetIntProp(sourceIdxProperty))\n                        if mAt.GetIsotope():\n                            mAt.SetIntProp('_OrigIsotope',mAt.GetIsotope())\n                        mAt.SetIsotope(200+at.GetAtomMapNum())\n    # remove unmapped hs so that they don't mess up the depiction\n    rhps = Chem.RemoveHsParameters()\n    rhps.removeMapped = False\n    tmol = Chem.RemoveHs(mol,rhps)\n    rdDepictor.GenerateDepictionMatching2DStructure(tmol,core)\n\n    oldNewAtomMap={}\n    # reset the original isotope values and account for the fact that\n    # removing the Hs changed atom indices\n    for i,at in enumerate(tmol.GetAtoms()):\n        if at.HasProp(sourceIdxProperty):\n            oldNewAtomMap[at.GetIntProp(sourceIdxProperty)] = i\n            if at.HasProp(\"_OrigIsotope\"):\n                at.SetIsotope(at.GetIntProp(\"_OrigIsotope\"))\n                at.ClearProp(\"_OrigIsotope\")\n            else:\n                at.SetIsotope(0)\n      \n    # ------------------\n    #  set up our colormap\n    #   the three choices here are all \"colorblind\" colormaps\n    \n    # \"Tol\" colormap from https://davidmathlogic.com/colorblind\n    colors = [(51,34,136),(17,119,51),(68,170,153),(136,204,238),(221,204,119),(204,102,119),(170,68,153),(136,34,85)]\n    # \"IBM\" colormap from https://davidmathlogic.com/colorblind\n    colors = [(100,143,255),(120,94,240),(220,38,127),(254,97,0),(255,176,0)]\n    # Okabe_Ito colormap from https://jfly.uni-koeln.de/color/\n    colors = [(230,159,0),(86,180,233),(0,158,115),(240,228,66),(0,114,178),(213,94,0),(204,121,167)]\n    for i,x in enumerate(colors):\n        colors[i] = tuple(y/255 for y in x)\n  \n    #----------------------\n    # Identify and store which atoms, bonds, and rings we'll be highlighting\n    highlightatoms = defaultdict(list)\n    highlightbonds = defaultdict(list)\n    atomrads = {}\n    widthmults = {}\n\n    rings = []\n    for i,lbl in enumerate(lbls):    \n        color = colors[i%len(colors)]\n        rquery = row[lbl]\n        Chem.GetSSSR(rquery)\n        rinfo = rquery.GetRingInfo()\n        for at in rquery.GetAtoms():\n            if at.HasProp(sourceIdxProperty):\n                origIdx = oldNewAtomMap[at.GetIntProp(sourceIdxProperty)]\n                highlightatoms[origIdx].append(color)\n                atomrads[origIdx] = 0.4\n        if fillRings:\n            for aring in rinfo.AtomRings():\n                tring = []\n                allFound = True\n                for aid in aring:\n                    at = rquery.GetAtomWithIdx(aid)\n                    if not at.HasProp(sourceIdxProperty):\n                        allFound = False\n                        break\n                    tring.append(oldNewAtomMap[at.GetIntProp(sourceIdxProperty)])\n                if allFound:\n                    rings.append((tring,color))\n        for qbnd in rquery.GetBonds():\n            batom = qbnd.GetBeginAtom()\n            eatom = qbnd.GetEndAtom()\n            if batom.HasProp(sourceIdxProperty) and eatom.HasProp(sourceIdxProperty):\n                origBnd = tmol.GetBondBetweenAtoms(oldNewAtomMap[batom.GetIntProp(sourceIdxProperty)],\n                                                 oldNewAtomMap[eatom.GetIntProp(sourceIdxProperty)])\n                bndIdx = origBnd.GetIdx()\n                highlightbonds[bndIdx].append(color)\n                widthmults[bndIdx] = 2\n\n    d2d = rdMolDraw2D.MolDraw2DCairo(width,height)\n    dos = d2d.drawOptions()\n    dos.useBWAtomPalette()\n                \n    #----------------------\n    # if we are filling rings, go ahead and do that first so that we draw\n    # the molecule on top of the filled rings\n    if fillRings and rings:\n        # a hack to set the molecule scale\n        d2d.DrawMoleculeWithHighlights(tmol,legend,dict(highlightatoms),\n                                       dict(highlightbonds),\n                                       atomrads,widthmults)\n        d2d.ClearDrawing()\n        conf = tmol.GetConformer()\n        for (aring,color) in rings:\n            ps = []\n            for aidx in aring:\n                pos = Geometry.Point2D(conf.GetAtomPosition(aidx))\n                ps.append(pos)\n            d2d.SetFillPolys(True)\n            d2d.SetColour(color)\n            d2d.DrawPolygon(ps)\n        dos.clearBackground = False\n\n    #----------------------\n    # now draw the molecule, with highlights:\n    d2d.DrawMoleculeWithHighlights(tmol,legend,dict(highlightatoms),dict(highlightbonds),\n                                   atomrads,widthmults)\n    d2d.FinishDrawing()\n    png = d2d.GetDrawingText()\n    return png\n\nInteractively try that out on all the molecules in our set:\n\n@interact(idx=range(0,len(ms)))\ndef draw_it(idx=0):\n    m = mms[idx]\n    row = groups[idx]\n    return Image(highlight_rgroups(m,row,qcore,lbls=('R1','R2','R3','R4')))\n\n\n\n\nIt would be cool to do see multiple molecules at once. Unforunately DrawMolsToGridImage() doesn’t support the multiple highlighting we’re doing here (we decided that the API for that would just be too complex; this may change in the future if we can figure out a sensible API for it), so we have to manually combine the images. Fortunately the pillow package makes that easy:\n\nfrom PIL import Image as pilImage\nfrom io import BytesIO\n\ndef draw_multiple(ms,groups,qcore,lbls,legends=None,nPerRow=4,subImageSize=(250,200)):\n    nRows = len(ms)//nPerRow\n    if len(ms)%nPerRow:\n        nRows+=1\n    nCols = nPerRow\n    imgSize = (subImageSize[0]*nCols,subImageSize[1]*nRows)\n    res = pilImage.new('RGB',imgSize)\n    \n    for i,m in enumerate(ms):\n        col = i%nPerRow\n        row = i//nPerRow\n        if legends:\n            legend = legends[i]\n        else:\n            legend = ''\n        png = highlight_rgroups(m,groups[i],qcore,lbls=lbls,legend=legend,\n                               width=subImageSize[0],height=subImageSize[1])\n        bio = BytesIO(png)\n        img = pilImage.open(bio)\n        res.paste(img,box=(col*subImageSize[0],row*subImageSize[1]))\n    bio = BytesIO()\n    res.save(bio,format='PNG')\n    return bio.getvalue()\n\nNow let’s look at the first 16 molecules in the dataset:\n\nImage(draw_multiple(mms[:16],groups,qcore,('R1','R2','R3','R4'),legends=cids,subImageSize=(300,250)))\n\n\n\n\n\n\n\n\nRepeat that analysis with the compounds from another document just to make sure we did everything sufficiently generally:\n\ndf_doc2 = df[df.assay_chembl_id=='CHEMBL658107']\nprint(len(df_doc2))\ndf_doc2.head()\n\n33\n\n\n\n\n\n\n\n\n\nassay_id\ndoc_id\ndescription\nassay_organism\nassay_chembl_id\naidx\npref_name\nactivity_id\nmolregno\nstandard_relation\n...\nsrc_id (#1)\ntype\nrelation\nvalue\nunits\ntext_value\nstandard_text_value\nstandard_inchi_key\ncanonical_smiles\ncompound_chembl_id\n\n\n\n\n0\n50641\n17759\nInhibitory activity against human CDK2 (Cyclin...\nNaN\nCHEMBL658107\nCLD0\nCyclin-dependent kinase 2\n265814\n68026\n&gt;\n...\n1\nKi\n&gt;\n20.00\nuM\nNaN\nNaN\nRPXWUUDZINQPTJ-UHFFFAOYSA-N\nCNc1nccc(n1)c2sc(C)nc2C\nCHEMBL46474\n\n\n1\n50641\n17759\nInhibitory activity against human CDK2 (Cyclin...\nNaN\nCHEMBL658107\nCLD0\nCyclin-dependent kinase 2\n265817\n67880\n=\n...\n1\nKi\n=\n0.14\nuM\nNaN\nNaN\nGDZTURHUKDAJGD-UHFFFAOYSA-N\nCc1nc(C)c(s1)c2ccnc(Nc3ccc(O)cc3)n2\nCHEMBL442957\n\n\n2\n50641\n17759\nInhibitory activity against human CDK2 (Cyclin...\nNaN\nCHEMBL658107\nCLD0\nCyclin-dependent kinase 2\n267078\n67751\n=\n...\n1\nKi\n=\n6.50\nuM\nNaN\nNaN\nCTFDMGIBHFQWKB-UHFFFAOYSA-N\nCc1nc(C)c(s1)c2ccnc(N)n2\nCHEMBL47302\n\n\n3\n50641\n17759\nInhibitory activity against human CDK2 (Cyclin...\nNaN\nCHEMBL658107\nCLD0\nCyclin-dependent kinase 2\n267081\n67782\n=\n...\n1\nKi\n=\n1.20\nuM\nNaN\nNaN\nHOKDXVAONYXHJK-UHFFFAOYSA-N\nCc1nc(C)c(s1)c2ccnc(Nc3ccccc3F)n2\nCHEMBL297447\n\n\n4\n50641\n17759\nInhibitory activity against human CDK2 (Cyclin...\nNaN\nCHEMBL658107\nCLD0\nCyclin-dependent kinase 2\n267084\n67961\n=\n...\n1\nKi\n=\n0.11\nuM\nNaN\nNaN\nXNKSRGHGPSHYIW-UHFFFAOYSA-N\nCNc1nc(C)c(s1)c2ccnc(Nc3cccc(O)c3)n2\nCHEMBL44119\n\n\n\n\n5 rows × 28 columns\n\n\n\n\nsmis = df_doc2['canonical_smiles']\ncids = list(df_doc2.compound_chembl_id)\nms = [Chem.MolFromSmiles(x) for x in smis]\nfor m in ms:\n    rdDepictor.Compute2DCoords(m)\nDraw.MolsToGridImage(ms[:12],legends=cids,molsPerRow=4)\n\n\n\n\n\n\n\n\n\ncore = Chem.MolFromSmiles('Cc1nc([*:3])sc1-c1ccnc(N([*:1])[*:2])n1')\nps = Chem.AdjustQueryParameters.NoAdjustments()\nps.makeDummiesQueries=True\nqcore = Chem.AdjustQueryProperties(core,ps)\nmhs = [Chem.AddHs(x,addCoords=True) for x in ms]\nmms = [x for x in mhs if x.HasSubstructMatch(qcore)]\nfor m in mms:\n    for atom in m.GetAtoms():\n        atom.SetIntProp(\"SourceAtomIdx\",atom.GetIdx())\nprint(len(mhs),len(mms))\nrdDepictor.SetPreferCoordGen(True)\nrdDepictor.Compute2DCoords(qcore)\nqcore\n\n33 33\n\n\n\n\n\n\n\n\n\n\nrdkit.RDLogger.DisableLog('rdApp.warning')\ngroups,_ = rdRGroupDecomposition.RGroupDecompose([qcore],mms,asSmiles=False,asRows=True)\n\n\n@interact(idx=range(0,len(mms)))\ndef draw_it(idx=0):\n    m = mms[idx]\n    row = groups[idx]\n    return Image(highlight_rgroups(m,row,qcore,lbls=('R1','R2','R3')))\n\n\n\n\n\nImage(draw_multiple(mms[:12],groups,qcore,('R1','R2','R3'),subImageSize=(300,250)))\n\n\n\n\n\n\n\n\n\ndf_doc3 = df[df.assay_chembl_id=='CHEMBL3101313']\nprint(len(df_doc3))\ndf_doc3.head()\n\n25\n\n\n\n\n\n\n\n\n\nassay_id\ndoc_id\ndescription\nassay_organism\nassay_chembl_id\naidx\npref_name\nactivity_id\nmolregno\nstandard_relation\n...\nsrc_id (#1)\ntype\nrelation\nvalue\nunits\ntext_value\nstandard_text_value\nstandard_inchi_key\ncanonical_smiles\ncompound_chembl_id\n\n\n\n\n1129\n1281340\n76402\nDisplacement of B-Alexa-Fluor647 from CDK2 (un...\nHomo sapiens\nCHEMBL3101313\nCLD0\nCyclin-dependent kinase 2\n13859835\n1610535\n&lt;\n...\n1\nKi\n&lt;\n0.10\nuM\nNaN\nNaN\nUSOUMMYIFYDJEI-ZZTDINLMSA-N\nCOC[C@H](Cc1ccc(O)cc1)NC(=O)c2cc(C(=O)O)c3cc(\\...\nCHEMBL3099753\n\n\n1130\n1281340\n76402\nDisplacement of B-Alexa-Fluor647 from CDK2 (un...\nHomo sapiens\nCHEMBL3101313\nCLD0\nCyclin-dependent kinase 2\n13859836\n1610534\n=\n...\n1\nKi\n=\n0.10\nuM\nNaN\nNaN\nDLJWCYCMLMVSML-FQEVSTJZSA-N\nCOC[C@H](Cc1ccc(O)cc1)NC(=O)c2cc(C(=O)O)c3cc(c...\nCHEMBL3099752\n\n\n1131\n1281340\n76402\nDisplacement of B-Alexa-Fluor647 from CDK2 (un...\nHomo sapiens\nCHEMBL3101313\nCLD0\nCyclin-dependent kinase 2\n13859837\n1610533\n=\n...\n1\nKi\n=\n0.16\nuM\nNaN\nNaN\nBHBDKGIDYKROMY-BAJJQUEBSA-N\nCN(C)C(=O)[C@H](Cc1ccc(O)cc1)NC(=O)c2cc(C(=O)O...\nCHEMBL3099751\n\n\n1132\n1281340\n76402\nDisplacement of B-Alexa-Fluor647 from CDK2 (un...\nHomo sapiens\nCHEMBL3101313\nCLD0\nCyclin-dependent kinase 2\n13859838\n1610532\n=\n...\n1\nKi\n=\n0.10\nuM\nNaN\nNaN\nIYRLCOILNQBJEJ-ZNOKPGKASA-N\nCNC(=O)[C@H](Cc1ccc(O)cc1)NC(=O)c2cc(C(=O)O)c3...\nCHEMBL3099750\n\n\n1133\n1281340\n76402\nDisplacement of B-Alexa-Fluor647 from CDK2 (un...\nHomo sapiens\nCHEMBL3101313\nCLD0\nCyclin-dependent kinase 2\n13859839\n1610531\n=\n...\n1\nKi\n=\n0.30\nuM\nNaN\nNaN\nDDIHZTFUIFPFOO-OAQYLSRUSA-N\nCCC[C@H](Cc1ccc(O)cc1)NC(=O)c2cc(C(=O)O)c3cc(c...\nCHEMBL3099749\n\n\n\n\n5 rows × 28 columns\n\n\n\nFinally, do another document, just because it’s fun. :-)\n\nsmis = df_doc3['canonical_smiles']\ncids = list(df_doc3.compound_chembl_id)\nms = [Chem.MolFromSmiles(x) for x in smis]\nfor m in ms:\n    rdDepictor.Compute2DCoords(m)\nDraw.MolsToGridImage(ms[:12],legends=cids,molsPerRow=4)\n\n\n\n\n\n\n\n\n\ncore = Chem.MolFromSmiles('OC(=O)c1cc(C(=O)NC(C[*:1])[*:2])nc2ccc([*:3])cc12')\nps = Chem.AdjustQueryParameters.NoAdjustments()\nps.makeDummiesQueries=True\nqcore = Chem.AdjustQueryProperties(core,ps)\nmhs = [Chem.AddHs(x,addCoords=True) for x in ms]\nmms = [x for x in mhs if x.HasSubstructMatch(qcore)]\nfor m in mms:\n    for atom in m.GetAtoms():\n        atom.SetIntProp(\"SourceAtomIdx\",atom.GetIdx())\nprint(len(mhs),len(mms))\nrdDepictor.SetPreferCoordGen(True)\nrdDepictor.Compute2DCoords(qcore)\nqcore\n\n25 22\n\n\n\n\n\n\n\n\n\n\nrdkit.RDLogger.DisableLog('rdApp.warning')\ngroups,_ = rdRGroupDecomposition.RGroupDecompose([qcore],mms,asSmiles=False,asRows=True)\n\n\n@interact(idx=range(0,len(mms)))\ndef draw_it(idx=0):\n    m = mms[idx]\n    row = groups[idx]\n    return Image(highlight_rgroups(m,row,qcore,lbls=('R1','R2','R3')))\n\n\n\n\n\nImage(draw_multiple(mms[:12],groups,qcore,('R1','R2','R3'),subImageSize=(300,250)))"
  },
  {
    "objectID": "posts/2023-01-23-colliding-bits-iii-expanded.html",
    "href": "posts/2023-01-23-colliding-bits-iii-expanded.html",
    "title": "Colliding bits III, expanded",
    "section": "",
    "text": "This is an updated and expanded version of an old post\nI looked at the number of collisions in Morgan fingerprints in an earlier post. The topic came up again in discussions about the recent post on Morgan fingerprint stats, which used a much larger data set.\nHere I repeat the earlier collision analysis using a dataset of 4 million compounds and look at a number of different fingerprint types – Morgan fingeprints of various radii, RDKit fingerprints, atom pair fingerprints, and topological torsion fingerprints– folded to a set of different sizes – 64, 128, 256, 512, 1K, 2K, 4K, 8K, 16K.\nAfter evaluating the number of collisions, I look at the impact that fingerprint size has on computed similarity values.\nTL;DR version: The conclusions match what I observed before, there are a fair number of collisions at fingerprint sizes below 4K. As you would expect, fingerprints with more bits set have more collisions.\nHere’s a table with some of the comparisons between Tanimoto similarities calculated with folded fingerprint and those with unfolded fingerprints (the full table is towards the end of the post). In the table d refers to the difference between similarities calculated with the folded and unfolded (=“no” collisions) fingerprint at a particular size. Positive values of d indicate that the similarity with the folded fingerprint is higher than that with the unfolded fingerprint. SpearmanR is the Spearman correlation coefficient between the folded and unfolded similarities.\n\n\n\nnBits\nfingerprint\nSpearmanR\nmean(d)\nstd(d)\n90% |d|\n\n\n\n\n16384\nmfp1\n1.000\n0.00023\n0.0025\n0\n\n\n16384\nmfp2\n0.999\n0.00085\n0.0036\n0.0034\n\n\n16384\nmfp3\n0.999\n0.0014\n0.0038\n0.0056\n\n\n16384\nrdk5\n1.000\n0.0054\n0.0046\n0.012\n\n\n16384\nhashap\n0.997\n0.0066\n0.0072\n0.016\n\n\n16384\nhashtt\n0.999\n0.0024\n0.0074\n0.011\n\n\n1024\nmfp1\n0.989\n0.0067\n0.016\n0.028\n\n\n1024\nmfp2\n0.990\n0.014\n0.016\n0.036\n\n\n1024\nmfp3\n0.987\n0.022\n0.017\n0.044\n\n\n1024\nrdk5\n0.981\n0.085\n0.049\n0.15\n\n\n1024\nhashap\n0.874\n0.1\n0.051\n0.17\n\n\n1024\nhashtt\n0.983\n0.025\n0.026\n0.061\n\n\n512\nmfp1\n0.980\n0.013\n0.021\n0.044\n\n\n512\nmfp2\n0.979\n0.028\n0.023\n0.059\n\n\n512\nmfp3\n0.972\n0.044\n0.026\n0.078\n\n\n512\nrdk5\n0.929\n0.16\n0.09\n0.28\n\n\n512\nhashap\n0.702\n0.19\n0.083\n0.3\n\n\n512\nhashtt\n0.967\n0.046\n0.037\n0.096\n\n\n128\nmfp1\n0.918\n0.049\n0.043\n0.11\n\n\n128\nmfp2\n0.897\n0.11\n0.054\n0.18\n\n\n128\nmfp3\n0.839\n0.17\n0.066\n0.25\n\n\n128\nrdk5\n0.528\n0.42\n0.2\n0.68\n\n\n128\nhashap\n0.343\n0.42\n0.12\n0.57\n\n\n128\nhashtt\n0.828\n0.17\n0.085\n0.28\n\n\n64\nmfp1\n0.832\n0.099\n0.064\n0.18\n\n\n64\nmfp2\n0.771\n0.2\n0.083\n0.31\n\n\n64\nmfp3\n0.642\n0.31\n0.1\n0.44\n\n\n64\nrdk5\n0.235\n0.5\n0.22\n0.77\n\n\n64\nhashap\n0.158\n0.51\n0.13\n0.65\n\n\n64\nhashtt\n0.672\n0.28\n0.12\n0.43\n\n\n\nDown to a fingerprint size of 1024 bits all the fingerprints except hashap have an R of &gt;0.90 and comparatively low deviations (last column). With the very small 128 bit fingerprints only the mfp1 and mfp2 (both of which don’t set many bits) are showing halfway decent performance, and with 64bit fingerprints the deviations are large for all fingerprint types (though the R values for mfp1 and mfp2 are surprisingly high).\nThere are a number of things worth further exploration here, but those will be other blog posts.\n\nfrom rdkit import Chem,DataStructs\nimport time,random,gzip,pickle,copy\nimport numpy as np\nfrom collections import defaultdict\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem import rdFingerprintGenerator\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit import DataStructs\nimport rdkit\n%pylab inline\nplt.style.use('tableau-colorblind10')\nplt.rcParams['font.size'] = '14'\nprint(rdkit.__version__)\nimport time\nprint(time.asctime())\n\n%pylab is deprecated, use %matplotlib inline and import the required libraries.\nPopulating the interactive namespace from numpy and matplotlib\n2022.09.1\nWed Jan 18 13:22:54 2023\n\n\n/localhome/glandrum/.conda/envs/py310_rdkit/lib/python3.10/site-packages/IPython/core/magics/pylab.py:162: UserWarning: pylab import has clobbered these variables: ['random', 'copy']\n`%matplotlib` prevents importing * from pylab and numpy\n  warn(\"pylab import has clobbered these variables: %s\"  % clobbered +\n\n\n\nGenerating the data\nFor test data I’ll use the 4 million random compounds from PubChem with &lt;=50 heavy atoms. I constructed the set of compounds by downloading the full pubchem compound set (on 8 Jan, 2023), and picking 10 million random lines using an awk script.\n\nfilen='/localhome/glandrum/Datasets/PubChem/pubchem_compound_random_10000000.txt.gz'\n\nLoop over the molecules and build fingerprints of multiple radii and folded lengths.\n\ngens = [('mfp1',lambda fpsize: rdFingerprintGenerator.GetMorganGenerator(radius=1,fpSize=fpsize)),\n        ('mfp2',lambda fpsize: rdFingerprintGenerator.GetMorganGenerator(radius=2,fpSize=fpsize)),\n         ('mfp3',lambda fpsize: rdFingerprintGenerator.GetMorganGenerator(radius=3,fpSize=fpsize)),\n         ('rdk5',lambda fpsize: rdFingerprintGenerator.GetRDKitFPGenerator(maxPath=5,fpSize=fpsize)),\n         ('hashap',lambda fpsize: rdFingerprintGenerator.GetAtomPairGenerator(fpSize=fpsize)),\n         ('hashtt',lambda fpsize: rdFingerprintGenerator.GetTopologicalTorsionGenerator(fpSize=fpsize)),\n         ]\n\n\nfrom rdkit import RDLogger\nRDLogger.DisableLog('rdApp.*')\nimport copy\nhistory={} # we will use this to see how quickly the results converge\ncounts=defaultdict(lambda:defaultdict(int))\nt1 = time.time()\ni = 0\nwith gzip.open(filen,'rb') as inf:\n    for inl in inf:\n        try:\n            nm,smi = inl.strip().split()\n        except:\n            break\n        m = Chem.MolFromSmiles(smi)\n        if m is None or m.GetNumHeavyAtoms()&gt;50:\n            continue\n        i+=1\n        for nm,fpg in gens:\n            fpgen = fpg(1024) # doesn't matter here\n            onbits=len(fpgen.GetSparseFingerprint(m).GetOnBits())\n            counts[nm][onbits]+=1\n            for l in 64,128,256,512,1024,2048,4096,8192,16384:\n                fpnm = f'{nm}-{l}'\n                fpgen = fpg(l)\n                dbits = onbits-fpgen.GetFingerprint(m).GetNumOnBits()\n                counts[fpnm][dbits]+=1\n        if not i%50000:\n            t2 = time.time()\n            print(f\"Done {i} in {t2-t1:.2f} sec\")\n        if not i%100000:\n            history[i] = copy.deepcopy(counts)\n        if i&gt;=4000000:\n            break\n\nDone 50000 in 214.60 sec\nDone 100000 in 475.92 sec\nDone 150000 in 790.69 sec\nDone 200000 in 1065.40 sec\nDone 250000 in 1350.49 sec\nDone 300000 in 1663.03 sec\nDone 350000 in 1979.41 sec\nDone 400000 in 2289.94 sec\nDone 450000 in 2584.58 sec\nDone 500000 in 2889.27 sec\nDone 550000 in 3156.72 sec\nDone 600000 in 3416.83 sec\nDone 650000 in 3673.20 sec\nDone 700000 in 3930.41 sec\nDone 750000 in 4232.50 sec\nDone 800000 in 4518.37 sec\nDone 850000 in 4788.19 sec\nDone 900000 in 5080.44 sec\nDone 950000 in 5272.51 sec\nDone 1000000 in 5507.97 sec\nDone 1050000 in 5831.47 sec\nDone 1100000 in 6124.22 sec\nDone 1150000 in 6405.13 sec\nDone 1200000 in 6699.62 sec\nDone 1250000 in 7004.17 sec\nDone 1300000 in 7264.67 sec\nDone 1350000 in 7525.13 sec\nDone 1400000 in 7779.24 sec\nDone 1450000 in 8045.30 sec\nDone 1500000 in 8314.90 sec\nDone 1550000 in 8643.98 sec\nDone 1600000 in 8978.91 sec\nDone 1650000 in 9292.37 sec\nDone 1700000 in 9596.19 sec\nDone 1750000 in 9854.10 sec\nDone 1800000 in 10134.48 sec\nDone 1850000 in 10407.01 sec\nDone 1900000 in 10729.17 sec\nDone 1950000 in 11005.57 sec\nDone 2000000 in 11183.76 sec\nDone 2050000 in 11527.20 sec\nDone 2100000 in 11831.40 sec\nDone 2150000 in 12141.98 sec\nDone 2200000 in 12413.20 sec\nDone 2250000 in 12708.59 sec\nDone 2300000 in 12979.10 sec\nDone 2350000 in 13263.71 sec\nDone 2400000 in 13504.37 sec\nDone 2450000 in 13755.21 sec\nDone 2500000 in 13974.78 sec\nDone 2550000 in 14282.01 sec\nDone 2600000 in 14586.37 sec\nDone 2650000 in 14844.31 sec\nDone 2700000 in 15153.73 sec\nDone 2750000 in 15473.13 sec\nDone 2800000 in 15783.14 sec\nDone 2850000 in 16093.12 sec\n\n\n\ncounts.keys()\n\ndict_keys(['mfp1', 'mfp1-64', 'mfp1-128', 'mfp1-256', 'mfp1-512', 'mfp1-1024', 'mfp1-2048', 'mfp1-4096', 'mfp1-8192', 'mfp1-16384', 'mfp2', 'mfp2-64', 'mfp2-128', 'mfp2-256', 'mfp2-512', 'mfp2-1024', 'mfp2-2048', 'mfp2-4096', 'mfp2-8192', 'mfp2-16384', 'mfp3', 'mfp3-64', 'mfp3-128', 'mfp3-256', 'mfp3-512', 'mfp3-1024', 'mfp3-2048', 'mfp3-4096', 'mfp3-8192', 'mfp3-16384', 'rdk5', 'rdk5-64', 'rdk5-128', 'rdk5-256', 'rdk5-512', 'rdk5-1024', 'rdk5-2048', 'rdk5-4096', 'rdk5-8192', 'rdk5-16384', 'hashap', 'hashap-64', 'hashap-128', 'hashap-256', 'hashap-512', 'hashap-1024', 'hashap-2048', 'hashap-4096', 'hashap-8192', 'hashap-16384', 'hashtt', 'hashtt-64', 'hashtt-128', 'hashtt-256', 'hashtt-512', 'hashtt-1024', 'hashtt-2048', 'hashtt-4096', 'hashtt-8192', 'hashtt-16384'])\n\n\n\npickle.dump(dict(counts),gzip.open('../data/fp_collision_counts.pkl.gz','wb+'))\n\n\nfor k,d in history.items():\n    history[k] = dict(d)\npickle.dump(dict(history),gzip.open('../data/fp_collision_counts.history.pkl.gz','wb+'))\n\n\nwith gzip.open('../data/fp_collision_counts.pkl.gz','rb') as inf:\n    counts = pickle.load(inf)\nwith gzip.open('../data/fp_collision_counts.history.pkl.gz','rb') as inf:\n    history = pickle.load(inf)\n\n\n\nQuantifying the number of collisions\nNow plot histograms of the numbers of collisions along with the distributions of the number of bits set in the non-folded FPs\n\nallCounts = (16384, 8192,4096,2048,1024,) #512,256,128,64)\n\nfigure(figsize=(16,5*len(allCounts)))\n\npidx=1\n#----------------------------\nfor nbits in allCounts:\n    subplot(len(allCounts),2,pidx)\n    pidx+=1\n    maxCollisions = max(counts[f'mfp3-{allCounts[-1]}'].keys())+1\n    d1=np.zeros(maxCollisions,int)\n    for k,v in counts[f'mfp1-{nbits}'].items():\n        d1[k]=v\n    d2=np.zeros(maxCollisions,int)\n    for k,v in counts[f'mfp2-{nbits}'].items():\n        d2[k]=v\n    d3=np.zeros(maxCollisions,int)\n    for k,v in counts[f'mfp3-{nbits}'].items():\n        d3[k]=v\n    barWidth=.25\n    locs = np.array(range(maxCollisions))\n\n    bar(locs,d1,barWidth,label=\"r=1\")\n    bar(locs+barWidth,d2,barWidth,label=\"r=2\")\n    bar(locs+2*barWidth,d3,barWidth,label=\"r=3\")\n    \n    #_=hist((d1,d2,d3),bins=20,log=True,label=(\"r=1\",\"r=2\",\"r=3\"))\n    title('%d bits'%nbits)\n    _=yscale(\"log\")\n    _=legend()\n    if nbits == allCounts[-1]:\n        xlabel('num collisions')\n    \n    subplot(len(allCounts),2,pidx)\n    pidx+=1\n    itms = list(sorted(counts['mfp1'].items()))\n    plot([x for x,y in itms],[y for x,y in itms],'.-',label=\n        \"r=1\")\n    itms = list(sorted(counts['mfp2'].items()))\n    plot([x for x,y in itms],[y for x,y in itms],'.-',label=\n        \"r=2\")\n    itms = list(sorted(counts['mfp3'].items()))\n    plot([x for x,y in itms],[y for x,y in itms],'.-',label=\n        \"r=3\")\n    if nbits == allCounts[-1]:\n        _=xlabel(\"num bits set\")\n    _=ylabel(\"count\")\n    _=legend()\n    \n    \n\n\n\n\n\n\n\n\nSo, there are definitely some collisions, particularly with radius 3 fingerprints with 1K bits.\nThe bimodal character of the mfp2 and mfp3 fingerprints is worth following up on: that wasn’t observed in the earlier post, which used a set of compounds from ZINC\nLook the short Morgan fingerprints\n\nallCounts = (512,256,128,64)\n\nfigure(figsize=(16,5*len(allCounts)))\n\npidx=1\n#----------------------------\nfor nbits in allCounts:\n    subplot(len(allCounts),2,pidx)\n    pidx+=1\n    maxCollisions = max(counts[f'mfp3-{allCounts[-1]}'].keys())+1\n    d1=np.zeros(maxCollisions,int)\n    for k,v in counts[f'mfp1-{nbits}'].items():\n        d1[k]=v\n    d2=np.zeros(maxCollisions,int)\n    for k,v in counts[f'mfp2-{nbits}'].items():\n        d2[k]=v\n    d3=np.zeros(maxCollisions,int)\n    for k,v in counts[f'mfp3-{nbits}'].items():\n        d3[k]=v\n    barWidth=.25\n    locs = np.array(range(maxCollisions))\n\n    bar(locs,d1,barWidth,label=\"r=1\")\n    bar(locs+barWidth,d2,barWidth,label=\"r=2\")\n    bar(locs+2*barWidth,d3,barWidth,label=\"r=3\")\n    \n    #_=hist((d1,d2,d3),bins=20,log=True,label=(\"r=1\",\"r=2\",\"r=3\"))\n    title('%d bits'%nbits)\n    _=yscale(\"log\")\n    _=legend()\n    if nbits == allCounts[-1]:\n        xlabel('num collisions')\n\n    subplot(len(allCounts),2,pidx)\n    pidx+=1\n    itms = list(sorted(counts['mfp1'].items()))\n    plot([x for x,y in itms],[y for x,y in itms],'.-',label=\n        \"r=1\")\n    itms = list(sorted(counts['mfp2'].items()))\n    plot([x for x,y in itms],[y for x,y in itms],'.-',label=\n        \"r=2\")\n    itms = list(sorted(counts['mfp3'].items()))\n    plot([x for x,y in itms],[y for x,y in itms],'.-',label=\n        \"r=3\")\n    if nbits == allCounts[-1]:\n        _=xlabel(\"num bits set\")\n    _=ylabel(\"count\")\n    _=legend()\n    \n    \n\n\n\n\n\n\n\n\nLook at the other fingerprint types. We’ll do this a little differently because of the scales.\nStart with the number of bits set:\n\nfigsize(8,5)\n\nitms = list(sorted(counts['hashtt'].items()))\nplot([x for x,y in itms],[y for x,y in itms],'.-',label=\n    \"hashtt\")\nitms = list(sorted(counts['hashap'].items()))\nplot([x for x,y in itms],[y for x,y in itms],'.-',label=\n    \"hashap\")\nitms = list(sorted(counts['rdk5'].items()))\nplot([x for x,y in itms],[y for x,y in itms],'.-',label=\n    \"rdk5\")\nif nbits == allCounts[-1]:\n    _=xlabel(\"num bits set\")\n_=ylabel(\"count\")\n_=legend()\n    \n    \n\n\n\n\n\n\n\n\nBoth the hashap and hadhtt distributions show more than one peak. Another thing to follow up on…\n\nallCounts = (16384, 8192,4096,2048,1024,) #512,256,128,64)\n\nfigure(figsize=(16,5*len(allCounts)))\n\npidx=1\n#----------------------------\nfor nbits in allCounts:\n    for fpt in ('hashtt','hashap','rdk5'):\n        subplot(len(allCounts),3,pidx)\n        pidx+=1\n        maxCollisions = max(counts[f'{fpt}-{allCounts[-1]}'].keys())+1\n        d1=np.zeros(maxCollisions,int)\n        for k,v in counts[f'{fpt}-{nbits}'].items():\n            d1[k]=v\n        barWidth=.25\n        locs = np.array(range(maxCollisions))\n\n        bar(locs,d1,barWidth,label=fpt)    \n        title(f'{fpt}-{nbits}')\n        _=yscale(\"log\")\n        _=legend()\n        if nbits == allCounts[-1]:\n            xlabel('num collisions')\n\n\n\n\n\n\n\n\nThe topological torsion FPs don’t have a huge number of collisions, but both atom pair and RDKit fingerprints really do have collisions, as one would expect given the number of set bits.\nLook at the percentage of compounds with &lt;= a particular number of collisions\n\nbcounts = (64,128,256,512,1024,2048,4096,8192,16384)\nccounts = list(range(11))\n\n\nrow = ('length','fingerprint',)+tuple(str(x) for x in ccounts)\ndivider = ['-'*len(k) for k in row]\nprint('| '+' | '.join(row)+' |')\nprint('| '+' | '.join(divider)+' |')\n\nfor bc in reversed(bcounts):\n    for nm,fpg in gens:\n        row = [str(bc),nm]\n        fpn = f'{nm}-{bc}'\n        nmols = np.sum(np.fromiter((x for x in counts[fpn].values()),int))\n        accum = 0\n        for ccount in ccounts:\n            accum += counts[fpn].get(ccount,0)\n            row.append(f'{accum/nmols:.3f}')\n        print('| '+' | '.join(row)+' |')\n            \n\n| length | fingerprint | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 |\n| ------ | ----------- | - | - | - | - | - | - | - | - | - | - | -- |\n| 16384 | mfp1 | 0.991 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 |\n| 16384 | mfp2 | 0.956 | 0.999 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 |\n| 16384 | mfp3 | 0.900 | 0.993 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 |\n| 16384 | rdk5 | 0.181 | 0.332 | 0.460 | 0.566 | 0.654 | 0.724 | 0.780 | 0.826 | 0.863 | 0.892 | 0.916 |\n| 16384 | hashap | 0.335 | 0.519 | 0.651 | 0.746 | 0.816 | 0.867 | 0.905 | 0.931 | 0.950 | 0.964 | 0.974 |\n| 16384 | hashtt | 0.898 | 0.988 | 0.999 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 |\n| 8192 | mfp1 | 0.969 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 |\n| 8192 | mfp2 | 0.906 | 0.994 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 |\n| 8192 | mfp3 | 0.808 | 0.974 | 0.997 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 |\n| 8192 | rdk5 | 0.076 | 0.177 | 0.266 | 0.346 | 0.420 | 0.486 | 0.545 | 0.597 | 0.645 | 0.687 | 0.725 |\n| 8192 | hashap | 0.295 | 0.467 | 0.594 | 0.692 | 0.766 | 0.822 | 0.865 | 0.897 | 0.921 | 0.939 | 0.952 |\n| 8192 | hashtt | 0.825 | 0.971 | 0.996 | 0.999 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 |\n| 4096 | mfp1 | 0.950 | 0.998 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 |\n| 4096 | mfp2 | 0.829 | 0.980 | 0.998 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 |\n| 4096 | mfp3 | 0.673 | 0.922 | 0.985 | 0.997 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 |\n| 4096 | rdk5 | 0.034 | 0.077 | 0.122 | 0.166 | 0.210 | 0.254 | 0.296 | 0.336 | 0.375 | 0.412 | 0.447 |\n| 4096 | hashap | 0.156 | 0.270 | 0.370 | 0.455 | 0.529 | 0.592 | 0.646 | 0.693 | 0.733 | 0.768 | 0.798 |\n| 4096 | hashtt | 0.765 | 0.951 | 0.992 | 0.999 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 |\n| 2048 | mfp1 | 0.740 | 0.975 | 0.998 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 |\n| 2048 | mfp2 | 0.564 | 0.874 | 0.971 | 0.994 | 0.999 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 |\n| 2048 | mfp3 | 0.385 | 0.720 | 0.892 | 0.963 | 0.988 | 0.996 | 0.999 | 1.000 | 1.000 | 1.000 | 1.000 |\n| 2048 | rdk5 | 0.017 | 0.037 | 0.058 | 0.080 | 0.101 | 0.124 | 0.146 | 0.169 | 0.191 | 0.214 | 0.236 |\n| 2048 | hashap | 0.076 | 0.132 | 0.185 | 0.235 | 0.281 | 0.323 | 0.362 | 0.397 | 0.429 | 0.459 | 0.487 |\n| 2048 | hashtt | 0.662 | 0.900 | 0.974 | 0.994 | 0.999 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 |\n| 1024 | mfp1 | 0.674 | 0.942 | 0.992 | 0.999 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 |\n| 1024 | mfp2 | 0.393 | 0.728 | 0.898 | 0.965 | 0.989 | 0.997 | 0.999 | 1.000 | 1.000 | 1.000 | 1.000 |\n| 1024 | mfp3 | 0.207 | 0.476 | 0.694 | 0.835 | 0.917 | 0.960 | 0.981 | 0.991 | 0.996 | 0.998 | 0.999 |\n| 1024 | rdk5 | 0.007 | 0.017 | 0.026 | 0.037 | 0.047 | 0.057 | 0.067 | 0.077 | 0.088 | 0.098 | 0.109 |\n| 1024 | hashap | 0.037 | 0.066 | 0.095 | 0.122 | 0.148 | 0.174 | 0.199 | 0.223 | 0.246 | 0.269 | 0.291 |\n| 1024 | hashtt | 0.448 | 0.724 | 0.872 | 0.944 | 0.977 | 0.991 | 0.996 | 0.999 | 0.999 | 1.000 | 1.000 |\n| 512 | mfp1 | 0.501 | 0.835 | 0.956 | 0.989 | 0.998 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 |\n| 512 | mfp2 | 0.184 | 0.445 | 0.671 | 0.824 | 0.911 | 0.957 | 0.980 | 0.991 | 0.996 | 0.999 | 0.999 |\n| 512 | mfp3 | 0.074 | 0.209 | 0.371 | 0.527 | 0.662 | 0.767 | 0.844 | 0.899 | 0.936 | 0.960 | 0.976 |\n| 512 | rdk5 | 0.004 | 0.009 | 0.013 | 0.018 | 0.024 | 0.029 | 0.035 | 0.040 | 0.046 | 0.051 | 0.056 |\n| 512 | hashap | 0.013 | 0.025 | 0.037 | 0.050 | 0.063 | 0.077 | 0.091 | 0.105 | 0.119 | 0.133 | 0.147 |\n| 512 | hashtt | 0.286 | 0.537 | 0.721 | 0.839 | 0.911 | 0.951 | 0.973 | 0.985 | 0.992 | 0.996 | 0.998 |\n| 256 | mfp1 | 0.312 | 0.659 | 0.864 | 0.952 | 0.984 | 0.995 | 0.999 | 1.000 | 1.000 | 1.000 | 1.000 |\n| 256 | mfp2 | 0.060 | 0.186 | 0.348 | 0.511 | 0.653 | 0.764 | 0.846 | 0.902 | 0.939 | 0.963 | 0.978 |\n| 256 | mfp3 | 0.022 | 0.066 | 0.134 | 0.220 | 0.314 | 0.409 | 0.500 | 0.584 | 0.659 | 0.726 | 0.783 |\n| 256 | rdk5 | 0.003 | 0.005 | 0.007 | 0.009 | 0.011 | 0.014 | 0.016 | 0.019 | 0.021 | 0.024 | 0.027 |\n| 256 | hashap | 0.004 | 0.007 | 0.010 | 0.013 | 0.017 | 0.021 | 0.025 | 0.030 | 0.034 | 0.039 | 0.045 |\n| 256 | hashtt | 0.105 | 0.234 | 0.373 | 0.501 | 0.612 | 0.706 | 0.782 | 0.842 | 0.887 | 0.920 | 0.944 |\n| 128 | mfp1 | 0.117 | 0.324 | 0.546 | 0.726 | 0.846 | 0.918 | 0.958 | 0.980 | 0.991 | 0.996 | 0.998 |\n| 128 | mfp2 | 0.015 | 0.049 | 0.106 | 0.184 | 0.275 | 0.373 | 0.469 | 0.560 | 0.642 | 0.714 | 0.777 |\n| 128 | mfp3 | 0.007 | 0.018 | 0.036 | 0.062 | 0.095 | 0.136 | 0.183 | 0.235 | 0.290 | 0.345 | 0.399 |\n| 128 | rdk5 | 0.002 | 0.002 | 0.003 | 0.004 | 0.005 | 0.006 | 0.007 | 0.008 | 0.009 | 0.010 | 0.011 |\n| 128 | hashap | 0.002 | 0.003 | 0.005 | 0.006 | 0.008 | 0.010 | 0.012 | 0.014 | 0.016 | 0.018 | 0.021 |\n| 128 | hashtt | 0.035 | 0.079 | 0.139 | 0.208 | 0.283 | 0.357 | 0.429 | 0.497 | 0.561 | 0.620 | 0.675 |\n| 64 | mfp1 | 0.024 | 0.083 | 0.179 | 0.302 | 0.435 | 0.564 | 0.677 | 0.771 | 0.843 | 0.896 | 0.932 |\n| 64 | mfp2 | 0.004 | 0.011 | 0.025 | 0.044 | 0.072 | 0.107 | 0.149 | 0.199 | 0.254 | 0.312 | 0.371 |\n| 64 | mfp3 | 0.003 | 0.006 | 0.011 | 0.017 | 0.026 | 0.037 | 0.050 | 0.066 | 0.084 | 0.105 | 0.129 |\n| 64 | rdk5 | 0.001 | 0.002 | 0.002 | 0.002 | 0.003 | 0.003 | 0.004 | 0.004 | 0.005 | 0.005 | 0.006 |\n| 64 | hashap | 0.001 | 0.002 | 0.003 | 0.004 | 0.004 | 0.005 | 0.006 | 0.007 | 0.008 | 0.009 | 0.010 |\n| 64 | hashtt | 0.016 | 0.034 | 0.059 | 0.092 | 0.132 | 0.177 | 0.227 | 0.279 | 0.331 | 0.382 | 0.431 |\n\n\nNotice that the high-density fingerprints - rdk5 and hashap - have collisions for the majority of the compounds even with a 16K fingerprint.\n\n\nImpact on similarity\nNow that we have a sense of how many collisions there are, lets look at the impact those collisions have on molecular similarity.\nAs a data set we’ll use a set of 50000 pairs of ChEMBL30 molecules with a similarity of at least 0.55 using a count-based morgan fingerprint with radius 1 (MFP1). The jupyter notebook used to generate this data can be found here.\n\npairs = []\nfor l in gzip.open('../data/chembl30_50K.mfp1.pairs.txt.gz','rt'):\n    l = l.split('\\t')\n    pairs.append([Chem.MolFromSmiles(l[1]),Chem.MolFromSmiles(l[3])])\n\n\nsims = defaultdict(list)\nfor nm,fpgen in gens:\n    print(f'Doing {nm}')\n    fpg = fpgen(1024) # size is irrelevant here\n    for m1,m2 in pairs:\n        fp1 = fpg.GetSparseFingerprint(m1)\n        fp2 = fpg.GetSparseFingerprint(m2)\n        sims[nm].append(DataStructs.TanimotoSimilarity(fp1,fp2))\n    for l in 64,128,256,512,1024,2048,4096,8192,16384:\n        fpn = f'{nm}-{l}'\n        fpg = fpgen(l)\n        for m1,m2 in pairs:\n            fp1 = fpg.GetFingerprint(m1)\n            fp2 = fpg.GetFingerprint(m2)\n            sims[fpn].append(DataStructs.TanimotoSimilarity(fp1,fp2))\n\nDoing mfp1\nDoing mfp2\nDoing mfp3\nDoing rdk5\nDoing hashap\nDoing hashtt\n\n\n\npickle.dump(dict(sims),gzip.open('../data/fp_collision_sims.pkl.gz','wb+'))\n\n\nsims = pickle.load(gzip.open('../data/fp_collision_sims.pkl.gz','rb'))\n\n\nrads = (1,2,3)\nbcounts = (64,128,256,512,1024,2048,4096,8192,16384)\nfigsize(3*6,len(bcounts)*6)\n\nplt = 1\nfor i,cnt in enumerate(reversed(bcounts)):\n    for j,rad in enumerate(rads):\n        subplot(len(bcounts),3,plt)\n        plt += 1\n        plot((0,1),(0,1),'k-')\n        hexbin(sims[f'mfp{rad}'],sims[f'mfp{rad}-{cnt}'],bins='log')\n        xlabel('no collisions')\n        ylabel(f'{cnt} bits')\n        title(f'radius = {rad}')\n\n\n\n\n\n\n\n\n\nbcounts = (64,128,256,512,1024,2048,4096,8192,16384)\nfigsize(3*6,len(bcounts)*6)\n\nplt = 1\nfor i,cnt in enumerate(reversed(bcounts)):\n    for j,nm in enumerate(('hashtt','hashap','rdk5')):\n        subplot(len(bcounts),3,plt)\n        plt += 1\n        plot((0,1),(0,1),'k-')\n        hexbin(sims[f'{nm}'],sims[f'{nm}-{cnt}'],bins='log')       \n        xlabel('no collisions')\n        ylabel(f'{cnt} bits')\n        title(f'{nm}')\n\n\n\n\n\n\n\n\nDo a statistical comparison of the similarity distributions\n\nfrom scipy.stats import spearmanr\n\nrow = ('nBits','fingerprint','SpearmanR','mean(d)','std(d)','90% \\\\|d\\\\|')\ndivider = ['-'*len(k) for k in row]\nprint('| '+' | '.join(row)+' |')\nprint('| '+' | '.join(divider)+' |')\n        \n\nrads = (1,2,3)\nbcounts = (64,128,256,512,1024,2048,4096,8192,16384)\nfor i,cnt in enumerate(reversed(bcounts)):\n    for j,(nm,fpg) in enumerate(gens):\n        d1 = numpy.array(sims[nm])\n        d2 = numpy.array(sims[f'{nm}-{cnt}'])\n        delt = d2-d1\n        row = [str(cnt),nm,f'{spearmanr(d1,d2).correlation:.3f}',f'{np.mean(delt):.2g}',\n               f'{np.std(delt):.2g}',f'{np.quantile(np.abs(delt),0.9):.2g}']\n        print('| '+' | '.join(row)+' |')\n\n| nBits | fingerprint | SpearmanR | mean(d) | std(d) | 90% \\|d\\| |\n| ----- | ----------- | --------- | ------- | ------ | --------- |\n| 16384 | mfp1 | 1.000 | 0.00023 | 0.0025 | 0 |\n| 16384 | mfp2 | 0.999 | 0.00085 | 0.0036 | 0.0034 |\n| 16384 | mfp3 | 0.999 | 0.0014 | 0.0038 | 0.0056 |\n| 16384 | rdk5 | 1.000 | 0.0054 | 0.0046 | 0.012 |\n| 16384 | hashap | 0.997 | 0.0066 | 0.0072 | 0.016 |\n| 16384 | hashtt | 0.999 | 0.0024 | 0.0074 | 0.011 |\n| 8192 | mfp1 | 0.999 | 0.00089 | 0.005 | 0 |\n| 8192 | mfp2 | 0.999 | 0.0017 | 0.0051 | 0.007 |\n| 8192 | mfp3 | 0.999 | 0.0027 | 0.0054 | 0.011 |\n| 8192 | rdk5 | 0.999 | 0.011 | 0.008 | 0.022 |\n| 8192 | hashap | 0.996 | 0.0089 | 0.0084 | 0.02 |\n| 8192 | hashtt | 0.997 | 0.0046 | 0.01 | 0.019 |\n| 4096 | mfp1 | 0.998 | 0.0016 | 0.0069 | 0.0079 |\n| 4096 | mfp2 | 0.998 | 0.0033 | 0.0073 | 0.014 |\n| 4096 | mfp3 | 0.997 | 0.0054 | 0.0077 | 0.016 |\n| 4096 | rdk5 | 0.998 | 0.022 | 0.014 | 0.041 |\n| 4096 | hashap | 0.988 | 0.022 | 0.015 | 0.042 |\n| 4096 | hashtt | 0.996 | 0.0068 | 0.013 | 0.024 |\n| 2048 | mfp1 | 0.993 | 0.0042 | 0.013 | 0.02 |\n| 2048 | mfp2 | 0.995 | 0.0069 | 0.012 | 0.023 |\n| 2048 | mfp3 | 0.994 | 0.011 | 0.012 | 0.027 |\n| 2048 | rdk5 | 0.995 | 0.044 | 0.026 | 0.08 |\n| 2048 | hashap | 0.956 | 0.05 | 0.029 | 0.088 |\n| 2048 | hashtt | 0.993 | 0.011 | 0.016 | 0.034 |\n| 1024 | mfp1 | 0.989 | 0.0067 | 0.016 | 0.028 |\n| 1024 | mfp2 | 0.990 | 0.014 | 0.016 | 0.036 |\n| 1024 | mfp3 | 0.987 | 0.022 | 0.017 | 0.044 |\n| 1024 | rdk5 | 0.981 | 0.085 | 0.049 | 0.15 |\n| 1024 | hashap | 0.874 | 0.1 | 0.051 | 0.17 |\n| 1024 | hashtt | 0.983 | 0.025 | 0.026 | 0.061 |\n| 512 | mfp1 | 0.980 | 0.013 | 0.021 | 0.044 |\n| 512 | mfp2 | 0.979 | 0.028 | 0.023 | 0.059 |\n| 512 | mfp3 | 0.972 | 0.044 | 0.026 | 0.078 |\n| 512 | rdk5 | 0.929 | 0.16 | 0.09 | 0.28 |\n| 512 | hashap | 0.702 | 0.19 | 0.083 | 0.3 |\n| 512 | hashtt | 0.967 | 0.046 | 0.037 | 0.096 |\n| 256 | mfp1 | 0.962 | 0.026 | 0.029 | 0.065 |\n| 256 | mfp2 | 0.954 | 0.057 | 0.035 | 0.1 |\n| 256 | mfp3 | 0.932 | 0.087 | 0.041 | 0.14 |\n| 256 | rdk5 | 0.785 | 0.28 | 0.15 | 0.48 |\n| 256 | hashap | 0.539 | 0.3 | 0.11 | 0.43 |\n| 256 | hashtt | 0.921 | 0.092 | 0.057 | 0.17 |\n| 128 | mfp1 | 0.918 | 0.049 | 0.043 | 0.11 |\n| 128 | mfp2 | 0.897 | 0.11 | 0.054 | 0.18 |\n| 128 | mfp3 | 0.839 | 0.17 | 0.066 | 0.25 |\n| 128 | rdk5 | 0.528 | 0.42 | 0.2 | 0.68 |\n| 128 | hashap | 0.343 | 0.42 | 0.12 | 0.57 |\n| 128 | hashtt | 0.828 | 0.17 | 0.085 | 0.28 |\n| 64 | mfp1 | 0.832 | 0.099 | 0.064 | 0.18 |\n| 64 | mfp2 | 0.771 | 0.2 | 0.083 | 0.31 |\n| 64 | mfp3 | 0.642 | 0.31 | 0.1 | 0.44 |\n| 64 | rdk5 | 0.235 | 0.5 | 0.22 | 0.77 |\n| 64 | hashap | 0.158 | 0.51 | 0.13 | 0.65 |\n| 64 | hashtt | 0.672 | 0.28 | 0.12 | 0.43 |"
  },
  {
    "objectID": "posts/2022-12-18-introducing-rdDetermineBonds.html",
    "href": "posts/2022-12-18-introducing-rdDetermineBonds.html",
    "title": "Introducing rdDetermineBonds",
    "section": "",
    "text": "One of the problems with using the results from quantum chemical calculations with the RDKit is that typical QM output formats just include atoms and their positions: since the calculations don’t need bond orders, they don’t show up in the output. The problem of assigning correct bond orders to the atoms in a molecule based solely on atomic positions (and the overall charge on the molecule) is a non-trivial one, and we’ve never had a good answer in the RDKit.\nA few years ago Jan Jensen and his group published xyz2mol, an open-source, RDKit-based solution to this problem written in Python: https://github.com/jensengroup/xyz2mol. During this year’s Google Summer of Code, Sreya Gogineni, did a C++ port of the Python code and integrated it into the RDKit core for the 2022.09 release. Here’s the project description and here’s Sreya’s “final report” which is also the PR where we merged her changes into the RDKit core.\nThis post was originally just going to be a quick introduction to how to use that code. However, since I was having fun with it, I went ahead and did some testing on a bunch of 3D structures from QM9.\n\nfrom rdkit import Chem\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import IPythonConsole\nIPythonConsole.ipython_3d = True\nimport rdkit\nrdkit.__version__\n\n'2022.09.1'\n\n\n\nUsing rdDetermineBonds\nTo get some testing files, I downloaded some structures from the QM9 dataset. Here’s what those look like:\n\n!cat ../data/dsgdb9nsd_107313.xyz\n\n19\ngdb 107313  2.67642 1.59305 1.14971 3.3443  81.12   -0.2359 -0.0506 0.1853  1106.1507   0.159794    -385.918216 -385.909962 -385.909018 -385.950934 31.892  \nC    0.0645055554    1.4843171326    0.3723315122   -0.379845\nC   -0.001915467     0.0516984051   -0.1729357038   -0.277772\nC   -1.4001624807   -0.5304376801   -0.1487075838    0.233551\nC   -1.9909553844   -1.0379429662    1.1601625215   -0.307513\nC   -1.7182271444   -1.9962888369    0.0152208454   -0.158294\nC   -2.905416575    -2.2627721735   -0.8489696604   -0.065615\nC   -3.3347497536   -1.1525477782   -1.4661914556   -0.191532\nC   -2.4353480328   -0.0114763902   -1.1388331005    0.336742\nO   -2.4853518918    1.1093228549   -1.595794586    -0.340877\nH    1.0876615149    1.8699729825    0.3263064541    0.106173\nH   -0.5836533924    2.142053447    -0.2101812431    0.152698\nH   -0.2626541721    1.5210712578    1.4170099662    0.108877\nH    0.3710335675    0.0343653078   -1.2041622283    0.107526\nH    0.662791197    -0.6008609283    0.4071642198    0.091428\nH   -1.3142481944   -1.0584396879    2.0096409673    0.122076\nH   -3.0252533013   -0.8199288984    1.4038330438    0.125348\nH   -0.9412329872   -2.7436632889    0.1278385726    0.101319\nH   -3.37329736 -3.2394582332   -0.9072563749    0.118603\nH   -4.2004762777   -1.0463782959   -2.1061677066    0.117109\n88.1998 132.6788    204.3282    214.9254    283.2151    320.8425    354.2003    451.4683    471.7609    631.475 661.0085    735.6532    750.9738    778.4916    839.8756    849.5692    876.8931    897.9162    967.6602    980.1789    992.0568    1026.4327   1049.1839   1072.0692   1075.099    1111.0662   1128.3577   1138.5104   1233.4573   1265.5356   1338.63 1352.428    1365.7919   1389.2764   1408.176    1477.5353   1487.9659   1495.4859   1514.6888   1630.2685   1799.8365   3021.0204   3038.158    3057.8354   3101.9102   3122.4464   3138.2864   3177.3129   3193.7776   3214.9261   3232.806\nCCC12CC1C=CC2=O CC[C@]12C[C@H]1C=CC2=O  \nInChI=1S/C8H10O/c1-2-8-5-6(8)3-4-7(8)9/h3-4,6H,2,5H2,1H3    InChI=1S/C8H10O/c1-2-8-5-6(8)3-4-7(8)9/h3-4,6H,2,5H2,1H3/t6-,8+/m1/s1\n\n\nSreya also added an XYZ file format parser to the RDKit, but these files include a bunch of additional information that we need to strip out. Here’s the code for that:\n\n# the XYZ files from QM9 aren't really XYZ... clean them up:\ndef cleanup_qm9_xyz(fname):\n    ind = open(fname).readlines()\n    nAts = int(ind[0])\n    # There are two smiles in the data: the one from GDB and the one assigned from the\n    # 3D coordinates in the QM9 paper using OpenBabel (I think).\n    gdb_smi,relax_smi = ind[-2].split()[:2]\n    ind[1] = '\\n'\n    ind = ind[:nAts+2]\n    for i in range(2,nAts+2):\n        l = ind[i]\n        l = l.split('\\t')\n        l.pop(-1)\n        ind[i] = '\\t'.join(l)+'\\n'\n    ind = ''.join(ind)\n    return ind,gdb_smi,relax_smi\n\n\nind,gdb_smi,relax_smi = cleanup_qm9_xyz('../data/dsgdb9nsd_107313.xyz')\nprint(ind)\n\n19\n\nC    0.0645055554    1.4843171326    0.3723315122\nC   -0.001915467     0.0516984051   -0.1729357038\nC   -1.4001624807   -0.5304376801   -0.1487075838\nC   -1.9909553844   -1.0379429662    1.1601625215\nC   -1.7182271444   -1.9962888369    0.0152208454\nC   -2.905416575    -2.2627721735   -0.8489696604\nC   -3.3347497536   -1.1525477782   -1.4661914556\nC   -2.4353480328   -0.0114763902   -1.1388331005\nO   -2.4853518918    1.1093228549   -1.595794586\nH    1.0876615149    1.8699729825    0.3263064541\nH   -0.5836533924    2.142053447    -0.2101812431\nH   -0.2626541721    1.5210712578    1.4170099662\nH    0.3710335675    0.0343653078   -1.2041622283\nH    0.662791197    -0.6008609283    0.4071642198\nH   -1.3142481944   -1.0584396879    2.0096409673\nH   -3.0252533013   -0.8199288984    1.4038330438\nH   -0.9412329872   -2.7436632889    0.1278385726\nH   -3.37329736 -3.2394582332   -0.9072563749\nH   -4.2004762777   -1.0463782959   -2.1061677066\n\n\n\nAnd now we can construct a molecule:\n\nraw_mol = Chem.MolFromXYZBlock(ind)\nprint(raw_mol.GetNumAtoms(),raw_mol.GetNumBonds())\n\n19 0\n\n\n\nimport py3Dmol\ndef draw_with_spheres(mol):\n    v = py3Dmol.view(width=300,height=300)\n    IPythonConsole.addMolToView(mol,v)\n    v.zoomTo()\n    v.setStyle({'sphere':{'radius':0.3},'stick':{'radius':0.2}});\n    v.show()\n\n\ndraw_with_spheres(raw_mol)\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol\n        \n\n\n\nOf course that doesn’t yet have bonds. Let’s fix that.\nStart with rdDetermineBonds.DetermineConnectivity(), this uses distances between atoms to determine where there should be bonds, but does not attempt to figure out bond orders.\n\nfrom rdkit.Chem import rdDetermineBonds\nconn_mol = Chem.Mol(raw_mol)\nrdDetermineBonds.DetermineConnectivity(conn_mol)\n\ndraw_with_spheres(conn_mol)\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol\n        \n\n\n\nNow we can use rdDetermineBonds.DetermineBondOrders() to figure out what the bond orders should be.\nThis requires the overall charge on the molecule (the default value of the charge is zero, so it’s not technically necessary to provide it here, but we do so to be clear):\n\nrdDetermineBonds.DetermineBondOrders(conn_mol,charge=0)\ndraw_with_spheres(conn_mol)\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol\n        \n\n\n\nWe can do both steps in a single call. This is the easiest way to use the code if you just want to look at the final bond orders:\n\nconn_mol = Chem.Mol(raw_mol)\nrdDetermineBonds.DetermineBonds(conn_mol,charge=0)\ndraw_with_spheres(conn_mol)\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol\n        \n\n\n\nSee if the SMILES we got agrees with the what QM9 says it should be:\n\ncm = Chem.RemoveHs(conn_mol)\nosmi = Chem.MolToSmiles(cm)\nsmi = Chem.CanonSmiles(relax_smi)\nprint(osmi,smi)\nosmi==smi\n\nCC[C@]12C[C@H]1C=CC2=O CC[C@]12C[C@H]1C=CC2=O\n\n\nTrue\n\n\nYep… that’s all good.\nLet’s do another example:\n\nind,gdb_smi,relax_smi = cleanup_qm9_xyz('../data/dsgdb9nsd_127185.xyz')\nraw_mol = Chem.MolFromXYZBlock(ind)\nconn_mol = Chem.Mol(raw_mol)\nrdDetermineBonds.DetermineBonds(conn_mol,charge=0)\nconn_mol\ndraw_with_spheres(conn_mol)\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol\n        \n\n\n\nAgain, make sure we got it right:\n\ncm = Chem.RemoveHs(conn_mol)\nosmi = Chem.MolToSmiles(cm)\nsmi = Chem.CanonSmiles(relax_smi)\nprint(osmi,smi)\nosmi==smi\n\nCN(C=O)c1ccon1 CN(C=O)c1ccon1\n\n\nTrue\n\n\nSince this method needs the Hs to be there, it unfortunately won’t be useful in assigning bond orders to the ligands from PDB structures… ah well.\n\n\nTesting the functionality on a bunch of molecules\nHere’s a little test to see how well the new functionality does on a randomly selected subset of QM9.\nStart by getting 10K random files from my local copy of QM9 (these, for obvious reasons, aren’t in the gitub repo for this notebook) and preprocessing them:\n\nimport glob\nimport random\nrandom.seed(0xf00d)\n\nfns = list(glob.glob('/local/QM9/*.xyz'))\nrandom.shuffle(fns)\nfns = fns[:10000]\n\n\nqm9_data = []\nfor fn in fns:\n    d,gdb_smi,relax_smi = cleanup_qm9_xyz(fn)\n    qm9_data.append((fn,d,gdb_smi,relax_smi))\n\nI believe that QM9 doesn’t have double bond stereo indicated in the SMILES, verify that:\n\nhas_dbl_bond_stereo=[]\nfor tpl in qm9_data:\n    smi = tpl[-1]\n    if smi.find('/') != -1 or smi.find('\\\\') != -1:\n        print(tpl)\n\nHere’s the testing code.\nFor each molecule we have two SMILES to compare to: 1. gdb_smi: the SMILES from GDB that the QM9 authors used as input 2. relax_smi: the SMILES generated by OpenBabel(?) from the optimized structure.\nWe’ll start by seeing if we match relax_smi and, if that fails, compare to gdb_smi.\n\nfrom rdkit import RDLogger\nRDLogger.DisableLog('rdApp.*')\nrelax_fails = []\ngdb_fails = []\nfor fn,ind,gdb_smi,relax_smi in qm9_data:\n    # the RDKit can't parse some of the SMILES from QM9... skip those mols\n    try:\n        smi = Chem.CanonSmiles(relax_smi)\n    except:\n        continue\n    mol = Chem.MolFromXYZBlock(ind)\n    if mol is None:\n        print(f'Could not parse {fn}')\n        continue\n    rdDetermineBonds.DetermineBonds(mol,charge=0)\n    # remove double bond stereo:\n    for bond in mol.GetBonds():\n        if bond.GetBondType() == Chem.BondType.DOUBLE:\n            bond.SetStereo(Chem.BondStereo.STEREONONE)\n        elif bond.GetBondType() == Chem.BondType.SINGLE:\n            bond.SetBondDir(Chem.BondDir.NONE)\n    osmi = Chem.MolToSmiles(Chem.RemoveAllHs(mol))\n    # compare to relax_smi:\n    if smi!=osmi:\n        relax_fails.append((fn,smi,osmi))\n        # that failed, so next we are going to compare to gdb_smi;\n        try:\n            smi = Chem.CanonSmiles(gdb_smi)\n        except:\n            continue\n        # the GDB smiles don't have any stereo at all, so get rid of atomic stereo\n        for atom in mol.GetAtoms():\n            atom.SetChiralTag(Chem.ChiralType.CHI_UNSPECIFIED)\n        osmi = Chem.MolToSmiles(Chem.RemoveAllHs(mol))\n        if smi != osmi:\n            gdb_fails.append((fn,smi,osmi))\nRDLogger.EnableLog('rdApp.*')\n\nlen(relax_fails),len(gdb_fails)\n\nCould not parse /local/QM9/dsgdb9nsd_112773.xyz\nCould not parse /local/QM9/dsgdb9nsd_071817.xyz\nCould not parse /local/QM9/dsgdb9nsd_024513.xyz\nCould not parse /local/QM9/dsgdb9nsd_057755.xyz\nCould not parse /local/QM9/dsgdb9nsd_005005.xyz\nCould not parse /local/QM9/dsgdb9nsd_132540.xyz\nCould not parse /local/QM9/dsgdb9nsd_002091.xyz\nCould not parse /local/QM9/dsgdb9nsd_025366.xyz\nCould not parse /local/QM9/dsgdb9nsd_104557.xyz\n\n\n(909, 27)\n\n\n\nrelax_fails[0]\n\n('/local/QM9/dsgdb9nsd_130414.xyz', '[NH][C]1C=NOC(CN)=N1', 'N=c1cnoc(CN)n1')\n\n\n\ngdb_fails[0]\n\n('/local/QM9/dsgdb9nsd_130861.xyz', 'O=Cc1cc(=O)nno1', 'N#N.O=C=CC(=O)C=O')\n\n\nLet’s start by looking at some of the failures based on relax_smi.\nIn the output we have pairs of molecules where the first is constructed from relax_smi and the second is what we perceived\n\nimport os\nfailmols = []\nnms = []\nfor fn,ismi,osmi in relax_fails:\n    im = Chem.MolFromSmiles(ismi)\n    om = Chem.MolFromSmiles(osmi)\n    failmols.append(im)\n    failmols.append(om)\n    nms.append(f'{os.path.basename(fn)} relax_smi')\n    nms.append('rdkit_smi')\nDraw.MolsToGridImage(failmols[:20],molsPerRow=4,legends=nms)        \n\n\n\n\n\n\n\n\nThose seem to be cases where we’ve assigned a multiple bond while the SMILES in the publication has a single bond with radicals on either side.\nWhat about some of the 27 cases where we haven’t reproduced the input GDB SMILES?\n\nimport os\nfailmols = []\nnms = []\nfor fn,ismi,osmi in gdb_fails:\n    im = Chem.MolFromSmiles(ismi)\n    om = Chem.MolFromSmiles(osmi)\n    failmols.append(im)\n    failmols.append(om)\n    nms.append(f'{os.path.basename(fn)} relax_smi')\n    nms.append('rdkit_smi')\nDraw.MolsToGridImage(failmols[:20],molsPerRow=4,legends=nms)        \n\n\n\n\n\n\n\n\nLet’s look at a couple of those:\n\nind,gdb_smi,relax_smi = cleanup_qm9_xyz('/local/QM9/dsgdb9nsd_129106.xyz')\nraw_mol = Chem.MolFromXYZBlock(ind)\nconn_mol = Chem.Mol(raw_mol)\nrdDetermineBonds.DetermineBonds(conn_mol,charge=0)\nconn_mol\ndraw_with_spheres(conn_mol)\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol\n        \n\n\n\n\nind,gdb_smi,relax_smi = cleanup_qm9_xyz('/local/QM9/dsgdb9nsd_133855.xyz')\nraw_mol = Chem.MolFromXYZBlock(ind)\nconn_mol = Chem.Mol(raw_mol)\nrdDetermineBonds.DetermineBonds(conn_mol,charge=0)\nconn_mol\ndraw_with_spheres(conn_mol)\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol\n        \n\n\n\nThose are clearly cases where the QM optimization has yielded a completely different structure from what they started with.\nI’m sure we’ll end up finding (and fixing) issues once more people start using the code, but I think these results show that the new functionality in rdDetermineBonds works quite well!\n\n\nBenchmarking the code\nThe last question I had, and I will definitely stop after this, is how long it takes to run the code. Let’s check that.\nI just want to time DetermineBonds() part, so let’s construct the molecules in advance:\n\nfrom rdkit import rdBase\nwith rdBase.BlockLogs():\n    tmols = []\n    for fn,ind,gdb_smi,relax_smi in qm9_data:\n        # the RDKit can't parse some of the SMILES from QM9... skip those\n        mol = Chem.MolFromXYZBlock(ind)\n        if mol is None:\n            continue\n        tmols.append(mol)\nlen(tmols)\n\n9991\n\n\n\n%timeit [rdDetermineBonds.DetermineBonds(m,charge=0) for m in tmols]\n\n646 ms ± 2.95 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n\n\nWe can do almost 10K molecules in 646 ms, that’s about 65 μs per molecule. So running DetermineBonds() shouldn’t be a bottleneck in any workflows. :-)"
  },
  {
    "objectID": "posts/2024-01-11-using-abbreviations.html",
    "href": "posts/2024-01-11-using-abbreviations.html",
    "title": "Using abbreviations in the RDKit",
    "section": "",
    "text": "This is another one of those “reminder about lesser known RDKit features” posts.\nThe RDKit has had the ability to condense common functional groups to short-hand abbreviations for a few years. This is primarily intended as a way to simplify the drawings of molecules. This can be quite useful, particularly when preparing figures for publication.\nHere’s a simple illustration. The molecule:\n\n\n\nimage.png\n\n\ncan be drawn with abbreviations as: dsas \nIn this post I’ll provide a short overview of the functionality. There’s also a cookbook entry on the topic.\n\nfrom rdkit import Chem\nfrom rdkit.Chem import rdDepictor\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import IPythonConsole\nIPythonConsole.molSize = 250,200\nfrom rdkit.Chem import rdAbbreviations\n\nimport rdkit\nrdkit.__version__\n\n'2023.09.4'\n\n\n\nAbbreviation basics\nLet’s start with the example used in the introduction to this post:\n\nm = Chem.MolFromSmiles('FC(F)(F)c1cc(C(=O)O)cc2ccc(C(C)(C)C)cc21')\nm\n\n\n\n\n\n\n\n\nWe can get a new molecule which uses abbreviations with the function rdAbbreviations.CondenseMolAbbreviations():\n\n# CondenseMolAbbreviations requires a set of abbreviations to be used. Here we pick the defaults:\nabbrevs = rdAbbreviations.GetDefaultAbbreviations()\n\n# Now use them:\namol = rdAbbreviations.CondenseMolAbbreviations(m,abbrevs)\namol\n\n\n\n\n\n\n\n\nThis isn’t a cosmetic transformation, the output molecule has less atoms:\n\nm.GetNumAtoms(),amol.GetNumAtoms()\n\n(21, 13)\n\n\nThe result molecule has dummy atoms where the abbreviations are drawn:\n\nChem.MolToSmiles(amol)\n\n'*c1cc(*)c2cc(*)ccc2c1'\n\n\nAnd the abbreviations themselves can be preserved with CXSMILES:\n\nChem.MolToCXSmiles(amol)\n\n'*c1cc(*)c2cc(*)ccc2c1 |$CO2H;;;;CF3;;;;tBu;;;;$|'\n\n\nThis allows us to round-trip abbreviations through CXSMILES:\n\nChem.MolFromSmiles('*c1cc(*)c2cc(*)ccc2c1 |$CO2H;;;;CF3;;;;tBu;;;;$|')\n\n\n\n\n\n\n\n\nThere is a threshold on the maximum percentage of atoms in the molecule which can be replaced by abbreviations. The default value for this is 0.4, so the CF3 group here is not replaced:\n\nm = Chem.MolFromSmiles('FC(F)(F)CC(=O)O')\namol = rdAbbreviations.CondenseMolAbbreviations(m,abbrevs)\namol\n\n\n\n\n\n\n\n\nBut we can change that threshold with the maxCoverage argument:\n\namol = rdAbbreviations.CondenseMolAbbreviations(m,abbrevs,maxCoverage=0.8)\namol\n\n\n\n\n\n\n\n\nThe code will never abbreviate groups which are bonded directly to each other, no matter how high maxCoverage is set:\n\nm = Chem.MolFromSmiles('FC(F)(F)C(=O)O')\namol = rdAbbreviations.CondenseMolAbbreviations(m,abbrevs,maxCoverage=1)\namol\n\n\n\n\n\n\n\n\nHere’s the default list of abbreviations\n\nfor abbrev in abbrevs:\n    print(abbrev.label,Chem.MolToSmiles(abbrev.mol))\n\nCO2Et *C(=O)OCC\nCOOEt *C(=O)OCC\nOiBu *OCC(C)C\nnDec *CCCCCCCCCC\nnNon *CCCCCCCCC\nnOct *CCCCCCCC\nnHept *CCCCCCC\nnHex *CCCCCC\nnPent *CCCCC\niPent *C(C)CCC\ntBu *C(C)(C)C\niBu *C(C)CC\nnBu *CCCC\niPr *C(C)C\nnPr *CCC\nEt *CC\nNCF3 *NC(F)(F)F\nCF3 *C(F)(F)F\nCCl3 *C(Cl)(Cl)Cl\nCN *C#N\nNC *[N+]#[C-]\nN(OH)CH3 *N(C)[OH]\nNO2 *[N+](=O)[O-]\nNO *N=O\nSO3H *S(=O)(=O)[OH]\nCO2H *C(=O)[OH]\nCOOH *C(=O)[OH]\nOEt *OCC\nOAc *OC(C)=O\nNHAc *NC(C)=O\nAc *C(C)=O\nCHO *C=O\nNMe *NC\nSMe *SC\nOMe *OC\nCO2- *C(=O)[O-]\nCOO- *C(=O)[O-]\n\n\n\n\nAdding your own abbreviations\nYou can extend the list of default abbreviations with your own additions:\n\nabbrevs = rdAbbreviations.GetDefaultAbbreviations()\nnabbrevs = rdAbbreviations.ParseAbbreviations('''Ph3C C(c1ccccc1)(c1ccccc1)c1ccccc1 CPh3\nTosO OS(=O)(=O)c1ccc(C)cc1 OTos''')\n# make sure our new abbreviations are at the front of the list so that they \n# match before anything else. We could also put them at the end so that \n# the default abbreviations have priority\nfor abbrev in abbrevs:\n     nabbrevs.append(abbrev)\nabbrevs = nabbrevs\n\n\nrdAbbreviations.CondenseMolAbbreviations(Chem.MolFromSmiles('OCC(c1ccccc1)(c1ccccc1)c1ccccc1'),abbrevs,maxCoverage=1.0)\n\n\n\n\n\n\n\n\n\nrdAbbreviations.CondenseMolAbbreviations(Chem.MolFromSmiles('OCCOS(=O)(=O)c1ccc(C)cc1'),abbrevs,maxCoverage=1.0)\n\n\n\n\n\n\n\n\n\n\nReplacing the abbreviations\nWe can also completely replace the list of abbreviations with our own definitions.\nHere’s a github discussion on the topic: https://github.com/rdkit/rdkit/discussions/3677\n\nimport re\n\n# data from: https://github.com/metamolecular/osra/blob/master/dict/superatom.txt\nabbrev_defns='''# Translations of superatom labels to SMILES.\n# First atom of SMILES string should be the one connected to the rest of\n# the molecule.\n# Empty lines and lines starting with # are ignored.\n# Also check spelling.txt to see that the superatom label\n# is correctly spelled.\n\nMe   C\nMeO      OC\nMeS      SC\nMeN      NC\nCF       CF\nCF3      C(F)(F)F\nCN       C#N\nF3CN     NC(F)(F)F\nPh       c1ccccc1\nNO       N=O\nNO2      N(=O)=O\nN(OH)CH3 N(O)C\nSO3H     S(=O)(=O)O\nCOOH     C(=O)O\nnBu      CCCC\nEtO      OCC\nOiBu     OCC(C)C\niPr      CCC\ntBu      C(C)(C)C\nAc       C(=O)C\nAcO      OC(=O)C\nNHAc     NC(=O)C\nOR       O*\n#BzO      OCc1ccccc1\nBzO OC(=O)C1=CC=CC=C1\nTHPO     O[C@@H]1OCCCC1\n\nCHO    C=O\nNOH    NO \n\n# Added  release 1.3.0\nCO2Et C(=O)OCC\nCO2Me C(=O)OC\nMeO2S S(=O)(=O)C\nNMe2  N(C)C\nCO2R  C(=O)O*\nZNH   NC(=O)OCC1=CC=CC=C1\nHOCH2 CO\nH2NCH2 CN\nEt CC\nBnO OCC1=CC=CC=C1\nAmNH NCCCCC\nAmO OCCCCC\nAmO2C C(=O)OCCCCC\nAmS SCCCCC\nBnNH NCC1=CC=CC=C1\nBnO2C C(=O)OCC1=CC=CC=C1\nBu3Sn [Sn](CCCC)(CCCC)CCCC\nBuNH    NCCCC\nBuO     OCCCC\nBuO2C   C(=O)OCCCC\nBuS     SCCCC\nCBr3    C(Br)(Br)Br\nCbzNH   NC(=O)OCC1=CC=CC=C1\nCCl3    C(Cl)(Cl)Cl\nClSO2   S(=O)(=O)Cl\nCOBr    C(=O)Br\nCOBu    C(=O)CCCC\nCOCF3   C(=O)C(F)(F)F\nCOCl    C(=O)Cl\nCOCO    C(=O)C=O\nCOEt    C(=O)CC\nCOF     C(=O)F\nCOMe    C(=O)C\nOCOMe OC(=O)C\nCONH2   C(=O)N\nCONHEt  C(=O)NCC\nCONHMe  C(=O)NC\nCOSH    C(=O)S\nEt2N    N(CC)CC\nEt3N    N(CC)(CC)CC\nEtNH    NCC\nH2NSO2  S(=O)(N)=O\nHONH    ON\nMe2N    N(C)C\nNCO     N=C=O\nNCS     N=C=S\nNHAm    NCCCCC\nNHBn    NCC1=CC=CC=C1\nNHBu    NCCCC\nNHEt    NCC\nNHOH    NO\nNHPr    NCCC\nNO      N=O\nPOEt2   P(OCC)OCC\nPOEt3   P(OCC)(OCC)OCC\nPOOEt2  P(=O)(OCC)OCC\nPrNH    CCCN\nSEt     SCC\n\nBOC C(=O)OC(C)(C)C\nMsO OS(=O)(=O)C\nOTos OS(=O)(=O)c1ccc(C)cc1\nTos S(=O)(=O)c1ccc(C)cc1\nC8H CCCCCCCC\nC6H CCCCCC\nCH2CH3 CC\nN(CH2CH3)2 N(CC)CC\nN(CH2CH2CH3)2 N(CCC)CCC\nC(CH3)3 C(C)(C)C\nCOCH3 C(=O)C\nCH(CH3)2 C(C)C\nOCF3 OC(F)(F)F\nOCCl3 OC(Cl)(Cl)Cl\nOCF2H OC(F)F\nSO2Me S(=O)(=O)C\nOCH2CO2H OCC(=O)O\nOCH2CO2Et OCC(=O)OCC\nBOC2N N(C(=O)OC(C)(C)C)C(=O)OC(C)(C)C\nBOCHN NC(=O)OC(C)(C)C\nNHCbz NC(=O)OCc1ccccc1\nOCH2CF3 OCC(F)(F)F\nNHSO2BU NS(=O)(=O)CCCC\nNHSO2Me NS(=O)(=O)C\nMeO2SO OS(=O)(=O)C\nNHCOOEt NC(=O)OCC\nNHCH3 NC\nH4NOOC C(=O)ON\nC3H7 CCC\nC2H5 CC\nNHNH2 NN\nOCH2CH2OH OCCO\nOCH2CHOHCH2OH OCC(O)CO\nOCH2CHOHCH2NH OCC(O)CN\nNHNHCOCH3 NNC(=O)C\nNHNHCOCF3 NNC(=O)C(F)(F)F\nNHCOCF3 NC(=O)C(F)(F)F\nCO2CysPr C(=O)ON[C@H](CS)C(=O)CCC\nHOH2C CO\nH3CHN NC\nH3CO2C C(=O)OC\nCF3CH2 CC(F)(F)F\nOBOC OC(=O)OC(C)(C)C\nBn2N N(Cc1ccccc1)Cc1ccccc1\nF5S S(F)(F)(F)(F)F\nPPh2 P(c1ccccc1)c1ccccc1\nPPh3 P(c1ccccc1)(c1ccccc1)c1ccccc1\nOCH2Ph OCc1ccccc1\nCH2OMe COC\nPMBN NCc1ccc(OC)cc1\nSO2 S(=O)=O\nNH3Cl NCl\nCF2CF3 C(F)(F)C(F)(F)F\nCF2CF2H C(F)(F)C(F)(F)\nBn Cc1ccccc1\nOCH2Ph OCc1ccccc1\nCOOCH2Ph C(=O)OCc1ccccc1\nPh3CO OC(c1ccccc1)(c1ccccc1)c1ccccc1\nPh3C C(c1ccccc1)(c1ccccc1)c1ccccc1\nMe2NO2S S(C)(C)N(=O)=O\nSO3Na S(=O)(=O)(=O)[Na]\nOSO2Ph OS(=O)(=O)c1ccccc1\n(CH2)5Br CCCCCBr\nOPh Oc1ccccc1\nSPh Sc1ccccc1\nNHPh Nc1ccccc1\n\nCONEt2 C(=O)N(CC)CC\nCONMe2 C(=O)N(C)C\nEtO2CHN NC(=O)OCC\nH4NO3S S(=O)(=O)ON\nTMS [Si](C)(C)(C)\nCOCOOCH2CH3 C(=O)C(=O)OCC\nOCH2CN OCC#N\n#\n#  these are useful for expanding superatoms, but not helpful for collapsing them\n# Xx [*]\n# X  [*]\n# Y [*]\n# Z [*]\n# R [*]\n# R1 [*]\n# R2 [*]\n# R3 [*]\n# R4 [*]\n# R5 [*]\n# R6 [*]\n# R7 [*]\n# R8 [*]\n# R9 [*]\n# R10 [*]\n# Y2 [*]\n#D [*]\n'''\n# preprocess the definitions:\ndefns = []\nfor l in abbrev_defns.split('\\n'):\n    if not l or l[0]=='#':\n        continue\n    defn = re.sub(r'[ ]+','\\t',l)\n    sma = defn.split('\\t')[1]\n    # use the length of the SMARTS as a crude size sort\n    defns.append((len(sma),l))\nabbrev_defns = '\\n'.join([x[1] for x in sorted(defns,reverse=True)])\nprint(abbrev_defns)\nabbrevs = rdAbbreviations.ParseAbbreviations(abbrev_defns)\n\nBOC2N N(C(=O)OC(C)(C)C)C(=O)OC(C)(C)C\nPh3CO OC(c1ccccc1)(c1ccccc1)c1ccccc1\nPh3C C(c1ccccc1)(c1ccccc1)c1ccccc1\nPPh3 P(c1ccccc1)(c1ccccc1)c1ccccc1\nCO2CysPr C(=O)ON[C@H](CS)C(=O)CCC\nOTos OS(=O)(=O)c1ccc(C)cc1\nBn2N N(Cc1ccccc1)Cc1ccccc1\nTos S(=O)(=O)c1ccc(C)cc1\nBu3Sn [Sn](CCCC)(CCCC)CCCC\nZNH   NC(=O)OCC1=CC=CC=C1\nPPh2 P(c1ccccc1)c1ccccc1\nCbzNH   NC(=O)OCC1=CC=CC=C1\nOSO2Ph OS(=O)(=O)c1ccccc1\nBnO2C C(=O)OCC1=CC=CC=C1\nSO3Na S(=O)(=O)(=O)[Na]\nBzO OC(=O)C1=CC=CC=C1\nNHCbz NC(=O)OCc1ccccc1\nOBOC OC(=O)OC(C)(C)C\nNHNHCOCF3 NNC(=O)C(F)(F)F\nCOOCH2Ph C(=O)OCc1ccccc1\nCF2CF3 C(F)(F)C(F)(F)F\nBOCHN NC(=O)OC(C)(C)C\nTHPO     O[C@@H]1OCCCC1\nPOEt3   P(OCC)(OCC)OCC\nPMBN NCc1ccc(OC)cc1\nNHSO2BU NS(=O)(=O)CCCC\nNHCOCF3 NC(=O)C(F)(F)F\nMe2NO2S S(C)(C)N(=O)=O\nF5S S(F)(F)(F)(F)F\nCF2CF2H C(F)(F)C(F)(F)\nBOC C(=O)OC(C)(C)C\nTMS [Si](C)(C)(C)\nPOOEt2  P(=O)(OCC)OCC\nNHBn    NCC1=CC=CC=C1\nCOCOOCH2CH3 C(=O)C(=O)OCC\nCOCF3   C(=O)C(F)(F)F\nBnO OCC1=CC=CC=C1\nBnNH NCC1=CC=CC=C1\nOCCl3 OC(Cl)(Cl)Cl\nCONEt2 C(=O)N(CC)CC\nNHSO2Me NS(=O)(=O)C\nMsO OS(=O)(=O)C\nMeO2SO OS(=O)(=O)C\nH4NO3S S(=O)(=O)ON\nEt3N    N(CC)(CC)CC\nClSO2   S(=O)(=O)Cl\nCCl3    C(Cl)(Cl)Cl\nCBr3    C(Br)(Br)Br\nAmO2C C(=O)OCCCCC\nSO3H     S(=O)(=O)O\nSO2Me S(=O)(=O)C\nOCH2Ph OCc1ccccc1\nOCH2Ph OCc1ccccc1\nOCH2CO2Et OCC(=O)OCC\nOCH2CF3 OCC(F)(F)F\nMeO2S S(=O)(=O)C\nH2NSO2  S(=O)(N)=O\nCONMe2 C(=O)N(C)C\nBuO2C   C(=O)OCCCC\nSPh Sc1ccccc1\nPOEt2   P(OCC)OCC\nOPh Oc1ccccc1\nOCF3 OC(F)(F)F\nNHPh Nc1ccccc1\nNHCOOEt NC(=O)OCC\nN(CH2CH2CH3)2 N(CCC)CCC\nF3CN     NC(F)(F)F\nEtO2CHN NC(=O)OCC\nCOBu    C(=O)CCCC\nCF3CH2 CC(F)(F)F\nBn Cc1ccccc1\ntBu      C(C)(C)C\nPh       c1ccccc1\nOCH2CO2H OCC(=O)O\nOCH2CHOHCH2OH OCC(O)CO\nOCH2CHOHCH2NH OCC(O)CN\nNHNHCOCH3 NNC(=O)C\nCONHEt  C(=O)NCC\nCOCO    C(=O)C=O\nCO2Et C(=O)OCC\nCF3      C(F)(F)F\nC8H CCCCCCCC\nC(CH3)3 C(C)(C)C\nSO2 S(=O)=O\nOiBu     OCC(C)C\nOCOMe OC(=O)C\nNO2      N(=O)=O\nNHAc     NC(=O)C\nN(CH2CH3)2 N(CC)CC\nH4NOOC C(=O)ON\nH3CO2C C(=O)OC\nEt2N    N(CC)CC\nCONHMe  C(=O)NC\nCOEt    C(=O)CC\nCOCl    C(=O)Cl\nCOBr    C(=O)Br\nCO2R  C(=O)O*\nCO2Me C(=O)OC\nAcO      OC(=O)C\n(CH2)5Br CCCCCBr\nOCF2H OC(F)F\nNHAm    NCCCCC\nCOSH    C(=O)S\nCOOH     C(=O)O\nCONH2   C(=O)N\nCOMe    C(=O)C\nCOF     C(=O)F\nCOCH3 C(=O)C\nC6H CCCCCC\nAmS SCCCCC\nAmO OCCCCC\nAmNH NCCCCC\nAc       C(=O)C\nOCH2CN OCC#N\nNMe2  N(C)C\nNHBu    NCCCC\nNCS     N=C=S\nNCO     N=C=O\nN(OH)CH3 N(O)C\nMe2N    N(C)C\nCH(CH3)2 C(C)C\nBuS     SCCCC\nBuO     OCCCC\nBuNH    NCCCC\nnBu      CCCC\nPrNH    CCCN\nOCH2CH2OH OCCO\nNHPr    NCCC\niPr      CCC\nSEt     SCC\nNO      N=O\nNO       N=O\nNHEt    NCC\nNH3Cl NCl\nEtO      OCC\nEtNH    NCC\nCN       C#N\nCHO    C=O\nCH2OMe COC\nC3H7 CCC\nOR       O*\nNOH    NO \nNHOH    NO\nNHNH2 NN\nNHCH3 NC\nMeS      SC\nMeO      OC\nMeN      NC\nHONH    ON\nHOH2C CO\nHOCH2 CO\nH3CHN NC\nH2NCH2 CN\nEt CC\nCH2CH3 CC\nCF       CF\nC2H5 CC\nMe   C\n\n\nWe can then use those abbreviations the same way the defaults are used:\n\nm = Chem.MolFromSmiles('c1ccccc1[Si](C)(C)C')\nm\n\n\n\n\n\n\n\n\n\nrdAbbreviations.CondenseMolAbbreviations(m,abbrevs,maxCoverage=0.6)\n\n\n\n\n\n\n\n\n\n\nUsing linkers\nAbbreviations are used for terminal groups: a functional group which only has one connection to the rest of the molecule. CondenseMolAbbreviations() can also identify and replace linkers - sets of atoms with connections at both ends.\nThis is a bit trickier, and there are far fewer default linkers, but the functionality can still be useful.\nStart by looking at the linkers that are available by default:\n\nlinkers =rdAbbreviations.GetDefaultLinkers()\nfor entry in linkers:\n    print(entry.label,Chem.MolToSmiles(entry.mol))\n\nPEG6 *OCCOCCOCCOCCOCCOCC\nPEG5 *OCCOCCOCCOCCOCC\nPEG4 *OCCOCCOCCOCC\nPEG3 *OCCOCCOCC\nDec *CCCCCCCCCC\nNon *CCCCCCCCC\nOct *CCCCCCCC\nHept *CCCCCCC\n\n\nWe apply linkers the same way we did abbreviations:\n\nm = Chem.MolFromSmiles('c1ccccc1CCCCCCCc1ccccc1')\nm\n\n\n\n\n\n\n\n\n\namol = rdAbbreviations.CondenseMolAbbreviations(m,linkers,maxCoverage=0.8)\namol\n\n\n\n\n\n\n\n\n\nm = Chem.MolFromSmiles('c1ccccc1OCCOCCOCCOc1ccccc1')\nm\n\n\n\n\n\n\n\n\n\namol = rdAbbreviations.CondenseMolAbbreviations(m,linkers,maxCoverage=0.8)\namol\n\n\n\n\n\n\n\n\nOne can argue about whether or not that last O should also be matched by the PEG3 linker. I’m happy to hear opinions about that."
  },
  {
    "objectID": "posts/2023-08-13-xval-variability1.html",
    "href": "posts/2023-08-13-xval-variability1.html",
    "title": "Variability of x-fold cross validation results",
    "section": "",
    "text": "Intro\nThis one is to provide at least something of an answer for a question I’m curious about, plus it’s an excuse to play with a new data set.\nIt has always somewhat bothered me that we don’t don’t insist that people try different random starting points when using standard N-fold cross validation to test model performance. If there’s a random process involved in splitting the data into the N-folds, then it seems logical to test how much the results depend on that split. Given that sklearn provides a utility function for doing this, RepeatedKFold, the idea obviously isn’t totally alien for all people doing model building. However, I almost never see it in cheminformatics/QSAR.\nPart of my wondering about this is certainly due to the fact that I don’t really understand the reasoning behind doing K-fold cross validation in the first place when working with data sets containing more than one hundred or so points. The usual argument I hear is something like: “but then you know that each data point has been used to test the model”. This isn’t strictly true, each data point has been used to test one of the models, and I’m not sure that it’s important when we have more than handful of data.\nAnyway, here I wanted to check how much of a difference the random seed used for K-fold cross validation can make. I look at the distributions of two different quality metrics (AUC and kappa) for random forest and XGBoost models built for three different endpoints from a recent JCIM paper from Gilead which includes a collection of consistently measured ADME data on a bunch of compounds. I also look at how often the different random K-fold splits lead to different conclusions when asking the question: “is one model better than the other?”.\nThe full results are below, but here’s a quick summary of one way of looking at the results.\nThese boxplots look at Cohen’s kappa (left plot) and AUROC (right plot) for classifiers built on the MDCK dataset. The left pair of bars in each plot show the distribution of values for 100 random splits, the right pair show distributions for 50 different 5-fold cross validations. The left bar in each pair has the results for XGB, the right bar for RF.\n\n\n\nimage-2.png\n\n\nWe can see that the distributions are significantly narrower for the 5-fold cross validation, but that there is still a spread of values. This spread becomes more significant if we are trying to use the cross validation to answer the question “Which method gives higher AUROC values for this data set, RF or XGB?”. The distribution makes it clear that RF is a bit better, but since the difference is small 16% of the cross validation splits would have lead to the other conclusion.\nIt’s probably worth coming back to this at some point and doing a broader set of data sets and methods in order to be more certain about the conclusions, but I think this already indicates that it wouldn’t be a terrible idea to try different K-fold splits when comparing models where the performance differences are not large.\n\nfrom rdkit import Chem\nfrom rdkit.Chem import rdFingerprintGenerator\nimport pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport rdkit\nprint(rdkit.__version__)\n\n2023.03.2\n\n\n\n# data set from here: https://github.com/molecularinformatics/Computational-ADME/blob/main/ADME_public_set_3521.csv\n# from this publication: https://pubs.acs.org/doi/10.1021/acs.jcim.3c00160\ndf = pd.read_csv('../data/ADME_public_set_3521.csv')\ndf.head()\n\n\n\n\n\n\n\n\nInternal ID\nVendor ID\nSMILES\nCollectionName\nLOG HLM_CLint (mL/min/kg)\nLOG MDR1-MDCK ER (B-A/A-B)\nLOG SOLUBILITY PH 6.8 (ug/mL)\nLOG PLASMA PROTEIN BINDING (HUMAN) (% unbound)\nLOG PLASMA PROTEIN BINDING (RAT) (% unbound)\nLOG RLM_CLint (mL/min/kg)\n\n\n\n\n0\nMol1\n317714313\nCNc1cc(Nc2cccn(-c3ccccn3)c2=O)nn2c(C(=O)N[C@@H...\nemolecules\n0.675687\n1.493167\n0.089905\n0.991226\n0.518514\n1.392169\n\n\n1\nMol2\n324056965\nCCOc1cc2nn(CCC(C)(C)O)cc2cc1NC(=O)c1cccc(C(F)F)n1\nemolecules\n0.675687\n1.040780\n0.550228\n0.099681\n0.268344\n1.027920\n\n\n2\nMol3\n304005766\nCN(c1ncc(F)cn1)[C@H]1CCCNC1\nemolecules\n0.675687\n-0.358806\nNaN\n2.000000\n2.000000\n1.027920\n\n\n3\nMol4\n194963090\nCC(C)(Oc1ccc(-c2cnc(N)c(-c3ccc(Cl)cc3)c2)cc1)C...\nemolecules\n0.675687\n1.026662\n1.657056\n-1.158015\n-1.403403\n1.027920\n\n\n4\nMol5\n324059015\nCC(C)(O)CCn1cc2cc(NC(=O)c3cccc(C(F)(F)F)n3)c(C...\nemolecules\n0.996380\n1.010597\nNaN\n1.015611\n1.092264\n1.629093\n\n\n\n\n\n\n\n\n\nHLM data set\n\nhlm_df = df[df['LOG HLM_CLint (mL/min/kg)'].notnull()].copy()\nhlm_df.shape\n\n(3087, 10)\n\n\nTake a look at the distribution of values to figure out where to place the “active/inactive” bin for classification.\n\nplt.hist(hlm_df['LOG HLM_CLint (mL/min/kg)']);\n\n\n\n\n\n\n\n\n\nhlm_df[hlm_df['LOG HLM_CLint (mL/min/kg)']&gt;1.5].shape\n\n(1162, 10)\n\n\n\nhlm_df['active'] = [int(x) for x in hlm_df['LOG HLM_CLint (mL/min/kg)']&gt;1.5]\n\nWe’ll use standard fingerprints for this:\n\nms = [Chem.MolFromSmiles(x) for x in hlm_df['SMILES']]\nfpg = rdFingerprintGenerator.GetMorganGenerator(radius=3,fpSize=2048)\nfps = [fpg.GetCountFingerprintAsNumPy(x) for x in ms]\n\n\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.metrics import (\n    balanced_accuracy_score,\n    roc_auc_score,\n    average_precision_score,\n    cohen_kappa_score\n)\nmetrics = {\n    'balanced_accuracy_score':balanced_accuracy_score,\n    'cohen_kappa_score':cohen_kappa_score,\n}\n\nStart by doing 100 random splits to get a sense for the amount of variability there.\n\nfrom sklearn.model_selection import train_test_split\n\nacts = hlm_df['active'].to_list()\n\nrf_accum = []\nxgb_accum = []\nfor i in range(100):\n    if not (i+1)%10:\n        print(f'iteration {i+1}')\n    X_train, X_test, y_train, y_test = train_test_split(fps,acts, test_size=0.2, random_state=0xf00d+i, stratify=acts)\n    cls = RandomForestClassifier(n_estimators=200,max_depth=20,min_samples_leaf=2,min_samples_split=4, n_jobs=6, random_state=0xfeed)\n    cls.fit(X_train,y_train)\n    test_probs = [x[1] for x in cls.predict_proba(X_test)]\n    test_preds = cls.predict(X_test)\n    res = {}\n    for metric in metrics:\n        res[metric] = metrics[metric](y_test,test_preds)\n\n    res['roc_auc_score'] = roc_auc_score(y_test,test_probs)\n    res['average_precision_score'] = average_precision_score(y_test,test_probs)    \n    rf_accum.append(res)\n\n    cls = XGBClassifier(n_estimators=200,max_depth=3, n_jobs=6)\n    cls.fit(X_train,y_train)\n    test_probs = [x[1] for x in cls.predict_proba(X_test)]\n    test_preds = cls.predict(X_test)\n    res = {}\n    for metric in metrics:\n        res[metric] = metrics[metric](y_test,test_preds)\n\n    res['roc_auc_score'] = roc_auc_score(y_test,test_probs)\n    res['average_precision_score'] = average_precision_score(y_test,test_probs)    \n    xgb_accum.append(res)\n    \n    \n\n    \n    \n\niteration 10\niteration 20\niteration 30\niteration 40\niteration 50\niteration 60\niteration 70\niteration 80\niteration 90\niteration 100\n\n\n\nimport pickle\nwith open('./results/xc_variability_random_splits.pkl','wb+') as outf:\n    pickle.dump((rf_accum,xgb_accum),outf)\n\nLook at the distribution of values for the normal random splits:\n\nplt.figure(figsize=(10,10))\nplt.subplot(2,2,1)\nplt.hist([x['cohen_kappa_score'] for x in xgb_accum]);\nplt.xlabel('kappa')\nplt.title('XGB')\nplt.subplot(2,2,2)\nplt.hist([x['roc_auc_score'] for x in xgb_accum]);\nplt.xlabel('auroc')\n\nplt.subplot(2,2,3)\nplt.hist([x['cohen_kappa_score'] for x in rf_accum]);\nplt.xlabel('kappa')\nplt.title('RF')\nplt.subplot(2,2,4)\nplt.hist([x['roc_auc_score'] for x in rf_accum]);\nplt.xlabel('auroc')\n\nplt.tight_layout()\n\n\n\n\n\n\n\n\nNow do 50 different 5-fold cross validation runs\n\nfrom sklearn.model_selection import StratifiedKFold\n\nacts = hlm_df['active'].to_numpy()\n\n\nrf_xc_accum = []\nxgb_xc_accum = []\nfor i in range(50):\n    print(f'iteration {i+1}')\n    skf = StratifiedKFold(n_splits=5,random_state=0xf00d+i,shuffle=True)\n    lres = []\n    for train_idx,test_idx in skf.split(fps,acts):\n        X_train = np.take(fps,train_idx,axis=0)\n        X_test = np.take(fps,test_idx,axis=0)\n        y_train = np.take(acts,train_idx)\n        y_test = np.take(acts,test_idx)\n        \n        cls = RandomForestClassifier(n_estimators=200,max_depth=20,min_samples_leaf=2,min_samples_split=4, n_jobs=6, random_state=0xfeed)\n        cls.fit(X_train,y_train)\n        test_probs = [x[1] for x in cls.predict_proba(X_test)]\n        test_preds = cls.predict(X_test)\n        res = {}\n        for metric in metrics:\n            res[metric] = metrics[metric](y_test,test_preds)\n\n        res['roc_auc_score'] = roc_auc_score(y_test,test_probs)\n        res['average_precision_score'] = average_precision_score(y_test,test_probs)    \n\n        cls = XGBClassifier(n_estimators=200,max_depth=3, n_jobs=6)\n        cls.fit(X_train,y_train)\n        test_probs = [x[1] for x in cls.predict_proba(X_test)]\n        test_preds = cls.predict(X_test)\n        xgres = {}\n        for metric in metrics:\n            xgres[metric] = metrics[metric](y_test,test_preds)\n        xgres['roc_auc_score'] = roc_auc_score(y_test,test_probs)\n        xgres['average_precision_score'] = average_precision_score(y_test,test_probs)    \n        lres.append((res,xgres))\n    tres = {}\n    for k in xgres:\n        tres[k] = [x[0][k] for x in lres]\n    rf_xc_accum.append(tres)\n    tres = {}\n    for k in xgres:\n        tres[k] = [x[1][k] for x in lres]\n    xgb_xc_accum.append(tres)\n    \n    \n\n    \n    \n\niteration 1\niteration 2\niteration 3\niteration 4\niteration 5\niteration 6\niteration 7\niteration 8\niteration 9\niteration 10\niteration 11\niteration 12\niteration 13\niteration 14\niteration 15\niteration 16\niteration 17\niteration 18\niteration 19\niteration 20\niteration 21\niteration 22\niteration 23\niteration 24\niteration 25\niteration 26\niteration 27\niteration 28\niteration 29\niteration 30\niteration 31\niteration 32\niteration 33\niteration 34\niteration 35\niteration 36\niteration 37\niteration 38\niteration 39\niteration 40\niteration 41\niteration 42\niteration 43\niteration 44\niteration 45\niteration 46\niteration 47\niteration 48\niteration 49\niteration 50\n\n\n\nimport pickle\nwith open('./results/xc_variability_xc.pkl','wb+') as outf:\n    pickle.dump((rf_xc_accum,xgb_xc_accum),outf)\n\nAnd look at the variability\n\nplt.figure(figsize=(10,10))\nplt.subplot(2,2,1)\nplt.hist([np.mean(x['cohen_kappa_score']) for x in xgb_xc_accum]);\nplt.xlabel('kappa')\nplt.title('XGB')\nplt.subplot(2,2,2)\nplt.hist([np.mean(x['roc_auc_score']) for x in xgb_xc_accum]);\nplt.xlabel('auroc')\n\nplt.subplot(2,2,3)\nplt.hist([np.mean(x['cohen_kappa_score']) for x in rf_xc_accum]);\nplt.xlabel('kappa')\nplt.title('RF')\nplt.subplot(2,2,4)\nplt.hist([np.mean(x['roc_auc_score']) for x in rf_xc_accum]);\nplt.xlabel('auroc')\n\nplt.tight_layout()\n\n\n\n\n\n\n\n\n\n\nMDCK dataset\n\nmdck_df = df[df['LOG MDR1-MDCK ER (B-A/A-B)'].notnull()].copy()\nmdck_df.shape\n\n(2642, 10)\n\n\n\nplt.hist(mdck_df['LOG MDR1-MDCK ER (B-A/A-B)']);\n\n\n\n\n\n\n\n\n\nmdck_df[mdck_df['LOG MDR1-MDCK ER (B-A/A-B)']&gt;1].shape\n\n(587, 10)\n\n\n\nmdck_df['active'] = [int(x) for x in mdck_df['LOG MDR1-MDCK ER (B-A/A-B)']&gt;1]\nms = [Chem.MolFromSmiles(x) for x in mdck_df['SMILES']]\nfpg = rdFingerprintGenerator.GetMorganGenerator(radius=3,fpSize=2048)\nfps = [fpg.GetCountFingerprintAsNumPy(x) for x in ms]\n\n\nfrom sklearn.model_selection import train_test_split\n\nacts = mdck_df['active'].to_list()\n\nmdck_rf_accum = []\nmdck_xgb_accum = []\nfor i in range(100):\n    if not (i+1)%10:\n        print(f'iteration {i+1}')\n    X_train, X_test, y_train, y_test = train_test_split(fps,acts, test_size=0.2, random_state=0xf00d+i, stratify=acts)\n    cls = RandomForestClassifier(n_estimators=200,max_depth=20,min_samples_leaf=2,min_samples_split=4, n_jobs=6, random_state=0xfeed)\n    cls.fit(X_train,y_train)\n    test_probs = [x[1] for x in cls.predict_proba(X_test)]\n    test_preds = cls.predict(X_test)\n    res = {}\n    for metric in metrics:\n        res[metric] = metrics[metric](y_test,test_preds)\n\n    res['roc_auc_score'] = roc_auc_score(y_test,test_probs)\n    res['average_precision_score'] = average_precision_score(y_test,test_probs)    \n    mdck_rf_accum.append(res)\n\n    cls = XGBClassifier(n_estimators=200,max_depth=3, n_jobs=6)\n    cls.fit(X_train,y_train)\n    test_probs = [x[1] for x in cls.predict_proba(X_test)]\n    test_preds = cls.predict(X_test)\n    res = {}\n    for metric in metrics:\n        res[metric] = metrics[metric](y_test,test_preds)\n\n    res['roc_auc_score'] = roc_auc_score(y_test,test_probs)\n    res['average_precision_score'] = average_precision_score(y_test,test_probs)    \n    mdck_xgb_accum.append(res)\n    \nimport pickle\nwith open('./results/mdck_xc_variability_random_splits.pkl','wb+') as outf:\n    pickle.dump((mdck_rf_accum,mdck_xgb_accum),outf)    \n\n    \n    \n\niteration 10\niteration 20\niteration 30\niteration 40\niteration 50\niteration 60\niteration 70\niteration 80\niteration 90\niteration 100\n\n\n\nfrom sklearn.model_selection import StratifiedKFold\n\nacts = mdck_df['active'].to_numpy()\n\n\nmdck_rf_xc_accum = []\nmdck_xgb_xc_accum = []\nfor i in range(50):\n    print(f'iteration {i+1}')\n    skf = StratifiedKFold(n_splits=5,random_state=0xf00d+i,shuffle=True)\n    lres = []\n    for train_idx,test_idx in skf.split(fps,acts):\n        X_train = np.take(fps,train_idx,axis=0)\n        X_test = np.take(fps,test_idx,axis=0)\n        y_train = np.take(acts,train_idx)\n        y_test = np.take(acts,test_idx)\n        \n        cls = RandomForestClassifier(n_estimators=200,max_depth=20,min_samples_leaf=2,min_samples_split=4, n_jobs=6, random_state=0xfeed)\n        cls.fit(X_train,y_train)\n        test_probs = [x[1] for x in cls.predict_proba(X_test)]\n        test_preds = cls.predict(X_test)\n        res = {}\n        for metric in metrics:\n            res[metric] = metrics[metric](y_test,test_preds)\n\n        res['roc_auc_score'] = roc_auc_score(y_test,test_probs)\n        res['average_precision_score'] = average_precision_score(y_test,test_probs)    \n\n        cls = XGBClassifier(n_estimators=200,max_depth=3, n_jobs=6)\n        cls.fit(X_train,y_train)\n        test_probs = [x[1] for x in cls.predict_proba(X_test)]\n        test_preds = cls.predict(X_test)\n        xgres = {}\n        for metric in metrics:\n            xgres[metric] = metrics[metric](y_test,test_preds)\n        xgres['roc_auc_score'] = roc_auc_score(y_test,test_probs)\n        xgres['average_precision_score'] = average_precision_score(y_test,test_probs)    \n        lres.append((res,xgres))\n    tres = {}\n    for k in xgres:\n        tres[k] = [x[0][k] for x in lres]\n    mdck_rf_xc_accum.append(tres)\n    tres = {}\n    for k in xgres:\n        tres[k] = [x[1][k] for x in lres]\n    mdck_xgb_xc_accum.append(tres)\n    \n    \nimport pickle\nwith open('./results/mdck_xc_variability_xc.pkl','wb+') as outf:\n    pickle.dump((mdck_rf_xc_accum,mdck_xgb_xc_accum),outf)\n    \n    \n\niteration 1\niteration 2\niteration 3\niteration 4\niteration 5\niteration 6\niteration 7\niteration 8\niteration 9\niteration 10\niteration 11\niteration 12\niteration 13\niteration 14\niteration 15\niteration 16\niteration 17\niteration 18\niteration 19\niteration 20\niteration 21\niteration 22\niteration 23\niteration 24\niteration 25\niteration 26\niteration 27\niteration 28\niteration 29\niteration 30\niteration 31\niteration 32\niteration 33\niteration 34\niteration 35\niteration 36\niteration 37\niteration 38\niteration 39\niteration 40\niteration 41\niteration 42\niteration 43\niteration 44\niteration 45\niteration 46\niteration 47\niteration 48\niteration 49\niteration 50\n\n\n\nplt.figure(figsize=(10,10))\nplt.subplot(2,2,1)\nplt.hist([x['cohen_kappa_score'] for x in mdck_xgb_accum]);\nplt.xlabel('kappa')\nplt.title('XGB')\nplt.subplot(2,2,2)\nplt.hist([x['roc_auc_score'] for x in mdck_xgb_accum]);\nplt.xlabel('auroc')\n\nplt.subplot(2,2,3)\nplt.hist([x['cohen_kappa_score'] for x in mdck_rf_accum]);\nplt.xlabel('kappa')\nplt.title('RF')\nplt.subplot(2,2,4)\nplt.hist([x['roc_auc_score'] for x in mdck_rf_accum]);\nplt.xlabel('auroc')\n\nplt.tight_layout()\n\n\n\n\n\n\n\n\n\nplt.figure(figsize=(10,10))\nplt.subplot(2,2,1)\nplt.hist([np.mean(x['cohen_kappa_score']) for x in mdck_xgb_xc_accum]);\nplt.xlabel('kappa')\nplt.title('XGB')\nplt.subplot(2,2,2)\nplt.hist([np.mean(x['roc_auc_score']) for x in mdck_xgb_xc_accum]);\nplt.xlabel('auroc')\n\nplt.subplot(2,2,3)\nplt.hist([np.mean(x['cohen_kappa_score']) for x in mdck_rf_xc_accum]);\nplt.xlabel('kappa')\nplt.title('RF')\nplt.subplot(2,2,4)\nplt.hist([np.mean(x['roc_auc_score']) for x in mdck_rf_xc_accum]);\nplt.xlabel('auroc')\n\nplt.tight_layout()\n\n\n\n\n\n\n\n\n\n\nPPB data set (smaller)\n\nppb_df = df[df['LOG PLASMA PROTEIN BINDING (HUMAN) (% unbound)'].notnull()].copy()\nplt.hist(ppb_df['LOG PLASMA PROTEIN BINDING (HUMAN) (% unbound)']);\n\n\n\n\n\n\n\n\n\nppb_df['active'] = [int(x) for x in ppb_df['LOG PLASMA PROTEIN BINDING (HUMAN) (% unbound)']&gt;1]\nms = [Chem.MolFromSmiles(x) for x in ppb_df['SMILES']]\nfpg = rdFingerprintGenerator.GetMorganGenerator(radius=3,fpSize=2048)\nfps = [fpg.GetCountFingerprintAsNumPy(x) for x in ms]\n\n\nfrom sklearn.model_selection import train_test_split\n\nacts = ppb_df['active'].to_list()\n\nppb_rf_accum = []\nppb_xgb_accum = []\nfor i in range(100):\n    if not (i+1)%10:\n        print(f'iteration {i+1}')\n    X_train, X_test, y_train, y_test = train_test_split(fps,acts, test_size=0.2, random_state=0xf00d+i, stratify=acts)\n    cls = RandomForestClassifier(n_estimators=200,max_depth=20,min_samples_leaf=2,min_samples_split=4, n_jobs=6, random_state=0xfeed)\n    cls.fit(X_train,y_train)\n    test_probs = [x[1] for x in cls.predict_proba(X_test)]\n    test_preds = cls.predict(X_test)\n    res = {}\n    for metric in metrics:\n        res[metric] = metrics[metric](y_test,test_preds)\n\n    res['roc_auc_score'] = roc_auc_score(y_test,test_probs)\n    res['average_precision_score'] = average_precision_score(y_test,test_probs)    \n    ppb_rf_accum.append(res)\n\n    cls = XGBClassifier(n_estimators=200,max_depth=3, n_jobs=6)\n    cls.fit(X_train,y_train)\n    test_probs = [x[1] for x in cls.predict_proba(X_test)]\n    test_preds = cls.predict(X_test)\n    res = {}\n    for metric in metrics:\n        res[metric] = metrics[metric](y_test,test_preds)\n\n    res['roc_auc_score'] = roc_auc_score(y_test,test_probs)\n    res['average_precision_score'] = average_precision_score(y_test,test_probs)    \n    ppb_xgb_accum.append(res)\n    \nimport pickle\nwith open('./results/ppb_xc_variability_random_splits.pkl','wb+') as outf:\n    pickle.dump((ppb_rf_accum,mdck_xgb_accum),outf)    \n\n    \n    \n\niteration 10\niteration 20\niteration 30\niteration 40\niteration 50\niteration 60\niteration 70\niteration 80\niteration 90\niteration 100\n\n\n\nfrom sklearn.model_selection import StratifiedKFold\n\nacts = ppb_df['active'].to_numpy()\n\n\nppb_rf_xc_accum = []\nppb_xgb_xc_accum = []\nfor i in range(50):\n    print(f'iteration {i+1}')\n    skf = StratifiedKFold(n_splits=5,random_state=0xf00d+i,shuffle=True)\n    lres = []\n    for train_idx,test_idx in skf.split(fps,acts):\n        X_train = np.take(fps,train_idx,axis=0)\n        X_test = np.take(fps,test_idx,axis=0)\n        y_train = np.take(acts,train_idx)\n        y_test = np.take(acts,test_idx)\n        \n        cls = RandomForestClassifier(n_estimators=200,max_depth=20,min_samples_leaf=2,min_samples_split=4, n_jobs=6, random_state=0xfeed)\n        cls.fit(X_train,y_train)\n        test_probs = [x[1] for x in cls.predict_proba(X_test)]\n        test_preds = cls.predict(X_test)\n        res = {}\n        for metric in metrics:\n            res[metric] = metrics[metric](y_test,test_preds)\n\n        res['roc_auc_score'] = roc_auc_score(y_test,test_probs)\n        res['average_precision_score'] = average_precision_score(y_test,test_probs)    \n\n        cls = XGBClassifier(n_estimators=200,max_depth=3, n_jobs=6)\n        cls.fit(X_train,y_train)\n        test_probs = [x[1] for x in cls.predict_proba(X_test)]\n        test_preds = cls.predict(X_test)\n        xgres = {}\n        for metric in metrics:\n            xgres[metric] = metrics[metric](y_test,test_preds)\n        xgres['roc_auc_score'] = roc_auc_score(y_test,test_probs)\n        xgres['average_precision_score'] = average_precision_score(y_test,test_probs)    \n        lres.append((res,xgres))\n    tres = {}\n    for k in xgres:\n        tres[k] = [x[0][k] for x in lres]\n    ppb_rf_xc_accum.append(tres)\n    tres = {}\n    for k in xgres:\n        tres[k] = [x[1][k] for x in lres]\n    ppb_xgb_xc_accum.append(tres)\n    \n    \nimport pickle\nwith open('./results/ppb_xc_variability_xc.pkl','wb+') as outf:\n    pickle.dump((ppb_rf_xc_accum,ppb_xgb_xc_accum),outf)\n    \n    \n\niteration 1\niteration 2\niteration 3\niteration 4\niteration 5\niteration 6\niteration 7\niteration 8\niteration 9\niteration 10\niteration 11\niteration 12\niteration 13\niteration 14\niteration 15\niteration 16\niteration 17\niteration 18\niteration 19\niteration 20\niteration 21\niteration 22\niteration 23\niteration 24\niteration 25\niteration 26\niteration 27\niteration 28\niteration 29\niteration 30\niteration 31\niteration 32\niteration 33\niteration 34\niteration 35\niteration 36\niteration 37\niteration 38\niteration 39\niteration 40\niteration 41\niteration 42\niteration 43\niteration 44\niteration 45\niteration 46\niteration 47\niteration 48\niteration 49\niteration 50\n\n\n\nplt.figure(figsize=(10,10))\nplt.subplot(2,2,1)\nplt.hist([x['cohen_kappa_score'] for x in ppb_xgb_accum]);\nplt.xlabel('kappa')\nplt.title('XGB')\nplt.subplot(2,2,2)\nplt.hist([x['roc_auc_score'] for x in ppb_xgb_accum]);\nplt.xlabel('auroc')\n\nplt.subplot(2,2,3)\nplt.hist([x['cohen_kappa_score'] for x in ppb_rf_accum]);\nplt.xlabel('kappa')\nplt.title('RF')\nplt.subplot(2,2,4)\nplt.hist([x['roc_auc_score'] for x in ppb_rf_accum]);\nplt.xlabel('auroc')\n\nplt.tight_layout()\n\n\n\n\n\n\n\n\n\nplt.figure(figsize=(10,10))\nplt.subplot(2,2,1)\nplt.hist([np.mean(x['cohen_kappa_score']) for x in ppb_xgb_xc_accum]);\nplt.xlabel('kappa')\nplt.title('XGB')\nplt.subplot(2,2,2)\nplt.hist([np.mean(x['roc_auc_score']) for x in ppb_xgb_xc_accum]);\nplt.xlabel('auroc')\n\nplt.subplot(2,2,3)\nplt.hist([np.mean(x['cohen_kappa_score']) for x in ppb_rf_xc_accum]);\nplt.xlabel('kappa')\nplt.title('RF')\nplt.subplot(2,2,4)\nplt.hist([np.mean(x['roc_auc_score']) for x in ppb_rf_xc_accum]);\nplt.xlabel('auroc')\n\nplt.tight_layout()\n\n\n\n\n\n\n\n\n\n\nAlternate ways of looking at the results\n\ntitle = 'PPB'\nt_rf = ppb_rf_accum\nt_xgb = ppb_xgb_accum\nt_rf_xc = ppb_rf_xc_accum\nt_xgb_xc = ppb_xgb_xc_accum\n\nplt.figure(figsize=(10,5))\n\nplt.subplot(1,2,1)\nplt.boxplot(([x['cohen_kappa_score'] for x in t_xgb],\n             [x['cohen_kappa_score'] for x in t_rf],\n             [np.mean(x['cohen_kappa_score']) for x in t_xgb_xc],\n             [np.mean(x['cohen_kappa_score']) for x in t_rf_xc]\n            ),labels=('XGB','RF','XGB-XC','RF-XC'));\nplt.ylabel('kappa');\nplt.title(title)\n\nplt.subplot(1,2,2)\nplt.boxplot(([x['roc_auc_score'] for x in t_xgb],\n             [x['roc_auc_score'] for x in t_rf],\n             [np.mean(x['roc_auc_score']) for x in t_xgb_xc],\n             [np.mean(x['roc_auc_score']) for x in t_rf_xc]\n            ),labels=('XGB','RF','XGB-XC','RF-XC'));\nplt.ylabel('AUROC');\n\n\n\n\n\n\n\n\n\ntitle = 'MDCK'\nt_rf = mdck_rf_accum\nt_xgb = mdck_xgb_accum\nt_rf_xc = mdck_rf_xc_accum\nt_xgb_xc = mdck_xgb_xc_accum\n\nplt.figure(figsize=(10,5))\n\nplt.subplot(1,2,1)\nplt.boxplot(([x['cohen_kappa_score'] for x in t_xgb],\n             [x['cohen_kappa_score'] for x in t_rf],\n             [np.mean(x['cohen_kappa_score']) for x in t_xgb_xc],\n             [np.mean(x['cohen_kappa_score']) for x in t_rf_xc]\n            ),labels=('XGB','RF','XGB-XC','RF-XC'));\nplt.ylabel('kappa');\nplt.title(title)\n\nplt.subplot(1,2,2)\nplt.boxplot(([x['roc_auc_score'] for x in t_xgb],\n             [x['roc_auc_score'] for x in t_rf],\n             [np.mean(x['roc_auc_score']) for x in t_xgb_xc],\n             [np.mean(x['roc_auc_score']) for x in t_rf_xc]\n            ),labels=('XGB','RF','XGB-XC','RF-XC'));\nplt.ylabel('AUROC');\n\n\n\n\n\n\n\n\n\ntitle = 'HLM'\nt_rf = rf_accum\nt_xgb = xgb_accum\nt_rf_xc = rf_xc_accum\nt_xgb_xc = xgb_xc_accum\n\nplt.figure(figsize=(10,5))\n\nplt.subplot(1,2,1)\nplt.boxplot(([x['cohen_kappa_score'] for x in t_xgb],\n             [x['cohen_kappa_score'] for x in t_rf],\n             [np.mean(x['cohen_kappa_score']) for x in t_xgb_xc],\n             [np.mean(x['cohen_kappa_score']) for x in t_rf_xc]\n            ),labels=('XGB','RF','XGB-XC','RF-XC'));\nplt.ylabel('kappa');\nplt.title(title)\n\nplt.subplot(1,2,2)\nplt.boxplot(([x['roc_auc_score'] for x in t_xgb],\n             [x['roc_auc_score'] for x in t_rf],\n             [np.mean(x['roc_auc_score']) for x in t_xgb_xc],\n             [np.mean(x['roc_auc_score']) for x in t_rf_xc]\n            ),labels=('XGB','RF','XGB-XC','RF-XC'));\nplt.ylabel('AUROC');\n\n\n\n\n\n\n\n\nHow often do we reach different conclusions?\n\ntitle = 'PPB'\nt_rf = ppb_rf_accum\nt_xgb = ppb_xgb_accum\nt_rf_xc = ppb_rf_xc_accum\nt_xgb_xc = ppb_xgb_xc_accum\n\nplt.figure(figsize=(10,5))\n\nplt.subplot(1,2,1)\ndiffs = [np.mean(x['cohen_kappa_score'])-np.mean(y['cohen_kappa_score']) for x,y in zip(t_xgb_xc,t_rf_xc)]\nprint(f'kappa fraction&gt;0: {sum(np.array(diffs)&gt;0)/len(diffs):.2f}')\nplt.hist(diffs);\nplt.title(title)\nplt.xlabel('$\\Delta$ kappa')\nplt.subplot(1,2,2)\ndiffs = [np.mean(x['roc_auc_score'])-np.mean(y['roc_auc_score']) for x,y in zip(t_xgb_xc,t_rf_xc)]\nprint(f'AUC fraction&gt;0: {sum(np.array(diffs)&gt;0)/len(diffs):.2f}')\n\nplt.hist(diffs);\nplt.xlabel('$\\Delta$ AUROC');\n\nkappa fraction&gt;0: 0.86\nAUC fraction&gt;0: 0.16\n\n\n\n\n\n\n\n\n\n\ntitle = 'MDCK'\nt_rf = mdck_rf_accum\nt_xgb = mdck_xgb_accum\nt_rf_xc = mdck_rf_xc_accum\nt_xgb_xc = mdck_xgb_xc_accum\n\nplt.figure(figsize=(10,5))\n\nplt.subplot(1,2,1)\ndiffs = [np.mean(x['cohen_kappa_score'])-np.mean(y['cohen_kappa_score']) for x,y in zip(t_xgb_xc,t_rf_xc)]\nprint(f'kappa fraction&gt;0: {sum(np.array(diffs)&gt;0)/len(diffs):.2f}')\nplt.hist(diffs);\nplt.title(title)\nplt.xlabel('$\\Delta$ kappa')\n\nplt.subplot(1,2,2)\ndiffs = [np.mean(x['roc_auc_score'])-np.mean(y['roc_auc_score']) for x,y in zip(t_xgb_xc,t_rf_xc)]\nprint(f'AUC fraction&gt;0: {sum(np.array(diffs)&gt;0)/len(diffs):.2f}')\n\nplt.hist(diffs);\nplt.xlabel('$\\Delta$ AUROC');\n\nkappa fraction&gt;0: 1.00\nAUC fraction&gt;0: 0.16\n\n\n\n\n\n\n\n\n\n\ntitle = 'HLM'\nt_rf = rf_accum\nt_xgb = xgb_accum\nt_rf_xc = rf_xc_accum\nt_xgb_xc = xgb_xc_accum\n\nplt.figure(figsize=(10,5))\n\nplt.subplot(1,2,1)\ndiffs = [np.mean(x['cohen_kappa_score'])-np.mean(y['cohen_kappa_score']) for x,y in zip(t_xgb_xc,t_rf_xc)]\nprint(f'kappa fraction&gt;0: {sum(np.array(diffs)&gt;0)/len(diffs):.2f}')\nplt.hist(diffs);\nplt.title(title)\nplt.xlabel('$\\Delta$ kappa')\n\nplt.subplot(1,2,2)\ndiffs = [np.mean(x['roc_auc_score'])-np.mean(y['roc_auc_score']) for x,y in zip(t_xgb_xc,t_rf_xc)]\nprint(f'AUC fraction&gt;0: {sum(np.array(diffs)&gt;0)/len(diffs):.2f}')\n\nplt.hist(diffs);\nplt.xlabel('$\\Delta$ AUROC');\n\nkappa fraction&gt;0: 1.00\nAUC fraction&gt;0: 1.00"
  },
  {
    "objectID": "posts/2023-04-17-what-are-the-vsa-descriptors.html",
    "href": "posts/2023-04-17-what-are-the-vsa-descriptors.html",
    "title": "What are the VSA Descriptors?",
    "section": "",
    "text": "Updated 15.04.2024 Added a section at the bottom about the EState_VSA and VSA_EState descriptors.\nA couple of weeks ago I read a fun preprint from a collaboration between Microsoft Research and Novartis: “Learning chemical intuition from humans in the loop” and noticed that one of the high-ranking descriptors in the authors’ analysis of the model they built is SMR_VSA3 (look at figure 4 in the preprint). Since I’ve seen that descriptor, or other descriptors from the same family, show up repeatedly when analyzing models, and because I bet that most people don’t really have much (if any) idea of what exactly those descriptors are, I figured it’s worth a short blog post.\nThe descriptors were introduced in the paper “A widely applicable set of descriptors” published by Paul Labute in the Journal of Molecular Graphics and Modelling back in 2000. Here’s a link Random aside: I’m a bit surprised to see that JMGM still exists… it used to be on my standard reading list back in the day, but I haven’t thought about it in years. :-)\nAdded 19.04.2023 Esben Jannik Bjerrum pointed out that the original version of that article is still available via the wayback machine. Thanks Esben!\nI won’t get deeply into the motivation and derivation, read the paper for that, but Paul wanted to come up with a set of descriptors which were generally useful for QSAR studies. He published a three sets of related descriptors: SlogP_VSAX, SMR_VSAX, and PEOE_VSAX which are all based on the same idea: you calculate the contribution of each atom in the molecule to a molecular property (either LogP, MR, or the partial charge) along with the contribution of each atom to an approximate molecular surface area measure (this is the VSA part), assign the atoms to bins based on the property contributions, and then sum up the VSA contributions for each atom in a bin.\nSounds complicated, but it isn’t. Here’s a simple example, the molecule methylamine CN\n\n\n\natom\nlogp contribution\nVSA contribution\n\n\n\n\nC\n-0.2035\n7.048\n\n\nN\n-1.019\n5.734\n\n\n\nThe boundaries of the LogP bins for the SlogP_VSA descriptor that the RDKit uses are:\n[-0.4, -0.2, 0, 0.1, 0.15, 0.2, 0.25, 0.3, 0.4, 0.5, 0.6]\nSo the N would add a contribution of 5.734 to bin 1 and the C would add a contribution of 7.048 to bin 2 (for this descriptor the bins are labelled from 1).\nThe boundaries for SMR and PEOE are:\n[1.29, 1.82, 2.24, 2.45, 2.75, 3.05, 3.63, 3.8, 4.0]\nand\n[-.3, -.25, -.20, -.15, -.10, -.05, 0, .05, .10, .15, .20, .25, .30]\nFor what it’s worth, Here’s where you can find those bin definitions in the RDKit source code: - SlogP_VSA: https://github.com/rdkit/rdkit-orig/blob/master/Code/GraphMol/Descriptors/MolSurf.cpp#L256 - SMR_VSA: https://github.com/rdkit/rdkit-orig/blob/master/Code/GraphMol/Descriptors/MolSurf.cpp#L281 - PEOE_VSA: https://github.com/rdkit/rdkit-orig/blob/master/Code/GraphMol/Descriptors/MolSurf.cpp#L306\nThese descriptors do end up being quite useful, but they at first seem totally non-interpretable. It turns out that this isn’t completely true: with a bit of digging it’s possible to get a bit of a sense of what the descriptors actually mean.\nSo with that background, let’s go figure out what SMR_VSA3 actually means.\n\nfrom rdkit import Chem\nfrom rdkit.Chem import rdMolDescriptors\nfrom rdkit.Chem import Descriptors\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem import Crippen\nimport rdkit\nprint(rdkit.__version__)\n\n2024.03.1\n\n\nLet’s start by looking at the docstring for SMR_VSA3, because that will tell us what the bins are (we could also look them up above, but then we’d have to figure out which bins are where… this is easier:\n\nprint(Descriptors.SMR_VSA3.__doc__)\n\nMOE MR VSA Descriptor 3 ( 1.82 &lt;= x &lt;  2.24)\n\n\nSo we know that SMR_VSA3 is the sum of the VSA contributions from atoms which contribute between 1.82 and 2.24 to the SMR value.\nThe SMR (and SlogP) contributions are calculated using a method published by Wildman and Crippen back in 1999: https://doi.org/10.1021/ci990307l) using SMARTS definitions.\nHere’s the data that the RDKit uses for that:\n\n# from: https://github.com/rdkit/rdkit/blob/master/Code/GraphMol/Descriptors/Crippen.cpp#L194\n# each line includes the atom label, the SMARTS, the logP contribution, the MR contribution, and an optional note\nrdkit_data='''C1    [CH4]   0.1441  2.503   \nC1  [CH3]C  0.1441  2.503   \nC1  [CH2](C)C   0.1441  2.503   \nC2  [CH](C)(C)C 0   2.433   \nC2  [C](C)(C)(C)C   0   2.433   \nC3  [CH3][N,O,P,S,F,Cl,Br,I]    -0.2035 2.753   \nC3  [CH2X4]([N,O,P,S,F,Cl,Br,I])[A;!#1] -0.2035 2.753   \nC4  [CH1X4]([N,O,P,S,F,Cl,Br,I])([A;!#1])[A;!#1]    -0.2051 2.731   \nC4  [CH0X4]([N,O,P,S,F,Cl,Br,I])([A;!#1])([A;!#1])[A;!#1]   -0.2051 2.731   \nC5  [C]=[!C;A;!#1]  -0.2783 5.007   \nC6  [CH2]=C 0.1551  3.513   \nC6  [CH1](=C)[A;!#1]    0.1551  3.513   \nC6  [CH0](=C)([A;!#1])[A;!#1]   0.1551  3.513   \nC6  [C](=C)=C   0.1551  3.513   \nC7  [CX2]#[A;!#1]   0.0017  3.888   \nC8  [CH3]c  0.08452 2.464   \nC9  [CH3]a  -0.1444 2.412   \nC10 [CH2X4]a    -0.0516 2.488   \nC11 [CHX4]a 0.1193  2.582   \nC12 [CH0X4]a    -0.0967 2.576   \nC13 [cH0]-[A;!C;!N;!O;!S;!F;!Cl;!Br;!I;!#1] -0.5443 4.041   \nC14 [c][#9] 0   3.257   \nC15 [c][#17]    0.245   3.564   \nC16 [c][#35]    0.198   3.18    \nC17 [c][#53]    0   3.104   \nC18 [cH]    0.1581  3.35    \nC19 [c](:a)(:a):a   0.2955  4.346   \nC20 [c](:a)(:a)-a   0.2713  3.904   \nC21 [c](:a)(:a)-C   0.136   3.509   \nC22 [c](:a)(:a)-N   0.4619  4.067   \nC23 [c](:a)(:a)-O   0.5437  3.853   \nC24 [c](:a)(:a)-S   0.1893  2.673   \nC25 [c](:a)(:a)=[C,N,O] -0.8186 3.135   \nC26 [C](=C)(a)[A;!#1]   0.264   4.305   \nC26 [C](=C)(c)a 0.264   4.305   \nC26 [CH1](=C)a  0.264   4.305   \nC26 [C]=c   0.264   4.305   \nC27 [CX4][A;!C;!N;!O;!P;!S;!F;!Cl;!Br;!I;!#1]   0.2148  2.693   \nCS  [#6]    0.08129 3.243   \nH1  [#1][#6,#1] 0.123   1.057   \nH2  [#1]O[CX4,c]    -0.2677 1.395   \nH2  [#1]O[!#6;!#7;!#8;!#16] -0.2677 1.395   \nH2  [#1][!#6;!#7;!#8]   -0.2677 1.395   \nH3  [#1][#7]    0.2142  0.9627  \nH3  [#1]O[#7]   0.2142  0.9627  \nH4  [#1]OC=[#6,#7,O,S]  0.298   1.805   \nH4  [#1]O[O,S]  0.298   1.805   \nHS  [#1]    0.1125  1.112   \nN1  [NH2+0][A;!#1]  -1.019  2.262   \nN2  [NH+0]([A;!#1])[A;!#1]  -0.7096 2.173   \nN3  [NH2+0]a    -1.027  2.827   \nN4  [NH1+0]([!#1;A,a])a -0.5188 3   \nN5  [NH+0]=[!#1;A,a]    0.08387 1.757   \nN6  [N+0](=[!#1;A,a])[!#1;A,a]  0.1836  2.428   \nN7  [N+0]([A;!#1])([A;!#1])[A;!#1]  -0.3187 1.839   \nN8  [N+0](a)([!#1;A,a])[A;!#1]  -0.4458 2.819   \nN8  [N+0](a)(a)a    -0.4458 2.819   \nN9  [N+0]#[A;!#1]   0.01508 1.725   \nN10 [NH3,NH2,NH;+,+2,+3]    -1.95       \nN11 [n+0]   -0.3239 2.202   \nN12 [n;+,+2,+3] -1.119      \nN13 [NH0;+,+2,+3]([A;!#1])([A;!#1])([A;!#1])[A;!#1] -0.3396 0.2604  \nN13 [NH0;+,+2,+3](=[A;!#1])([A;!#1])[!#1;A,a]   -0.3396 0.2604  \nN13 [NH0;+,+2,+3](=[#6])=[#7]   -0.3396 0.2604  \nN14 [N;+,+2,+3]#[A;!#1] 0.2887  3.359   \nN14 [N;-,-2,-3] 0.2887  3.359   \nN14 [N;+,+2,+3](=[N;-,-2,-3])=N 0.2887  3.359   \nNS  [#7]    -0.4806 2.134   \nO1  [o] 0.1552  1.08    \nO2  [OH,OH2]    -0.2893 0.8238  \nO3  [O]([A;!#1])[A;!#1] -0.0684 1.085   \nO4  [O](a)[!#1;A,a] -0.4195 1.182   \nO5  [O]=[#7,#8] 0.0335  3.367   \nO5  [OX1;-,-2,-3][#7]   0.0335  3.367   \nO6  [OX1;-,-2,-2][#16]  -0.3339 0.7774  \nO6  [O;-0]=[#16;-0] -0.3339 0.7774  \nO12 [O-]C(=O)   -1.326      \\\"order flip here intentional\\\"\nO7  [OX1;-,-2,-3][!#1;!N;!S]    -1.189  0   \nO8  [O]=c   0.1788  3.135   \nO9  [O]=[CH]C   -0.1526 0   \nO9  [O]=C(C)([A;!#1])   -0.1526 0   \nO9  [O]=[CH][N,O]   -0.1526 0   \nO9  [O]=[CH2]   -0.1526 0   \nO9  [O]=[CX2]=O -0.1526 0   \nO10 [O]=[CH]c   0.1129  0.2215  \nO10 [O]=C([C,c])[a;!#1] 0.1129  0.2215  \nO10 [O]=C(c)[A;!#1] 0.1129  0.2215  \nO11 [O]=C([!#1;!#6])[!#1;!#6]   0.4833  0.389   \nOS  [#8]    -0.1188 0.6865  \nF   [#9-0]  0.4202  1.108   \nCl  [#17-0] 0.6895  5.853   \nBr  [#35-0] 0.8456  8.927   \nI   [#53-0] 0.8857  14.02   \nHal [#9,#17,#35,#53;-]  -2.996      \nHal [#53;+,+2,+3]   -2.996      \nHal [+;#3,#11,#19,#37,#55]  -2.996      \\\"Footnote h indicates these should be here?\\\"\nP   [#15]   0.8612  6.92    \nS2  [S;-,-2,-3,-4,+1,+2,+3,+5,+6]   -0.0024 7.365   \\\"Order flip here is intentional\\\"\nS2  [S-0]=[N,O,P,S] -0.0024 7.365   \\\"Expanded definition of (pseudo-)ionic S\\\"\nS1  [S;A]   0.6482  7.591   \\\"Order flip here is intentional\\\"\nS3  [s;a]   0.6237  6.691   \nMe1 [#3,#11,#19,#37,#55]    -0.3808 5.754   \nMe1 [#4,#12,#20,#38,#56]    -0.3808 5.754   \nMe1 [#5,#13,#31,#49,#81]    -0.3808 5.754   \nMe1 [#14,#32,#50,#82]   -0.3808 5.754   \nMe1 [#33,#51,#83]   -0.3808 5.754   \nMe1 [#34,#52,#84]   -0.3808 5.754   \nMe2 [#21,#22,#23,#24,#25,#26,#27,#28,#29,#30]   -0.0025     \nMe2 [#39,#40,#41,#42,#43,#44,#45,#46,#47,#48]   -0.0025     \nMe2 [#72,#73,#74,#75,#76,#77,#78,#79,#80]   -0.0025     '''\n\nLet’s parse that data so that we can do something with it:\n\nfrom collections import namedtuple\n\nCrippenTuple = namedtuple('CrippenTuple',('name','smarts','logp_contrib','mr_contrib','note'))\nlines = [x.split('\\t') for x in rdkit_data.split('\\n')]\n\ncrippenData = []\nfor i,entry in enumerate(lines):\n    entry[2] = float(entry[2])\n    if entry[3]:\n        entry[3] = float(entry[3])\n    else:\n        entry[3] = None\n    crippenData.append(CrippenTuple(*entry))\nprint(crippenData[:3])\n\n[CrippenTuple(name='C1', smarts='[CH4]', logp_contrib=0.1441, mr_contrib=2.503, note=''), CrippenTuple(name='C1', smarts='[CH3]C', logp_contrib=0.1441, mr_contrib=2.503, note=''), CrippenTuple(name='C1', smarts='[CH2](C)C', logp_contrib=0.1441, mr_contrib=2.503, note='')]\n\n\nNow define two functions to look things up in that data:\n\nimport re\ndef find_contribs_for_bin(lower,upper,crippenData=crippenData,which='mr_contrib'):\n    ' returns a list of Crippen contributions which are between lower and upper '\n    res = []\n    for tpl in crippenData:\n        v = getattr(tpl,which)\n        if v is not None and v&gt;=lower and v&lt;=upper:\n            res.append(tpl)\n    return res\ndef find_tuples_for_atom(symbol,crippenData=crippenData):\n    ' returns a list of crippen contributions for a particular atomic symbol, i.e. \"C\" or \"N\"'\n    res = []\n    anum = Chem.GetPeriodicTable().GetAtomicNumber(symbol)\n    for tpl in crippenData:\n        if tpl.name.startswith(symbol) or re.match(f'\\[[^\\]]*#{anum}[^0-9]',tpl.smarts):\n            res.append(tpl)\n    return res\n\nNow we can use that function to lookup the contributions which fall within the SMR_VSA3 SMR bins:\n\nfind_contribs_for_bin(1.82,2.24)\n\n[CrippenTuple(name='N2', smarts='[NH+0]([A;!#1])[A;!#1]', logp_contrib=-0.7096, mr_contrib=2.173, note=''),\n CrippenTuple(name='N7', smarts='[N+0]([A;!#1])([A;!#1])[A;!#1]', logp_contrib=-0.3187, mr_contrib=1.839, note=''),\n CrippenTuple(name='N11', smarts='[n+0]', logp_contrib=-0.3239, mr_contrib=2.202, note=''),\n CrippenTuple(name='NS', smarts='[#7]', logp_contrib=-0.4806, mr_contrib=2.134, note='')]\n\n\nSo the only atom types which can contribute to this bin are Ns.\nThe first two atom type definitions are reasonably specific: - N2: neutral aliphatic N with one H and two non-hydrogen aliphatic neighbors - N7: neutral aliphatic N with three non-hydrogen aliphatic neighbors\nThe last two are less specific: - N11: neutral aromatic N - NS: any nitrogen\nThese would only be matched to atoms which haven’t matched any of the more specific defintions for N.\nHere’s the full set of N definitions:\n\nfind_tuples_for_atom('N')\n\n[CrippenTuple(name='N1', smarts='[NH2+0][A;!#1]', logp_contrib=-1.019, mr_contrib=2.262, note=''),\n CrippenTuple(name='N2', smarts='[NH+0]([A;!#1])[A;!#1]', logp_contrib=-0.7096, mr_contrib=2.173, note=''),\n CrippenTuple(name='N3', smarts='[NH2+0]a', logp_contrib=-1.027, mr_contrib=2.827, note=''),\n CrippenTuple(name='N4', smarts='[NH1+0]([!#1;A,a])a', logp_contrib=-0.5188, mr_contrib=3.0, note=''),\n CrippenTuple(name='N5', smarts='[NH+0]=[!#1;A,a]', logp_contrib=0.08387, mr_contrib=1.757, note=''),\n CrippenTuple(name='N6', smarts='[N+0](=[!#1;A,a])[!#1;A,a]', logp_contrib=0.1836, mr_contrib=2.428, note=''),\n CrippenTuple(name='N7', smarts='[N+0]([A;!#1])([A;!#1])[A;!#1]', logp_contrib=-0.3187, mr_contrib=1.839, note=''),\n CrippenTuple(name='N8', smarts='[N+0](a)([!#1;A,a])[A;!#1]', logp_contrib=-0.4458, mr_contrib=2.819, note=''),\n CrippenTuple(name='N8', smarts='[N+0](a)(a)a', logp_contrib=-0.4458, mr_contrib=2.819, note=''),\n CrippenTuple(name='N9', smarts='[N+0]#[A;!#1]', logp_contrib=0.01508, mr_contrib=1.725, note=''),\n CrippenTuple(name='N10', smarts='[NH3,NH2,NH;+,+2,+3]', logp_contrib=-1.95, mr_contrib=None, note=''),\n CrippenTuple(name='N11', smarts='[n+0]', logp_contrib=-0.3239, mr_contrib=2.202, note=''),\n CrippenTuple(name='N12', smarts='[n;+,+2,+3]', logp_contrib=-1.119, mr_contrib=None, note=''),\n CrippenTuple(name='N13', smarts='[NH0;+,+2,+3]([A;!#1])([A;!#1])([A;!#1])[A;!#1]', logp_contrib=-0.3396, mr_contrib=0.2604, note=''),\n CrippenTuple(name='N13', smarts='[NH0;+,+2,+3](=[A;!#1])([A;!#1])[!#1;A,a]', logp_contrib=-0.3396, mr_contrib=0.2604, note=''),\n CrippenTuple(name='N13', smarts='[NH0;+,+2,+3](=[#6])=[#7]', logp_contrib=-0.3396, mr_contrib=0.2604, note=''),\n CrippenTuple(name='N14', smarts='[N;+,+2,+3]#[A;!#1]', logp_contrib=0.2887, mr_contrib=3.359, note=''),\n CrippenTuple(name='N14', smarts='[N;-,-2,-3]', logp_contrib=0.2887, mr_contrib=3.359, note=''),\n CrippenTuple(name='N14', smarts='[N;+,+2,+3](=[N;-,-2,-3])=N', logp_contrib=0.2887, mr_contrib=3.359, note=''),\n CrippenTuple(name='NS', smarts='[#7]', logp_contrib=-0.4806, mr_contrib=2.134, note='')]\n\n\nLet’s check our understanding…\nStart by constructing a molecule with a neutral aliphatic N which has one H and two non-H aliphatic neighbors:\n\nm = Chem.MolFromSmiles('CNC')\n\nCalculate the Crippen contribs for that. We expect the second atom to be of type N2, with an MR contribution (the second element of each of the 2-tuples in the list below) of 2.173:\n\nrdMolDescriptors._CalcCrippenContribs(m)\n\n[(-0.2035, 2.753), (-0.7096, 2.173), (-0.2035, 2.753)]\n\n\nPerfect!\nWhat’s the VSA contribution of the atoms? For historical reasons we get these with the function rdMolDescriptors._CalcLabuteASAContribs():\n\nlist(rdMolDescriptors._CalcLabuteASAContribs(m)[0])\n\n[7.04767198267719, 5.316788604006331, 7.04767198267719]\n\n\nBased on this, we’d expect SMR_VSA3 for this molecule to be 5.317:\n\nDescriptors.SMR_VSA3(m)\n\n5.316788604006331\n\n\nYep! That was right.\nLet’s try another one… this time with a neutral aromatic N. We’ll use pyridine:\n\npyridine = Chem.MolFromSmiles('n1ccccc1')\nDescriptors.SMR_VSA3(pyridine)\n\n4.9839785209472085\n\n\n\nrdMolDescriptors._CalcCrippenContribs(pyridine)[0]\n\n(-0.3239, 2.202)\n\n\nSince the SMR contribution of the N in pyridine is also in our bin, we know that the VSA contribution from that atom will be 4.984:\n\nlist(rdMolDescriptors._CalcLabuteASAContribs(pyridine)[0])[0]\n\n4.9839785209472085\n\n\nTo come back to the original point: what does this tell us about the model from the preprint I mentioned at the beginning of the post?\nThe fact that SMR_VSA3 has a reasonably large negative correlation with the compound scores in the paper indicates that adding neutral N atoms has a tendency to make molecules more attractive to medicinal chemists. Take a look at the preprint to understand more about the model the authors built; it’s worth reading.\nNote that the code above can be used to help decipher other SlogP_VSA and SMR_VSA descriptors. I hope it’s useful!\n\nAddendum: EState_VSA descriptors\nAdded: 15 April, 2024\nA question came up on the original version of this post as to whether or not the same analysis could be applied to the EState_VSA descriptors. The answer is “yes” and this short section shows how to.\nThe rdkit.Chem.EState_VSA module provides two closely related families of descriptors EState_VSA*() and VSA_Estate*(). EState_VSA*() is exactly analogous to SMR_VSA*() except it sums VSA contributions using EState index bins instead of SMR bins. VSA_EState*() is the same idea, but it sums EState indices over VSA contribution bins.\n\nAside: the reference for the EState indices is: Hall, Mohney and Kier. JCICS 31 76-81 (1991) https://pubs.acs.org/doi/pdf/10.1021/ci00001a012\n\nLet’s look at the same simple molecule as above:\n\nfrom rdkit.Chem import EState\nfrom rdkit.Chem.EState import EState_VSA\n\nStart by getting the EState indices:\n\nm = Chem.MolFromSmiles('CNC')\ncontribs = EState.EStateIndices(m)\ncontribs\n\narray([1.875, 2.75 , 1.875])\n\n\nAnd the VSA contributions:\n\nlist(rdMolDescriptors._CalcLabuteASAContribs(m)[0])\n\n[7.04767198267719, 5.316788604006331, 7.04767198267719]\n\n\nHere are the EState bins, used for EState_VSA*():\n\nEState_VSA.estateBins\n\n[-0.39, 0.29, 0.717, 1.165, 1.54, 1.807, 2.05, 4.69, 9.17, 15.0]\n\n\nBased on these bins and the EState values of 1.875 and 2.75, we’d expect to see nonzero values for EState_VSA7() (from the two C atoms) and EState_VSA8() (from the N atom):\n\nEState_VSA.EState_VSA7(m),EState_VSA.EState_VSA8(m)\n\n(14.09534396535438, 5.316788604006331)\n\n\nAnd here are the VSA bins:\n\nEState_VSA.vsaBins\n\n[4.78, 5.0, 5.41, 5.74, 6.0, 6.07, 6.45, 7.0, 11.0]\n\n\nBased on those and the VSA values of 7.05 and 5.32, we’d expect nonzero values for VSA_EState3() (from the N atom) and VSA_EState9() (from the two C atoms).\n\nEState_VSA.VSA_EState3(m),EState_VSA.VSA_EState9(m)\n\n(2.75, 3.75)"
  },
  {
    "objectID": "posts/2022-06-22-variability-of-pmi-descriptors.html",
    "href": "posts/2022-06-22-variability-of-pmi-descriptors.html",
    "title": "Variability of PMI descriptors",
    "section": "",
    "text": "Earlier this year Axel asked about the differences in PMI (princile moments of inertia) values between different stereoisomers of the same molecule. I guessed, but wasn’t sure, that the differences arising from different stereoisomers would be small relative to those arising from inter-conformer variability in the structure.\nThis post looks into that question.\n\nfrom rdkit import Chem\nfrom rdkit.Chem import rdDistGeom\nfrom rdkit.Chem import rdMolDescriptors\nfrom rdkit.Chem import Descriptors\nfrom rdkit.Chem import rdDepictor\nrdDepictor.SetPreferCoordGen(True)\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit.Chem import Draw\nimport numpy as np\nimport rdkit\nprint(rdkit.__version__)\n%pylab inline\n\n2022.03.2\n%pylab is deprecated, use %matplotlib inline and import the required libraries.\nPopulating the interactive namespace from numpy and matplotlib\n\n\nStart by reading in 50 molecules from the platinum dataset which have at least one chiral center.\nNote that as of the 2022.03.3 release of the RDKit the explicit call to AssignStereochemistryFrom3D() is no longer necessary for molecules which have 3D conformers. We changed the default behavior so that this function is called whenever a molecule has a 3D conformer.\n\nwith Chem.SDMolSupplier('../data/platinum_dataset_2017_01.sdf',removeHs=False) as suppl:\n    ms = []\n    while len(ms)&lt;50:\n        m = next(suppl)\n        if not m:\n            continue\n        Chem.AssignStereochemistryFrom3D(m)\n        if len(Chem.FindMolChiralCenters(m))&lt;1:\n            continue\n        ms.append(m)\n\nLook at the number of chiral centers present in each molecule\n\nfigsize(6,6)\nhist([len(Chem.FindPotentialStereo(m)) for m in ms],bins=20);\nxlabel('num chiral centers')\nylabel('count');\n\n\n\n\n\n\n\n\n\ninter-conformer variability for a single stereoisomer\nStart by generating 100 conformers for each of our molecules.\nWe will only generate conformers which match the stereochemistry of the input structure (this is the default RDKit behavior).\n\nps = rdDistGeom.srETKDGv3()\nps.numThreads = 6\nps.randomSeed = 0xf00d\nps.pruneRmsThresh = 0.5\n\nfor m in ms:\n    rdDistGeom.EmbedMultipleConfs(m,100,ps)\n\nGenerate the three PMI descriptors for each conformer of each molecule (note that PMI1 is the smallest principle moment).\n\naccum = []\nfor m in ms:\n    confs = m.GetConformers()\n    d = []\n    for conf in confs:\n        d.append((rdMolDescriptors.CalcPMI1(m,confId=conf.GetId()),\n        rdMolDescriptors.CalcPMI2(m,confId=conf.GetId()),\n        rdMolDescriptors.CalcPMI3(m,confId=conf.GetId())))\n    accum.append(np.array(d))\n\nLook at the inter-conformer variability, as measured by the relative standard deviation, of the three descriptors\n\nfigsize(9,6)\nmeans = np.array([np.average(mat,axis=0) for mat in accum])\nstds = np.array([np.std(mat,axis=0) for mat in accum])\nrel_stds = stds/means\nhist(rel_stds,bins=10,label=('PMI1','PMI2','PMI3'));\nlegend();\ntitle('inter-conformer variation, single stereoisomer')\nxlabel('relative std dev');\n\n\n\n\n\n\n\n\nAnd let’s look at the standard deviations themselves:\n\nfigsize(9,6)\nhist(stds,bins=10,label=('PMI1','PMI2','PMI3'));\nlegend();\ntitle('inter-conformer variation, single stereoisomer')\nxlabel('std dev');\n\n\n\n\n\n\n\n\n\n\nVariability across conformers and stereoisomers\n\nm2s = [Chem.Mol(m) for m in ms]\n\n\nps = rdDistGeom.srETKDGv3()\nps.numThreads = 6\nps.randomSeed = 0xf00d\nps.pruneRmsThresh = 0.5\nps.enforceChirality = False\n\nfor m in m2s:\n    rdDistGeom.EmbedMultipleConfs(m,100,ps)\n\n\naccum2 = []\nfor m in m2s:\n    confs = m.GetConformers()\n    d = []\n    for conf in confs:\n        d.append((rdMolDescriptors.CalcPMI1(m,confId=conf.GetId()),\n        rdMolDescriptors.CalcPMI2(m,confId=conf.GetId()),\n        rdMolDescriptors.CalcPMI3(m,confId=conf.GetId())))\n    accum2.append(np.array(d))\n\n\nfigsize(9,6)\nmeans2 = np.array([np.average(mat,axis=0) for mat in accum2])\nstds2 = np.array([np.std(mat,axis=0) for mat in accum2])\nrel_stds2 = stds2/means2\nhist(rel_stds2,bins=10,label=('PMI1','PMI2','PMI3'));\nlegend();\ntitle('inter-conformer variation, multiple stereoisomers')\nxlabel('relative std dev');\n\n\n\n\n\n\n\n\n\n\nCompare the single stereisomer variability to the multiple stereoisomer variability\nFirst make sure that the means don’t actually change\n\nfigsize(6,6)\nscatter((means)[:,0],(means2)[:,0],label='PMI1');\nscatter((means)[:,1],(means2)[:,1],label='PMI2');\nscatter((means)[:,2],(means2)[:,2],label='PMI3');\n\nylabel('multiple stereoisomers')\nxlabel('single stereoisomer');\ntitle('mean')\nlegend()\nplot((0,25000),(0,25000),'k');\n\n\n\n\n\n\n\n\nThat looks good\n\nfigsize(6,6)\n\nscatter((stds/means)[:,0],(stds2/means2)[:,0],label='PMI1');\nscatter((stds/means)[:,1],(stds2/means2)[:,1],label='PMI2');\nscatter((stds/means)[:,2],(stds2/means2)[:,2],label='PMI3');\n\nylabel('multiple stereoisomers')\nxlabel('single stereoisomer');\ntitle('relative std dev')\nlegend()\nplot((0,0.35),(0,0.35),'k');\n\n\n\n\n\n\n\n\nSo, at least for this set of 50 molecules, it looks like the answer to Axel’s question is that the differences in PMI which arise from differing stereoisomers are small relative to the differences between conformers.\nLet’s still dig into the results a little bit. Which molecule(s) have the highest deviation for each of the moments?\n\nindices = (argmax((stds2/means2)[:,0]-(stds/means)[:,0]),\\\nargmax((stds2/means2)[:,1]-(stds/means)[:,1]),\\\nargmax((stds2/means2)[:,2]-(stds/means)[:,2]))\nindices\n\n(13, 13, 37)\n\n\nLet’s look at those two molecules\n\nIPythonConsole.molSize = 350,350\nIPythonConsole.drawOptions.addAtomIndices = True\n\nmaxdevs = [Chem.RemoveHs(Chem.Mol(ms[x])) for x in (13,37)]\nfor md in maxdevs:\n           rdDepictor.Compute2DCoords(md)\nDraw.MolsToGridImage(maxdevs,subImgSize=(350,350),molsPerRow=2)\n\n\n\n\n\n\n\n\nJust to be sure, check which atoms can be stereo:\n\nChem.AssignStereochemistry(maxdevs[0],force=True,flagPossibleStereoCenters=True)\nfor atom in maxdevs[0].GetAtoms():\n    if atom.HasProp('_ChiralityPossible'):\n        print(atom.GetIdx())\n\n11\n16\n\n\nLook at one of the conformers:\n\nIPythonConsole.ipython_3d = True\nms[13]\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol"
  },
  {
    "objectID": "posts/2022-06-23-3d-mcs.html",
    "href": "posts/2022-06-23-3d-mcs.html",
    "title": "3D maximum common substructure",
    "section": "",
    "text": "One of the “underdocumented”, and perhaps lesser known, features of the RDKit MCS code is the ability to take atomic coordinates into account when generating the MCS. The idea here is to find the MCS between a set of 3D molecules where the distance between potential matching atoms is taken into account.\nThis blog post shows how to do it.\n\nfrom rdkit import Chem\nfrom rdkit.Chem import rdDistGeom\nfrom rdkit.Chem import rdFMCS\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit.Chem import rdDepictor\nrdDepictor.SetPreferCoordGen(True)\nIPythonConsole.ipython_3d = True\nimport rdkit\nprint(rdkit.__version__)\n\n2022.03.3\n\n\nLet’s start with an artifical example as a demo:\n\nm1 = Chem.MolFromSmiles('c1ccccc1-c1c(C(F)(F)F)cc(-c2c(C(F)(F)F)cccn2)cc1')\nIPythonConsole.drawOptions.addAtomIndices = True\nm1\n\n\n\n\n\n\n\n\nGenerate a conformer:\n\nm1 = Chem.AddHs(m1)\nrdDistGeom.EmbedMolecule(m1,randomSeed=0xf00d)\nm1 = Chem.RemoveHs(m1)\n\n\nm1\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol\n        \n\n\n\n\n\n\nClip out the central ring and change one of the atoms to an N\n\nm2 = Chem.RWMol(m1)\nkeep = [6,7,12,13,24,25]\nremove = set(range(m2.GetNumAtoms())).difference(keep)\nm2.BeginBatchEdit()\nfor aidx in remove:\n    m2.RemoveAtom(aidx)\nm2.CommitBatchEdit()\nm2.GetAtomWithIdx(0).SetAtomicNum(7)\nm2\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol\n        \n\n\n\n\n\n\nA normal MCS will, of course, match this to the N-containing ring:\n\nps = rdFMCS.MCSParameters()\nres = rdFMCS.FindMCS([m1,m2],ps)\nprint(res.smartsString)\n\n[#7]1:[#6]:[#6]:[#6]:[#6]:[#6]:1\n\n\n\nps = rdFMCS.MCSParameters()\nps.AtomCompareParameters.MaxDistance = 0.5\nres = rdFMCS.FindMCS([m1,m2],ps)\nprint(res.smartsString)\n\n[#6]:[#6]:[#6]:[#6]:[#6]\n\n\n\nps = rdFMCS.MCSParameters()\nps.AtomCompareParameters.MaxDistance = 0.5\nps.AtomTyper = rdFMCS.AtomCompare.CompareAny\nres = rdFMCS.FindMCS([m1,m2],ps)\nprint(res.smartsString)\n\n[#7,#6]1:[#6]:[#6]:[#6]:[#6]:[#6]:1\n\n\n\nA real example\n\n# exported from the binding db and converted to SDF in pymol\nms = [x for x in Chem.ForwardSDMolSupplier('../data/1TDU-results.sdf')]\nms2d = [Chem.Mol(x) for x in ms]\nfor m in ms2d:\n    rdDepictor.Compute2DCoords(m)\nIPythonConsole.drawOptions.addAtomIndices = False\nDraw.MolsToGridImage(ms2d)\n\n\n\n\n\n\n\n\n\nimport py3Dmol\nviewer = py3Dmol.view(width=350, height=350)\nIPythonConsole.addMolToView(ms[0],viewer)\nIPythonConsole.addMolToView(ms[1],viewer)\nIPythonConsole.addMolToView(ms[2],viewer)\nviewer.zoomTo()\nviewer.show()\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol\n        \n\n\n\n\nps = rdFMCS.MCSParameters()\nres = rdFMCS.FindMCS(ms,ps)\nqry = Chem.MolFromSmarts(res.smartsString)\nqry\n\n\n\n\n\n\n\n\n\nmatches = [x.GetSubstructMatch(qry) for x in ms2d]\n\nconf = Chem.Conformer(qry.GetNumAtoms())\nfor i,mi in enumerate(matches[0]):\n    conf.SetAtomPosition(i,ms2d[0].GetConformer().GetAtomPosition(mi))\nqry.AddConformer(conf)\n\nrdDepictor.SetPreferCoordGen(False) # coordgen doesn't always obey the scaffold, so switch to the RDKit coordinates\nfor m in ms2d:\n    rdDepictor.GenerateDepictionMatching2DStructure(m,qry)\nrdDepictor.SetPreferCoordGen(True)\nDraw.MolsToGridImage(ms2d,highlightAtomLists=matches)\n\n\n\n\n\n\n\n\n\nps = rdFMCS.MCSParameters()\nps.AtomTyper = rdFMCS.AtomCompare.CompareAny\nres = rdFMCS.FindMCS(ms,ps)\nqry = Chem.MolFromSmarts(res.smartsString)\nqry\n\n\n\n\n\n\n\n\n\nmatches = [x.GetSubstructMatch(qry) for x in ms2d]\n\nconf = Chem.Conformer(qry.GetNumAtoms())\nfor i,mi in enumerate(matches[0]):\n    conf.SetAtomPosition(i,ms2d[0].GetConformer().GetAtomPosition(mi))\nqry.AddConformer(conf)\nrdDepictor.SetPreferCoordGen(False) # coordgen doesn't always obey the scaffold, so switch to the RDKit coordinates\nfor m in ms2d:\n    rdDepictor.GenerateDepictionMatching2DStructure(m,qry)\nrdDepictor.SetPreferCoordGen(True)\n\nDraw.MolsToGridImage(ms2d,highlightAtomLists=matches)\n\n\n\n\n\n\n\n\nThis is an example where the constrained coordinates, which only match part of a ring system, cause problems.\nBoth of those MCS results are matching significant parts of the molecules, but we saw that the molecules didn’t actually align quite that well.\nWhat about if we take atom coordinates into account?\n\nps = rdFMCS.MCSParameters()\nps.AtomCompareParameters.MaxDistance = 1.0\nps.AtomTyper = rdFMCS.AtomCompare.CompareAny\nres = rdFMCS.FindMCS(ms,ps)\nqry = Chem.MolFromSmarts(res.smartsString)\nqry\n\n\n\n\n\n\n\n\n\nmatches = [x.GetSubstructMatch(qry) for x in ms2d]\n\nconf = Chem.Conformer(qry.GetNumAtoms())\nfor i,mi in enumerate(matches[0]):\n    conf.SetAtomPosition(i,ms2d[0].GetConformer().GetAtomPosition(mi))\nqry.AddConformer(conf)\nfor m in ms2d:\n    rdDepictor.GenerateDepictionMatching2DStructure(m,qry)\nDraw.MolsToGridImage(ms2d,highlightAtomLists=matches)\n\n\n\n\n\n\n\n\nThe MCS gave us a SMARTS which matches, but unfortunately it does not provide the matching atoms. Finding those via substructure search would be easy if we could assume that the MCS only matches each molecule once, but that’s not always going to be the case.\nThis is actually one of those examples.\nLet’s look at how many times the core can match each of the molecules:\n\nallMatches = []\nfor m in ms:\n    allMatches.append(m.GetSubstructMatches(qry,uniquify=False))\nallMatches\n\n[((13, 15, 17, 16, 20, 19, 18, 21), (13, 15, 18, 19, 20, 16, 17, 21)),\n ((12, 13, 15, 14, 18, 17, 16, 19),\n  (12, 13, 16, 17, 18, 14, 15, 19),\n  (19, 18, 14, 15, 13, 16, 17, 12),\n  (19, 18, 17, 16, 13, 15, 14, 12)),\n ((13, 14, 17, 18, 19, 20, 21, 22), (13, 14, 21, 20, 19, 18, 17, 22))]\n\n\nNow define a function which goes through all the possible substructure matches and finds the one which satisfies the 3D distance constraints on the core:\n\ndef getAlignedSubstructMatch(ms,qry,distTol=1.0):\n    allMatches = []\n    for m in ms:\n        allMatches.append(m.GetSubstructMatches(qry,uniquify=False))\n\n    keepMatches = []\n    for match0 in allMatches[0]:\n        allMatched = True\n        for i in range(1,len(ms)):\n            imatched = False\n            for matchi in allMatches[i]:\n                matched = True\n                for i0,ii in zip(match0,matchi):\n                    dist = (ms[0].GetConformer().GetAtomPosition(i0) - ms[i].GetConformer().GetAtomPosition(ii)).Length()\n                    if dist &gt; distTol:\n                        matched = False\n                        break\n                if matched:\n                    keepMatches.append(matchi)\n                    imatched = True\n                    break\n            if not imatched:\n                allMatched = False\n                keepMatches = []\n                break\n        if allMatched:\n            keepMatches = [match0] + keepMatches\n            break\n        else:\n            keepMatches = []\n    return keepMatches\n    \n\nThe results for our molecules and the 3D MCS core:\n\nkeepMatches = getAlignedSubstructMatch(ms,qry)\nkeepMatches\n\n[(13, 15, 17, 16, 20, 19, 18, 21),\n (12, 13, 15, 14, 18, 17, 16, 19),\n (13, 14, 17, 18, 19, 20, 21, 22)]\n\n\nAnd highlight the substructures:\n\nDraw.MolsToGridImage(ms2d,highlightAtomLists=keepMatches)\n\n\n\n\n\n\n\n\nLet’s redraw the molecules in 3D and highlight the atoms involved in the MCS. It’s nice to see, plus I learned some stuff about how to use py3Dmol while doing it… so that’s a bonus. :-)\n\nimport py3Dmol\nviewer = py3Dmol.view(width=450, height=450)\nIPythonConsole.addMolToView(ms[0],viewer)\nIPythonConsole.addMolToView(ms[1],viewer)\nIPythonConsole.addMolToView(ms[2],viewer)\nfor idx,clr in zip((-1,-2,-3),('redCarbon','cyanCarbon','blueCarbon')):\n    viewer.setStyle({'model':idx,},\n                    {'stick':{'colorscheme':clr,'radius':.15}})\n    viewer.setStyle({'model':idx,'serial':keepMatches[idx]},\n                    {'stick':{'colorscheme':clr},'sphere':{'colorscheme':clr,'radius':.5}})\n\nviewer.zoomTo()\nviewer.show()\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol"
  },
  {
    "objectID": "posts/2024-03-08-docstring-stubs.html",
    "href": "posts/2024-03-08-docstring-stubs.html",
    "title": "A stub a day keeps the docstrings at bay",
    "section": "",
    "text": "This is a guest post by Paolo Tosco (GitHub: @ptosco), one of the RDKit core maintainers.\nThis blog post expands a bit on the topic I presented last year in Mainz during a lightning talk at the 2023 RDKit UGM, i.e., the generation of RDKit stubs and programmatic patching of existing Python docstrings."
  },
  {
    "objectID": "posts/2024-03-08-docstring-stubs.html#tldr",
    "href": "posts/2024-03-08-docstring-stubs.html#tldr",
    "title": "A stub a day keeps the docstrings at bay",
    "section": "TL;DR",
    "text": "TL;DR\nStarting with the 2023.09.6 release of the RDKit, the visibility and usability of the Python API documentation in VS Code is vastly improved. You now get things like this:\n\n\n\nFullyFunctionalHintsVSCode"
  },
  {
    "objectID": "posts/2024-03-08-docstring-stubs.html#background",
    "href": "posts/2024-03-08-docstring-stubs.html#background",
    "title": "A stub a day keeps the docstrings at bay",
    "section": "Background",
    "text": "Background\nI have been annoyed for a while by the fact that, when writing RDKit Python scripts in Visual Studio Code (I will it call VS Code from now on for simplicity), the familiar and helpful IntelliSense hints suggesting function or method names were either limited to a handful of functions or were not popping up at all.\nFor example, the rdkit.Chem module features a range of MolFrom... and MolTo... functions to generate an RDKit molecule from several formats and export an RDKit molecule to various formats, respectively.\nHowever, when typing mol = Chem.Mol in VS Code, only InChI-related functions and FindMolChiralCenters were listed in the drop-down pop up:\n\n\n\nVSCodeFewFunctions\n\n\nEven after manually typing Chem.MolFromSmiles, VS Code would still not show any tooltip with the function docstring:\n\n\n\nVSCodeNoDocString\n\n\nThings were working much better in Jupyter Lab, as the drop-down was being populated with the expected methods while typing:\n\n\n\nJupyterLabWorksBetter\n\n\nAlso class methods seemed to work as expected:\n\n\n\nJupyterLabClassMethodsShowUp\n\n\nHowever, something was still not quite right, as Jupyter Lab was not able to figure out the methods for the Atom instance returned by the Mol.GetAtomWithIdx method, and the dropdown was not showing any of the expected Atom methods:\n\n\n\nJupyterLabAtomMethodsMissing\n\n\nAt some point I was sufficiently annoyed by all of the above that I decided to invest a bit of time in figuring out why it was happening. I learnt that VS Code hints are powered by Pyright, which in turn requires stubs to do its job, and RDKit does not have them. In the absence of stubs, the only available hints are those that can be obtained by introspection, which is the mechanism used by Jupyter Lab. In VS Code, introspection only works for functions defined in Python files, such as FindMolChiralCenters (rdkit/Chem/__init__.py) or InChI-related functions (rdkit/Chem/inchi.py). Since the large majority of RDKit functions and classes are defined in binary modules (i.e., files bearing a .so, .dylib or .pyd extension, depending on the platform), now we know why most of the RDKit API is unknown to VS Code.\nStubs are Python files (though with a different extension, .pyi) containing class and free function definitions; docstrings associated to classes and functions are also included as triple-quoted comments. Function and method signatures are usually associated with parameter types and return types. Types are used by static type checkers such as mypy, and by VS Code to figure out that the object returned by a function or class constructor is a class instance. Hovering on the object will show up the docstring associated to the class, and typing a dot after the object will trigger a pop up with all methods and properties available on that object. Once the user selects one of the available methods, VSCode will present a tooltip with the docstring associated to the method, as it had previously done with the class instance.\nThis works great for Python modules that come with stubs:\n\n\n\nVSCodeReHints\n\n\nInterestingly, Jupyter Lab seems to know that re.compile returns a re.Pattern instance, and presents us with the available methods, contrary to what happened with Mol.GetAtomWithIdx:\n\n\n\nreCompileKnowsAboutPatternMethods\n\n\nIn summary, there seemed to be two different issues here:\n\nThe lack of stubs prevented hints from popping up in VS Code\nSomething else prevented correct introspection of the class method return type in jupyter Lab"
  },
  {
    "objectID": "posts/2024-03-08-docstring-stubs.html#generating-stubs-for-rdkit",
    "href": "posts/2024-03-08-docstring-stubs.html#generating-stubs-for-rdkit",
    "title": "A stub a day keeps the docstrings at bay",
    "section": "Generating stubs for RDKit",
    "text": "Generating stubs for RDKit\nMypy comes with a tool for automatic stub generation, stubgen. Generating stubs for a Python package is super-simple:\n$ stubgen -p rdkit\n$ ls out/rdkit\nAvalon  Chem  DataManip  DataStructs  Dbase  DistanceGeometry  ForceField  Geometry  __init__.pyi  ML  Numerics  rdBase.pyi  RDConfig.pyi  RDLogger.pyi  RDPaths.pyi  RDRandom.pyi  SimDivFilters  sping  TestRunner.pyi  utils  VLib\nAt first glance, stubgen seems to be able to process RDKIt’s binary extension modules and generate stubs. However, upon closer inspection, it proves unable to extract types, parameters and docstrings. Therefore, the generated stubs are really basic and not very useful, as they provide no hints about how to use the various functions and methods, nor any dosctrings:\n$ grep -A3 MolFromSmiles -r out/rdkit\nout/rdkit/Chem/rdmolfiles.pyi:def MolFromSmiles(*args, **kwargs) -&gt; Any: ...\nout/rdkit/Chem/rdmolfiles.pyi-def MolFromTPLBlock(boost) -&gt; Any: ...\nout/rdkit/Chem/rdmolfiles.pyi-def MolFromTPLFile(*args, **kwargs) -&gt; Any: ...\nout/rdkit/Chem/rdmolfiles.pyi-def MolFromXYZBlock(boost) -&gt; Any: ...\n\n\n\nstubgenStubsAreVeryBasic\n\n\nFortunately, there is another package, pybind11-stubgen, which does a much better job with RDKit’s binary modules, and with a little bit of help can even figure out function parameters and types. I wrote a small Python module, gen_rdkit_stubs, which runs in parallel on multiple CPU cores and recursively generates stubs for the whole rdkit package in &lt; 10s:\n$ time ( python -m Scripts.gen_rdkit_stubs )\n\nreal    0m6.135s\nuser    1m51.786s\nsys     0m27.283s\nVS Code were now looking as they were supposed to, with all functions and methods populated in the dropdown pop-up, plus type hints and docstrings in the right place:\n\n\n\nVSCodeStubsGenRDKitStubs\n\n\nAlso the Mol methods were being suggested, and VS Code seemed aware of the fact that Mol.GetAtomWithIdx returns an Atom instance:\n\n\n\nVSCodeChemMolMethodsPresent\n\n\nHowever, the Atom methods were still not showing up, just as I had previously observed in Jupyter Lab:\n\n\n\nVSCodeAtomMethodDoNotShowUp\n\n\nA closer look at the stubs clarified that stubs were not quite correct yet: firstly, the GetAtomWithIdx method, as well as all of the Mol methods, were incorrectly decorated as @staticmethod; secondly, the Atom return type is not recognized, since the Atom object was not imported from rdkit.Chem, and hence is basically an unknown type:\n$ grep -B1 'def GetAtomWithIdx' -r pybind11-stubgen_rdkit-stubs/\npybind11-stubgen_rdkit-stubs/Chem/rdchem.pyi-    @staticmethod\npybind11-stubgen_rdkit-stubs/Chem/rdchem.pyi:    def GetAtomWithIdx(arg1: Mol, arg2: int) -&gt; Atom:\nManually correcting the stub to the following:\npybind11-stubgen_rdkit-stubs/Chem/rdchem.pyi-    #@staticmethod\npybind11-stubgen_rdkit-stubs/Chem/rdchem.pyi:    def GetAtomWithIdx(arg1: self, arg2: int) -&gt; rdkit.Chem.Atom:\nindeed led to the expected hints popping up:\n\n\n\nVSCodeManuallyCorrectedStub\n\n\nIn summary, there were three residual issues:\n\nseveral hundreds of class method signatures in the C++ source code of RDKit Python wrappers were missing the python::arg(\"self\") parameter, causing the corresponding methods to be incorrectly decorated as @staticmethod\npybind11-stubgen does not import objects used as return types; therefore, many return types are perceived as unknown by VS Code, and the associated class methods do not show up\nfunctions and methods missing explicit python::arg parameters were attributed default parameter names such as arg1, arg2, …, argN, which make many signatures rather obscure compared to their C++ counterparts which have more meaningful parameter names\n\nIt was immediately clear that manually patching the whole RDKit codebase to fix these 3 issues would be a daunting task. Therefore, I explored ways to accomplish the same task programmatically, and the Clang Indexing Library Bindings emerged as the most appealing option.\nThe Clang Indexing Library can parse a C++ source file (including the headers that it references) and generate a tree-like structure which can be traversed to find the nodes of interest. Each of this nodes can in turn be related to a source code location (row and column numbers in the source file), making it possible to patch source code not just based on regular expressions, which would not be sufficient for our needs, but on some degree of actual “understanding” of the source code logic.\nFor this purpose, I wrote another Python module, patch_rdkit_docstrings, which:\n\nidentifies source code files which relate to Python wrappers and need patching\ngenerates AST files for each source code file\ntraverses AST files to find the places in the source code that need patching\nadds the self parameter where needed to avoid that class methods are incorrectly decorated as @staticmethod\nreplaces the argN parameter names in Python functions with more meaningful parameter names extracted from the C++ functions that the Python functions are wrapping\nfinally, runs clang-format on the patched sources to fix the formatting\n\nAlso patch_rdkit_docstrings runs in parallel to speed up the patching, which takes a few minutes. Since docstring patching is a one-off operation, speed is not a critical factor; however, it definitely was during the development of the module. In fact, patch_rdkit_docstrings required several iterations to have the source code properly patched, and being able to quickly evaluate progress made between iterations was very helpful.\nOnce Greg and I were happy with the source code patching made by patch_rdkit_docstrings, as well as with the stubs generated out of the patched source code by gen_rdkit_stubs, I submitted a PR to RDKit with the programmatic source code patches made by patch_rdkit_docstrings.\nThe PR covered 91 files, with overall 4,076 lines of code being added and 1,088 being removed: definitely this was not a task that one would have liked to do manually: it would have probably required a comparable amount of time, some functions would have certainly being missed and some mistakes would have been made, and I would not have learnt anything about AST parsing and all the rest."
  },
  {
    "objectID": "posts/2024-03-08-docstring-stubs.html#summary",
    "href": "posts/2024-03-08-docstring-stubs.html#summary",
    "title": "A stub a day keeps the docstrings at bay",
    "section": "Summary",
    "text": "Summary\nSince Release 2023.09.4, after building and installing in the usual way RDKit libraries and Python modules, stubs can be built and installed with the following command:\ncmake --build . --target stubs\nor, on Linux and macOS platforms, running\nmake stubs\nThe stubs enable fully functional hints in VS Code:\n\n\n\nFullyFunctionalHintsVSCode\n\n\nAs a bonus, thanks to the one-off source patching, also the Jupyter Lab issue described at the beginning is solved:\n\n\n\nJupyterLabAlsoWorks\n\n\nFinally, also the online RDKit documentation looks prettier: argN parameters are replaced by meaningful parameter names taken from the respective C++ functions, while self parameters are now present in non-static methods:\n\n\n\nOnlineDocsLookBetter\n\n\nStarting from Release 2023.09.6, rdkit-stubs are also available as part of conda-forge RDKit packages.\nHappy coding with the new RDKit stubs!"
  },
  {
    "objectID": "posts/2023-03-02-clustering-conformers.html",
    "href": "posts/2023-03-02-clustering-conformers.html",
    "title": "Clustering conformers",
    "section": "",
    "text": "This one came up during a conversation with Felix Pultar, a postdoc in the group, and I thought it made for a nice blog post, so here we go.\nOne common workflow in conformational analysis is to generate a bunch of conformers for a molecule and then find a representative subset by clustering them.\nThe RDKit has everything required to do this, but there’s not all that much info out there showing how to do it.\nThis blog post aims to change that.\n\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit import Chem\nfrom rdkit.Chem import rdDistGeom\nfrom rdkit.Chem import rdMolAlign\nimport rdkit\nprint(rdkit.__version__)\n\n2022.09.4\n\n\n\nGenerate conformers\nStart by constructing a molecule and then generating a set of 300 conformers for it using ETKDGv3.\n\n# modified CHEMBL12747, ionized\nm = Chem.MolFromSmiles('O=C([O-])CCn1c(=O)c(=O)[nH]c2cc([N+](=O)[O-])c(-n3ccc(C=NOCc4ccccc4)c3)cc21')\nm\n\n\n\n\n\n\n\n\n\nmh = Chem.AddHs(m)\nps = rdDistGeom.ETKDGv3()\nps.randomSeed = 0xd06f00d\nps.numThreads = 10\ncids = rdDistGeom.EmbedMultipleConfs(mh,300,ps)\nlen(cids)\n\n300\n\n\nRemove Hs from the molecule at this point because they aren’t particularly informative for the rest of the analysis and they just make things more difficult\n\nm3d = Chem.RemoveHs(mh)\n\n\n\nDirect alignment vs best alignment\nFind a pair of conformers with a decent size mismatch between the direct alignment (which does not take symmetry into account) and the best alignment (which does):\n\nmaxd = -100\nfor j in range(0,5):\n    for i in range(j,len(cids)):\n        d1 = rdMolAlign.AlignMol(m3d,m3d,prbCid=cids[i],refCid=cids[j])\n        d2 = rdMolAlign.GetBestRMS(m3d,m3d,prbId=cids[i],refId=cids[j])\n        delt = d1-d2\n        if delt&lt;-1e-5:\n            print(f'ooops, {i}, {delt}')\n        if delt&gt;maxd:\n            maxd = delt\n            maxi = i\n            maxj = j\nd1 = rdMolAlign.AlignMol(m3d,m3d,prbCid=cids[maxi],refCid=cids[maxj])\nd2 = rdMolAlign.GetBestRMS(m3d,m3d,prbId=cids[maxi],refId=cids[maxj])\nprint(maxi,maxd,d1,d2)\n\n282 0.703433090406554 1.0038182177331938 0.3003851273604343\n\n\nNow show those two conformers:\n\nimport py3Dmol\ndef drawit(m, cids=[-1], p=None, removeHs=True,\n           colors=('cyanCarbon','redCarbon','blueCarbon','magentaCarbon','whiteCarbon','purpleCarbon')):\n        if removeHs:\n            m = Chem.RemoveHs(m)\n        if p is None:\n            p = py3Dmol.view(width=400, height=400)\n        p.removeAllModels()\n        for i,cid in enumerate(cids):\n            IPythonConsole.addMolToView(m,p,confId=cid)\n        for i,cid in enumerate(cids):\n            p.setStyle({'model':i,},\n                            {'stick':{'colorscheme':colors[i%len(colors)]}})\n        p.zoomTo()\n        return p.show()\n\nHere are the two conformers aligned using the atom indices:\n\nd1 = rdMolAlign.AlignMol(m3d,m3d,prbCid=cids[maxi],refCid=cids[maxj])\ndrawit(m3d,[cids[maxj],cids[maxi]])\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol\n        \n\n\n\nAnd then aligned with GetBestRMS:\n\nd2 = rdMolAlign.GetBestRMS(m3d,m3d,prbId=cids[maxi],refId=cids[maxj])\ndrawit(m3d,[cids[maxj],cids[maxi]])\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol\n        \n\n\n\nThe alignments don’t actually look all that different. The difference in RMSD is due to the atoms in the nitro group and the terminal phenyl ring: GetBestRMS() recognizes that the symmetry while AlignMol() just matches atoms by their indices.\n\n\nCluster Them\nNow generate the RMSD distance matrix using GetBestRMS(). Note that as of the 2022.09 release cycle the convenience function AllChem.GetConformerRMSMatrix() does not take symmetry into account, so we need to build the symmetric matrix (we just store the lower triangle) manually:\n\ndists = []\nfor i in range(len(cids)):\n    for j in range(i):\n        dists.append(rdMolAlign.GetBestRMS(m3d,m3d,i,j))\n\nNow we can do Butina clustering. We use a distance threshold of 1.5 Å:\n\nfrom rdkit.ML.Cluster import Butina\nclusts = Butina.ClusterData(dists, len(cids), 1.5, isDistData=True, reordering=True)\nlen(clusts)\n\n10\n\n\nThat’s it. The 300 conformers form 10 clusters. Let’s visualize the centroids (the first conformer in each cluster)\nTo make visualization of the clusters easier to interpret, align all the conformers to the rigid 6-6 core:\n\nm\n\n\n\n\n\n\n\n\n\ncore = Chem.MolFromSmiles('O=C1C(=O)N(C)c2cc(N)c(N)cc2N1')\ncore\n\n\n\n\n\n\n\n\n\nrdMolAlign.AlignMolConformers(m3d,atomIds = m3d.GetSubstructMatch(core))\n\nNow look at the first five cluster centroids;\n\ncentroids = [x[0] for x in clusts]\ndrawit(m3d,centroids[:5])\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol\n        \n\n\n\nIt’s also possible to cluster molecules using torsion fingerprint differences (TFDs), but that’s a topic for another post."
  },
  {
    "objectID": "posts/2020-01-25-trying-the-tautomer-canonicalization-code.html",
    "href": "posts/2020-01-25-trying-the-tautomer-canonicalization-code.html",
    "title": "Trying out the new tautomer canonicalization code",
    "section": "",
    "text": "During the 2018 RDKit Google Summer of Code (GSoC) project to port MolVS to C++, doing the tautomer enumeration and canonicalization were stretch goals. Susan actually managed to complete the tautomer enumeration, but since canonicalization wasn’t complete, we didn’t publicize this particularly widely. As part of the work for the 2020.03 release, I implemented Matt’s canonicalization scheme and we recently merged that into the RDKit core. Since this is a topic that may be contentious, and since making changes to the canonicalization algorithm post-release will have be done very deliberately, I’d like to collect some feedback before we do the release in a couple of months.\nThe implementation attempts to exactly duplicate what is currently being done in MolVS. Here’s how Matt describes the process in the MolVS documentation:\nThe scoring scheme: - aromatic ring (defined by all bonds being aromatic) consisting entirely of carbons: 250 points - other aromatic rings : 100 points - a set of substructures are scored (if present). Here’s the current (as of this writing) set of substructures and their associated scores (these are defined here):\nThe highest scoring tautomer is selected. In the event of ties, the tautomer with the lexicographically smaller canonical SMILES is picked.\nIf this is something you feel strongly about, please try the code out and see what you think. If you see behavior you really don’t like, or that you think is a bug, please add a comment to the associated issue in github: https://github.com/rdkit/rdkit/issues/2908 (preferred) or reply to the thread that I will create on the rdkit-discuss mailing list.\nRemember that the goal of the exercise here is not to produce the “best” tautomer, but to produce a canonical one (always the same result for molecules which are tautomerically equivalent). We hope that this is also reasonable - in that it doesn’t make a chemist’s eyes burn - but that’s not the primary goal."
  },
  {
    "objectID": "posts/2020-01-25-trying-the-tautomer-canonicalization-code.html#so-how-can-you-try-it-out",
    "href": "posts/2020-01-25-trying-the-tautomer-canonicalization-code.html#so-how-can-you-try-it-out",
    "title": "Trying out the new tautomer canonicalization code",
    "section": "So how can you try it out?",
    "text": "So how can you try it out?\nThis is C++ code, so you need an RDKit build done from the github master. I’ve done conda builds and made them available for people to try.\nAt the moment I’ve only built the beta version for python 3.7 on linux and windows. If you would like to do some testing on the Mac, let me know and I can do a build there too.\nHere’s how to setup a conda environment to use the beta:\n% conda create -n py37_tautomer_beta python=3.7 jupyter\n% conda activate py37_tautomer_beta\n% conda install -c rdkit/label/beta rdkit\nOk, let’s look at some examples:\n\nfrom rdkit import Chem\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit.Chem import Draw\nimport rdkit\nprint(rdkit.__version__)\n\n2020.03.1dev1\n\n\nRDKit WARNING: [11:00:33] Enabling RDKit 2020.03.1dev1 jupyter extensions\n\n\n\nfrom rdkit.Chem.MolStandardize import rdMolStandardize\n\n\nenumerator = rdMolStandardize.TautomerEnumerator()\n\n\nm = Chem.MolFromSmiles('Oc1c(cccc3)c3nc2ccncc12')\nm\n\n\n\n\n\n\n\n\nGet the canonical tautomer:\n\nenumerator.Canonicalize(m)\n\n\n\n\n\n\n\n\nThe canonicalizer starts by enumerating a molecule’s tautomers. If you want to see those, you can use the Enumerate() method:\n\ntauts = enumerator.Enumerate(m)\nDraw.MolsToGridImage(tauts)\n\n\n\n\n\n\n\n\nI find this function, which reorders the list of tautomers so that the canonical one is in the first position, really useful:\n\ndef reorderTautomers(m):\n    enumerator = rdMolStandardize.TautomerEnumerator()\n    canon = enumerator.Canonicalize(m)\n    csmi = Chem.MolToSmiles(canon)\n    res = [canon]\n    tauts = enumerator.Enumerate(m)\n    smis = [Chem.MolToSmiles(x) for x in tauts]\n    stpl = sorted((x,y) for x,y in zip(smis,tauts) if x!=csmi)\n    res += [y for x,y in stpl]\n    return res\n\nSo now we can display all the tautomers found for a molecule. The first one drawn is the canonical one:\n\nDraw.MolsToGridImage(reorderTautomers(m))\n\n\n\n\n\n\n\n\n\nDraw.MolsToGridImage(reorderTautomers(Chem.MolFromSmiles('CN=c1nc[nH]cc1')))\n\n\n\n\n\n\n\n\n\nDraw.MolsToGridImage(reorderTautomers(Chem.MolFromSmiles('CC=CO')))\n\n\n\n\n\n\n\n\nAs an aside, it’s worth noticing that double bond stereochemistry is removed in all tautomers if the double bond is involved in the tautomerization:\n\nm = Chem.MolFromSmiles('C/C=C(/O)F')\ntauts = reorderTautomers(m)\nprint('Original SMILES:',Chem.MolToSmiles(m))\nprint('Tautomers (canonical first):',[Chem.MolToSmiles(x) for x in tauts])\n\nOriginal SMILES: C/C=C(/O)F\nTautomers (canonical first): ['CCC(=O)F', 'CC=C(O)F']"
  },
  {
    "objectID": "posts/2021-07-24-setting-up-a-cxx-dev-env.html",
    "href": "posts/2021-07-24-setting-up-a-cxx-dev-env.html",
    "title": "Using the RDKit in a C++ program",
    "section": "",
    "text": "Note: the instructions in this blog post currently only work on linux systems. There’s a configuration problem with the way we use cmake on the Mac and Windows that needs to be cleared up. I will update the post after that’s done.\nLast week I (re)discoverered that it’s pretty easy to use the RDKit in other C++ projects. This is obviously somthing that’s possible, but I thought of it as being something of a pain. It turns out that it’s not, as I hope to show you in this post.\nI started by setting up a fresh conda environment and grabbing an RDKit build from conda-forge, this is a bit heavyweight since you end up with a bunch of python packages as well as the RDKit itself (I’m going to look into making this more minimal), but it’s much easier than doing your own build.\nThe first thing is to set up a conda environment:\nconda create -n rdkit_dev\nconda activate rdkit_dev\nconda install -c conda-forge mamba\nmamba install -c conda-forge cmake rdkit eigen\nNote: I start by installing mamba here because it makes doing conda installs much, much faster.\nHere’s a simple demo program which reads in a set of molecules from an input file and generates tautomer hashes for them. It uses the boost::timer library in order to separately time how long it takes to read the molecules and generate the hashes. I called this file tautomer_hash.cpp:\n#include &lt;GraphMol/FileParsers/MolSupplier.h&gt;\n#include &lt;GraphMol/MolHash/MolHash.h&gt;\n#include &lt;GraphMol/RDKitBase.h&gt;\n#include &lt;RDGeneral/RDLog.h&gt;\n#include &lt;algorithm&gt;\n#include &lt;boost/timer/timer.hpp&gt;\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nusing namespace RDKit;\n\nvoid readmols(std::string pathName, unsigned int maxToDo,\n              std::vector&lt;RWMOL_SPTR&gt; &mols) {\n  boost::timer::auto_cpu_timer t;\n  // using a supplier without sanitizing the molecules...\n  RDKit::SmilesMolSupplier suppl(pathName, \" \\t\", 1, 0, true, false);\n  unsigned int nDone = 0;\n  while (!suppl.atEnd() && (maxToDo &lt;= 0 || nDone &lt; maxToDo)) {\n    RDKit::ROMol *m = suppl.next();\n    if (!m) {\n      continue;\n    }\n    m-&gt;updatePropertyCache();\n    // the tautomer hash code uses conjugation info\n    MolOps::setConjugation(*m);\n    nDone += 1;\n    mols.push_back(RWMOL_SPTR((RWMol *)m));\n  }\n  std::cerr &lt;&lt; \"read: \" &lt;&lt; nDone &lt;&lt; \" mols.\" &lt;&lt; std::endl;\n}\n\nvoid generatehashes(const std::vector&lt;RWMOL_SPTR&gt; &mols) {\n  boost::timer::auto_cpu_timer t;\n  for (auto &mol : mols) {\n    auto hash =\n        MolHash::MolHash(mol.get(), MolHash::HashFunction::HetAtomTautomer);\n  }\n}\nint main(int argc, char *argv[]) {\n  RDLog::InitLogs();\n  std::vector&lt;RWMOL_SPTR&gt; mols;\n  BOOST_LOG(rdInfoLog) &lt;&lt; \"read mols\" &lt;&lt; std::endl;\n\n  readmols(argv[1], 10000, mols);\n  BOOST_LOG(rdInfoLog) &lt;&lt; \"generate hashes\" &lt;&lt; std::endl;\n  generatehashes(mols);\n\n  BOOST_LOG(rdInfoLog) &lt;&lt; \"done \" &lt;&lt; std::endl;\n}\nThis is a pretty crappy program since it doesn’t do much error checking, but the purpose here is to demonstrate how to get the environment setup, not to teach how to write nice C++ programs. :-)\nThe way to make the build easy is to use cmake to set everything up, so I need a CMakeLists.txt file that defines my executable and its RDKit dependencies:\ncmake_minimum_required(VERSION 3.18)\n\nproject(simple_cxx_example)\nset(CMAKE_CXX_STANDARD 14)\nset(CMAKE_CXX_STANDARD_REQUIRED True)\n\n\nfind_package(RDKit REQUIRED)\nfind_package(Boost COMPONENTS timer system REQUIRED)\nadd_executable(tautomer_hash tautomer_hash.cpp)\ntarget_link_libraries(tautomer_hash RDKit::SmilesParse RDKit::MolHash\n   Boost::timer)\nThis tells cmake to find the RDKit and boost installs (which “just works” since cmake, boost, and the RDKit were all installed from conda), defines the executable I want to create, and then lists the RDKit and boost libraries I use. And that is pretty much that.\nNow I create a build dir, run cmake to setup the build, and run make to actually build my program:\n(rdkit_dev) glandrum@Badger:~/RDKit_blog/src/simple_cxx_example$ mkdir build\n(rdkit_dev) glandrum@Badger:~/RDKit_blog/src/simple_cxx_example$ cd build\n(rdkit_dev) glandrum@Badger:~/RDKit_blog/src/simple_cxx_example/build$ cmake ..\n-- The C compiler identification is GNU 9.3.0\n-- The CXX compiler identification is GNU 9.3.0\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Check for working C compiler: /usr/bin/cc - skipped\n-- Detecting C compile features\n-- Detecting C compile features - done\n-- Detecting CXX compiler ABI info\n-- Detecting CXX compiler ABI info - done\n-- Check for working CXX compiler: /usr/bin/c++ - skipped\n-- Detecting CXX compile features\n-- Detecting CXX compile features - done\n-- Looking for pthread.h\n-- Looking for pthread.h - found\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed\n-- Looking for pthread_create in pthreads\n-- Looking for pthread_create in pthreads - not found\n-- Looking for pthread_create in pthread\n-- Looking for pthread_create in pthread - found\n-- Found Threads: TRUE  \n-- Found Boost: /home/glandrum/miniconda3/envs/rdkit_dev/lib/cmake/Boost-1.74.0/BoostConfig.cmake (found suitable version \"1.74.0\", minimum required is \"1.74.0\")  \n-- Found Boost: /home/glandrum/miniconda3/envs/rdkit_dev/lib/cmake/Boost-1.74.0/BoostConfig.cmake (found version \"1.74.0\") found components: timer system \n-- Configuring done\n-- Generating done\n-- Build files have been written to: /home/glandrum/RDKit_blog/src/simple_cxx_example/build\n(rdkit_dev) glandrum@Badger:~/RDKit_blog/src/simple_cxx_example/build$ make tautomer_hash\n[ 50%] Building CXX object CMakeFiles/tautomer_hash.dir/tautomer_hash.cpp.o\n[100%] Linking CXX executable tautomer_hash\n[100%] Built target tautomer_hash\nAnd now I can run the program:\n(rdkit_dev) glandrum@Badger:~/RDKit_blog/src/simple_cxx_example/build$ ./tautomer_hash /scratch/RDKit_git/Code/Profiling/GraphMol/chembl23_very_active.txt\n[07:51:33] read mols\nread: 10000 mols.\n 0.819242s wall, 0.740000s user + 0.070000s system = 0.810000s CPU (98.9%)\n[07:51:33] generate hashes\n 0.872662s wall, 0.870000s user + 0.010000s system = 0.880000s CPU (100.8%)\n[07:51:34] done \n(rdkit_dev) glandrum@Badger:~/RDKit_blog/src/simple_cxx_example/build$ \nIf you don’t feel like copy/pasting, the source files for this post are available from github.\nThis all works so nicely because of the time and effort Riccardo Vianello invested a few years ago to improve the RDKit’s cmake integration.\nNext step: add this to the documentation!"
  },
  {
    "objectID": "posts/2020-01-03-similarity-maps-with-new-drawing-code.html",
    "href": "posts/2020-01-03-similarity-maps-with-new-drawing-code.html",
    "title": "Similarity maps with the new drawing code",
    "section": "",
    "text": "As part of the 2019.09 release we added a C++ implementation of the RDKit’s similarity map functionality (https://jcheminf.biomedcentral.com/articles/10.1186/1758-2946-5-43). I forgot to mention this during the “What’s New” bit of my presentation at the UGM, but I think it’s worth calling attention to. So here’s a quick blog post.\n\nfrom rdkit import Chem\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import SimilarityMaps\nfrom IPython.display import SVG\nimport io\nfrom PIL import Image\nimport numpy as np\nimport rdkit\nprint(rdkit.__version__)\n\nRDKit WARNING: [11:53:45] Enabling RDKit 2019.09.2 jupyter extensions\n\n\n2019.09.2\n\n\nI start by using “classic” similarity map functionality to show why atorvastatin (Lipitor) and rosuvastatin (Crestor) are similar to each other when using the Morgan fingerprint.\nHere are the two molecules:\n\natorvastatin = Chem.MolFromSmiles('O=C(O)C[C@H](O)C[C@H](O)CCn2c(c(c(c2c1ccc(F)cc1)c3ccccc3)C(=O)Nc4ccccc4)C(C)C')\nrosuvastatin = Chem.MolFromSmiles('OC(=O)C[C@H](O)C[C@H](O)\\C=C\\c1c(C(C)C)nc(N(C)S(=O)(=O)C)nc1c2ccc(F)cc2')\nDraw.MolsToGridImage((atorvastatin,rosuvastatin))\n\n\n\n\n\n\n\n\nTo use the new drawing code, we create a Draw2D object and pass that to SimilarityMaps.GetSimilarityMapForFingerprint:\n\ndef show_png(data):\n    bio = io.BytesIO(data)\n    img = Image.open(bio)\n    return img\n\n\nd = Draw.MolDraw2DCairo(400, 400)\n_, maxWeight = SimilarityMaps.GetSimilarityMapForFingerprint(atorvastatin, rosuvastatin, \n                                        lambda m, i: SimilarityMaps.GetMorganFingerprint(m, i, radius=2, fpType='bv'), \n                                        draw2d=d)\nd.FinishDrawing()\nshow_png(d.GetDrawingText())\n\n\n\n\n\n\n\n\nWe can do the same thing with count-based fingerprints:\n\nd = Draw.MolDraw2DCairo(400, 400)\n_, maxWeight = SimilarityMaps.GetSimilarityMapForFingerprint(atorvastatin, rosuvastatin, \n                                        lambda m, i: SimilarityMaps.GetMorganFingerprint(m, i, radius=2, fpType='count'), \n                                        draw2d=d)\nd.FinishDrawing()\nshow_png(d.GetDrawingText())\n\n\n\n\n\n\n\n\nThe other GetSimilarityMapFrom... functions also accept the optional draw2d argument. Here’s a visualization of the contributions made by the atoms in atorvastatin to its calculatied logp value:\n\nfrom rdkit.Chem import rdMolDescriptors\nator_contribs = rdMolDescriptors._CalcCrippenContribs(atorvastatin)\nd = Draw.MolDraw2DCairo(400, 400)\nSimilarityMaps.GetSimilarityMapFromWeights(atorvastatin,[x[0] for x in ator_contribs],draw2d=d)\nd.FinishDrawing()\nshow_png(d.GetDrawingText())\n\n\n\n\n\n\n\n\nAnd a couple more visualizations of various partial charge schemes.\nStarting with Gasteiger-Marsilli charges:\n\nfrom rdkit.Chem import rdPartialCharges\nrdPartialCharges.ComputeGasteigerCharges(atorvastatin)\nchgs = [x.GetDoubleProp(\"_GasteigerCharge\") for x in atorvastatin.GetAtoms()]\nd = Draw.MolDraw2DCairo(400, 400)\nSimilarityMaps.GetSimilarityMapFromWeights(atorvastatin,chgs,draw2d=d)\nd.FinishDrawing()\nshow_png(d.GetDrawingText())\n\n\n\n\n\n\n\n\nAnd also the partial charges calculated with extended Hueckel theory (eHT) using Mulliken analysis:\n\nfrom rdkit.Chem import rdEHTTools\nfrom rdkit.Chem import rdDistGeom\nmh = Chem.AddHs(atorvastatin)\nrdDistGeom.EmbedMolecule(mh)\n_,res = rdEHTTools.RunMol(mh)\nstatic_chgs = res.GetAtomicCharges()[:atorvastatin.GetNumAtoms()]\nd = Draw.MolDraw2DCairo(400, 400)\nSimilarityMaps.GetSimilarityMapFromWeights(atorvastatin,list(static_chgs),draw2d=d)\nd.FinishDrawing()\nshow_png(d.GetDrawingText())\n\n\n\n\n\n\n\n\nAs one final demo, I’ll use the method to visualize the variability of the eHT charges with conformation for atorvastatin.\nStart by generating 10 diverse conformers, calculating the charges for each, and plotting the average:\n\nmh = Chem.AddHs(atorvastatin)\nps = rdDistGeom.ETKDGv2()\nps.pruneRmsThresh = 0.5\nps.randomSeed = 0xf00d\nrdDistGeom.EmbedMultipleConfs(mh,10,ps)\nprint(f'Found {mh.GetNumConformers()} conformers')\nchgs = []\nfor conf in mh.GetConformers():\n    _,res = rdEHTTools.RunMol(mh,confId=conf.GetId())\n    chgs.append(res.GetAtomicCharges()[:atorvastatin.GetNumAtoms()])\nchgs = np.array(chgs)\nmean_chgs = np.mean(chgs,axis=0)\nstd_chgs = np.std(chgs,axis=0)\nd = Draw.MolDraw2DCairo(400, 400)\nSimilarityMaps.GetSimilarityMapFromWeights(atorvastatin,list(mean_chgs),draw2d=d)\nd.FinishDrawing()\nshow_png(d.GetDrawingText())\n\nFound 10 conformers\n\n\n\n\n\n\n\n\n\nThat doesn’t look hugely different from what we saw above.\nTo show the variability, plot the standard deviation of the charges across the 10 conformers:\n\nprint(std_chgs)\nprint(max(std_chgs),min(std_chgs))\nd = Draw.MolDraw2DCairo(400, 400)\nSimilarityMaps.GetSimilarityMapFromWeights(atorvastatin,list(std_chgs),draw2d=d)\nd.FinishDrawing()\nshow_png(d.GetDrawingText())\n\n[0.01292592 0.00743163 0.01971312 0.01433223 0.01063085 0.01283745\n 0.01219511 0.00748435 0.01234194 0.01492494 0.00640842 0.02264999\n 0.02481744 0.00987842 0.00843151 0.01289956 0.00560632 0.00498617\n 0.00604883 0.005569   0.00452067 0.00796675 0.00718033 0.00581337\n 0.00702613 0.00634237 0.00699789 0.00539868 0.00521868 0.02412709\n 0.03131741 0.03709349 0.00657276 0.01175903 0.00674661 0.01012909\n 0.0050995  0.01139418 0.00831795 0.00581207 0.00960073]\n0.03709348867462464 0.00452067345998171\n\n\n\n\n\n\n\n\n\nThe deviations aren’t huge (the printed array shows that), but the largest value is clearly the amide N.\nThere’s definitely a ToDo here to improve the way the negative contours are drawn so that the fact that they are being drawn with dashed lines is visible."
  },
  {
    "objectID": "posts/2023-11-19-explaining-stereo-groups.html",
    "href": "posts/2023-11-19-explaining-stereo-groups.html",
    "title": "Intro to Stereo Groups and Enhanced Stereochemistry",
    "section": "",
    "text": "Basics of enhanced stereochemistry\n\nfrom rdkit import Chem\nfrom rdkit.Chem.Draw import IPythonConsole\nIPythonConsole.molSize = 350,300\nIPythonConsole.drawOptions.addStereoAnnotation = True\nfrom rdkit.Chem import Draw\nimport rdkit\nprint(rdkit.__version__)\n\n2023.09.2\n\n\nLet’s start with four versions of a molecule with a single chiral center (alanine):\n\nm = Chem.MolFromSmiles('NC(C)C(=O)O')\nm_ccw = Chem.MolFromSmiles('N[C@H](C)C(=O)O')\nm_cw = Chem.MolFromSmiles('N[C@@H](C)C(=O)O')\nm_unk = Chem.MolFromSmiles('N[C@@H](C)C(=O)O |w:1.1|')\nChem.ReapplyMolBlockWedging(m_unk)\nDraw.MolsToGridImage([m,m_ccw,m_cw,m_unk],legends=['','R','S','unknown'],molsPerRow=4)\n\n\n\n\n\n\n\n\nUnderstanding what is meant by the second two SMILES is straightforward: in each case we’re dealing with a single stereoisomer. The last molecule is also reasonably clear: by providing a squiggle (or wavy) bond to one of the neighbors of the chiral center we have been explicit that we don’t know its stereochemistry.\n\nNote that being explicit about what we don’t know by providing the squiggle bond requires us to use CXSMILES, an extension to SMILES developed by ChemAxon.\n\nBut what does the first SMILES mean? Here no information is provided about stereochemistry, so we have to either guess or assume some convention like “unspecified chiral centers indicate a 50/50 mixture of the two possible local chiralities”. This is fine if we produce all of the SMILES that we need to work with and either never provide SMILES to anyone else or let them know about our conventions, but both of those are pretty strong assumptions/requirements.\nFortunately we can do better than this by taking advantage of stereo groups, a.k.a. enhanced stereochemistry. This was introduced, I believe (the horrors of link rot and the modern internet makes it hard to be sure), by the team at MDL Information Systems back at the beginning of the ’00s. It’s supported in V3000 Mol/SDF files as well as CXSMILES.\n\nAside While writing this post I ran across a nice blog post by the team at ACD/Labs which also discusses enhanced stereo and the ways they support it.\n\nWe can use stereo groups to label what we know about each stereo center (or group of related stereo centers). There are three types of stereo groups:\n\nabs: indicates that the absolute stereo of the centers is known\nand: indicates that the molecule represents a 50/50 mixture of the stereoisomer as drawn and its mirror image\nor: indicates that the molecule represents either the stereoisomer as drawn or its mirror image\n\nHere’s the application of that to alanine:\n\nm_ccw_abs = Chem.MolFromSmiles('N[C@H](C)C(=O)O |a:1|')\nm_and = Chem.MolFromSmiles('N[C@H](C)C(=O)O |&1:1|')\nm_or = Chem.MolFromSmiles('N[C@H](C)C(=O)O |o1:1|')\nDraw.MolsToGridImage([m_ccw_abs,m_and,m_or],legends=['R', 'R and S','R or S'])\n\n\n\n\n\n\n\n\nLet’s look at the AND example:\n\nm_and = Chem.MolFromSmiles('N[C@H](C)C(=O)O |&1:1|')\nm_and_1 = Chem.MolFromSmiles('N[C@H](C)C(=O)O |a:1|')\nm_and_2 = Chem.MolFromSmiles('N[C@@H](C)C(=O)O |a:1|')\nDraw.MolsToGridImage([m_and,m_and_1,m_and_2])\n\n\n\n\n\n\n\n\nHere the first entry shows the molecule with stereo group while the second two entries show the two molecules contained in that mixture. If we used an OR stereo group instead of AND we’d be describing a sample with one of the two stereoisomers.\n\n\nMultiple stereocenters\nStereo groups are even more useful if there are multiple chiral centers since they allow us to express relative stereochemistry.\nWe’ll use this molecule with two chiral centers as an example:\n\nm = Chem.MolFromSmiles('OC1CCC1N')\nm\n\n\n\n\n\n\n\n\nWe can obviously have examples of this where one or both chiral centers are fully specified, just as we saw above, but using stereo groups lets us do something new: express that the relative stereochemistry of the two centers is known:\n\nm2_cis = Chem.MolFromSmiles('O[C@H]1CC[C@H]1N |&1:1,4|')\nm2_cis_1 = Chem.MolFromSmiles('O[C@H]1CC[C@H]1N |a:1,4|')\nm2_cis_2 = Chem.MolFromSmiles('O[C@@H]1CC[C@@H]1N |a:1,4|')\n\nm2_trans = Chem.MolFromSmiles('O[C@H]1CC[C@@H]1N |&1:1,4|')\nm2_trans_1 = Chem.MolFromSmiles('O[C@H]1CC[C@@H]1N |a:1,4|')\nm2_trans_2 = Chem.MolFromSmiles('O[C@@H]1CC[C@H]1N |a:1,4|')\n\nDraw.MolsToGridImage([m2_cis,m2_cis_1,m2_cis_2,m2_trans,m2_trans_1,m2_trans_2],legends=['\"cis\"','','','\"trans\"','',''],molsPerRow=3)\n\n\n\n\n\n\n\n\nIn each row above the first entry shows the molecule with stereo groups while the second two entries show the two molecules contained in the mixture that representation describes.\n\n\nA slightly more complicated example\nHere we’ll invent some enhanced stereo information for this molecule from ChEMBL:\n\nm = Chem.MolFromSmiles('OC[C@H]1OC=C[C@@H](O)[C@@H]1O') # CHEMBL2115567\nm\n\n\n\n\n\n\n\n\n\nthree_centers = Chem.MolFromSmiles('OC[C@H]1OC=C[C@@H](O)[C@@H]1O |&1:2,o2:6,8|') \nthree_centers\n\n\n\n\n\n\n\n\nThere are both “and” and “or” groups present, so this represents one of two mixtures.\nWe have a mixture which contains either these two molecules:\n\nmix1_1 = Chem.MolFromSmiles('OC[C@H]1OC=C[C@@H](O)[C@@H]1O') \nmix1_2 = Chem.MolFromSmiles('OC[C@@H]1OC=C[C@@H](O)[C@@H]1O') \nDraw.MolsToGridImage([mix1_1,mix1_2])\n\n\n\n\n\n\n\n\nor these two molecules:\n\nmix2_1 = Chem.MolFromSmiles('OC[C@H]1OC=C[C@H](O)[C@H]1O') \nmix2_2 = Chem.MolFromSmiles('OC[C@@H]1OC=C[C@H](O)[C@H]1O') \nDraw.MolsToGridImage([mix2_1,mix2_2])\n\n\n\n\n\n\n\n\n\n\nEnumerating stereo groups\nThe RDKit’s stereoisomer enumeration code can take stereo groups into account. This is a useful way to see all of the possible molecules encoded in a structure with stereo groups.\n\nfrom rdkit.Chem import EnumerateStereoisomers\n\n\nopts = EnumerateStereoisomers.StereoEnumerationOptions()\nopts.onlyStereoGroups = True\nenumerated = EnumerateStereoisomers.EnumerateStereoisomers(three_centers)\nDraw.MolsToGridImage(list(enumerated))\n\n\n\n\n\n\n\n\nNote that EnumerateStereoisomers() currently has no way of indicating AND and OR relationships, so we see all stereoisomers which could be present.\n\n\nStereo groups and canonicalization\nThese four representations all describe the same thing:\n\nm1 = Chem.MolFromSmiles('OC[C@H]1OC=C[C@@H](O)[C@@H]1O |&1:2,o2:6,8|') \nm2 = Chem.MolFromSmiles('OC[C@@H]1OC=C[C@@H](O)[C@@H]1O |&1:2,o2:6,8|') \nm3 = Chem.MolFromSmiles('OC[C@H]1OC=C[C@H](O)[C@H]1O |&1:2,o2:6,8|') \nm4 = Chem.MolFromSmiles('OC[C@@H]1OC=C[C@H](O)[C@H]1O |&1:2,o2:6,8|') \n\nDraw.MolsToGridImage([m1,m2,m3,m4],molsPerRow=2,subImgSize=(250,250))\n\n\n\n\n\n\n\n\nWe see that when we generate canonical CXSMILES for the molecules:\n\nfor m in (m1,m2,m3,m4):\n    print(Chem.MolToCXSmiles(m))\n\nOC[C@H]1OC=C[C@H](O)[C@H]1O |o1:6,8,&1:2|\nOC[C@H]1OC=C[C@H](O)[C@H]1O |o1:6,8,&1:2|\nOC[C@H]1OC=C[C@H](O)[C@H]1O |o1:6,8,&1:2|\nOC[C@H]1OC=C[C@H](O)[C@H]1O |o1:6,8,&1:2|\n\n\nNote that this not true if we generate standard canonical SMILES for the molecule:\n\nfor m in (m1,m2,m3,m4):\n    print(Chem.MolToSmiles(m))\n\nOC[C@H]1OC=C[C@@H](O)[C@@H]1O\nOC[C@@H]1OC=C[C@@H](O)[C@@H]1O\nOC[C@H]1OC=C[C@H](O)[C@H]1O\nOC[C@@H]1OC=C[C@H](O)[C@H]1O\n\n\nThis is a bit confusing at first. The reasoning behind the behavior is that the stereo groups should not be used in the canonicalization since no information about them will be included in the output.\n\n\nCreating your own stereo groups\nYou can also add your own stereo groups to molecules:\n\nm = Chem.MolFromSmiles('OC[C@H]1OC=C[C@@H](O)[C@@H]1O') # CHEMBL2115567\nIPythonConsole.drawOptions.addAtomIndices = True\nm\n\n\n\n\n\n\n\n\n\nIPythonConsole.drawOptions.addAtomIndices = False\n\nThe function to do this is CreateStereoGroup():\n\nsgmol = Chem.RWMol(m)\nsg = Chem.CreateStereoGroup(Chem.StereoGroupType.STEREO_AND, sgmol, [6,8])\nsgmol.SetStereoGroups([sg])\nsgmol"
  },
  {
    "objectID": "posts/2023-05-26-drawing-options-explained.html",
    "href": "posts/2023-05-26-drawing-options-explained.html",
    "title": "Drawing options explained",
    "section": "",
    "text": "The RDKit drawing code has a lot of options that can be changed to tune/tweak the way the drawing is done. These options generally do have documentation in the form of doc strings, but we’ve never put together an overview in a central place. This blog post is an attempt to remedy that. It’s inteded to be more of a reference than the kind of post that you’re likely to want to read through, so there’s not a huge amount of text here (but there are a bunch of examples!).\nHopefully this is useful. Now I just need to figure out how to get this information into the documentation.\nfrom rdkit import Chem\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit.Chem import rdDepictor\nimport rdkit\nprint(rdkit.__version__)\n\n2023.03.1\ndoravirine = Chem.MolFromSmiles('Cn1c(n[nH]c1=O)Cn2ccc(c(c2=O)Oc3cc(cc(c3)Cl)C#N)C(F)(F)F')\nrdDepictor.Compute2DCoords(doravirine)\nrdDepictor.StraightenDepiction(doravirine)\ndoravirine\nfrom PIL import Image\nfrom io import BytesIO\ndef show_mol(d2d,mol,legend='',highlightAtoms=[]):\n    d2d.DrawMolecule(mol,legend=legend, highlightAtoms=highlightAtoms)\n    d2d.FinishDrawing()\n    bio = BytesIO(d2d.GetDrawingText())\n    return Image.open(bio)\ndef show_images(imgs,buffer=5):\n    height = 0\n    width = 0\n    for img in imgs:\n        height = max(height,img.height)\n        width += img.width\n    width += buffer*(len(imgs)-1)\n    res = Image.new(\"RGBA\",(width,height))\n    x = 0\n    for img in imgs:\n        res.paste(img,(x,0))\n        x += img.width + buffer\n    return res"
  },
  {
    "objectID": "posts/2023-05-26-drawing-options-explained.html#atom-palettes",
    "href": "posts/2023-05-26-drawing-options-explained.html#atom-palettes",
    "title": "Drawing options explained",
    "section": "Atom palettes",
    "text": "Atom palettes\n\nimgs = []\nd2d = Draw.MolDraw2DCairo(350,300)\nimgs.append(show_mol(d2d,doravirine,legend='default palette'))\n\nd2d = Draw.MolDraw2DCairo(350,300)\ndopts = d2d.drawOptions()\ndopts.useBWAtomPalette()\nimgs.append(show_mol(d2d,doravirine,legend='BW palette'))\n\nd2d = Draw.MolDraw2DCairo(350,300)\ndopts = d2d.drawOptions()\n# use a custom palette where C is purple\ndopts.updateAtomPalette({6:(.7,0,.7)})\nimgs.append(show_mol(d2d,doravirine,legend='custom palette'))\n\nshow_images(imgs)\n\n\n\n\n\n\n\n\nThe other palettes available are:\n\nuseAvalonAtomPalette(): the colors used by the Avalon depictor\nuseCDKAtomPalette(): the colors used by the CDK depictor\nsetAtomPalette(): provide a dictionary mapping atomic number to color which completely replaces the atom palette"
  },
  {
    "objectID": "posts/2023-05-26-drawing-options-explained.html#background-color",
    "href": "posts/2023-05-26-drawing-options-explained.html#background-color",
    "title": "Drawing options explained",
    "section": "Background color",
    "text": "Background color\n\nimgs = []\nd2d = Draw.MolDraw2DCairo(350,300)\nimgs.append(show_mol(d2d,doravirine,legend='default background'))\n\nd2d = Draw.MolDraw2DCairo(350,300)\ndopts = d2d.drawOptions()\ndopts.setBackgroundColour((0,.9,.9,.3))\nimgs.append(show_mol(d2d,doravirine,legend='cyan background'))\n\n\nshow_images(imgs)"
  },
  {
    "objectID": "posts/2023-05-26-drawing-options-explained.html#highlight-color",
    "href": "posts/2023-05-26-drawing-options-explained.html#highlight-color",
    "title": "Drawing options explained",
    "section": "Highlight color",
    "text": "Highlight color\n\nimgs = []\nd2d = Draw.MolDraw2DCairo(350,300)\nimgs.append(show_mol(d2d,doravirine,legend='default highlight', highlightAtoms=(0,1,2,3,4,5,6)))\n\nd2d = Draw.MolDraw2DCairo(350,300)\ndopts = d2d.drawOptions()\ndopts.setHighlightColour((0,.9,.9,.8))\nimgs.append(show_mol(d2d,doravirine,legend='cyan highlight', highlightAtoms=(0,1,2,3,4,5,6)))\n\n\nshow_images(imgs)"
  },
  {
    "objectID": "posts/2023-05-26-drawing-options-explained.html#query-bond-color",
    "href": "posts/2023-05-26-drawing-options-explained.html#query-bond-color",
    "title": "Drawing options explained",
    "section": "Query bond color",
    "text": "Query bond color\n\nqm = Chem.MolFromSmarts(\"c1ccc2nc([*:1])nc([*:2])c2c1\")\nrdDepictor.Compute2DCoords(qm)\nrdDepictor.StraightenDepiction(qm)\n\nimgs = []\nd2d = Draw.MolDraw2DCairo(350,300)\nimgs.append(show_mol(d2d,qm,legend='default'))\n\nd2d = Draw.MolDraw2DCairo(350,300)\ndopts = d2d.drawOptions()\ndopts.setQueryColour((0,.9,.9,.8))\nimgs.append(show_mol(d2d,qm,legend='cyan'))\n\nshow_images(imgs)"
  },
  {
    "objectID": "posts/2023-05-26-drawing-options-explained.html#other-colors",
    "href": "posts/2023-05-26-drawing-options-explained.html#other-colors",
    "title": "Drawing options explained",
    "section": "Other colors:",
    "text": "Other colors:\n\nsetSymbolColour(): the color used for reaction arrows and single-color wedged bonds\nsetAnnotationColour(): the color used for molecule, atom, bond, and SGroup notes"
  },
  {
    "objectID": "posts/2023-05-26-drawing-options-explained.html#dummiesareattachments",
    "href": "posts/2023-05-26-drawing-options-explained.html#dummiesareattachments",
    "title": "Drawing options explained",
    "section": "dummiesAreAttachments",
    "text": "dummiesAreAttachments\n\nqm = Chem.MolFromSmiles(\"c1ccc2nc([*:1])nc([*:2])c2c1\")\nrdDepictor.Compute2DCoords(qm)\nrdDepictor.StraightenDepiction(qm)\n\nimgs = []\nd2d = Draw.MolDraw2DCairo(350,300)\nimgs.append(show_mol(d2d,qm,legend='default'))\n\nd2d = Draw.MolDraw2DCairo(350,300)\ndopts = d2d.drawOptions()\ndopts.dummiesAreAttachments = True\nimgs.append(show_mol(d2d,qm,legend='dummiesAreAttachments'))\n\nshow_images(imgs)"
  },
  {
    "objectID": "posts/2023-05-26-drawing-options-explained.html#display-of-extra-information",
    "href": "posts/2023-05-26-drawing-options-explained.html#display-of-extra-information",
    "title": "Drawing options explained",
    "section": "Display of extra information",
    "text": "Display of extra information\n\nqm = Chem.MolFromSmiles(\"[2H]c1c(C)[13cH]c2nc([1*])nc([2*])c2c1\")\nrdDepictor.Compute2DCoords(qm)\nrdDepictor.StraightenDepiction(qm)\n\nimgs = []\nd2d = Draw.MolDraw2DCairo(250,200)\nimgs.append(show_mol(d2d,qm,legend='default'))\n\n\nd2d = Draw.MolDraw2DCairo(250,200)\ndopts = d2d.drawOptions()\ndopts.dummyIsotopeLabels = False\nimgs.append(show_mol(d2d,qm,legend='dummyIsotopeLabels=False'))\n\nd2d = Draw.MolDraw2DCairo(250,200)\ndopts = d2d.drawOptions()\ndopts.isotopeLabels = False\nimgs.append(show_mol(d2d,qm,legend='isotopeLabels=False'))\n\nd2d = Draw.MolDraw2DCairo(250,200)\ndopts = d2d.drawOptions()\ndopts.atomLabelDeuteriumTritium = True\nimgs.append(show_mol(d2d,qm,legend='atomLabelDeuteriumTritium'))\n\n\nshow_images(imgs)\n\n\n\n\n\n\n\n\n\nimgs = []\nd2d = Draw.MolDraw2DCairo(250,200)\ndopts = d2d.drawOptions()\ndopts.addAtomIndices = True\nimgs.append(show_mol(d2d,qm,legend='atom indices'))\n\n\nd2d = Draw.MolDraw2DCairo(250,200)\ndopts = d2d.drawOptions()\ndopts.addBondIndices = True\nimgs.append(show_mol(d2d,qm,legend='bond indices'))\n\nd2d = Draw.MolDraw2DCairo(250,200)\ndopts = d2d.drawOptions()\ndopts.noAtomLabels = True\nimgs.append(show_mol(d2d,qm,legend='noAtomLabels'))\n\n\n\nshow_images(imgs)\n\n\n\n\n\n\n\n\n\nqm = Chem.MolFromSmiles(\"Cc1c[c]ccc1\")\nrdDepictor.Compute2DCoords(qm)\nrdDepictor.StraightenDepiction(qm)\n\nimgs = []\nd2d = Draw.MolDraw2DCairo(250,200)\nimgs.append(show_mol(d2d,qm,legend='default'))\n\nd2d = Draw.MolDraw2DCairo(250,200)\ndopts = d2d.drawOptions()\ndopts.explicitMethyl = True\nimgs.append(show_mol(d2d,qm,legend='explicitMethyl'))\n\nd2d = Draw.MolDraw2DCairo(250,200)\ndopts = d2d.drawOptions()\ndopts.includeRadicals = False\nimgs.append(show_mol(d2d,qm,legend='includeRadicals'))\n\n\nshow_images(imgs)\n\n\n\n\n\n\n\n\nSimplifying drawing of standard query atoms (Q, QH, X, XH, A, AH, M, MH) from mol files or CXSMILES is enabled by default, but it can be turned off:\n\nqm = Chem.MolFromMolBlock('''\n  Mrv2305 04202308462D          \n\n  0  0  0     0  0            999 V3000\nM  V30 BEGIN CTAB\nM  V30 COUNTS 8 8 0 0 0\nM  V30 BEGIN ATOM\nM  V30 1 C -2.6667 3.8734 0 0\nM  V30 2 C -4.0003 3.1034 0 0\nM  V30 3 C -4.0003 1.5633 0 0\nM  V30 4 C -2.6667 0.7933 0 0\nM  V30 5 C -1.333 1.5633 0 0\nM  V30 6 C -1.333 3.1034 0 0\nM  V30 7 A 0.0007 3.8733 0 0\nM  V30 8 X -5.334 3.8733 0 0\nM  V30 END ATOM\nM  V30 BEGIN BOND\nM  V30 1 1 1 2\nM  V30 2 2 2 3\nM  V30 3 1 3 4\nM  V30 4 2 4 5\nM  V30 5 1 5 6\nM  V30 6 2 1 6\nM  V30 7 1 6 7\nM  V30 8 1 2 8\nM  V30 END BOND\nM  V30 END CTAB\nM  END\n''')\n\nimgs = []\nd2d = Draw.MolDraw2DCairo(250,200)\nimgs.append(show_mol(d2d,qm,legend='default'))\n\nd2d = Draw.MolDraw2DCairo(250,200)\ndopts = d2d.drawOptions()\ndopts.useComplexQueryAtomSymbols = False\nimgs.append(show_mol(d2d,qm,legend='useComplexQueryAtomSymbols=False'))\n\nshow_images(imgs)"
  },
  {
    "objectID": "posts/2023-05-26-drawing-options-explained.html#highlighting",
    "href": "posts/2023-05-26-drawing-options-explained.html#highlighting",
    "title": "Drawing options explained",
    "section": "Highlighting",
    "text": "Highlighting\n\nm = Chem.MolFromSmiles('OC(=O)c1n[nH+](C)cc1')\nrdDepictor.Compute2DCoords(m)\nrdDepictor.StraightenDepiction(m)\n\nimgs = []\nd2d = Draw.MolDraw2DCairo(250,200)\nimgs.append(show_mol(d2d,m,legend='default',highlightAtoms=[3,4,5,7,8]))\n\nd2d = Draw.MolDraw2DCairo(250,200)\ndopts = d2d.drawOptions()\ndopts.continuousHighlight = False\nimgs.append(show_mol(d2d,m,legend='not continuous',highlightAtoms=[3,4,5,7,8]))\n\nd2d = Draw.MolDraw2DCairo(250,200)\ndopts = d2d.drawOptions()\ndopts.continuousHighlight = False\ndopts.circleAtoms = False\nimgs.append(show_mol(d2d,m,legend='not continuous no circles',highlightAtoms=[3,4,5,7,8]))\n\nd2d = Draw.MolDraw2DCairo(250,200)\ndopts = d2d.drawOptions()\ndopts.atomHighlightsAreCircles = True\nimgs.append(show_mol(d2d,m,legend='atomHighlightsAreCircles',highlightAtoms=[3,4,5,7,8]))\n\nshow_images(imgs)\n\n\n\n\n\n\n\n\n\nimgs = []\n\nd2d = Draw.MolDraw2DCairo(250,200)\ndopts = d2d.drawOptions()\ndopts.fillHighlights = False\nimgs.append(show_mol(d2d,m,legend='no fill',highlightAtoms=[3,4,5,7,8]))\n\nd2d = Draw.MolDraw2DCairo(250,200)\ndopts = d2d.drawOptions()\ndopts.highlightRadius = .4\nimgs.append(show_mol(d2d,m,legend='highlight radius=0.4',highlightAtoms=[3,4,5,7,8]))\n\nd2d = Draw.MolDraw2DCairo(250,200)\ndopts = d2d.drawOptions()\ndopts.highlightBondWidthMultiplier = 12\nimgs.append(show_mol(d2d,m,legend='highlightBondWidthMultiplier=12',highlightAtoms=[3,4,5,7,8]))\n\n\n\nshow_images(imgs)"
  },
  {
    "objectID": "posts/2023-05-26-drawing-options-explained.html#single-color-wedge-bonds",
    "href": "posts/2023-05-26-drawing-options-explained.html#single-color-wedge-bonds",
    "title": "Drawing options explained",
    "section": "Single color wedge bonds",
    "text": "Single color wedge bonds\n\nmol = Chem.MolFromSmiles('FC1CC[C@@H](O)C[C@@H]1Cl')\nrdDepictor.Compute2DCoords(mol)\nrdDepictor.StraightenDepiction(mol)\n\nimgs = []\nd2d = Draw.MolDraw2DCairo(250,200)\nimgs.append(show_mol(d2d,mol,legend='default'))\n\nd2d = Draw.MolDraw2DCairo(250,200)\ndopts = d2d.drawOptions()\ndopts.singleColourWedgeBonds = True\nimgs.append(show_mol(d2d,mol,legend='singleColourWedgeBonds'))\n\n\nshow_images(imgs)"
  },
  {
    "objectID": "posts/2023-06-12-overlapping-ic50-assays1.html",
    "href": "posts/2023-06-12-overlapping-ic50-assays1.html",
    "title": "The hazards of combining data from IC50 assays",
    "section": "",
    "text": "Update 25 February, 2024: We have published a paper inspired by this post which includes an expanded and refined version of the analysis: https://pubs.acs.org/doi/10.1021/acs.jcim.4c00049\nUpdated 13 June, 2023 to exclude points from the analysis where standard_relation is not =. Thanks to Christian Feldmann for pointing out the mistake! There were a very small number of these and the changes don’t affect any of the conclusions.\nI periodically see people working with ChEMBL data and combining results from different xC50 (I’ll use that abbreviation for IC50, AC50, XC50, and EC50 here) assays on the same target into a single data set. This generally leads to me starting off on a rant about how you really shouldn’t do that. Well, unless you don’t care about the quality of the data set that you’re assembling.\nSince I’ve been doing a bunch of data set curation this week, I figured that it would be worthwhile to collect some data from ChEMBL in order to have some numbers and plots to back up my rant. This ended up being a bit of a rabbit hole (a fact which should surprise exactly no one… particularly not me). Here’s a brief high-level description of what I did, the actual Python and SQL code is below. I’m working with ChEMBL_32 here.\nHere’s the TL;DR summary of the results.\nIf I am careful about which xC50 assays I combine, making sure as much available metadata as possible matches, and then plot the pchembl values for duplicate compounds, I get the following:\nThe X axis here is the pChEMBL value in one assay, the Y axis is the pChEMBL value in the other assay.\nFor these ~13K data points R\\(^2\\) is 0.60 and Spearman’s R is 0.82. 47% of the points differ by more than 0.3 log units in the two assays and 16% differ by more than one log unit. That’s a lot of noise in the data and that is basically the best case scenario for combining xC50 assays.\nIf I’m not careful at all, and just combine using the target ID and the type of the result (so that I’m not combining IC50 and EC50), I get the following (this time it’s a hexbin plot, because otherwise you can’t see anything):\nFor the ~100K data points R\\(^2\\) is 0.53 and Spearman’s R is 0.79. 55% of the points differ by more than 0.3 log units in the two assays and 21% differ by more than one log unit. That is, unsurprisingly, even worse than before.\nMaybe at some point I’ll come back and include a patient explanation of the scientific reasons why it’s bad idea to combine data from different xC50 assays, including some specific examples from ChEMBL, but it’s hot in my office and I’ve been in this rabbit hole MUCH TOO LONG already, so I’m not doing that now.\nThanks to Pat Walters for his feedback on an early draft of this.\nAs always, I’m happy for feedback and comments!\nThe code, along with some more results, follows\nimport numpy as np\nfrom scipy import stats\nfrom sklearn.metrics import r2_score \n\n%load_ext sql\n%matplotlib inline\nimport matplotlib.pyplot as plt\nplt.style.use('tableau-colorblind10')\nplt.rcParams['font.size'] = '16'\nimport getpass\npw = getpass.getpass()\n\n········"
  },
  {
    "objectID": "posts/2023-06-12-overlapping-ic50-assays1.html#all-assay-parameters-are-the-same",
    "href": "posts/2023-06-12-overlapping-ic50-assays1.html#all-assay-parameters-are-the-same",
    "title": "The hazards of combining data from IC50 assays",
    "section": "All assay parameters are the same",
    "text": "All assay parameters are the same\n\nd = %sql \\\nselect ovl3.*,a1.assay_organism a1_s,a2.assay_organism a2_s from goldilocks_ovl3 ovl3 \\\njoin assays a1 on (assay1_chembl_id=a1.chembl_id) join assays a2 on (assay2_chembl_id=a2.chembl_id) \\\nwhere a1.assay_type = a2.assay_type \\\nand a1.assay_organism is not distinct from a2.assay_organism \\\nand a1.assay_category is not distinct from a2.assay_category \\\nand a1.assay_tax_id is not distinct from a2.assay_tax_id \\\nand a1.assay_strain is not distinct from a2.assay_strain \\\nand a1.assay_tissue is not distinct from a2.assay_tissue \\\nand a1.assay_cell_type is not distinct from a2.assay_cell_type \\\nand a1.assay_subcellular_fraction is not distinct from a2.assay_subcellular_fraction \\\nand a1.bao_format is not distinct from a2.bao_format \\\norder by ovl desc;\n\npts = []\nfor row in d:\n    aid1 = row[6]\n    aid2 = row[7]\n    ad = %sql \\\n      select a1.molregno,a1.pchembl_value a1_pchembl,a2.pchembl_value a2_pchembl from \\\n       (select * from activities where pchembl_value is not null and assay_id=:aid1 \\\n          and standard_units = 'nM'  \\\n          and data_validity_comment is null  \\\n          and standard_relation = '=' \\\n       ) a1 \\\n       join (select * from activities where pchembl_value is not null and assay_id=:aid2 \\\n          and standard_units = 'nM'  \\\n          and data_validity_comment is null  \\\n          and standard_relation = '=' \\\n       ) a2 \\\n       using (molregno) \\\n       where a1.standard_type = a2.standard_type;\n    for row in ad:\n        pts.append(list(row))\n\n * postgresql://&lt;some details&gt;/chembl_32\n516 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n88 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n77 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n71 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n63 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n60 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n60 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n73 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n55 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n57 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n53 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n82 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n160 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n76 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n68 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n64 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n104 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n1 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n\n\nAnd plot that data and generate some stats. Descriptions of the plots and stats are below\n\ndelta_accum = {}\n\n\ntitl = 'no mismatches'\nplt.figure(figsize=(12,12))\nxp = np.array([x[1] for x in pts])\nyp = np.array([x[2] for x in pts])\n\nplt.subplot(2,2,1)\nplt.scatter(xp,yp,alpha=0.2,edgecolors='none');\nplt.plot((4,11),(4,11),'k-');\nplt.plot((4,11),(3,10),'k--');\nplt.plot((4,11),(5,12),'k--');\nplt.plot((4,11),(3.7,10.7),'k-.');\nplt.plot((4,11),(4.3,11.3),'k-.');\nplt.xlabel('assay1 pchembl')\nplt.ylabel('assay2 pchembl')\nplt.title(titl)\n\n\nplt.subplot(2,2,2)\nplt.hexbin(xp,yp,cmap='Blues',bins='log');\nplt.plot((4,11),(4,11),'k-');\nplt.plot((4,11),(3,10),'k--');\nplt.plot((4,11),(5,12),'k--');\nplt.plot((4,11),(3.7,10.7),'k-.');\nplt.plot((4,11),(4.3,11.3),'k-.');\nplt.xlabel('assay1 pchembl')\nplt.ylabel('assay2 pchembl')\n\nplt.subplot(2,2,3)\ndelts = np.abs(xp-yp)\ndelta_accum['all_match'] = delts\nplt.hist(delts,bins=20);\nplt.xlabel('delta pchembl');\n\nplt.tight_layout()\n\n\nr,p = stats.spearmanr(xp,yp)\nr2 = r2_score(xp,yp)\nprint(f'R2={r2:.2f}, Spearman R={r:.2f}')\n\nnpts = len(delts)\nfrac1 = sum(delts&gt;0.3)/npts\nfrac2 = sum(delts&gt;1)/npts\nprint(f'{npts} points. Fraction &gt; 0.3: {frac1:.2f}, fraction &gt; 1.0: {frac2:.2f}')\n\nbins = [6,7,8,9]\nprint(f'Fraction with different classifications:')\nfor b in bins:\n    missed = sum((xp - b)*(yp-b) &lt;0)/ npts\n    print(f'\\t bin={b}: {missed:.2f}')\n\nR2=0.60, Spearman R=0.82\n13117 points. Fraction &gt; 0.3: 0.47, fraction &gt; 1.0: 0.16\nFraction with different classifications:\n     bin=6: 0.11\n     bin=7: 0.14\n     bin=8: 0.11\n     bin=9: 0.04\n\n\n\n\n\n\n\n\n\nThe first two plots are showing the same thing: the value in one assay plotted against the value in the other; on the left there’s a scatter plot, the right has a hexbin plot which makes it a bit easier to see what’s going on in the high density regions. The scatter plots include a solid line along y=x, dashed lines offset by \\(\\Delta\\) pChEMBL = 1.0, and dot-dashed lines offset by \\(\\Delta\\) pChEMBL = 0.3 (a common estimate of experimental error in these types of measurements). The histogram is of |\\(\\Delta\\) pChEMBL|, there’s no significance to the ordering, so the sign isn’t important. There are 13K data points on this plot.\nThere are some summary stats above the plots. These include R2, Spearman’s R, the fraction of points where \\(\\Delta\\) pChEMBL &gt; 0.3 and the fraction of points where \\(\\Delta\\) pChEMBL &gt; 1.0. Finally, there are a series of values for the fraction of the points which would be assigned to different activity classes in the two assays for different pChEMBL activity thresholds. So here 14% of compounds would be classified differently if we set the threshold for activity at 100 nM.\nI think this is probably best case for IC50. And it’s not very good. An R2 of 0.6 is pretty sad, and the differences observed"
  },
  {
    "objectID": "posts/2023-06-12-overlapping-ic50-assays1.html#only-assay_type-matches",
    "href": "posts/2023-06-12-overlapping-ic50-assays1.html#only-assay_type-matches",
    "title": "The hazards of combining data from IC50 assays",
    "section": "Only assay_type matches",
    "text": "Only assay_type matches\nHere I repeat the analysis for any assay pairs which have the same standard_type (this can be things like “functional”, or “binding”).\n\n\nd = %sql \\\nselect ovl3.*,a1.assay_organism a1_s,a2.assay_organism a2_s from goldilocks_ovl3 ovl3 \\\njoin assays a1 on (assay1_chembl_id=a1.chembl_id) join assays a2 on (assay2_chembl_id=a2.chembl_id) \\\nwhere a1.assay_type = a2.assay_type \\\norder by ovl desc;\n\npts = []\naids = []\nfor row in d:\n    cid1 = row[1]\n    cid2 = row[2]\n    aid1 = row[6]\n    aid2 = row[7]\n    ad = %sql \\\n      select a1.molregno,a1.pchembl_value a1_pchembl,a2.pchembl_value a2_pchembl from \\\n       (select * from activities where pchembl_value is not null and assay_id=:aid1 \\\n          and standard_units = 'nM'  \\\n          and data_validity_comment is null  \\\n          and standard_relation = '=' \\\n       ) a1 \\\n       join (select * from activities where pchembl_value is not null and assay_id=:aid2 \\\n          and standard_units = 'nM'  \\\n          and data_validity_comment is null  \\\n          and standard_relation = '=' \\\n       ) a2 \\\n       using (molregno) \\\n       where a1.standard_type = a2.standard_type;\n    for row in ad:\n        pts.append(list(row))\n        aids.append((cid1,cid2))\n\n\n * postgresql://&lt;some details&gt;/chembl_32\n1132 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n88 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n88 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n209 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n85 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n85 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n90 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n77 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n73 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n71 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n67 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n65 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n63 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n57 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n60 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n60 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n73 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n57 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n55 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n57 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n53 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n53 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n53 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n98 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n82 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n160 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n76 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n1 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n70 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n136 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n68 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n64 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n64 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n116 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n104 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n2 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n1 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n\n\n\ntitl = 'any assay field mismatch except assay type'\nplt.figure(figsize=(12,12))\nxp = np.array([x[1] for x in pts])\nyp = np.array([x[2] for x in pts])\n\nplt.subplot(2,2,1)\nplt.scatter(xp,yp,alpha=0.1,edgecolors='none');\nplt.plot((4,11),(4,11),'k-');\nplt.plot((4,11),(3,10),'k--');\nplt.plot((4,11),(5,12),'k--');\nplt.plot((4,11),(3.7,10.7),'k-.');\nplt.plot((4,11),(4.3,11.3),'k-.');\nplt.xlabel('assay1 pchembl')\nplt.ylabel('assay2 pchembl')\nplt.title(titl)\n\n\nplt.subplot(2,2,2)\nplt.hexbin(xp,yp,cmap='Blues',bins='log');\nplt.plot((4,11),(4,11),'k-');\nplt.plot((4,11),(3,10),'k--');\nplt.plot((4,11),(5,12),'k--');\nplt.plot((4,11),(3.7,10.7),'k-.');\nplt.plot((4,11),(4.3,11.3),'k-.');\nplt.xlabel('assay1 pchembl')\nplt.ylabel('assay2 pchembl')\n\nplt.subplot(2,2,3)\ndelts = np.abs(xp-yp)\ndelta_accum['only type'] = delts\nplt.hist(delts,bins=20);\nplt.xlabel('delta pchembl');\n\nplt.tight_layout()\n\nr,p = stats.spearmanr(xp,yp)\nr2 = r2_score(xp,yp)\nprint(f'R2={r2:.2f}, Spearman R={r:.2f}')\n\n\n\nnpts = len(delts)\nfrac1 = sum(delts&gt;0.3)/npts\nfrac2 = sum(delts&gt;1)/npts\nprint(f'{npts} points. Fraction &gt; 0.3: {frac1:.2f}, fraction &gt; 1.0: {frac2:.2f}')\n\nbins = [6,7,8,9]\nprint(f'Fraction with different classifications:')\nfor b in bins:\n    missed = sum((xp - b)*(yp-b) &lt;0)/ npts\n    print(f'\\t bin={b}: {missed:.2f}')\n\nR2=0.55, Spearman R=0.77\n28098 points. Fraction &gt; 0.3: 0.51, fraction &gt; 1.0: 0.20\nFraction with different classifications:\n     bin=6: 0.11\n     bin=7: 0.17\n     bin=8: 0.14\n     bin=9: 0.04\n\n\n\n\n\n\n\n\n\nNow we have more data, and even more deviation between the pairs."
  },
  {
    "objectID": "posts/2023-06-12-overlapping-ic50-assays1.html#ignore-assay-type-too",
    "href": "posts/2023-06-12-overlapping-ic50-assays1.html#ignore-assay-type-too",
    "title": "The hazards of combining data from IC50 assays",
    "section": "Ignore assay type too",
    "text": "Ignore assay type too\nFinally I’ll even allow different assay_types to be compared. This is nuts, but I’ve seen people do it.\n\nd = %sql \\\nselect ovl3.*,a1.assay_organism a1_s,a2.assay_organism a2_s from goldilocks_ovl3 ovl3 \\\njoin assays a1 on (assay1_chembl_id=a1.chembl_id) join assays a2 on (assay2_chembl_id=a2.chembl_id) \\\norder by ovl desc;\n\npts = []\naids = []\nfor row in d:\n    cid1 = row[1]\n    cid2 = row[2]\n    aid1 = row[6]\n    aid2 = row[7]\n    ad = %sql \\\n      select a1.molregno,a1.pchembl_value a1_pchembl,a2.pchembl_value a2_pchembl from \\\n       (select * from activities where pchembl_value is not null and assay_id=:aid1 \\\n          and standard_units = 'nM'  \\\n          and data_validity_comment is null  \\\n          and standard_relation = '=' \\\n       ) a1 \\\n       join (select * from activities where pchembl_value is not null and assay_id=:aid2 \\\n          and standard_units = 'nM'  \\\n          and data_validity_comment is null  \\\n          and standard_relation = '=' \\\n       ) a2 \\\n       using (molregno) \\\n       where a1.standard_type = a2.standard_type;\n    for row in ad:\n        pts.append(list(row))\n        aids.append((cid1,cid2))\n\n\n * postgresql://&lt;some details&gt;/chembl_32\n1390 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n88 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n88 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n209 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n85 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n85 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n90 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n77 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n76 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n73 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n71 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n67 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n65 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n63 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n57 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n60 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n60 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n73 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n57 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n55 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n55 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n57 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n53 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n53 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n53 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n98 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n82 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n160 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n76 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n1 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n70 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n140 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n68 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n136 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n64 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n64 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n120 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n116 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n85 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n92 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n4 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n66 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n104 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n2 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n1 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n1 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n\n\n\ntitl = 'ignore assay_type too'\nplt.figure(figsize=(12,12))\nxp = np.array([x[1] for x in pts])\nyp = np.array([x[2] for x in pts])\n\nplt.subplot(2,2,1)\nplt.scatter(xp,yp,alpha=0.1,edgecolors='none');\nplt.plot((4,11),(4,11),'k-');\nplt.plot((4,11),(3,10),'k--');\nplt.plot((4,11),(5,12),'k--');\nplt.plot((4,11),(3.7,10.7),'k-.');\nplt.plot((4,11),(4.3,11.3),'k-.');\nplt.xlabel('assay1 pchembl')\nplt.ylabel('assay2 pchembl')\nplt.title(titl)\n\n\nplt.subplot(2,2,2)\nplt.hexbin(xp,yp,cmap='Blues',bins='log');\nplt.plot((4,11),(4,11),'k-');\nplt.plot((4,11),(3,10),'k--');\nplt.plot((4,11),(5,12),'k--');\nplt.plot((4,11),(3.7,10.7),'k-.');\nplt.plot((4,11),(4.3,11.3),'k-.');\nplt.xlabel('assay1 pchembl')\nplt.ylabel('assay2 pchembl')\n\nplt.subplot(2,2,3)\ndelts = np.abs(xp-yp)\ndelta_accum['ignore all'] = delts\n\nplt.hist(delts,bins=20);\nplt.xlabel('delta pchembl');\n\nplt.tight_layout()\n\nr,p = stats.spearmanr(xp,yp)\nr2 = r2_score(xp,yp)\nprint(f'R2={r2:.2f}, Spearman R={r:.2f}')\n\n\n\nnpts = len(delts)\nfrac1 = sum(delts&gt;0.3)/npts\nfrac2 = sum(delts&gt;1)/npts\nprint(f'{npts} points. Fraction &gt; 0.3: {frac1:.2f}, fraction &gt; 1.0: {frac2:.2f}')\n\nbins = [6,7,8,9]\nprint(f'Fraction with different classifications:')\nfor b in bins:\n    missed = sum((xp - b)*(yp-b) &lt;0)/ npts\n    print(f'\\t bin={b}: {missed:.2f}')\n\nR2=0.48, Spearman R=0.74\n33124 points. Fraction &gt; 0.3: 0.54, fraction &gt; 1.0: 0.21\nFraction with different classifications:\n     bin=6: 0.12\n     bin=7: 0.19\n     bin=8: 0.15\n     bin=9: 0.05\n\n\n\n\n\n\n\n\n\nAs expected, things continue to devolve."
  },
  {
    "objectID": "posts/2023-06-12-overlapping-ic50-assays1.html#all-assay-parameters-are-the-same-1",
    "href": "posts/2023-06-12-overlapping-ic50-assays1.html#all-assay-parameters-are-the-same-1",
    "title": "The hazards of combining data from IC50 assays",
    "section": "All assay parameters are the same",
    "text": "All assay parameters are the same\n\nd = %sql \\\nselect ovl3.*,a1.assay_organism a1_s,a2.assay_organism a2_s from goldilocks_ovl3 ovl3 \\\njoin assays a1 on (assay1_chembl_id=a1.chembl_id) join assays a2 on (assay2_chembl_id=a2.chembl_id) \\\nwhere a1.assay_type = a2.assay_type \\\nand a1.assay_organism is not distinct from a2.assay_organism \\\nand a1.assay_category is not distinct from a2.assay_category \\\nand a1.assay_tax_id is not distinct from a2.assay_tax_id \\\nand a1.assay_strain is not distinct from a2.assay_strain \\\nand a1.assay_tissue is not distinct from a2.assay_tissue \\\nand a1.assay_cell_type is not distinct from a2.assay_cell_type \\\nand a1.assay_subcellular_fraction is not distinct from a2.assay_subcellular_fraction \\\nand a1.bao_format is not distinct from a2.bao_format \\\norder by ovl desc;\n\npts = []\nfor row in d:\n    aid1 = row[6]\n    aid2 = row[7]\n    ad = %sql \\\n      select a1.molregno,a1.pchembl_value a1_pchembl,a2.pchembl_value a2_pchembl from \\\n       (select * from activities where pchembl_value is not null and assay_id=:aid1 \\\n          and standard_units = 'nM'  \\\n          and data_validity_comment is null  \\\n          and standard_relation = '=' \\\n       ) a1 \\\n       join (select * from activities where pchembl_value is not null and assay_id=:aid2 \\\n          and standard_units = 'nM'  \\\n          and data_validity_comment is null  \\\n          and standard_relation = '=' \\\n       ) a2 \\\n       using (molregno) \\\n       where a1.standard_type = a2.standard_type;\n    for row in ad:\n        pts.append(list(row))\n\n * postgresql://&lt;some details&gt;/chembl_32\n1531 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n94 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n93 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n93 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n93 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n92 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n88 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n77 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n73 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n71 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n69 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n63 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n63 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n77 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n60 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n60 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n60 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n60 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n73 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n57 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n57 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n57 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n55 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n55 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n57 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n53 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n82 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n112 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n160 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n76 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n134 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n53 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n53 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n53 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n68 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n64 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n68 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n72 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n64 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n104 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n1 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n\n\n\ntitl = 'no mismatches'\nplt.figure(figsize=(12,12))\nxp = np.array([x[1] for x in pts])\nyp = np.array([x[2] for x in pts])\n\nplt.subplot(2,2,1)\nplt.scatter(xp,yp,alpha=0.1,edgecolors='none');\nplt.plot((4,11),(4,11),'k-');\nplt.plot((4,11),(3,10),'k--');\nplt.plot((4,11),(5,12),'k--');\nplt.plot((4,11),(3.7,10.7),'k-.');\nplt.plot((4,11),(4.3,11.3),'k-.');\nplt.xlabel('assay1 pchembl')\nplt.ylabel('assay2 pchembl')\nplt.title(titl)\n\n\nplt.subplot(2,2,2)\nplt.hexbin(xp,yp,cmap='Blues',bins='log');\nplt.plot((4,11),(4,11),'k-');\nplt.plot((4,11),(3,10),'k--');\nplt.plot((4,11),(5,12),'k--');\nplt.plot((4,11),(3.7,10.7),'k-.');\nplt.plot((4,11),(4.3,11.3),'k-.');\nplt.xlabel('assay1 pchembl')\nplt.ylabel('assay2 pchembl')\n\nplt.subplot(2,2,3)\ndelts = np.abs(xp-yp)\ndelta_accum['permissive all_match'] = delts\nplt.hist(delts,bins=20);\nplt.xlabel('delta pchembl');\n\nplt.tight_layout()\n\n\nr,p = stats.spearmanr(xp,yp)\nr2 = r2_score(xp,yp)\nprint(f'R2={r2:.2f}, Spearman R={r:.2f}')\n\nnpts = len(delts)\nfrac1 = sum(delts&gt;0.3)/npts\nfrac2 = sum(delts&gt;1)/npts\nprint(f'{npts} points. Fraction &gt; 0.3: {frac1:.2f}, fraction &gt; 1.0: {frac2:.2f}')\n\nbins = [6,7,8,9]\nprint(f'Fraction with different classifications:')\nfor b in bins:\n    missed = sum((xp - b)*(yp-b) &lt;0)/ npts\n    print(f'\\t bin={b}: {missed:.2f}')\n\nR2=0.53, Spearman R=0.79\n40326 points. Fraction &gt; 0.3: 0.54, fraction &gt; 1.0: 0.20\nFraction with different classifications:\n     bin=6: 0.13\n     bin=7: 0.16\n     bin=8: 0.13\n     bin=9: 0.04"
  },
  {
    "objectID": "posts/2023-06-12-overlapping-ic50-assays1.html#only-assay_type-matches-1",
    "href": "posts/2023-06-12-overlapping-ic50-assays1.html#only-assay_type-matches-1",
    "title": "The hazards of combining data from IC50 assays",
    "section": "Only assay_type matches",
    "text": "Only assay_type matches\n\n\nd = %sql \\\nselect ovl3.*,a1.assay_organism a1_s,a2.assay_organism a2_s from goldilocks_ovl3 ovl3 \\\njoin assays a1 on (assay1_chembl_id=a1.chembl_id) join assays a2 on (assay2_chembl_id=a2.chembl_id) \\\nwhere a1.assay_type = a2.assay_type \\\norder by ovl desc;\n\npts = []\naids = []\nfor row in d:\n    cid1 = row[1]\n    cid2 = row[2]\n    aid1 = row[6]\n    aid2 = row[7]\n    ad = %sql \\\n      select a1.molregno,a1.pchembl_value a1_pchembl,a2.pchembl_value a2_pchembl from \\\n       (select * from activities where pchembl_value is not null and assay_id=:aid1 \\\n          and standard_units = 'nM'  \\\n          and data_validity_comment is null  \\\n          and standard_relation = '=' \\\n       ) a1 \\\n       join (select * from activities where pchembl_value is not null and assay_id=:aid2 \\\n          and standard_units = 'nM'  \\\n          and data_validity_comment is null  \\\n          and standard_relation = '=' \\\n       ) a2 \\\n       using (molregno) \\\n       where a1.standard_type = a2.standard_type;\n    for row in ad:\n        pts.append(list(row))\n        aids.append((cid1,cid2))\n\n\n * postgresql://&lt;some details&gt;/chembl_32\n3634 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n99 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n99 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n99 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n94 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n93 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n93 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n93 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n92 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n89 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n88 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n88 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n88 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n88 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n209 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n86 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n85 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n85 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n90 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n81 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n80 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n80 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n80 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n79 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n77 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n74 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n73 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n73 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n71 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n69 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n68 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n71 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n68 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n67 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n67 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n67 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n67 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n67 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n67 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n66 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n66 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n69 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n65 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n76 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n63 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n63 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n63 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n57 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n77 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n60 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n60 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n60 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n60 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n60 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n60 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n118 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n73 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n57 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n57 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n66 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n57 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n57 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n55 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n55 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n55 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n57 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n53 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n53 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n53 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n53 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n98 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n1 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n82 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n84 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n71 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n112 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n160 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n76 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n76 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n134 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n53 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n53 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n53 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n1 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n68 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n70 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n64 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n68 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n136 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n53 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n72 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n64 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n64 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n116 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n116 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n67 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n67 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n67 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n66 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n66 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n66 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n92 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n90 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n92 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n96 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n91 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n96 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n53 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n104 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n2 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n1 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n\n\n\ntitl = 'any assay field mismatch except assay type'\nplt.figure(figsize=(12,12))\nxp = np.array([x[1] for x in pts])\nyp = np.array([x[2] for x in pts])\n\nplt.subplot(2,2,1)\nplt.scatter(xp,yp,alpha=0.1,edgecolors='none');\nplt.plot((4,11),(4,11),'k-');\nplt.plot((4,11),(3,10),'k--');\nplt.plot((4,11),(5,12),'k--');\nplt.plot((4,11),(3.7,10.7),'k-.');\nplt.plot((4,11),(4.3,11.3),'k-.');\nplt.xlabel('assay1 pchembl')\nplt.ylabel('assay2 pchembl')\nplt.title(titl)\n\n\nplt.subplot(2,2,2)\nplt.hexbin(xp,yp,cmap='Blues',bins='log');\nplt.plot((4,11),(4,11),'k-');\nplt.plot((4,11),(3,10),'k--');\nplt.plot((4,11),(5,12),'k--');\nplt.plot((4,11),(3.7,10.7),'k-.');\nplt.plot((4,11),(4.3,11.3),'k-.');\nplt.xlabel('assay1 pchembl')\nplt.ylabel('assay2 pchembl')\n\nplt.subplot(2,2,3)\ndelts = np.abs(xp-yp)\ndelta_accum['permissive only type'] = delts\n\nplt.hist(delts,bins=20);\nplt.xlabel('delta pchembl');\n\nplt.tight_layout()\n\nr,p = stats.spearmanr(xp,yp)\nr2 = r2_score(xp,yp)\nprint(f'R2={r2:.2f}, Spearman R={r:.2f}')\n\n\n\nnpts = len(delts)\nfrac1 = sum(delts&gt;0.3)/npts\nfrac2 = sum(delts&gt;1)/npts\nprint(f'{npts} points. Fraction &gt; 0.3: {frac1:.2f}, fraction &gt; 1.0: {frac2:.2f}')\n\nbins = [6,7,8,9]\nprint(f'Fraction with different classifications:')\nfor b in bins:\n    missed = sum((xp - b)*(yp-b) &lt;0)/ npts\n    print(f'\\t bin={b}: {missed:.2f}')\n\nR2=0.55, Spearman R=0.80\n95414 points. Fraction &gt; 0.3: 0.54, fraction &gt; 1.0: 0.20\nFraction with different classifications:\n     bin=6: 0.12\n     bin=7: 0.16\n     bin=8: 0.14\n     bin=9: 0.05"
  },
  {
    "objectID": "posts/2023-06-12-overlapping-ic50-assays1.html#ignore-assay-type-too-1",
    "href": "posts/2023-06-12-overlapping-ic50-assays1.html#ignore-assay-type-too-1",
    "title": "The hazards of combining data from IC50 assays",
    "section": "Ignore assay type too",
    "text": "Ignore assay type too\n\nd = %sql \\\nselect ovl3.*,a1.assay_organism a1_s,a2.assay_organism a2_s from goldilocks_ovl3 ovl3 \\\njoin assays a1 on (assay1_chembl_id=a1.chembl_id) join assays a2 on (assay2_chembl_id=a2.chembl_id) \\\norder by ovl desc;\n\npts = []\naids = []\nfor row in d:\n    cid1 = row[1]\n    cid2 = row[2]\n    aid1 = row[6]\n    aid2 = row[7]\n    ad = %sql \\\n      select a1.molregno,a1.pchembl_value a1_pchembl,a2.pchembl_value a2_pchembl from \\\n       (select * from activities where pchembl_value is not null and assay_id=:aid1 \\\n          and standard_units = 'nM'  \\\n          and data_validity_comment is null  \\\n          and standard_relation = '=' \\\n       ) a1 \\\n       join (select * from activities where pchembl_value is not null and assay_id=:aid2 \\\n          and standard_units = 'nM'  \\\n          and data_validity_comment is null  \\\n          and standard_relation = '=' \\\n       ) a2 \\\n       using (molregno) \\\n       where a1.standard_type = a2.standard_type;\n    for row in ad:\n        pts.append(list(row))\n        aids.append((cid1,cid2))\n\n\n * postgresql://&lt;some details&gt;/chembl_32\n4008 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n99 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n99 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n99 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n94 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n93 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n93 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n93 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n92 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n89 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n88 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n88 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n88 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n88 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n209 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n86 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n85 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n85 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n90 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n81 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n80 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n80 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n80 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n79 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n77 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n76 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n74 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n73 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n73 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n71 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n69 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n71 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n68 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n68 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n67 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n67 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n67 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n67 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n67 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n67 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n66 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n66 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n69 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n65 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n76 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n64 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n99 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n63 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n63 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n63 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n57 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n77 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n60 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n60 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n60 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n60 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n60 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n60 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n118 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n73 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n57 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n57 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n57 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n57 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n66 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n55 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n55 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n55 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n55 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n57 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n53 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n53 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n53 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n53 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n98 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n49 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n1 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n59 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n82 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n71 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n84 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n112 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n160 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n54 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n76 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n134 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n53 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n53 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n76 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n53 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n1 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n68 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n70 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n62 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n140 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n64 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n53 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n68 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n136 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n72 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n64 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n64 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n120 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n79 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n116 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n116 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n67 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n67 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n67 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n66 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n66 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n66 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n92 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n90 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n92 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n85 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n50 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n52 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n96 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n96 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n91 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n92 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n61 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n67 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n46 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n51 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n43 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n4 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n53 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n41 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n66 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n104 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n2 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n1 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n34 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n0 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n1 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n\n\n\ntitl = 'ignore assay_type too'\nplt.figure(figsize=(12,12))\nxp = np.array([x[1] for x in pts])\nyp = np.array([x[2] for x in pts])\n\nplt.subplot(2,2,1)\nplt.scatter(xp,yp,alpha=0.1,edgecolors='none');\nplt.plot((4,11),(4,11),'k-');\nplt.plot((4,11),(3,10),'k--');\nplt.plot((4,11),(5,12),'k--');\nplt.plot((4,11),(3.7,10.7),'k-.');\nplt.plot((4,11),(4.3,11.3),'k-.');\nplt.xlabel('assay1 pchembl')\nplt.ylabel('assay2 pchembl')\nplt.title(titl)\n\n\nplt.subplot(2,2,2)\nplt.hexbin(xp,yp,cmap='Blues',bins='log');\nplt.plot((4,11),(4,11),'k-');\nplt.plot((4,11),(3,10),'k--');\nplt.plot((4,11),(5,12),'k--');\nplt.plot((4,11),(3.7,10.7),'k-.');\nplt.plot((4,11),(4.3,11.3),'k-.');\nplt.xlabel('assay1 pchembl')\nplt.ylabel('assay2 pchembl')\n\nplt.subplot(2,2,3)\ndelts = np.abs(xp-yp)\ndelta_accum['permissive ignore all'] = delts\n\nplt.hist(delts,bins=20);\nplt.xlabel('delta pchembl');\n\nplt.tight_layout()\n\nr,p = stats.spearmanr(xp,yp)\nr2 = r2_score(xp,yp)\nprint(f'R2={r2:.2f}, Spearman R={r:.2f}')\n\n\n\nnpts = len(delts)\nfrac1 = sum(delts&gt;0.3)/npts\nfrac2 = sum(delts&gt;1)/npts\nprint(f'{npts} points. Fraction &gt; 0.3: {frac1:.2f}, fraction &gt; 1.0: {frac2:.2f}')\n\nbins = [6,7,8,9]\nprint(f'Fraction with different classifications:')\nfor b in bins:\n    missed = sum((xp - b)*(yp-b) &lt;0)/ npts\n    print(f'\\t bin={b}: {missed:.2f}')\n\nR2=0.53, Spearman R=0.79\n102986 points. Fraction &gt; 0.3: 0.55, fraction &gt; 1.0: 0.21\nFraction with different classifications:\n     bin=6: 0.12\n     bin=7: 0.17\n     bin=8: 0.14\n     bin=9: 0.05"
  },
  {
    "objectID": "posts/2023-06-17-overlapping-Ki-assays1.html",
    "href": "posts/2023-06-17-overlapping-Ki-assays1.html",
    "title": "The comparative safety of combining data from Ki assays",
    "section": "",
    "text": "Update 25 February, 2024: We have published a paper inspired by this post which includes an expanded and refined version of the analysis: https://pubs.acs.org/doi/10.1021/acs.jcim.4c00049 \nThis is a followup to an earlier blog post looking at the hazards of combining data from different ChEMBL xC50 (IC50, AC50, XC50, and EC50) data sets. By looking at measurements for the same compound in different assays for the same target we saw the degree of variability which occurs across different xC50 assays. This variability is most likely due to differences in the assays themselves, not experimental error (I haven’t done the analysis to be able to make that statement with 100% certainty, so I’ll stick with “most likely”).\nIn this post I will repeat the same kind of analysis using Ki data. We’ll see that it is generally safe to combine data from different Ki assays for the same target.\nThe earlier post describes the setup, so I won’t repeat that here. The one difference for this post is that I look exclusively at data for which the standard_type in ChEMBL is Ki.\nThe TL;DR summary: if we’re careful about using as much metadata as possible to ascertain which assays can be combined, we get quite good agreement between Ki assays:\n\n\n\nresults summary\n\n\nFor this ~8K data points R\\(^2\\) is 0.88 and Spearman’s R is 0.94. Less than 10% of the points differ by more than 0.3 log units between the two assays and only 4% differ by more than one log unit. This is hugely better agreement than what we saw with the IC50 results.\nI’ve looked into some of the assay pairs where there are significant differences and they are all explainable, but that’s a topic for a different post.\nAs always, I’m happy for feedback and comments!\nThe code, along with additional results, is follows.\n\nimport numpy as np\nfrom scipy import stats\nfrom sklearn.metrics import r2_score \n\n%load_ext sql\n%matplotlib inline\nimport matplotlib.pyplot as plt\nplt.style.use('tableau-colorblind10')\nplt.rcParams['font.size'] = '16'\n\n\nGet assays with an associated document and pchembl_values from the local ChEMBL30 install\n\nimport getpass\npw = getpass.getpass()\n\n········\n\n\n\nSet up the tables\n\nconnection_string = f\"postgresql://&lt;some details&gt;/chembl_32\"\n\n%sql $connection_string \\\n     drop table if exists Ki_assays\n\n\n%sql \\\nselect assay_id,assays.chembl_id assay_chembl_id,description,tid,targets.chembl_id target_chembl_id,\\\n    count(distinct(molregno)) cnt,pref_name into temporary table Ki_assays  \\\n          from activities  \\\n          join docs using (doc_id)  \\\n          join assays using(assay_id)  \\\n          join target_dictionary as targets using (tid) \\\n          where pchembl_value is not null   \\\n          and standard_type = 'Ki' \\\n          and docs.year is not null  \\\n          and standard_units = 'nM'  \\\n          and standard_relation = '=' \\\n          and data_validity_comment is null  \\\n          and target_type = 'SINGLE PROTEIN' \\\n          group by (assay_id,assays.chembl_id,description,tid,targets.chembl_id,pref_name) order by cnt desc; \n\n\nDone.\n * postgresql://&lt;some details&gt;/chembl_32\n38071 rows affected.\n\n\n[]\n\n\n\n%sql \\\n     drop table if exists goldilocks\n\n\n%sql \\\nselect assay_id,tid,molregno,pchembl_value into temporary table goldilocks from activities \\\n  join Ki_assays using (assay_id) \\\n  where pchembl_value is not null and cnt&gt;=20 and cnt&lt;=100; \n\n * postgresql://&lt;some details&gt;/chembl_32\nDone.\n * postgresql://&lt;some details&gt;/chembl_32\n178420 rows affected.\n\n\n[]\n\n\n\n%sql \\\n     drop table if exists goldilocks_ovl\n\n\n%sql \\\nselect c1.tid,c1.assay_id aid1,c2.assay_id aid2,count(distinct c1.molregno) ovl into temporary table goldilocks_ovl \\\n from goldilocks c1 cross join goldilocks c2 \\\n  join assays a1 on (c1.assay_id=a1.assay_id) \\\n  join assays a2 on (c2.assay_id=a2.assay_id) \\\n where c1.assay_id&gt;c2.assay_id and \\\n  c1.tid=c2.tid and a1.doc_id != a2.doc_id and c1.molregno=c2.molregno \\\n  and lower(a1.description) not like '%mutant%' and lower(a2.description) not like '%mutant%' \\\n  and lower(a1.description) not like '%recombinant%' and lower(a2.description) not like '%recombinant%' \\\n group by (c1.tid,c1.assay_id,c2.assay_id) order by ovl desc;\n\n * postgresql://&lt;some details&gt;/chembl_32\nDone.\n * postgresql://&lt;some details&gt;/chembl_32\n15877 rows affected.\n\n\n[]\n\n\n\n%sql \\\n     drop table if exists goldilocks_ovl2\n\n\n%sql \\\n  select ovl.*,count(distinct a1.molregno) a1cnt,count(distinct a2.molregno) a2cnt into temporary table goldilocks_ovl2 \\\n  from goldilocks_ovl ovl join activities a1 on (aid1=a1.assay_id) join activities a2 on (aid2=a2.assay_id)  \\\n  where ovl&gt;5 group by (ovl.tid,ovl.aid1,ovl.aid2,ovl.ovl);\n\n * postgresql://&lt;some details&gt;/chembl_32\nDone.\n * postgresql://&lt;some details&gt;/chembl_32\n1032 rows affected.\n\n\n[]\n\n\n\n%sql \\\n     drop table if exists goldilocks_ovl3\n\n\n%sql \\\n  select lu3.chembl_id target_chembl_id,lu1.chembl_id assay1_chembl_id,lu2.chembl_id assay2_chembl_id,ovl,a1cnt,a2cnt,aid1,aid2 into temporary table goldilocks_ovl3 from goldilocks_ovl2 \\\n  join chembl_id_lookup lu1 on (aid1=lu1.entity_id and lu1.entity_type='ASSAY') \\\n  join chembl_id_lookup lu2 on (aid2=lu2.entity_id and lu2.entity_type='ASSAY') \\\n  join chembl_id_lookup lu3 on (tid=lu3.entity_id and lu3.entity_type='TARGET');\n\n * postgresql://&lt;some details&gt;/chembl_32\nDone.\n * postgresql://&lt;some details&gt;/chembl_32\n1032 rows affected.\n\n\n[]\n\n\n\n\nAll assay parameters are the same\n\nd = %sql \\\nselect ovl3.*,a1.assay_organism a1_s,a2.assay_organism a2_s from goldilocks_ovl3 ovl3 \\\njoin assays a1 on (assay1_chembl_id=a1.chembl_id) join assays a2 on (assay2_chembl_id=a2.chembl_id) \\\nwhere a1.assay_type = a2.assay_type \\\nand a1.assay_organism is not distinct from a2.assay_organism \\\nand a1.assay_category is not distinct from a2.assay_category \\\nand a1.assay_tax_id is not distinct from a2.assay_tax_id \\\nand a1.assay_strain is not distinct from a2.assay_strain \\\nand a1.assay_tissue is not distinct from a2.assay_tissue \\\nand a1.assay_cell_type is not distinct from a2.assay_cell_type \\\nand a1.assay_subcellular_fraction is not distinct from a2.assay_subcellular_fraction \\\nand a1.bao_format is not distinct from a2.bao_format \\\norder by ovl desc;\n\npts = []\naids = []\nfor row in d:\n    cid1 = row[1]\n    cid2 = row[2]\n    aid1 = row[6]\n    aid2 = row[7]\n    ad = %sql \\\n      select a1.molregno,a1.pchembl_value a1_pchembl,a2.pchembl_value a2_pchembl from \\\n       (select * from activities where pchembl_value is not null and standard_type='Ki' and assay_id=:aid1 \\\n        and data_validity_comment is null  \\\n        and standard_relation = '=' \\\n       ) a1\\\n       join (select * from activities where pchembl_value is not null and standard_type='Ki' and assay_id=:aid2\\\n        and data_validity_comment is null  \\\n        and standard_relation = '=' \\\n     ) a2 \\\n       using (molregno) \\\n       where a1.standard_type = a2.standard_type;    \n    for row in ad:\n        pts.append(list(row))\n        aids.append((cid1,cid2))\n\n * postgresql://&lt;some details&gt;/chembl_32\n538 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n122 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n60 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n\n\n\ntitl = 'all assay parameters match'\nplt.figure(figsize=(12,12))\nxp = np.array([x[1] for x in pts])\nyp = np.array([x[2] for x in pts])\n\nplt.subplot(2,2,1)\nplt.scatter(xp,yp,alpha=0.4,edgecolors='none');\nplt.plot((4,11),(4,11),'k-');\nplt.plot((4,11),(3,10),'k--');\nplt.plot((4,11),(5,12),'k--');\nplt.plot((4,11),(3.7,10.7),'k-.');\nplt.plot((4,11),(4.3,11.3),'k-.');\nplt.xlabel('assay1 pchembl')\nplt.ylabel('assay2 pchembl')\nplt.title(titl)\n\n\nplt.subplot(2,2,2)\nplt.hexbin(xp,yp,cmap='Blues',bins='log');\nplt.plot((4,11),(4,11),'k-');\nplt.plot((4,11),(3,10),'k--');\nplt.plot((4,11),(5,12),'k--');\nplt.plot((4,11),(3.7,10.7),'k-.');\nplt.plot((4,11),(4.3,11.3),'k-.');\nplt.xlabel('assay1 pchembl')\nplt.ylabel('assay2 pchembl')\n\nplt.subplot(2,2,3)\ndelts = np.abs(xp-yp)\nplt.hist(delts,bins=20);\nplt.xlabel('delta pchembl');\n\nplt.tight_layout()\n\nr,p = stats.spearmanr(xp,yp)\nr2 = r2_score(xp,yp)\nprint(f'R2={r2:.2f}, Spearman R={r:.2f}')\n\n\n\nnpts = len(delts)\nfrac1 = sum(delts&gt;0.3)/npts\nfrac2 = sum(delts&gt;1)/npts\nprint(f'{npts} points. Fraction &gt; 0.3: {frac1:.2f}, fraction &gt; 1.0: {frac2:.2f}')\n\nbins = [6,7,8,9]\nprint(f'Fraction with different classifications:')\nfor b in bins:\n    missed = sum((xp - b)*(yp-b) &lt;0)/ npts\n    print(f'\\t bin={b}: {missed:.2f}')\n\nR2=0.88, Spearman R=0.94\n7824 points. Fraction &gt; 0.3: 0.09, fraction &gt; 1.0: 0.04\nFraction with different classifications:\n     bin=6: 0.02\n     bin=7: 0.05\n     bin=8: 0.02\n     bin=9: 0.00\n\n\n\n\n\n\n\n\n\n\nfrom collections import defaultdict\nxp = np.array([x[1] for x in pts])\nyp = np.array([x[2] for x in pts])\n\ndelts = yp-xp\ndd = defaultdict(list)\nfor delt,aid in zip(delts,aids):\n    dd[aid].append(delt)\n\nmeans = sorted([(abs(np.mean(dd[pr])),pr) for pr in dd],reverse=True)\nfor mean,pr in means:\n    print(f'{pr[0]:14s} {pr[1]:14s} {mean: 4.2f} {len(dd[pr])}')\n\nCHEMBL3100637  CHEMBL905129    1.50 28\nCHEMBL828776   CHEMBL821377    0.94 16\nCHEMBL951055   CHEMBL925141    0.67 6\nCHEMBL4427978  CHEMBL951055    0.67 6\nCHEMBL4035750  CHEMBL951055    0.67 6\nCHEMBL3782909  CHEMBL951055    0.67 6\nCHEMBL3761242  CHEMBL951055    0.67 6\nCHEMBL3404498  CHEMBL951055    0.67 6\nCHEMBL3270415  CHEMBL951055    0.67 6\nCHEMBL1678662  CHEMBL951055    0.67 6\nCHEMBL828776   CHEMBL668411    0.63 26\nCHEMBL615451   CHEMBL615448    0.54 12\nCHEMBL615459   CHEMBL615451    0.50 23\nCHEMBL3097255  CHEMBL951055    0.49 6\nCHEMBL615459   CHEMBL615448    0.48 13\nCHEMBL4035750  CHEMBL827065    0.46 11\nCHEMBL3782909  CHEMBL827065    0.46 11\nCHEMBL3761242  CHEMBL827065    0.46 11\nCHEMBL3269990  CHEMBL1059274   0.44 11\nCHEMBL910617   CHEMBL839581    0.43 16\nCHEMBL876385   CHEMBL828779    0.29 6\nCHEMBL839585   CHEMBL827063    0.29 6\nCHEMBL827891   CHEMBL839585    0.29 6\nCHEMBL4427978  CHEMBL839585    0.29 6\nCHEMBL4035750  CHEMBL839585    0.29 6\nCHEMBL3782909  CHEMBL839585    0.29 6\nCHEMBL3761242  CHEMBL839585    0.29 6\nCHEMBL3404498  CHEMBL839585    0.29 6\nCHEMBL3270415  CHEMBL839585    0.29 6\nCHEMBL4427978  CHEMBL907133    0.29 6\nCHEMBL4035750  CHEMBL907133    0.29 6\nCHEMBL3782909  CHEMBL907133    0.29 6\nCHEMBL3761242  CHEMBL907133    0.29 6\nCHEMBL3404498  CHEMBL907133    0.29 6\nCHEMBL3270415  CHEMBL907133    0.29 6\nCHEMBL1678662  CHEMBL907133    0.29 6\nCHEMBL636647   CHEMBL639642    0.28 6\nCHEMBL1678662  CHEMBL839585    0.25 7\nCHEMBL1953227  CHEMBL980972    0.25 6\nCHEMBL876689   CHEMBL827065    0.22 8\nCHEMBL876374   CHEMBL827065    0.22 8\nCHEMBL824219   CHEMBL657820    0.22 8\nCHEMBL4035750  CHEMBL827891    0.21 7\nCHEMBL3782909  CHEMBL827891    0.21 7\nCHEMBL3761242  CHEMBL827891    0.21 7\nCHEMBL830383   CHEMBL828925    0.21 6\nCHEMBL4427978  CHEMBL830383    0.21 6\nCHEMBL4035750  CHEMBL830383    0.21 6\nCHEMBL3782909  CHEMBL830383    0.21 6\nCHEMBL3761242  CHEMBL830383    0.21 6\nCHEMBL3404498  CHEMBL830383    0.21 6\nCHEMBL3270415  CHEMBL830383    0.21 6\nCHEMBL1678662  CHEMBL830383    0.21 6\nCHEMBL657825   CHEMBL662721    0.19 9\nCHEMBL804959   CHEMBL802063    0.19 7\nCHEMBL4427978  CHEMBL827891    0.19 7\nCHEMBL3404498  CHEMBL827891    0.19 7\nCHEMBL3270415  CHEMBL827891    0.19 7\nCHEMBL3097256  CHEMBL951056    0.17 6\nCHEMBL827891   CHEMBL828925    0.17 9\nCHEMBL639642   CHEMBL640787    0.16 13\nCHEMBL4427978  CHEMBL827065    0.16 11\nCHEMBL3404498  CHEMBL827065    0.16 11\nCHEMBL3270415  CHEMBL827065    0.16 11\nCHEMBL4035750  CHEMBL876374    0.16 16\nCHEMBL830339   CHEMBL827065    0.16 8\nCHEMBL769064   CHEMBL765171    0.16 9\nCHEMBL657820   CHEMBL662721    0.15 11\nCHEMBL858763   CHEMBL677378    0.15 17\nCHEMBL4035750  CHEMBL876689    0.15 17\nCHEMBL3782909  CHEMBL876374    0.15 17\nCHEMBL3761242  CHEMBL876374    0.15 17\nCHEMBL1678662  CHEMBL827891    0.15 10\nCHEMBL828925   CHEMBL827065    0.15 9\nCHEMBL658750   CHEMBL658214    0.15 9\nCHEMBL4020039  CHEMBL4007108   0.15 7\nCHEMBL3737169  CHEMBL830339    0.14 7\nCHEMBL3782909  CHEMBL876689    0.14 18\nCHEMBL3761242  CHEMBL876689    0.14 18\nCHEMBL4035751  CHEMBL828905    0.14 11\nCHEMBL3782910  CHEMBL828905    0.14 11\nCHEMBL3761241  CHEMBL828905    0.14 11\nCHEMBL1678662  CHEMBL827065    0.13 10\nCHEMBL3097254  CHEMBL951057    0.13 6\nCHEMBL3424914  CHEMBL1067528   0.12 6\nCHEMBL658515   CHEMBL658514    0.12 10\nCHEMBL829822   CHEMBL828778    0.12 9\nCHEMBL4427978  CHEMBL4035750   0.12 38\nCHEMBL4035750  CHEMBL3404498   0.12 38\nCHEMBL4035750  CHEMBL3270415   0.12 38\nCHEMBL4427978  CHEMBL3782909   0.11 39\nCHEMBL4427978  CHEMBL3761242   0.11 39\nCHEMBL659048   CHEMBL658214    0.11 11\nCHEMBL840097   CHEMBL838622    0.11 6\nCHEMBL3782909  CHEMBL3404498   0.11 40\nCHEMBL3782909  CHEMBL3270415   0.11 40\nCHEMBL3761242  CHEMBL3404498   0.11 40\nCHEMBL3761242  CHEMBL3270415   0.11 40\nCHEMBL4035751  CHEMBL828777    0.11 8\nCHEMBL4001626  CHEMBL828777    0.11 8\nCHEMBL3782910  CHEMBL828777    0.11 8\nCHEMBL3761241  CHEMBL828777    0.11 8\nCHEMBL828776   CHEMBL821378    0.11 10\nCHEMBL828777   CHEMBL839012    0.10 6\nCHEMBL824219   CHEMBL657825    0.10 18\nCHEMBL4035750  CHEMBL830339    0.09 25\nCHEMBL3782909  CHEMBL830339    0.09 25\nCHEMBL3761242  CHEMBL830339    0.09 25\nCHEMBL4427979  CHEMBL828777    0.09 8\nCHEMBL3767548  CHEMBL828777    0.09 8\nCHEMBL3404499  CHEMBL828777    0.09 8\nCHEMBL3270416  CHEMBL828777    0.09 8\nCHEMBL3737169  CHEMBL2429048   0.09 11\nCHEMBL1816096  CHEMBL938648    0.09 11\nCHEMBL3737169  CHEMBL1678662   0.08 12\nCHEMBL4035750  CHEMBL1678662   0.08 29\nCHEMBL827891   CHEMBL830339    0.08 8\nCHEMBL827186   CHEMBL828815    0.08 25\nCHEMBL3782909  CHEMBL1678662   0.08 30\nCHEMBL3761242  CHEMBL1678662   0.08 30\nCHEMBL907134   CHEMBL838677    0.08 6\nCHEMBL907134   CHEMBL828903    0.08 6\nCHEMBL907134   CHEMBL828777    0.08 6\nCHEMBL4427979  CHEMBL907134    0.08 6\nCHEMBL4035751  CHEMBL907134    0.08 6\nCHEMBL4001626  CHEMBL907134    0.08 6\nCHEMBL3782910  CHEMBL907134    0.08 6\nCHEMBL3767548  CHEMBL907134    0.08 6\nCHEMBL3761241  CHEMBL907134    0.08 6\nCHEMBL3404499  CHEMBL907134    0.08 6\nCHEMBL3270416  CHEMBL907134    0.08 6\nCHEMBL2049249  CHEMBL907134    0.08 6\nCHEMBL1678663  CHEMBL907134    0.08 6\nCHEMBL4035750  CHEMBL3737169   0.08 13\nCHEMBL4427978  CHEMBL3737169   0.07 14\nCHEMBL1664119  CHEMBL918669    0.07 8\nCHEMBL3782909  CHEMBL3737169   0.07 15\nCHEMBL3761242  CHEMBL3737169   0.07 15\nCHEMBL3737169  CHEMBL3404498   0.07 15\nCHEMBL3737169  CHEMBL3270415   0.07 15\nCHEMBL2330556  CHEMBL2024743   0.06 9\nCHEMBL843463   CHEMBL881435    0.06 13\nCHEMBL4427979  CHEMBL4035751   0.06 39\nCHEMBL4427979  CHEMBL3782910   0.06 39\nCHEMBL4427979  CHEMBL3761241   0.06 39\nCHEMBL4035751  CHEMBL3767548   0.06 39\nCHEMBL4035751  CHEMBL3404499   0.06 39\nCHEMBL4035751  CHEMBL3270416   0.06 39\nCHEMBL828973   CHEMBL828276    0.06 7\nCHEMBL3782910  CHEMBL3767548   0.06 40\nCHEMBL3782910  CHEMBL3404499   0.06 40\nCHEMBL3782910  CHEMBL3270416   0.06 40\nCHEMBL3767548  CHEMBL3761241   0.06 40\nCHEMBL3761241  CHEMBL3404499   0.06 40\nCHEMBL3761241  CHEMBL3270416   0.06 40\nCHEMBL658942   CHEMBL657150    0.06 16\nCHEMBL925142   CHEMBL839012    0.05 6\nCHEMBL4035751  CHEMBL839012    0.05 19\nCHEMBL3782910  CHEMBL839012    0.05 19\nCHEMBL3761241  CHEMBL839012    0.05 19\nCHEMBL829640   CHEMBL828905    0.04 8\nCHEMBL2049249  CHEMBL828932    0.04 29\nCHEMBL1678663  CHEMBL828932    0.04 29\nCHEMBL828777   CHEMBL828932    0.04 11\nCHEMBL1678663  CHEMBL828777    0.04 11\nCHEMBL925142   CHEMBL829640    0.04 7\nCHEMBL3116665  CHEMBL839012    0.04 7\nCHEMBL3116665  CHEMBL829640    0.04 7\nCHEMBL3116665  CHEMBL828932    0.04 7\nCHEMBL2429047  CHEMBL839012    0.04 7\nCHEMBL2429047  CHEMBL829640    0.04 7\nCHEMBL2429047  CHEMBL828932    0.04 7\nCHEMBL813627   CHEMBL658079    0.04 9\nCHEMBL925142   CHEMBL828932    0.04 8\nCHEMBL657825   CHEMBL653170    0.04 16\nCHEMBL637899   CHEMBL646021    0.04 6\nCHEMBL829640   CHEMBL828932    0.03 29\nCHEMBL4035751  CHEMBL828932    0.03 26\nCHEMBL3782910  CHEMBL828932    0.03 26\nCHEMBL3761241  CHEMBL828932    0.03 26\nCHEMBL1026933  CHEMBL770979    0.03 8\nCHEMBL2215850  CHEMBL2189030   0.03 6\nCHEMBL2049249  CHEMBL828777    0.03 9\nCHEMBL1764161  CHEMBL1273398   0.03 6\nCHEMBL677601   CHEMBL674886    0.03 7\nCHEMBL828932   CHEMBL828905    0.03 10\nCHEMBL2049249  CHEMBL828905    0.03 10\nCHEMBL1678663  CHEMBL828905    0.03 10\nCHEMBL817592   CHEMBL818251    0.03 12\nCHEMBL4035751  CHEMBL829640    0.03 26\nCHEMBL3782910  CHEMBL829640    0.03 26\nCHEMBL3761241  CHEMBL829640    0.03 26\nCHEMBL4427979  CHEMBL1678663   0.02 30\nCHEMBL3767548  CHEMBL1678663   0.02 30\nCHEMBL3404499  CHEMBL1678663   0.02 30\nCHEMBL3270416  CHEMBL1678663   0.02 30\nCHEMBL875538   CHEMBL658750    0.02 16\nCHEMBL4427979  CHEMBL2049249   0.02 31\nCHEMBL3767548  CHEMBL2049249   0.02 31\nCHEMBL3404499  CHEMBL2049249   0.02 31\nCHEMBL3270416  CHEMBL2049249   0.02 31\nCHEMBL4427979  CHEMBL4001626   0.02 36\nCHEMBL3707679  CHEMBL3130226   0.02 7\nCHEMBL4001626  CHEMBL3767548   0.02 37\nCHEMBL4001626  CHEMBL3404499   0.02 37\nCHEMBL4001626  CHEMBL3270416   0.02 37\nCHEMBL4427979  CHEMBL828932    0.02 26\nCHEMBL3767548  CHEMBL828932    0.02 26\nCHEMBL3404499  CHEMBL828932    0.02 26\nCHEMBL3270416  CHEMBL828932    0.02 26\nCHEMBL2049249  CHEMBL839012    0.02 19\nCHEMBL4001626  CHEMBL1678663   0.02 28\nCHEMBL1678663  CHEMBL839012    0.02 18\nCHEMBL876374   CHEMBL828925    0.02 16\nCHEMBL1678662  CHEMBL876374    0.02 16\nCHEMBL4427979  CHEMBL829640    0.02 26\nCHEMBL3767548  CHEMBL829640    0.02 26\nCHEMBL3404499  CHEMBL829640    0.02 26\nCHEMBL3270416  CHEMBL829640    0.02 26\nCHEMBL4001626  CHEMBL2049249   0.02 29\nCHEMBL951057   CHEMBL829822    0.02 6\nCHEMBL951057   CHEMBL828906    0.02 6\nCHEMBL951057   CHEMBL828778    0.02 6\nCHEMBL876689   CHEMBL828925    0.02 17\nCHEMBL1678662  CHEMBL876689    0.02 17\nCHEMBL759583   CHEMBL764115    0.02 11\nCHEMBL4001626  CHEMBL839012    0.02 18\nCHEMBL4427979  CHEMBL839012    0.02 19\nCHEMBL3767548  CHEMBL839012    0.02 19\nCHEMBL3404499  CHEMBL839012    0.02 19\nCHEMBL3270416  CHEMBL839012    0.02 19\nCHEMBL4427978  CHEMBL828925    0.02 24\nCHEMBL3404498  CHEMBL828925    0.02 24\nCHEMBL3270415  CHEMBL828925    0.02 24\nCHEMBL876374   CHEMBL830339    0.02 14\nCHEMBL821378   CHEMBL821377    0.02 6\nCHEMBL4427978  CHEMBL830339    0.01 25\nCHEMBL3404498  CHEMBL830339    0.01 25\nCHEMBL3270415  CHEMBL830339    0.01 25\nCHEMBL4427979  CHEMBL841779    0.01 7\nCHEMBL4035751  CHEMBL841779    0.01 7\nCHEMBL4001626  CHEMBL841779    0.01 7\nCHEMBL3782910  CHEMBL841779    0.01 7\nCHEMBL3767548  CHEMBL841779    0.01 7\nCHEMBL3761241  CHEMBL841779    0.01 7\nCHEMBL3404499  CHEMBL841779    0.01 7\nCHEMBL3270416  CHEMBL841779    0.01 7\nCHEMBL2049249  CHEMBL841779    0.01 7\nCHEMBL1678663  CHEMBL841779    0.01 7\nCHEMBL1010168  CHEMBL946423    0.01 7\nCHEMBL876689   CHEMBL830339    0.01 15\nCHEMBL841779   CHEMBL828932    0.01 8\nCHEMBL4035750  CHEMBL828925    0.01 24\nCHEMBL4001626  CHEMBL828905    0.01 8\nCHEMBL3782909  CHEMBL828925    0.01 24\nCHEMBL3761242  CHEMBL828925    0.01 24\nCHEMBL4427978  CHEMBL1678662   0.01 30\nCHEMBL3404498  CHEMBL1678662   0.01 30\nCHEMBL3270415  CHEMBL1678662   0.01 30\nCHEMBL4035751  CHEMBL1678663   0.01 30\nCHEMBL3782910  CHEMBL1678663   0.01 30\nCHEMBL3761241  CHEMBL1678663   0.01 30\nCHEMBL663405   CHEMBL661794    0.01 12\nCHEMBL4035751  CHEMBL2049249   0.01 31\nCHEMBL3782910  CHEMBL2049249   0.01 31\nCHEMBL3761241  CHEMBL2049249   0.01 31\nCHEMBL2049249  CHEMBL829640    0.01 29\nCHEMBL1678663  CHEMBL829640    0.01 29\nCHEMBL956658   CHEMBL827890    0.01 7\nCHEMBL1026932  CHEMBL830381    0.01 7\nCHEMBL657145   CHEMBL658039    0.01 11\nCHEMBL4427979  CHEMBL828905    0.01 11\nCHEMBL3767548  CHEMBL828905    0.01 11\nCHEMBL3404499  CHEMBL828905    0.01 11\nCHEMBL3270416  CHEMBL828905    0.01 11\nCHEMBL828777   CHEMBL829640    0.01 9\nCHEMBL839012   CHEMBL829640    0.01 16\nCHEMBL907135   CHEMBL828906    0.01 6\nCHEMBL907135   CHEMBL828778    0.01 6\nCHEMBL4001626  CHEMBL829640    0.01 24\nCHEMBL764924   CHEMBL650169    0.01 9\nCHEMBL3705472  CHEMBL3130225   0.01 10\nCHEMBL995612   CHEMBL828277    0.01 7\nCHEMBL824008   CHEMBL824000    0.01 14\nCHEMBL821379   CHEMBL668411    0.00 12\nCHEMBL768259   CHEMBL764924    0.00 12\nCHEMBL769060   CHEMBL769512    0.00 15\nCHEMBL657820   CHEMBL653170    0.00 8\nCHEMBL657025   CHEMBL659048    0.00 8\nCHEMBL3292987  CHEMBL1944111   0.00 13\nCHEMBL663411   CHEMBL661794    0.00 15\nCHEMBL875538   CHEMBL659048    0.00 8\nCHEMBL658942   CHEMBL657145    0.00 8\nCHEMBL657825   CHEMBL657820    0.00 12\nCHEMBL4427978  CHEMBL876374    0.00 17\nCHEMBL3404498  CHEMBL876374    0.00 17\nCHEMBL3270415  CHEMBL876374    0.00 17\nCHEMBL4427978  CHEMBL876689    0.00 18\nCHEMBL3404498  CHEMBL876689    0.00 18\nCHEMBL3270415  CHEMBL876689    0.00 18\nCHEMBL935758   CHEMBL829615    0.00 12\nCHEMBL911523   CHEMBL870467    0.00 6\nCHEMBL657150   CHEMBL657145    0.00 12\nCHEMBL657025   CHEMBL658750    0.00 18\nCHEMBL1026932  CHEMBL815981    0.00 9\nCHEMBL839012   CHEMBL828932    0.00 19\nCHEMBL924958   CHEMBL812385    0.00 12\nCHEMBL4001626  CHEMBL828932    0.00 24\nCHEMBL3292988  CHEMBL1944112   0.00 12\nCHEMBL948917   CHEMBL838818    0.00 13\nCHEMBL1026911  CHEMBL828769    0.00 26\nCHEMBL924958   CHEMBL711201    0.00 21\nCHEMBL768259   CHEMBL650169    0.00 47\nCHEMBL925155   CHEMBL901108    0.00 60\nCHEMBL924950   CHEMBL715010    0.00 38\nCHEMBL984527   CHEMBL864775    0.00 10\nCHEMBL951056   CHEMBL925142    0.00 6\nCHEMBL951056   CHEMBL841779    0.00 6\nCHEMBL951056   CHEMBL838677    0.00 6\nCHEMBL951056   CHEMBL829640    0.00 6\nCHEMBL951056   CHEMBL828932    0.00 7\nCHEMBL951056   CHEMBL828903    0.00 6\nCHEMBL951056   CHEMBL828777    0.00 6\nCHEMBL938460   CHEMBL664070    0.00 29\nCHEMBL925142   CHEMBL841779    0.00 6\nCHEMBL925142   CHEMBL838677    0.00 6\nCHEMBL925142   CHEMBL828903    0.00 6\nCHEMBL925142   CHEMBL828777    0.00 6\nCHEMBL925141   CHEMBL830339    0.00 6\nCHEMBL925141   CHEMBL828925    0.00 6\nCHEMBL924958   CHEMBL710736    0.00 7\nCHEMBL924951   CHEMBL710807    0.00 39\nCHEMBL923557   CHEMBL829680    0.00 10\nCHEMBL877449   CHEMBL828815    0.00 6\nCHEMBL877449   CHEMBL827186    0.00 7\nCHEMBL876374   CHEMBL876689    0.00 19\nCHEMBL875538   CHEMBL657025    0.00 16\nCHEMBL873716   CHEMBL662722    0.00 20\nCHEMBL868082   CHEMBL829053    0.00 9\nCHEMBL867190   CHEMBL827432    0.00 28\nCHEMBL841779   CHEMBL839012    0.00 6\nCHEMBL841779   CHEMBL838677    0.00 6\nCHEMBL841779   CHEMBL829640    0.00 6\nCHEMBL841779   CHEMBL828903    0.00 6\nCHEMBL841779   CHEMBL828777    0.00 6\nCHEMBL840150   CHEMBL828795    0.00 6\nCHEMBL839630   CHEMBL828796    0.00 6\nCHEMBL839012   CHEMBL828905    0.00 8\nCHEMBL838839   CHEMBL763388    0.00 7\nCHEMBL838677   CHEMBL829640    0.00 6\nCHEMBL838677   CHEMBL828932    0.00 7\nCHEMBL838677   CHEMBL828903    0.00 7\nCHEMBL830339   CHEMBL828925    0.00 27\nCHEMBL830210   CHEMBL764693    0.00 7\nCHEMBL829822   CHEMBL828908    0.00 8\nCHEMBL829822   CHEMBL828906    0.00 6\nCHEMBL829640   CHEMBL828903    0.00 6\nCHEMBL829116   CHEMBL828796    0.00 7\nCHEMBL828932   CHEMBL828903    0.00 7\nCHEMBL828789   CHEMBL764688    0.00 6\nCHEMBL828778   CHEMBL828906    0.00 7\nCHEMBL828777   CHEMBL838677    0.00 7\nCHEMBL828777   CHEMBL828903    0.00 7\nCHEMBL828276   CHEMBL829684    0.00 8\nCHEMBL827891   CHEMBL827063    0.00 6\nCHEMBL824220   CHEMBL658942    0.00 16\nCHEMBL824220   CHEMBL658039    0.00 6\nCHEMBL824220   CHEMBL657150    0.00 19\nCHEMBL824220   CHEMBL657145    0.00 9\nCHEMBL824219   CHEMBL657824    0.00 17\nCHEMBL824219   CHEMBL653170    0.00 15\nCHEMBL821377   CHEMBL668411    0.00 16\nCHEMBL817592   CHEMBL817573    0.00 7\nCHEMBL809836   CHEMBL810658    0.00 6\nCHEMBL769064   CHEMBL768120    0.00 8\nCHEMBL718926   CHEMBL710553    0.00 10\nCHEMBL718849   CHEMBL708140    0.00 10\nCHEMBL708551   CHEMBL710325    0.00 10\nCHEMBL689131   CHEMBL687311    0.00 7\nCHEMBL689131   CHEMBL684200    0.00 7\nCHEMBL663871   CHEMBL872486    0.00 18\nCHEMBL663411   CHEMBL663405    0.00 56\nCHEMBL661794   CHEMBL838886    0.00 7\nCHEMBL658750   CHEMBL659048    0.00 13\nCHEMBL657968   CHEMBL657967    0.00 6\nCHEMBL657968   CHEMBL657042    0.00 6\nCHEMBL657968   CHEMBL657039    0.00 6\nCHEMBL657967   CHEMBL657042    0.00 13\nCHEMBL657967   CHEMBL657039    0.00 32\nCHEMBL657825   CHEMBL657824    0.00 16\nCHEMBL657824   CHEMBL657820    0.00 7\nCHEMBL657824   CHEMBL653170    0.00 15\nCHEMBL657154   CHEMBL658040    0.00 20\nCHEMBL657154   CHEMBL657145    0.00 6\nCHEMBL657150   CHEMBL658039    0.00 9\nCHEMBL657042   CHEMBL657039    0.00 13\nCHEMBL650119   CHEMBL649945    0.00 14\nCHEMBL645212   CHEMBL640356    0.00 9\nCHEMBL645212   CHEMBL640353    0.00 9\nCHEMBL620593   CHEMBL619043    0.00 21\nCHEMBL619046   CHEMBL619043    0.00 21\nCHEMBL616569   CHEMBL615959    0.00 23\nCHEMBL616154   CHEMBL616346    0.00 10\nCHEMBL4619444  CHEMBL3791369   0.00 10\nCHEMBL4427979  CHEMBL951056    0.00 6\nCHEMBL4427979  CHEMBL925142    0.00 7\nCHEMBL4427979  CHEMBL838677    0.00 7\nCHEMBL4427979  CHEMBL828903    0.00 7\nCHEMBL4427979  CHEMBL3767548   0.00 39\nCHEMBL4427979  CHEMBL3404499   0.00 39\nCHEMBL4427979  CHEMBL3270416   0.00 39\nCHEMBL4427979  CHEMBL3116665   0.00 11\nCHEMBL4427979  CHEMBL2429047   0.00 11\nCHEMBL4427978  CHEMBL925141    0.00 7\nCHEMBL4427978  CHEMBL827063    0.00 6\nCHEMBL4427978  CHEMBL3404498   0.00 39\nCHEMBL4427978  CHEMBL3270415   0.00 39\nCHEMBL4427978  CHEMBL2429048   0.00 11\nCHEMBL4035751  CHEMBL951056    0.00 6\nCHEMBL4035751  CHEMBL925142    0.00 7\nCHEMBL4035751  CHEMBL838677    0.00 7\nCHEMBL4035751  CHEMBL828903    0.00 7\nCHEMBL4035751  CHEMBL4001626   0.00 36\nCHEMBL4035751  CHEMBL3782910   0.00 39\nCHEMBL4035751  CHEMBL3761241   0.00 39\nCHEMBL4035751  CHEMBL3116665   0.00 11\nCHEMBL4035751  CHEMBL2429047   0.00 11\nCHEMBL4035750  CHEMBL925141    0.00 7\nCHEMBL4035750  CHEMBL827063    0.00 6\nCHEMBL4035750  CHEMBL3782909   0.00 38\nCHEMBL4035750  CHEMBL3761242   0.00 38\nCHEMBL4035750  CHEMBL2429048   0.00 10\nCHEMBL4001626  CHEMBL951056    0.00 6\nCHEMBL4001626  CHEMBL925142    0.00 7\nCHEMBL4001626  CHEMBL838677    0.00 7\nCHEMBL4001626  CHEMBL828903    0.00 7\nCHEMBL4001626  CHEMBL3782910   0.00 37\nCHEMBL4001626  CHEMBL3761241   0.00 37\nCHEMBL4001626  CHEMBL3116665   0.00 11\nCHEMBL4001626  CHEMBL2429047   0.00 11\nCHEMBL3791369  CHEMBL3097419   0.00 6\nCHEMBL3782910  CHEMBL951056    0.00 6\nCHEMBL3782910  CHEMBL925142    0.00 7\nCHEMBL3782910  CHEMBL838677    0.00 7\nCHEMBL3782910  CHEMBL828903    0.00 7\nCHEMBL3782910  CHEMBL3761241   0.00 40\nCHEMBL3782910  CHEMBL3116665   0.00 11\nCHEMBL3782910  CHEMBL2429047   0.00 11\nCHEMBL3782909  CHEMBL925141    0.00 7\nCHEMBL3782909  CHEMBL827063    0.00 6\nCHEMBL3782909  CHEMBL3761242   0.00 40\nCHEMBL3782909  CHEMBL2429048   0.00 11\nCHEMBL3767548  CHEMBL951056    0.00 6\nCHEMBL3767548  CHEMBL925142    0.00 7\nCHEMBL3767548  CHEMBL838677    0.00 7\nCHEMBL3767548  CHEMBL828903    0.00 7\nCHEMBL3767548  CHEMBL3404499   0.00 40\nCHEMBL3767548  CHEMBL3270416   0.00 40\nCHEMBL3767548  CHEMBL3116665   0.00 11\nCHEMBL3767548  CHEMBL2429047   0.00 11\nCHEMBL3761242  CHEMBL925141    0.00 7\nCHEMBL3761242  CHEMBL827063    0.00 6\nCHEMBL3761242  CHEMBL2429048   0.00 11\nCHEMBL3761241  CHEMBL951056    0.00 6\nCHEMBL3761241  CHEMBL925142    0.00 7\nCHEMBL3761241  CHEMBL838677    0.00 7\nCHEMBL3761241  CHEMBL828903    0.00 7\nCHEMBL3761241  CHEMBL3116665   0.00 11\nCHEMBL3761241  CHEMBL2429047   0.00 11\nCHEMBL3737169  CHEMBL925141    0.00 6\nCHEMBL3737169  CHEMBL876689    0.00 6\nCHEMBL3737169  CHEMBL876374    0.00 6\nCHEMBL3737169  CHEMBL828925    0.00 6\nCHEMBL3707679  CHEMBL1821390   0.00 8\nCHEMBL3705472  CHEMBL1821392   0.00 8\nCHEMBL3404499  CHEMBL951056    0.00 6\nCHEMBL3404499  CHEMBL925142    0.00 7\nCHEMBL3404499  CHEMBL838677    0.00 7\nCHEMBL3404499  CHEMBL828903    0.00 7\nCHEMBL3404499  CHEMBL3270416   0.00 40\nCHEMBL3404499  CHEMBL3116665   0.00 11\nCHEMBL3404499  CHEMBL2429047   0.00 11\nCHEMBL3404498  CHEMBL925141    0.00 7\nCHEMBL3404498  CHEMBL827063    0.00 6\nCHEMBL3404498  CHEMBL3270415   0.00 40\nCHEMBL3404498  CHEMBL2429048   0.00 11\nCHEMBL3366665  CHEMBL3377547   0.00 21\nCHEMBL3366664  CHEMBL3377546   0.00 21\nCHEMBL3292986  CHEMBL1944110   0.00 12\nCHEMBL3270416  CHEMBL951056    0.00 6\nCHEMBL3270416  CHEMBL925142    0.00 7\nCHEMBL3270416  CHEMBL838677    0.00 7\nCHEMBL3270416  CHEMBL828903    0.00 7\nCHEMBL3270416  CHEMBL3116665   0.00 11\nCHEMBL3270416  CHEMBL2429047   0.00 11\nCHEMBL3270415  CHEMBL925141    0.00 7\nCHEMBL3270415  CHEMBL827063    0.00 6\nCHEMBL3270415  CHEMBL2429048   0.00 11\nCHEMBL3116665  CHEMBL925142    0.00 6\nCHEMBL3116665  CHEMBL838677    0.00 6\nCHEMBL3116665  CHEMBL828903    0.00 6\nCHEMBL3116665  CHEMBL828777    0.00 6\nCHEMBL3116665  CHEMBL2429047   0.00 13\nCHEMBL3116665  CHEMBL2049249   0.00 11\nCHEMBL3116665  CHEMBL1678663   0.00 11\nCHEMBL3116663  CHEMBL828815    0.00 7\nCHEMBL3116663  CHEMBL827186    0.00 6\nCHEMBL2429048  CHEMBL925141    0.00 6\nCHEMBL2429048  CHEMBL876689    0.00 6\nCHEMBL2429048  CHEMBL876374    0.00 6\nCHEMBL2429048  CHEMBL830339    0.00 6\nCHEMBL2429048  CHEMBL1678662   0.00 11\nCHEMBL2429047  CHEMBL925142    0.00 6\nCHEMBL2429047  CHEMBL838677    0.00 6\nCHEMBL2429047  CHEMBL828903    0.00 6\nCHEMBL2429047  CHEMBL828777    0.00 6\nCHEMBL2429047  CHEMBL2049249   0.00 11\nCHEMBL2429047  CHEMBL1678663   0.00 11\nCHEMBL2429045  CHEMBL829116    0.00 6\nCHEMBL2429045  CHEMBL828796    0.00 6\nCHEMBL2416135  CHEMBL867233    0.00 8\nCHEMBL2406600  CHEMBL2404230   0.00 20\nCHEMBL2049249  CHEMBL951056    0.00 6\nCHEMBL2049249  CHEMBL925142    0.00 7\nCHEMBL2049249  CHEMBL838677    0.00 7\nCHEMBL2049249  CHEMBL828903    0.00 7\nCHEMBL2049249  CHEMBL1678663   0.00 32\nCHEMBL1931471  CHEMBL1285944   0.00 22\nCHEMBL1678663  CHEMBL951056    0.00 6\nCHEMBL1678663  CHEMBL925142    0.00 7\nCHEMBL1678663  CHEMBL838677    0.00 8\nCHEMBL1678663  CHEMBL828903    0.00 7\nCHEMBL1678662  CHEMBL925141    0.00 7\nCHEMBL1678662  CHEMBL830339    0.00 28\nCHEMBL1678662  CHEMBL828925    0.00 27\nCHEMBL1678662  CHEMBL827063    0.00 6\nCHEMBL1670560  CHEMBL1030615   0.00 6\nCHEMBL1272819  CHEMBL886074    0.00 122\n\n\n\ndd[('CHEMBL3782909','CHEMBL951055')]\n\n[Decimal('0.00'),\n Decimal('0.00'),\n Decimal('0.00'),\n Decimal('0.00'),\n Decimal('2.00'),\n Decimal('2.00')]\n\n\n\n%sql \\\n  select assay_id,chembl_id from assays where chembl_id='CHEMBL3761242'\n\n * postgresql://&lt;some details&gt;/chembl_32\n1 rows affected.\n\n\n\n\n\nassay_id\nchembl_id\n\n\n\n\n1552240\nCHEMBL3761242\n\n\n\n\n\n\ncid1 = 'CHEMBL3761242'\ncid2 = 'CHEMBL951055'\nd = %sql \\\n  select assay_id,chembl_id from assays where chembl_id=:cid1;\naid1 = d[0][0]\nd = %sql \\\n  select assay_id,chembl_id from assays where chembl_id=:cid2;\naid2 = d[0][0]\n\n%sql \\\nselect cids.chembl_id,a1.pchembl_value a1_pchembl,a2.pchembl_value a2_pchembl from \\\n       (select * from activities where pchembl_value is not null and standard_type='Ki' and assay_id=:aid1 \\\n        and data_validity_comment is null  \\\n        and standard_relation = '=' \\\n       ) a1\\\n       join (select * from activities where pchembl_value is not null and standard_type='Ki' and assay_id=:aid2\\\n        and data_validity_comment is null  \\\n        and standard_relation = '=' \\\n     ) a2 \\\n       using (molregno) \\\n       join chembl_id_lookup cids on (molregno=entity_id and entity_type='COMPOUND') \\\n       where a1.standard_type = a2.standard_type;  \n\n * postgresql://&lt;some details&gt;/chembl_32\n1 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n1 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n\n\n\n\n\nchembl_id\na1_pchembl\na2_pchembl\n\n\n\n\nCHEMBL20\n6.60\n6.60\n\n\nCHEMBL19\n7.30\n7.30\n\n\nCHEMBL18\n7.60\n7.60\n\n\nCHEMBL17\n5.92\n5.92\n\n\nCHEMBL218490\n4.30\n6.30\n\n\nCHEMBL220491\n4.35\n6.35\n\n\n\n\n\n\n\nAllow all comparisons (assay_type must be the same)\n\nd = %sql \\\nselect ovl3.*,a1.assay_organism a1_s,a2.assay_organism a2_s from goldilocks_ovl3 ovl3 \\\njoin assays a1 on (assay1_chembl_id=a1.chembl_id) join assays a2 on (assay2_chembl_id=a2.chembl_id) \\\nwhere a1.assay_type = a2.assay_type \\\norder by ovl desc;\n\npts = []\naids = []\nfor row in d:\n    cid1 = row[1]\n    cid2 = row[2]\n    aid1 = row[6]\n    aid2 = row[7]\n    ad = %sql \\\n      select a1.molregno,a1.pchembl_value a1_pchembl,a2.pchembl_value a2_pchembl from \\\n       (select * from activities where pchembl_value is not null and standard_type='Ki' and assay_id=:aid1 \\\n        and data_validity_comment is null  \\\n        and standard_relation = '=' \\\n       ) a1\\\n       join (select * from activities where pchembl_value is not null and standard_type='Ki' and assay_id=:aid2\\\n        and data_validity_comment is null  \\\n        and standard_relation = '=' \\\n     ) a2 \\\n       using (molregno) \\\n       where a1.standard_type = a2.standard_type;    \n    for row in ad:\n        pts.append(list(row))\n        aids.append((cid1,cid2))\n\n * postgresql://&lt;some details&gt;/chembl_32\n1023 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n96 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n91 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n93 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n79 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n58 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n56 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n48 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n47 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n44 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n42 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n40 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n39 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n38 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n37 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n36 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n35 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n33 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n122 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n31 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n60 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n30 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n29 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n27 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n26 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n25 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n45 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n22 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n24 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n21 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n19 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n23 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n18 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n17 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n32 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n16 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n15 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n20 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n13 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n28 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n9 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n8 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n14 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n11 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n12 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n10 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n7 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n * postgresql://&lt;some details&gt;/chembl_32\n6 rows affected.\n\n\n\ntitl = 'no filters'\nplt.figure(figsize=(12,12))\nxp = np.array([x[1] for x in pts])\nyp = np.array([x[2] for x in pts])\n\nplt.subplot(2,2,1)\nplt.scatter(xp,yp,alpha=0.4,edgecolors='none');\nplt.plot((4,11),(4,11),'k-');\nplt.plot((4,11),(3,10),'k--');\nplt.plot((4,11),(5,12),'k--');\nplt.plot((4,11),(3.7,10.7),'k-.');\nplt.plot((4,11),(4.3,11.3),'k-.');\nplt.xlabel('assay1 pchembl')\nplt.ylabel('assay2 pchembl')\nplt.title(titl)\n\n\nplt.subplot(2,2,2)\nplt.hexbin(xp,yp,cmap='Blues',bins='log');\nplt.plot((4,11),(4,11),'k-');\nplt.plot((4,11),(3,10),'k--');\nplt.plot((4,11),(5,12),'k--');\nplt.plot((4,11),(3.7,10.7),'k-.');\nplt.plot((4,11),(4.3,11.3),'k-.');\nplt.xlabel('assay1 pchembl')\nplt.ylabel('assay2 pchembl')\n\nplt.subplot(2,2,3)\ndelts = np.abs(xp-yp)\nplt.hist(delts,bins=20);\nplt.xlabel('delta pchembl');\n\nplt.tight_layout()\n\nr,p = stats.spearmanr(xp,yp)\nr2 = r2_score(xp,yp)\nprint(f'R2={r2:.2f}, Spearman R={r:.2f}')\n\n\n\nnpts = len(delts)\nfrac1 = sum(delts&gt;0.3)/npts\nfrac2 = sum(delts&gt;1)/npts\nprint(f'{npts} points. Fraction &gt; 0.3: {frac1:.2f}, fraction &gt; 1.0: {frac2:.2f}')\n\nbins = [6,7,8,9]\nprint(f'Fraction with different classifications:')\nfor b in bins:\n    missed = sum((xp - b)*(yp-b) &lt;0)/ npts\n    print(f'\\t bin={b}: {missed:.2f}')\n\nR2=0.90, Spearman R=0.95\n13865 points. Fraction &gt; 0.3: 0.10, fraction &gt; 1.0: 0.04\nFraction with different classifications:\n     bin=6: 0.02\n     bin=7: 0.04\n     bin=8: 0.02\n     bin=9: 0.00\n\n\n\n\n\n\n\n\n\n\nfrom collections import defaultdict\nxp = np.array([x[1] for x in pts])\nyp = np.array([x[2] for x in pts])\n\ndelts = yp-xp\ndd = defaultdict(list)\nfor delt,aid in zip(delts,aids):\n    dd[aid].append(delt)\n\nmeans = sorted([(abs(np.mean(dd[pr])),pr) for pr in dd],reverse=True)\nfor mean,pr in means:\n    print(f'{pr[0]:14s} {pr[1]:14s} {mean: 4.2f} {len(dd[pr])}')\n\nCHEMBL4051151  CHEMBL3736640   1.78 6\nCHEMBL3887980  CHEMBL3100637   1.60 10\nCHEMBL3100637  CHEMBL905129    1.50 28\nCHEMBL828776   CHEMBL821377    0.94 16\nCHEMBL616594   CHEMBL616592    0.78 12\nCHEMBL4137136  CHEMBL977319    0.76 6\nCHEMBL657061   CHEMBL659688    0.74 10\nCHEMBL616592   CHEMBL616591    0.72 6\nCHEMBL925141   CHEMBL657825    0.70 6\nCHEMBL951055   CHEMBL925141    0.67 6\nCHEMBL4427978  CHEMBL951055    0.67 6\nCHEMBL4035750  CHEMBL951055    0.67 6\nCHEMBL3782909  CHEMBL951055    0.67 6\nCHEMBL3761242  CHEMBL951055    0.67 6\nCHEMBL3404498  CHEMBL951055    0.67 6\nCHEMBL3270415  CHEMBL951055    0.67 6\nCHEMBL1678662  CHEMBL951055    0.67 6\nCHEMBL828776   CHEMBL668411    0.63 26\nCHEMBL3614290  CHEMBL913685    0.58 27\nCHEMBL839013   CHEMBL824221    0.56 14\nCHEMBL615451   CHEMBL615448    0.54 12\nCHEMBL615459   CHEMBL615451    0.50 23\nCHEMBL3097255  CHEMBL951055    0.49 6\nCHEMBL615459   CHEMBL615448    0.48 13\nCHEMBL4035750  CHEMBL827065    0.46 11\nCHEMBL3782909  CHEMBL827065    0.46 11\nCHEMBL3761242  CHEMBL827065    0.46 11\nCHEMBL3269990  CHEMBL1059274   0.44 11\nCHEMBL910617   CHEMBL839581    0.43 16\nCHEMBL4035750  CHEMBL824219    0.41 14\nCHEMBL3782909  CHEMBL824219    0.41 14\nCHEMBL3761242  CHEMBL824219    0.41 14\nCHEMBL4035750  CHEMBL653170    0.38 13\nCHEMBL3782909  CHEMBL653170    0.38 13\nCHEMBL3761242  CHEMBL653170    0.38 13\nCHEMBL4035750  CHEMBL657825    0.33 25\nCHEMBL3782909  CHEMBL657825    0.33 25\nCHEMBL3761242  CHEMBL657825    0.33 25\nCHEMBL1678662  CHEMBL824219    0.30 15\nCHEMBL4035750  CHEMBL657824    0.30 13\nCHEMBL3782909  CHEMBL657824    0.30 13\nCHEMBL3761242  CHEMBL657824    0.30 13\nCHEMBL828925   CHEMBL824219    0.30 16\nCHEMBL925141   CHEMBL662721    0.29 6\nCHEMBL876385   CHEMBL876689    0.29 6\nCHEMBL876385   CHEMBL830339    0.29 6\nCHEMBL876385   CHEMBL828779    0.29 6\nCHEMBL839585   CHEMBL827063    0.29 6\nCHEMBL828779   CHEMBL873716    0.29 6\nCHEMBL828779   CHEMBL839585    0.29 6\nCHEMBL827891   CHEMBL873716    0.29 6\nCHEMBL827891   CHEMBL839585    0.29 6\nCHEMBL827063   CHEMBL873716    0.29 6\nCHEMBL4427978  CHEMBL873716    0.29 6\nCHEMBL4427978  CHEMBL839585    0.29 6\nCHEMBL4035750  CHEMBL873716    0.29 6\nCHEMBL4035750  CHEMBL839585    0.29 6\nCHEMBL3782909  CHEMBL873716    0.29 6\nCHEMBL3782909  CHEMBL839585    0.29 6\nCHEMBL3761242  CHEMBL873716    0.29 6\nCHEMBL3761242  CHEMBL839585    0.29 6\nCHEMBL3404498  CHEMBL873716    0.29 6\nCHEMBL3404498  CHEMBL839585    0.29 6\nCHEMBL3270415  CHEMBL873716    0.29 6\nCHEMBL3270415  CHEMBL839585    0.29 6\nCHEMBL1678662  CHEMBL873716    0.29 6\nCHEMBL4427978  CHEMBL907133    0.29 6\nCHEMBL4035750  CHEMBL907133    0.29 6\nCHEMBL3782909  CHEMBL907133    0.29 6\nCHEMBL3761242  CHEMBL907133    0.29 6\nCHEMBL3404498  CHEMBL907133    0.29 6\nCHEMBL3270415  CHEMBL907133    0.29 6\nCHEMBL1678662  CHEMBL907133    0.29 6\nCHEMBL636647   CHEMBL639642    0.28 6\nCHEMBL830339   CHEMBL824219    0.27 15\nCHEMBL876385   CHEMBL828925    0.26 7\nCHEMBL4427978  CHEMBL876385    0.26 7\nCHEMBL4035750  CHEMBL876385    0.26 7\nCHEMBL3782909  CHEMBL876385    0.26 7\nCHEMBL3761242  CHEMBL876385    0.26 7\nCHEMBL3404498  CHEMBL876385    0.26 7\nCHEMBL3270415  CHEMBL876385    0.26 7\nCHEMBL1678662  CHEMBL876385    0.26 7\nCHEMBL639642   CHEMBL640367    0.25 6\nCHEMBL619854   CHEMBL620830    0.25 8\nCHEMBL876385   CHEMBL657825    0.25 7\nCHEMBL876385   CHEMBL657820    0.25 7\nCHEMBL1678662  CHEMBL839585    0.25 7\nCHEMBL1953227  CHEMBL980972    0.25 6\nCHEMBL1678662  CHEMBL657824    0.24 13\nCHEMBL876689   CHEMBL827065    0.22 8\nCHEMBL876374   CHEMBL827065    0.22 8\nCHEMBL4775667  CHEMBL3791369   0.22 9\nCHEMBL876689   CHEMBL662721    0.22 8\nCHEMBL876374   CHEMBL662721    0.22 8\nCHEMBL828779   CHEMBL827065    0.22 8\nCHEMBL828779   CHEMBL662721    0.22 8\nCHEMBL824219   CHEMBL657820    0.22 8\nCHEMBL659698   CHEMBL658897    0.22 11\nCHEMBL4035750  CHEMBL827891    0.21 7\nCHEMBL3782909  CHEMBL827891    0.21 7\nCHEMBL3761242  CHEMBL827891    0.21 7\nCHEMBL830383   CHEMBL828925    0.21 6\nCHEMBL4427978  CHEMBL830383    0.21 6\nCHEMBL4035750  CHEMBL830383    0.21 6\nCHEMBL3782909  CHEMBL830383    0.21 6\nCHEMBL3761242  CHEMBL830383    0.21 6\nCHEMBL3404498  CHEMBL830383    0.21 6\nCHEMBL3270415  CHEMBL830383    0.21 6\nCHEMBL1678662  CHEMBL830383    0.21 6\nCHEMBL2429045  CHEMBL829822    0.21 7\nCHEMBL646021   CHEMBL640787    0.21 9\nCHEMBL828925   CHEMBL657824    0.20 15\nCHEMBL1936672  CHEMBL934603    0.20 6\nCHEMBL828925   CHEMBL662721    0.20 9\nCHEMBL830383   CHEMBL828779    0.20 6\nCHEMBL830383   CHEMBL657825    0.20 6\nCHEMBL830383   CHEMBL657820    0.20 6\nCHEMBL830339   CHEMBL657824    0.20 13\nCHEMBL830339   CHEMBL662721    0.19 9\nCHEMBL657825   CHEMBL662721    0.19 9\nCHEMBL804959   CHEMBL802063    0.19 7\nCHEMBL4001626  CHEMBL658039    0.19 11\nCHEMBL4427978  CHEMBL827891    0.19 7\nCHEMBL3404498  CHEMBL827891    0.19 7\nCHEMBL3270415  CHEMBL827891    0.19 7\nCHEMBL4035750  CHEMBL657820    0.18 11\nCHEMBL3782909  CHEMBL657820    0.18 11\nCHEMBL3761242  CHEMBL657820    0.18 11\nCHEMBL4427978  CHEMBL662721    0.18 10\nCHEMBL3404498  CHEMBL662721    0.18 10\nCHEMBL3270415  CHEMBL662721    0.18 10\nCHEMBL1678662  CHEMBL662721    0.18 10\nCHEMBL3705964  CHEMBL3632375   0.17 7\nCHEMBL827065   CHEMBL657825    0.17 10\nCHEMBL3097256  CHEMBL951056    0.17 6\nCHEMBL827891   CHEMBL828925    0.17 9\nCHEMBL919867   CHEMBL730887    0.17 6\nCHEMBL864183   CHEMBL765836    0.17 6\nCHEMBL639642   CHEMBL640787    0.16 13\nCHEMBL4427978  CHEMBL827065    0.16 11\nCHEMBL3404498  CHEMBL827065    0.16 11\nCHEMBL3270415  CHEMBL827065    0.16 11\nCHEMBL4035751  CHEMBL658942    0.16 13\nCHEMBL3782910  CHEMBL658942    0.16 13\nCHEMBL3761241  CHEMBL658942    0.16 13\nCHEMBL4035750  CHEMBL876374    0.16 16\nCHEMBL830339   CHEMBL827065    0.16 8\nCHEMBL769064   CHEMBL765171    0.16 9\nCHEMBL1063127  CHEMBL657156    0.16 6\nCHEMBL637899   CHEMBL640787    0.16 6\nCHEMBL657820   CHEMBL662721    0.15 11\nCHEMBL858763   CHEMBL677378    0.15 17\nCHEMBL4035750  CHEMBL876689    0.15 17\nCHEMBL3782909  CHEMBL876374    0.15 17\nCHEMBL3761242  CHEMBL876374    0.15 17\nCHEMBL1678662  CHEMBL827891    0.15 10\nCHEMBL4427978  CHEMBL824219    0.15 14\nCHEMBL3404498  CHEMBL824219    0.15 14\nCHEMBL3270415  CHEMBL824219    0.15 14\nCHEMBL838574   CHEMBL658214    0.15 9\nCHEMBL828925   CHEMBL827065    0.15 9\nCHEMBL658750   CHEMBL658214    0.15 9\nCHEMBL4020039  CHEMBL4007108   0.15 7\nCHEMBL876374   CHEMBL824219    0.14 12\nCHEMBL639642   CHEMBL646021    0.14 8\nCHEMBL3737169  CHEMBL830339    0.14 7\nCHEMBL3782909  CHEMBL876689    0.14 18\nCHEMBL3761242  CHEMBL876689    0.14 18\nCHEMBL4035751  CHEMBL828905    0.14 11\nCHEMBL3782910  CHEMBL828905    0.14 11\nCHEMBL3761241  CHEMBL828905    0.14 11\nCHEMBL638690   CHEMBL643484    0.14 10\nCHEMBL639427   CHEMBL649101    0.13 9\nCHEMBL876689   CHEMBL824219    0.13 13\nCHEMBL1678662  CHEMBL827065    0.13 10\nCHEMBL3097254  CHEMBL951057    0.13 6\nCHEMBL1678662  CHEMBL657825    0.13 25\nCHEMBL980957   CHEMBL648136    0.13 9\nCHEMBL4427978  CHEMBL657825    0.12 25\nCHEMBL3404498  CHEMBL657825    0.12 25\nCHEMBL3270415  CHEMBL657825    0.12 25\nCHEMBL3424914  CHEMBL1067528   0.12 6\nCHEMBL658515   CHEMBL658514    0.12 10\nCHEMBL643484   CHEMBL649108    0.12 8\nCHEMBL829822   CHEMBL828778    0.12 9\nCHEMBL828778   CHEMBL657967    0.12 9\nCHEMBL828778   CHEMBL657039    0.12 9\nCHEMBL4427978  CHEMBL4035750   0.12 38\nCHEMBL4035750  CHEMBL3404498   0.12 38\nCHEMBL4035750  CHEMBL3270415   0.12 38\nCHEMBL4427978  CHEMBL3782909   0.11 39\nCHEMBL4427978  CHEMBL3761242   0.11 39\nCHEMBL2427556  CHEMBL867484    0.11 8\nCHEMBL659048   CHEMBL658214    0.11 11\nCHEMBL840097   CHEMBL838622    0.11 6\nCHEMBL3782909  CHEMBL3404498   0.11 40\nCHEMBL3782909  CHEMBL3270415   0.11 40\nCHEMBL3761242  CHEMBL3404498   0.11 40\nCHEMBL3761242  CHEMBL3270415   0.11 40\nCHEMBL4035751  CHEMBL828777    0.11 8\nCHEMBL4001626  CHEMBL828777    0.11 8\nCHEMBL3782910  CHEMBL828777    0.11 8\nCHEMBL3761241  CHEMBL828777    0.11 8\nCHEMBL828776   CHEMBL821378    0.11 10\nCHEMBL4035751  CHEMBL658039    0.10 10\nCHEMBL3782910  CHEMBL658039    0.10 10\nCHEMBL3761241  CHEMBL658039    0.10 10\nCHEMBL828777   CHEMBL839012    0.10 6\nCHEMBL824219   CHEMBL657825    0.10 18\nCHEMBL4035750  CHEMBL830339    0.09 25\nCHEMBL3782909  CHEMBL830339    0.09 25\nCHEMBL3761242  CHEMBL830339    0.09 25\nCHEMBL828932   CHEMBL657156    0.09 7\nCHEMBL4427979  CHEMBL828777    0.09 8\nCHEMBL3767548  CHEMBL828777    0.09 8\nCHEMBL3404499  CHEMBL828777    0.09 8\nCHEMBL3270416  CHEMBL828777    0.09 8\nCHEMBL923872   CHEMBL679110    0.09 11\nCHEMBL876385   CHEMBL830383    0.09 6\nCHEMBL830383   CHEMBL662721    0.09 6\nCHEMBL3737169  CHEMBL2429048   0.09 11\nCHEMBL1816096  CHEMBL938648    0.09 11\nCHEMBL1670560  CHEMBL925155    0.09 11\nCHEMBL3705176  CHEMBL961810    0.09 12\nCHEMBL639642   CHEMBL643484    0.09 6\nCHEMBL1063127  CHEMBL951056    0.09 6\nCHEMBL970754   CHEMBL949127    0.09 9\nCHEMBL2350909  CHEMBL1833395   0.08 6\nCHEMBL3062224  CHEMBL652822    0.08 14\nCHEMBL3737169  CHEMBL1678662   0.08 12\nCHEMBL4035751  CHEMBL657150    0.08 24\nCHEMBL3782910  CHEMBL657150    0.08 24\nCHEMBL3761241  CHEMBL657150    0.08 24\nCHEMBL4035750  CHEMBL1678662   0.08 29\nCHEMBL827891   CHEMBL830339    0.08 8\nCHEMBL1063127  CHEMBL828932    0.08 29\nCHEMBL827186   CHEMBL828815    0.08 25\nCHEMBL3782909  CHEMBL1678662   0.08 30\nCHEMBL3761242  CHEMBL1678662   0.08 30\nCHEMBL907134   CHEMBL838677    0.08 6\nCHEMBL907134   CHEMBL828903    0.08 6\nCHEMBL907134   CHEMBL828795    0.08 6\nCHEMBL907134   CHEMBL828777    0.08 6\nCHEMBL907134   CHEMBL657154    0.08 6\nCHEMBL4427979  CHEMBL907134    0.08 6\nCHEMBL4035751  CHEMBL907134    0.08 6\nCHEMBL4001626  CHEMBL907134    0.08 6\nCHEMBL3782910  CHEMBL907134    0.08 6\nCHEMBL3767548  CHEMBL907134    0.08 6\nCHEMBL3761241  CHEMBL907134    0.08 6\nCHEMBL3404499  CHEMBL907134    0.08 6\nCHEMBL3270416  CHEMBL907134    0.08 6\nCHEMBL2049249  CHEMBL907134    0.08 6\nCHEMBL1678663  CHEMBL907134    0.08 6\nCHEMBL1063127  CHEMBL828905    0.08 10\nCHEMBL4035750  CHEMBL3737169   0.08 13\nCHEMBL657061   CHEMBL659689    0.08 10\nCHEMBL1063127  CHEMBL925142    0.07 7\nCHEMBL1063127  CHEMBL838677    0.07 7\nCHEMBL1063127  CHEMBL828903    0.07 7\nCHEMBL1063127  CHEMBL657154    0.07 7\nCHEMBL829640   CHEMBL657150    0.07 24\nCHEMBL677378   CHEMBL677377    0.07 20\nCHEMBL1063127  CHEMBL658039    0.07 10\nCHEMBL829640   CHEMBL657156    0.07 6\nCHEMBL4427979  CHEMBL657156    0.07 6\nCHEMBL4035751  CHEMBL657156    0.07 6\nCHEMBL4001626  CHEMBL657156    0.07 6\nCHEMBL3782910  CHEMBL657156    0.07 6\nCHEMBL3767548  CHEMBL657156    0.07 6\nCHEMBL3761241  CHEMBL657156    0.07 6\nCHEMBL3404499  CHEMBL657156    0.07 6\nCHEMBL3270416  CHEMBL657156    0.07 6\nCHEMBL2049249  CHEMBL657156    0.07 6\nCHEMBL1678663  CHEMBL657156    0.07 6\nCHEMBL4427978  CHEMBL3737169   0.07 14\nCHEMBL1664119  CHEMBL918669    0.07 8\nCHEMBL828932   CHEMBL824220    0.07 18\nCHEMBL639642   CHEMBL637899    0.07 9\nCHEMBL1678663  CHEMBL657150    0.07 24\nCHEMBL4427979  CHEMBL658942    0.07 13\nCHEMBL3767548  CHEMBL658942    0.07 13\nCHEMBL3404499  CHEMBL658942    0.07 13\nCHEMBL3270416  CHEMBL658942    0.07 13\nCHEMBL3782909  CHEMBL3737169   0.07 15\nCHEMBL3761242  CHEMBL3737169   0.07 15\nCHEMBL3737169  CHEMBL3404498   0.07 15\nCHEMBL3737169  CHEMBL3270415   0.07 15\nCHEMBL3705176  CHEMBL894567    0.07 15\nCHEMBL1063127  CHEMBL657150    0.07 24\nCHEMBL2330556  CHEMBL2024743   0.06 9\nCHEMBL4001626  CHEMBL658942    0.06 12\nCHEMBL843463   CHEMBL881435    0.06 13\nCHEMBL4427979  CHEMBL4035751   0.06 39\nCHEMBL4427979  CHEMBL3782910   0.06 39\nCHEMBL4427979  CHEMBL3761241   0.06 39\nCHEMBL4035751  CHEMBL3767548   0.06 39\nCHEMBL4035751  CHEMBL3404499   0.06 39\nCHEMBL4035751  CHEMBL3270416   0.06 39\nCHEMBL828973   CHEMBL828276    0.06 7\nCHEMBL3782910  CHEMBL3767548   0.06 40\nCHEMBL3782910  CHEMBL3404499   0.06 40\nCHEMBL3782910  CHEMBL3270416   0.06 40\nCHEMBL3767548  CHEMBL3761241   0.06 40\nCHEMBL3761241  CHEMBL3404499   0.06 40\nCHEMBL3761241  CHEMBL3270416   0.06 40\nCHEMBL617327   CHEMBL617268    0.06 13\nCHEMBL1063127  CHEMBL841779    0.06 7\nCHEMBL1063127  CHEMBL840150    0.06 7\nCHEMBL657061   CHEMBL659697    0.06 6\nCHEMBL658942   CHEMBL657150    0.06 16\nCHEMBL4035751  CHEMBL657145    0.06 12\nCHEMBL4001626  CHEMBL657145    0.06 12\nCHEMBL3782910  CHEMBL657145    0.06 12\nCHEMBL3761241  CHEMBL657145    0.06 12\nCHEMBL645212   CHEMBL640352    0.05 6\nCHEMBL4035751  CHEMBL824220    0.05 15\nCHEMBL4001626  CHEMBL824220    0.05 15\nCHEMBL3782910  CHEMBL824220    0.05 15\nCHEMBL3761241  CHEMBL824220    0.05 15\nCHEMBL840097   CHEMBL620800    0.05 11\nCHEMBL925142   CHEMBL839012    0.05 6\nCHEMBL925142   CHEMBL658039    0.05 6\nCHEMBL2049249  CHEMBL657193    0.05 6\nCHEMBL828925   CHEMBL657825    0.05 24\nCHEMBL3056710  CHEMBL648011    0.05 15\nCHEMBL3116665  CHEMBL1063127   0.05 11\nCHEMBL2429047  CHEMBL1063127   0.05 11\nCHEMBL4035751  CHEMBL839012    0.05 19\nCHEMBL3782910  CHEMBL839012    0.05 19\nCHEMBL3761241  CHEMBL839012    0.05 19\nCHEMBL4427978  CHEMBL653170    0.05 13\nCHEMBL3404498  CHEMBL653170    0.05 13\nCHEMBL3270415  CHEMBL653170    0.05 13\nCHEMBL1063127  CHEMBL839012    0.05 19\nCHEMBL858763   CHEMBL677377    0.05 25\nCHEMBL829640   CHEMBL828905    0.04 8\nCHEMBL2049249  CHEMBL657150    0.04 24\nCHEMBL2049249  CHEMBL828932    0.04 29\nCHEMBL1678663  CHEMBL828932    0.04 29\nCHEMBL828777   CHEMBL828932    0.04 11\nCHEMBL1678663  CHEMBL828777    0.04 11\nCHEMBL925142   CHEMBL829640    0.04 7\nCHEMBL3116665  CHEMBL839012    0.04 7\nCHEMBL3116665  CHEMBL829640    0.04 7\nCHEMBL3116665  CHEMBL828932    0.04 7\nCHEMBL2429047  CHEMBL839012    0.04 7\nCHEMBL2429047  CHEMBL829640    0.04 7\nCHEMBL2429047  CHEMBL828932    0.04 7\nCHEMBL1063127  CHEMBL828795    0.04 10\nCHEMBL1678662  CHEMBL653170    0.04 12\nCHEMBL4427979  CHEMBL1063127   0.04 32\nCHEMBL881703   CHEMBL662721    0.04 14\nCHEMBL813627   CHEMBL658079    0.04 9\nCHEMBL3767548  CHEMBL1063127   0.04 33\nCHEMBL3404499  CHEMBL1063127   0.04 33\nCHEMBL3270416  CHEMBL1063127   0.04 33\nCHEMBL828925   CHEMBL653170    0.04 13\nCHEMBL925142   CHEMBL828932    0.04 8\nCHEMBL657825   CHEMBL653170    0.04 16\nCHEMBL637899   CHEMBL646021    0.04 6\nCHEMBL3056712  CHEMBL648415    0.04 17\nCHEMBL3887359  CHEMBL2169117   0.04 23\nCHEMBL3062587  CHEMBL1026933   0.04 14\nCHEMBL829640   CHEMBL828932    0.03 29\nCHEMBL4035751  CHEMBL828932    0.03 26\nCHEMBL3782910  CHEMBL828932    0.03 26\nCHEMBL3761241  CHEMBL828932    0.03 26\nCHEMBL1026933  CHEMBL770979    0.03 8\nCHEMBL2215850  CHEMBL2189030   0.03 6\nCHEMBL1638845  CHEMBL692580    0.03 6\nCHEMBL3056713  CHEMBL648102    0.03 13\nCHEMBL617323   CHEMBL617268    0.03 24\nCHEMBL4001626  CHEMBL1063127   0.03 31\nCHEMBL932239   CHEMBL677437    0.03 8\nCHEMBL2049249  CHEMBL828777    0.03 9\nCHEMBL1764161  CHEMBL1273398   0.03 6\nCHEMBL978937   CHEMBL864338    0.03 20\nCHEMBL1063127  CHEMBL657145    0.03 13\nCHEMBL763387   CHEMBL764924    0.03 15\nCHEMBL3705096  CHEMBL1010203   0.03 18\nCHEMBL640367   CHEMBL637704    0.03 7\nCHEMBL828777   CHEMBL657150    0.03 8\nCHEMBL677601   CHEMBL674886    0.03 7\nCHEMBL951055   CHEMBL657825    0.03 6\nCHEMBL1063127  CHEMBL829640    0.03 29\nCHEMBL923873   CHEMBL805319    0.03 15\nCHEMBL829640   CHEMBL824220    0.03 16\nCHEMBL4035750  CHEMBL662721    0.03 10\nCHEMBL3782909  CHEMBL662721    0.03 10\nCHEMBL3761242  CHEMBL662721    0.03 10\nCHEMBL620800   CHEMBL618094    0.03 8\nCHEMBL828932   CHEMBL828905    0.03 10\nCHEMBL2049249  CHEMBL828905    0.03 10\nCHEMBL1678663  CHEMBL828905    0.03 10\nCHEMBL817592   CHEMBL818251    0.03 12\nCHEMBL1063127  CHEMBL828777    0.03 9\nCHEMBL4427978  CHEMBL657824    0.03 13\nCHEMBL4035751  CHEMBL829640    0.03 26\nCHEMBL3782910  CHEMBL829640    0.03 26\nCHEMBL3761241  CHEMBL829640    0.03 26\nCHEMBL3404498  CHEMBL657824    0.03 13\nCHEMBL3270415  CHEMBL657824    0.03 13\nCHEMBL4427979  CHEMBL1678663   0.02 30\nCHEMBL3767548  CHEMBL1678663   0.02 30\nCHEMBL3404499  CHEMBL1678663   0.02 30\nCHEMBL3270416  CHEMBL1678663   0.02 30\nCHEMBL875538   CHEMBL658750    0.02 16\nCHEMBL4427979  CHEMBL2049249   0.02 31\nCHEMBL3767548  CHEMBL2049249   0.02 31\nCHEMBL3404499  CHEMBL2049249   0.02 31\nCHEMBL3270416  CHEMBL2049249   0.02 31\nCHEMBL642306   CHEMBL636766    0.02 25\nCHEMBL4427979  CHEMBL4001626   0.02 36\nCHEMBL3707679  CHEMBL3130226   0.02 7\nCHEMBL4001626  CHEMBL3767548   0.02 37\nCHEMBL4001626  CHEMBL3404499   0.02 37\nCHEMBL4001626  CHEMBL3270416   0.02 37\nCHEMBL615962   CHEMBL616108    0.02 6\nCHEMBL1072277  CHEMBL958182    0.02 36\nCHEMBL4775667  CHEMBL3097419   0.02 19\nCHEMBL4427979  CHEMBL828932    0.02 26\nCHEMBL3767548  CHEMBL828932    0.02 26\nCHEMBL3404499  CHEMBL828932    0.02 26\nCHEMBL3270416  CHEMBL828932    0.02 26\nCHEMBL4427979  CHEMBL658039    0.02 10\nCHEMBL3767548  CHEMBL658039    0.02 10\nCHEMBL3404499  CHEMBL658039    0.02 10\nCHEMBL3270416  CHEMBL658039    0.02 10\nCHEMBL2049249  CHEMBL658039    0.02 10\nCHEMBL1678663  CHEMBL824220    0.02 16\nCHEMBL1678663  CHEMBL658039    0.02 10\nCHEMBL1692251  CHEMBL907694    0.02 42\nCHEMBL830339   CHEMBL657825    0.02 24\nCHEMBL4427979  CHEMBL657150    0.02 24\nCHEMBL3767548  CHEMBL657150    0.02 24\nCHEMBL3404499  CHEMBL657150    0.02 24\nCHEMBL3270416  CHEMBL657150    0.02 24\nCHEMBL2049249  CHEMBL839012    0.02 19\nCHEMBL4001626  CHEMBL1678663   0.02 28\nCHEMBL642306   CHEMBL649103    0.02 9\nCHEMBL1678663  CHEMBL839012    0.02 18\nCHEMBL647729   CHEMBL641299    0.02 25\nCHEMBL876374   CHEMBL828925    0.02 16\nCHEMBL1678662  CHEMBL876374    0.02 16\nCHEMBL1063127  CHEMBL824220    0.02 16\nCHEMBL4427979  CHEMBL829640    0.02 26\nCHEMBL3767548  CHEMBL829640    0.02 26\nCHEMBL3404499  CHEMBL829640    0.02 26\nCHEMBL3270416  CHEMBL829640    0.02 26\nCHEMBL4001626  CHEMBL2049249   0.02 29\nCHEMBL642117   CHEMBL642332    0.02 14\nCHEMBL3705096  CHEMBL954312    0.02 10\nCHEMBL951057   CHEMBL829822    0.02 6\nCHEMBL951057   CHEMBL829116    0.02 6\nCHEMBL951057   CHEMBL828906    0.02 6\nCHEMBL951057   CHEMBL828796    0.02 6\nCHEMBL951057   CHEMBL828778    0.02 6\nCHEMBL951057   CHEMBL657968    0.02 6\nCHEMBL951057   CHEMBL657967    0.02 6\nCHEMBL951057   CHEMBL657042    0.02 6\nCHEMBL951057   CHEMBL657039    0.02 6\nCHEMBL946042   CHEMBL655688    0.02 45\nCHEMBL673590   CHEMBL670975    0.02 6\nCHEMBL876689   CHEMBL828925    0.02 17\nCHEMBL1678662  CHEMBL876689    0.02 17\nCHEMBL923873   CHEMBL805340    0.02 11\nCHEMBL759583   CHEMBL764115    0.02 11\nCHEMBL1678663  CHEMBL1063127   0.02 32\nCHEMBL4001626  CHEMBL839012    0.02 18\nCHEMBL4427979  CHEMBL839012    0.02 19\nCHEMBL3767548  CHEMBL839012    0.02 19\nCHEMBL3404499  CHEMBL839012    0.02 19\nCHEMBL3270416  CHEMBL839012    0.02 19\nCHEMBL4427978  CHEMBL828925    0.02 24\nCHEMBL3404498  CHEMBL828925    0.02 24\nCHEMBL3270415  CHEMBL828925    0.02 24\nCHEMBL876374   CHEMBL830339    0.02 14\nCHEMBL821378   CHEMBL821377    0.02 6\nCHEMBL2049249  CHEMBL824220    0.02 16\nCHEMBL2049249  CHEMBL1063127   0.01 35\nCHEMBL4427978  CHEMBL830339    0.01 25\nCHEMBL3404498  CHEMBL830339    0.01 25\nCHEMBL3270415  CHEMBL830339    0.01 25\nCHEMBL4001626  CHEMBL657150    0.01 21\nCHEMBL4427979  CHEMBL841779    0.01 7\nCHEMBL4427979  CHEMBL840150    0.01 7\nCHEMBL4035751  CHEMBL841779    0.01 7\nCHEMBL4035751  CHEMBL840150    0.01 7\nCHEMBL4001626  CHEMBL841779    0.01 7\nCHEMBL4001626  CHEMBL840150    0.01 7\nCHEMBL3782910  CHEMBL841779    0.01 7\nCHEMBL3782910  CHEMBL840150    0.01 7\nCHEMBL3767548  CHEMBL841779    0.01 7\nCHEMBL3767548  CHEMBL840150    0.01 7\nCHEMBL3761241  CHEMBL841779    0.01 7\nCHEMBL3761241  CHEMBL840150    0.01 7\nCHEMBL3404499  CHEMBL841779    0.01 7\nCHEMBL3404499  CHEMBL840150    0.01 7\nCHEMBL3270416  CHEMBL841779    0.01 7\nCHEMBL3270416  CHEMBL840150    0.01 7\nCHEMBL2049249  CHEMBL841779    0.01 7\nCHEMBL2049249  CHEMBL840150    0.01 7\nCHEMBL1678663  CHEMBL841779    0.01 7\nCHEMBL1678663  CHEMBL840150    0.01 7\nCHEMBL1010168  CHEMBL946423    0.01 7\nCHEMBL876689   CHEMBL830339    0.01 15\nCHEMBL841779   CHEMBL828932    0.01 8\nCHEMBL840150   CHEMBL828932    0.01 8\nCHEMBL827891   CHEMBL657825    0.01 8\nCHEMBL4035750  CHEMBL828925    0.01 24\nCHEMBL4001626  CHEMBL828905    0.01 8\nCHEMBL3782909  CHEMBL828925    0.01 24\nCHEMBL3761242  CHEMBL828925    0.01 24\nCHEMBL4427978  CHEMBL1678662   0.01 30\nCHEMBL3404498  CHEMBL1678662   0.01 30\nCHEMBL3270415  CHEMBL1678662   0.01 30\nCHEMBL4035751  CHEMBL1678663   0.01 30\nCHEMBL3782910  CHEMBL1678663   0.01 30\nCHEMBL3761241  CHEMBL1678663   0.01 30\nCHEMBL663405   CHEMBL661794    0.01 12\nCHEMBL4051152  CHEMBL3736640   0.01 6\nCHEMBL4035751  CHEMBL2049249   0.01 31\nCHEMBL3782910  CHEMBL2049249   0.01 31\nCHEMBL3761241  CHEMBL2049249   0.01 31\nCHEMBL2049249  CHEMBL829640    0.01 29\nCHEMBL1678663  CHEMBL829640    0.01 29\nCHEMBL956658   CHEMBL827890    0.01 7\nCHEMBL828932   CHEMBL658039    0.01 10\nCHEMBL828795   CHEMBL828932    0.01 10\nCHEMBL4427979  CHEMBL828795    0.01 10\nCHEMBL4427979  CHEMBL657145    0.01 12\nCHEMBL4035751  CHEMBL828795    0.01 10\nCHEMBL4001626  CHEMBL828795    0.01 10\nCHEMBL3782910  CHEMBL828795    0.01 10\nCHEMBL3767548  CHEMBL828795    0.01 10\nCHEMBL3767548  CHEMBL657145    0.01 12\nCHEMBL3761241  CHEMBL828795    0.01 10\nCHEMBL3404499  CHEMBL828795    0.01 10\nCHEMBL3404499  CHEMBL657145    0.01 12\nCHEMBL3270416  CHEMBL828795    0.01 10\nCHEMBL3270416  CHEMBL657145    0.01 12\nCHEMBL2049249  CHEMBL828795    0.01 10\nCHEMBL2049249  CHEMBL658045    0.01 7\nCHEMBL1678663  CHEMBL828795    0.01 10\nCHEMBL1678663  CHEMBL658942    0.01 12\nCHEMBL1026932  CHEMBL830381    0.01 7\nCHEMBL828932   CHEMBL658942    0.01 13\nCHEMBL2049249  CHEMBL657145    0.01 13\nCHEMBL657145   CHEMBL658039    0.01 11\nCHEMBL4427979  CHEMBL828905    0.01 11\nCHEMBL3767548  CHEMBL828905    0.01 11\nCHEMBL3404499  CHEMBL828905    0.01 11\nCHEMBL3270416  CHEMBL828905    0.01 11\nCHEMBL828777   CHEMBL829640    0.01 9\nCHEMBL839012   CHEMBL829640    0.01 16\nCHEMBL3887240  CHEMBL2422107   0.01 8\nCHEMBL1678663  CHEMBL657145    0.01 14\nCHEMBL907135   CHEMBL829116    0.01 6\nCHEMBL907135   CHEMBL828906    0.01 6\nCHEMBL907135   CHEMBL828796    0.01 6\nCHEMBL907135   CHEMBL828778    0.01 6\nCHEMBL907135   CHEMBL657968    0.01 6\nCHEMBL4001626  CHEMBL829640    0.01 24\nCHEMBL1063127  CHEMBL907134    0.01 6\nCHEMBL828932   CHEMBL657145    0.01 13\nCHEMBL2049249  CHEMBL658942    0.01 13\nCHEMBL1063127  CHEMBL658942    0.01 13\nCHEMBL4427978  CHEMBL657820    0.01 11\nCHEMBL3404498  CHEMBL657820    0.01 11\nCHEMBL3270415  CHEMBL657820    0.01 11\nCHEMBL764924   CHEMBL650169    0.01 9\nCHEMBL639739   CHEMBL640367    0.01 9\nCHEMBL828779   CHEMBL828925    0.01 8\nCHEMBL1678662  CHEMBL657820    0.01 13\nCHEMBL3705472  CHEMBL3130225   0.01 10\nCHEMBL995612   CHEMBL828277    0.01 7\nCHEMBL824008   CHEMBL824000    0.01 14\nCHEMBL4427978  CHEMBL828779    0.01 9\nCHEMBL4035750  CHEMBL828779    0.01 9\nCHEMBL3782909  CHEMBL828779    0.01 9\nCHEMBL3761242  CHEMBL828779    0.01 9\nCHEMBL3404498  CHEMBL828779    0.01 9\nCHEMBL3270415  CHEMBL828779    0.01 9\nCHEMBL1678662  CHEMBL828779    0.01 9\nCHEMBL1931471  CHEMBL811267    0.01 23\nCHEMBL4035751  CHEMBL1063127   0.00 32\nCHEMBL3782910  CHEMBL1063127   0.00 33\nCHEMBL3761241  CHEMBL1063127   0.00 33\nCHEMBL4427979  CHEMBL824220    0.00 15\nCHEMBL3767548  CHEMBL824220    0.00 15\nCHEMBL3404499  CHEMBL824220    0.00 15\nCHEMBL3270416  CHEMBL824220    0.00 15\nCHEMBL828925   CHEMBL657820    0.00 11\nCHEMBL1768188  CHEMBL662838    0.00 23\nCHEMBL821379   CHEMBL668411    0.00 12\nCHEMBL768259   CHEMBL764924    0.00 12\nCHEMBL838622   CHEMBL620800    0.00 10\nCHEMBL769060   CHEMBL769512    0.00 15\nCHEMBL657820   CHEMBL653170    0.00 8\nCHEMBL657025   CHEMBL659048    0.00 8\nCHEMBL3887805  CHEMBL3705369   0.00 79\nCHEMBL1285944  CHEMBL811267    0.00 23\nCHEMBL3888781  CHEMBL3705468   0.00 91\nCHEMBL3705468  CHEMBL3705059   0.00 96\nCHEMBL932239   CHEMBL677612    0.00 13\nCHEMBL3292987  CHEMBL1944111   0.00 13\nCHEMBL805340   CHEMBL805320    0.00 7\nCHEMBL640349   CHEMBL640345    0.00 7\nCHEMBL830339   CHEMBL657820    0.00 11\nCHEMBL663411   CHEMBL661794    0.00 15\nCHEMBL932239   CHEMBL677434    0.00 8\nCHEMBL876374   CHEMBL657825    0.00 16\nCHEMBL875538   CHEMBL659048    0.00 8\nCHEMBL838574   CHEMBL875538    0.00 12\nCHEMBL838574   CHEMBL657025    0.00 12\nCHEMBL658942   CHEMBL657145    0.00 8\nCHEMBL657825   CHEMBL657820    0.00 12\nCHEMBL1176403  CHEMBL617757    0.00 8\nCHEMBL828932   CHEMBL657150    0.00 25\nCHEMBL876689   CHEMBL657825    0.00 17\nCHEMBL4427978  CHEMBL876374    0.00 17\nCHEMBL3404498  CHEMBL876374    0.00 17\nCHEMBL3270415  CHEMBL876374    0.00 17\nCHEMBL4427978  CHEMBL876689    0.00 18\nCHEMBL3404498  CHEMBL876689    0.00 18\nCHEMBL3270415  CHEMBL876689    0.00 18\nCHEMBL935758   CHEMBL829615    0.00 12\nCHEMBL911523   CHEMBL870467    0.00 6\nCHEMBL829640   CHEMBL657145    0.00 12\nCHEMBL657150   CHEMBL657145    0.00 12\nCHEMBL657025   CHEMBL658750    0.00 18\nCHEMBL1176403  CHEMBL617752    0.00 13\nCHEMBL948917   CHEMBL813561    0.00 7\nCHEMBL679110   CHEMBL878290    0.00 7\nCHEMBL1026910  CHEMBL828768    0.00 26\nCHEMBL838574   CHEMBL658750    0.00 18\nCHEMBL1026932  CHEMBL815981    0.00 9\nCHEMBL839012   CHEMBL828932    0.00 19\nCHEMBL984525   CHEMBL864773    0.00 10\nCHEMBL924958   CHEMBL812385    0.00 12\nCHEMBL4001626  CHEMBL828932    0.00 24\nCHEMBL3292988  CHEMBL1944112   0.00 12\nCHEMBL948917   CHEMBL838818    0.00 13\nCHEMBL1026911  CHEMBL828769    0.00 26\nCHEMBL864183   CHEMBL765847    0.00 19\nCHEMBL835389   CHEMBL671378    0.00 20\nCHEMBL924958   CHEMBL711201    0.00 21\nCHEMBL768259   CHEMBL650169    0.00 47\nCHEMBL763387   CHEMBL650169    0.00 48\nCHEMBL747013   CHEMBL752503    0.00 26\nCHEMBL925155   CHEMBL901108    0.00 60\nCHEMBL924950   CHEMBL715010    0.00 38\nCHEMBL768259   CHEMBL763387    0.00 58\nCHEMBL984527   CHEMBL864775    0.00 10\nCHEMBL951056   CHEMBL925142    0.00 6\nCHEMBL951056   CHEMBL841779    0.00 6\nCHEMBL951056   CHEMBL838677    0.00 6\nCHEMBL951056   CHEMBL829640    0.00 6\nCHEMBL951056   CHEMBL828932    0.00 7\nCHEMBL951056   CHEMBL828903    0.00 6\nCHEMBL951056   CHEMBL828795    0.00 6\nCHEMBL951056   CHEMBL828777    0.00 6\nCHEMBL951056   CHEMBL657154    0.00 6\nCHEMBL951056   CHEMBL657145    0.00 6\nCHEMBL938460   CHEMBL664070    0.00 29\nCHEMBL925142   CHEMBL841779    0.00 6\nCHEMBL925142   CHEMBL838677    0.00 6\nCHEMBL925142   CHEMBL828903    0.00 6\nCHEMBL925142   CHEMBL828795    0.00 6\nCHEMBL925142   CHEMBL828777    0.00 6\nCHEMBL925142   CHEMBL657154    0.00 6\nCHEMBL925142   CHEMBL657145    0.00 6\nCHEMBL925141   CHEMBL830339    0.00 6\nCHEMBL925141   CHEMBL828925    0.00 6\nCHEMBL924958   CHEMBL710736    0.00 7\nCHEMBL924951   CHEMBL710807    0.00 39\nCHEMBL923872   CHEMBL674427    0.00 15\nCHEMBL923557   CHEMBL829680    0.00 10\nCHEMBL918150   CHEMBL817332    0.00 6\nCHEMBL881704   CHEMBL658039    0.00 14\nCHEMBL877449   CHEMBL828815    0.00 6\nCHEMBL877449   CHEMBL827186    0.00 7\nCHEMBL876689   CHEMBL657824    0.00 11\nCHEMBL876689   CHEMBL657820    0.00 10\nCHEMBL876689   CHEMBL653170    0.00 11\nCHEMBL876385   CHEMBL662721    0.00 6\nCHEMBL876374   CHEMBL876689    0.00 19\nCHEMBL876374   CHEMBL828779    0.00 7\nCHEMBL876374   CHEMBL657824    0.00 10\nCHEMBL876374   CHEMBL657820    0.00 9\nCHEMBL876374   CHEMBL653170    0.00 10\nCHEMBL875538   CHEMBL657025    0.00 16\nCHEMBL873716   CHEMBL662722    0.00 20\nCHEMBL868082   CHEMBL829053    0.00 9\nCHEMBL867190   CHEMBL827432    0.00 28\nCHEMBL867190   CHEMBL643130    0.00 28\nCHEMBL864183   CHEMBL766185    0.00 26\nCHEMBL841779   CHEMBL839012    0.00 6\nCHEMBL841779   CHEMBL838677    0.00 6\nCHEMBL841779   CHEMBL829640    0.00 6\nCHEMBL841779   CHEMBL828903    0.00 6\nCHEMBL841779   CHEMBL828795    0.00 7\nCHEMBL841779   CHEMBL828777    0.00 6\nCHEMBL841779   CHEMBL658039    0.00 6\nCHEMBL841779   CHEMBL657154    0.00 6\nCHEMBL841779   CHEMBL657150    0.00 6\nCHEMBL841779   CHEMBL657145    0.00 7\nCHEMBL840150   CHEMBL841779    0.00 6\nCHEMBL840150   CHEMBL839012    0.00 7\nCHEMBL840150   CHEMBL829640    0.00 6\nCHEMBL840150   CHEMBL828795    0.00 6\nCHEMBL840150   CHEMBL658039    0.00 6\nCHEMBL840150   CHEMBL657150    0.00 7\nCHEMBL840150   CHEMBL657145    0.00 7\nCHEMBL839630   CHEMBL829822    0.00 7\nCHEMBL839630   CHEMBL828796    0.00 6\nCHEMBL839630   CHEMBL657967    0.00 7\nCHEMBL839630   CHEMBL657042    0.00 7\nCHEMBL839630   CHEMBL657039    0.00 7\nCHEMBL839585   CHEMBL873716    0.00 6\nCHEMBL839012   CHEMBL828905    0.00 8\nCHEMBL839012   CHEMBL824220    0.00 14\nCHEMBL839012   CHEMBL658942    0.00 12\nCHEMBL839012   CHEMBL658039    0.00 9\nCHEMBL839012   CHEMBL657150    0.00 18\nCHEMBL839012   CHEMBL657145    0.00 11\nCHEMBL838839   CHEMBL763388    0.00 7\nCHEMBL838677   CHEMBL829640    0.00 6\nCHEMBL838677   CHEMBL828932    0.00 7\nCHEMBL838677   CHEMBL828903    0.00 7\nCHEMBL838677   CHEMBL657154    0.00 7\nCHEMBL838677   CHEMBL657145    0.00 6\nCHEMBL838574   CHEMBL659048    0.00 11\nCHEMBL830339   CHEMBL828925    0.00 27\nCHEMBL830339   CHEMBL653170    0.00 12\nCHEMBL830210   CHEMBL764693    0.00 7\nCHEMBL829822   CHEMBL829116    0.00 6\nCHEMBL829822   CHEMBL828908    0.00 8\nCHEMBL829822   CHEMBL828906    0.00 6\nCHEMBL829822   CHEMBL828796    0.00 9\nCHEMBL829822   CHEMBL657968    0.00 6\nCHEMBL829822   CHEMBL657967    0.00 27\nCHEMBL829822   CHEMBL657042    0.00 13\nCHEMBL829822   CHEMBL657039    0.00 27\nCHEMBL829640   CHEMBL828903    0.00 6\nCHEMBL829640   CHEMBL658942    0.00 12\nCHEMBL829640   CHEMBL658039    0.00 9\nCHEMBL829640   CHEMBL657154    0.00 6\nCHEMBL829627   CHEMBL639433    0.00 27\nCHEMBL829116   CHEMBL828906    0.00 7\nCHEMBL829116   CHEMBL828796    0.00 7\nCHEMBL829116   CHEMBL828778    0.00 7\nCHEMBL829116   CHEMBL657968    0.00 7\nCHEMBL829116   CHEMBL657967    0.00 6\nCHEMBL829116   CHEMBL657042    0.00 6\nCHEMBL829116   CHEMBL657039    0.00 6\nCHEMBL828932   CHEMBL828903    0.00 7\nCHEMBL828932   CHEMBL657154    0.00 7\nCHEMBL828908   CHEMBL657967    0.00 10\nCHEMBL828908   CHEMBL657039    0.00 10\nCHEMBL828906   CHEMBL657968    0.00 7\nCHEMBL828906   CHEMBL657967    0.00 6\nCHEMBL828906   CHEMBL657042    0.00 6\nCHEMBL828906   CHEMBL657039    0.00 6\nCHEMBL828905   CHEMBL658039    0.00 7\nCHEMBL828905   CHEMBL657150    0.00 10\nCHEMBL828903   CHEMBL657154    0.00 7\nCHEMBL828903   CHEMBL657145    0.00 6\nCHEMBL828796   CHEMBL828908    0.00 8\nCHEMBL828796   CHEMBL828906    0.00 7\nCHEMBL828796   CHEMBL828778    0.00 7\nCHEMBL828796   CHEMBL657968    0.00 7\nCHEMBL828796   CHEMBL657967    0.00 9\nCHEMBL828796   CHEMBL657042    0.00 7\nCHEMBL828796   CHEMBL657039    0.00 9\nCHEMBL828795   CHEMBL839012    0.00 8\nCHEMBL828795   CHEMBL838677    0.00 7\nCHEMBL828795   CHEMBL829640    0.00 8\nCHEMBL828795   CHEMBL828905    0.00 8\nCHEMBL828795   CHEMBL828903    0.00 7\nCHEMBL828795   CHEMBL828777    0.00 7\nCHEMBL828795   CHEMBL824220    0.00 6\nCHEMBL828795   CHEMBL658039    0.00 8\nCHEMBL828795   CHEMBL657154    0.00 7\nCHEMBL828795   CHEMBL657150    0.00 8\nCHEMBL828795   CHEMBL657145    0.00 7\nCHEMBL828789   CHEMBL764688    0.00 6\nCHEMBL828779   CHEMBL876689    0.00 7\nCHEMBL828779   CHEMBL830339    0.00 7\nCHEMBL828779   CHEMBL827891    0.00 6\nCHEMBL828779   CHEMBL827063    0.00 6\nCHEMBL828779   CHEMBL657825    0.00 8\nCHEMBL828779   CHEMBL657820    0.00 6\nCHEMBL828778   CHEMBL828906    0.00 7\nCHEMBL828778   CHEMBL657968    0.00 7\nCHEMBL828778   CHEMBL657042    0.00 6\nCHEMBL828777   CHEMBL838677    0.00 7\nCHEMBL828777   CHEMBL828903    0.00 7\nCHEMBL828777   CHEMBL657154    0.00 7\nCHEMBL828777   CHEMBL657145    0.00 6\nCHEMBL828276   CHEMBL829684    0.00 8\nCHEMBL827891   CHEMBL827063    0.00 6\nCHEMBL827890   CHEMBL685307    0.00 11\nCHEMBL827432   CHEMBL643130    0.00 29\nCHEMBL827065   CHEMBL662721    0.00 7\nCHEMBL824220   CHEMBL658942    0.00 16\nCHEMBL824220   CHEMBL658039    0.00 6\nCHEMBL824220   CHEMBL657150    0.00 19\nCHEMBL824220   CHEMBL657145    0.00 9\nCHEMBL824219   CHEMBL657824    0.00 17\nCHEMBL824219   CHEMBL653170    0.00 15\nCHEMBL821377   CHEMBL668411    0.00 16\nCHEMBL817592   CHEMBL817573    0.00 7\nCHEMBL809836   CHEMBL810658    0.00 6\nCHEMBL769064   CHEMBL768120    0.00 8\nCHEMBL718926   CHEMBL710553    0.00 10\nCHEMBL718849   CHEMBL708140    0.00 10\nCHEMBL708551   CHEMBL710325    0.00 10\nCHEMBL689131   CHEMBL687311    0.00 7\nCHEMBL689131   CHEMBL684200    0.00 7\nCHEMBL673590   CHEMBL675803    0.00 6\nCHEMBL663871   CHEMBL872486    0.00 18\nCHEMBL663411   CHEMBL663405    0.00 56\nCHEMBL661794   CHEMBL838886    0.00 7\nCHEMBL658750   CHEMBL659048    0.00 13\nCHEMBL657968   CHEMBL657967    0.00 6\nCHEMBL657968   CHEMBL657042    0.00 6\nCHEMBL657968   CHEMBL657039    0.00 6\nCHEMBL657967   CHEMBL657042    0.00 13\nCHEMBL657967   CHEMBL657039    0.00 32\nCHEMBL657825   CHEMBL657824    0.00 16\nCHEMBL657824   CHEMBL657820    0.00 7\nCHEMBL657824   CHEMBL653170    0.00 15\nCHEMBL657154   CHEMBL658040    0.00 20\nCHEMBL657154   CHEMBL657145    0.00 6\nCHEMBL657150   CHEMBL658039    0.00 9\nCHEMBL657042   CHEMBL657039    0.00 13\nCHEMBL650119   CHEMBL649945    0.00 14\nCHEMBL645212   CHEMBL640356    0.00 9\nCHEMBL645212   CHEMBL640353    0.00 9\nCHEMBL642117   CHEMBL639492    0.00 15\nCHEMBL638724   CHEMBL638717    0.00 24\nCHEMBL620593   CHEMBL619043    0.00 21\nCHEMBL619046   CHEMBL619043    0.00 21\nCHEMBL617327   CHEMBL617323    0.00 9\nCHEMBL616595   CHEMBL616573    0.00 10\nCHEMBL616595   CHEMBL616108    0.00 10\nCHEMBL616594   CHEMBL616591    0.00 6\nCHEMBL616573   CHEMBL616108    0.00 25\nCHEMBL616569   CHEMBL615959    0.00 23\nCHEMBL616154   CHEMBL616346    0.00 10\nCHEMBL616069   CHEMBL616417    0.00 6\nCHEMBL4730271  CHEMBL3119243   0.00 11\nCHEMBL4619444  CHEMBL3791369   0.00 10\nCHEMBL4427979  CHEMBL951056    0.00 6\nCHEMBL4427979  CHEMBL925142    0.00 7\nCHEMBL4427979  CHEMBL838677    0.00 7\nCHEMBL4427979  CHEMBL828903    0.00 7\nCHEMBL4427979  CHEMBL657154    0.00 7\nCHEMBL4427979  CHEMBL3767548   0.00 39\nCHEMBL4427979  CHEMBL3404499   0.00 39\nCHEMBL4427979  CHEMBL3270416   0.00 39\nCHEMBL4427979  CHEMBL3116665   0.00 11\nCHEMBL4427979  CHEMBL2429047   0.00 11\nCHEMBL4427978  CHEMBL925141    0.00 7\nCHEMBL4427978  CHEMBL827063    0.00 6\nCHEMBL4427978  CHEMBL3404498   0.00 39\nCHEMBL4427978  CHEMBL3270415   0.00 39\nCHEMBL4427978  CHEMBL2429048   0.00 11\nCHEMBL4035751  CHEMBL951056    0.00 6\nCHEMBL4035751  CHEMBL925142    0.00 7\nCHEMBL4035751  CHEMBL838677    0.00 7\nCHEMBL4035751  CHEMBL828903    0.00 7\nCHEMBL4035751  CHEMBL657154    0.00 7\nCHEMBL4035751  CHEMBL4001626   0.00 36\nCHEMBL4035751  CHEMBL3782910   0.00 39\nCHEMBL4035751  CHEMBL3761241   0.00 39\nCHEMBL4035751  CHEMBL3116665   0.00 11\nCHEMBL4035751  CHEMBL2429047   0.00 11\nCHEMBL4035750  CHEMBL925141    0.00 7\nCHEMBL4035750  CHEMBL827063    0.00 6\nCHEMBL4035750  CHEMBL3782909   0.00 38\nCHEMBL4035750  CHEMBL3761242   0.00 38\nCHEMBL4035750  CHEMBL2429048   0.00 10\nCHEMBL4001626  CHEMBL951056    0.00 6\nCHEMBL4001626  CHEMBL925142    0.00 7\nCHEMBL4001626  CHEMBL838677    0.00 7\nCHEMBL4001626  CHEMBL828903    0.00 7\nCHEMBL4001626  CHEMBL657154    0.00 7\nCHEMBL4001626  CHEMBL3782910   0.00 37\nCHEMBL4001626  CHEMBL3761241   0.00 37\nCHEMBL4001626  CHEMBL3116665   0.00 11\nCHEMBL4001626  CHEMBL2429047   0.00 11\nCHEMBL3888781  CHEMBL3705059   0.00 93\nCHEMBL3887980  CHEMBL905129    0.00 32\nCHEMBL3887681  CHEMBL3734209   0.00 17\nCHEMBL3791369  CHEMBL3097419   0.00 6\nCHEMBL3782910  CHEMBL951056    0.00 6\nCHEMBL3782910  CHEMBL925142    0.00 7\nCHEMBL3782910  CHEMBL838677    0.00 7\nCHEMBL3782910  CHEMBL828903    0.00 7\nCHEMBL3782910  CHEMBL657154    0.00 7\nCHEMBL3782910  CHEMBL3761241   0.00 40\nCHEMBL3782910  CHEMBL3116665   0.00 11\nCHEMBL3782910  CHEMBL2429047   0.00 11\nCHEMBL3782909  CHEMBL925141    0.00 7\nCHEMBL3782909  CHEMBL827063    0.00 6\nCHEMBL3782909  CHEMBL3761242   0.00 40\nCHEMBL3782909  CHEMBL2429048   0.00 11\nCHEMBL3767548  CHEMBL951056    0.00 6\nCHEMBL3767548  CHEMBL925142    0.00 7\nCHEMBL3767548  CHEMBL838677    0.00 7\nCHEMBL3767548  CHEMBL828903    0.00 7\nCHEMBL3767548  CHEMBL657154    0.00 7\nCHEMBL3767548  CHEMBL3404499   0.00 40\nCHEMBL3767548  CHEMBL3270416   0.00 40\nCHEMBL3767548  CHEMBL3116665   0.00 11\nCHEMBL3767548  CHEMBL2429047   0.00 11\nCHEMBL3761242  CHEMBL925141    0.00 7\nCHEMBL3761242  CHEMBL827063    0.00 6\nCHEMBL3761242  CHEMBL2429048   0.00 11\nCHEMBL3761241  CHEMBL951056    0.00 6\nCHEMBL3761241  CHEMBL925142    0.00 7\nCHEMBL3761241  CHEMBL838677    0.00 7\nCHEMBL3761241  CHEMBL828903    0.00 7\nCHEMBL3761241  CHEMBL657154    0.00 7\nCHEMBL3761241  CHEMBL3116665   0.00 11\nCHEMBL3761241  CHEMBL2429047   0.00 11\nCHEMBL3737169  CHEMBL925141    0.00 6\nCHEMBL3737169  CHEMBL876689    0.00 6\nCHEMBL3737169  CHEMBL876374    0.00 6\nCHEMBL3737169  CHEMBL828925    0.00 6\nCHEMBL3707679  CHEMBL1821390   0.00 8\nCHEMBL3705472  CHEMBL1821392   0.00 8\nCHEMBL3404499  CHEMBL951056    0.00 6\nCHEMBL3404499  CHEMBL925142    0.00 7\nCHEMBL3404499  CHEMBL838677    0.00 7\nCHEMBL3404499  CHEMBL828903    0.00 7\nCHEMBL3404499  CHEMBL657154    0.00 7\nCHEMBL3404499  CHEMBL3270416   0.00 40\nCHEMBL3404499  CHEMBL3116665   0.00 11\nCHEMBL3404499  CHEMBL2429047   0.00 11\nCHEMBL3404498  CHEMBL925141    0.00 7\nCHEMBL3404498  CHEMBL827063    0.00 6\nCHEMBL3404498  CHEMBL3270415   0.00 40\nCHEMBL3404498  CHEMBL2429048   0.00 11\nCHEMBL3366665  CHEMBL3377547   0.00 21\nCHEMBL3366664  CHEMBL3377546   0.00 21\nCHEMBL3292986  CHEMBL1944110   0.00 12\nCHEMBL3270416  CHEMBL951056    0.00 6\nCHEMBL3270416  CHEMBL925142    0.00 7\nCHEMBL3270416  CHEMBL838677    0.00 7\nCHEMBL3270416  CHEMBL828903    0.00 7\nCHEMBL3270416  CHEMBL657154    0.00 7\nCHEMBL3270416  CHEMBL3116665   0.00 11\nCHEMBL3270416  CHEMBL2429047   0.00 11\nCHEMBL3270415  CHEMBL925141    0.00 7\nCHEMBL3270415  CHEMBL827063    0.00 6\nCHEMBL3270415  CHEMBL2429048   0.00 11\nCHEMBL3116665  CHEMBL925142    0.00 6\nCHEMBL3116665  CHEMBL838677    0.00 6\nCHEMBL3116665  CHEMBL828903    0.00 6\nCHEMBL3116665  CHEMBL828795    0.00 6\nCHEMBL3116665  CHEMBL828777    0.00 6\nCHEMBL3116665  CHEMBL657154    0.00 6\nCHEMBL3116665  CHEMBL2429047   0.00 13\nCHEMBL3116665  CHEMBL2049249   0.00 11\nCHEMBL3116665  CHEMBL1678663   0.00 11\nCHEMBL3116663  CHEMBL828815    0.00 7\nCHEMBL3116663  CHEMBL827186    0.00 6\nCHEMBL3116663  CHEMBL2429044   0.00 13\nCHEMBL3062224  CHEMBL643758    0.00 20\nCHEMBL2432595  CHEMBL2215099   0.00 8\nCHEMBL2429048  CHEMBL925141    0.00 6\nCHEMBL2429048  CHEMBL876689    0.00 6\nCHEMBL2429048  CHEMBL876374    0.00 6\nCHEMBL2429048  CHEMBL830339    0.00 6\nCHEMBL2429048  CHEMBL1678662   0.00 11\nCHEMBL2429047  CHEMBL925142    0.00 6\nCHEMBL2429047  CHEMBL838677    0.00 6\nCHEMBL2429047  CHEMBL828903    0.00 6\nCHEMBL2429047  CHEMBL828795    0.00 6\nCHEMBL2429047  CHEMBL828777    0.00 6\nCHEMBL2429047  CHEMBL657154    0.00 6\nCHEMBL2429047  CHEMBL2049249   0.00 11\nCHEMBL2429047  CHEMBL1678663   0.00 11\nCHEMBL2429045  CHEMBL829116    0.00 6\nCHEMBL2429045  CHEMBL828906    0.00 6\nCHEMBL2429045  CHEMBL828796    0.00 6\nCHEMBL2429045  CHEMBL828778    0.00 6\nCHEMBL2429045  CHEMBL657968    0.00 6\nCHEMBL2429044  CHEMBL828815    0.00 7\nCHEMBL2429044  CHEMBL827186    0.00 6\nCHEMBL2416135  CHEMBL867233    0.00 8\nCHEMBL2406600  CHEMBL2404230   0.00 20\nCHEMBL2050635  CHEMBL753666    0.00 6\nCHEMBL2049249  CHEMBL951056    0.00 6\nCHEMBL2049249  CHEMBL925142    0.00 7\nCHEMBL2049249  CHEMBL838677    0.00 7\nCHEMBL2049249  CHEMBL828903    0.00 7\nCHEMBL2049249  CHEMBL657154    0.00 7\nCHEMBL2049249  CHEMBL1678663   0.00 32\nCHEMBL1931471  CHEMBL1285944   0.00 22\nCHEMBL1678663  CHEMBL951056    0.00 6\nCHEMBL1678663  CHEMBL925142    0.00 7\nCHEMBL1678663  CHEMBL838677    0.00 8\nCHEMBL1678663  CHEMBL828903    0.00 7\nCHEMBL1678663  CHEMBL657154    0.00 7\nCHEMBL1678662  CHEMBL925141    0.00 7\nCHEMBL1678662  CHEMBL830339    0.00 28\nCHEMBL1678662  CHEMBL828925    0.00 27\nCHEMBL1678662  CHEMBL827063    0.00 6\nCHEMBL1670560  CHEMBL1030615   0.00 6\nCHEMBL1645697  CHEMBL1038579   0.00 37\nCHEMBL1272819  CHEMBL886074    0.00 122\nCHEMBL1246739  CHEMBL897862    0.00 44\nCHEMBL1176403  CHEMBL617508    0.00 6\nCHEMBL1176402  CHEMBL617404    0.00 6\nCHEMBL1176402  CHEMBL616876    0.00 12\nCHEMBL1027667  CHEMBL768699    0.00 20\nCHEMBL1019596  CHEMBL828284    0.00 22"
  },
  {
    "objectID": "posts/2024-09-29-whats-new-2024-09-1.html",
    "href": "posts/2024-09-29-whats-new-2024-09-1.html",
    "title": "What’s new in 2024.09.1, part I",
    "section": "",
    "text": "The 2024.09.1 version of the RDKit was released on the 27th of September. This is the first in a short series of posts providing brief introductions to new functionality added to the RDKit since the 2024.03.1 release.\n\nimport rdkit\nrdkit.__version__\n\n'2024.09.1'\n\n\n\nfrom rdkit import Chem\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import IPythonConsole\n\n\nrdMolProcessing\nThe idea of the rdMolProcessing package is to make it easy and fast to carry out common operations on molecules read from files.\nIn this initial release the only function provided generates fingerprints, but we will add additional capabilities in future releases.\n\nfrom rdkit.Chem import rdMolProcessing\nfrom rdkit.Chem import rdFingerprintGenerator\n\n\nfname = '../data/BLSets_actives.txt'\n\n\nfpg = rdFingerprintGenerator.GetMorganGenerator()\n%timeit suppl = Chem.SmilesMolSupplier(fname,delimiter='\\t');fps = [fpg.GetFingerprint(m) for m in suppl if m is not None]\n\n16.4 s ± 35.4 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n\n\nrdMolProcessing.GetFingerprintsForMolsInFile() does the same work, but operates entirely in C++ and uses multiple threads to read the molecules and generate the fingerprints in parallel.\n\n%timeit fps = rdMolProcessing.GetFingerprintsForMolsInFile(fname)\n\n2.73 s ± 12.6 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n\n\nHere’s a larger demonstration: generating fingerprints for all 2.3 million molecules in the ChEMBL 31 SDF file. Notice that we don’t need to uncompress the SDF file.\n\nfrom rdkit import RDLogger\nRDLogger.DisableLog('rdApp.*')\nimport time\nt1 = time.time(); \nfps = rdMolProcessing.GetFingerprintsForMolsInFile('/scratch/Data/ChEMBL/chembl_31.sdf.gz'); \nt2=time.time(); \nprint(f'{t2-t1:.2f}')\n\n81.94\n\n\nThe fingerprints are generated immediately after each molecule is parsed and then the molecule is discarded, so it’s only necessary to be able to store all of the fingerprints in memory, not all of the molecules.\nGetFingerprintsForMolsInFile() can figure out the file format automatically (as we saw above), but you can, if necessary, provide options controlling how the file is read.\n\n!head -3 ../data/herg_data.txt\n\ncanonical_smiles molregno activity_id standard_value standard_units\nN[C@@H]([C@@H]1CC[C@H](CC1)NS(=O)(=O)c2ccc(F)cc2F)C(=O)N3CC[C@H](F)C3 29272 671631 49000 nM\nN[C@@H](C1CCCCC1)C(=O)N2CCSC2 29758 674222 28000 nM\n\n\n\nopts = rdMolProcessing.SupplierOptions()\nopts.delimiter = ' '\nfps = rdMolProcessing.GetFingerprintsForMolsInFile('../data/herg_data.txt',options=opts)\nlen(fps)\n\n1090\n\n\nThe default is to generate 2048 bit Morgan fingerprints with a radius of 3, but we can change this by providing a fingerprint generator to the call:\n\nfpg = rdFingerprintGenerator.GetRDKitFPGenerator(maxPath=5)\nfps = rdMolProcessing.GetFingerprintsForMolsInFile('../data/herg_data.txt',options=opts,generator=fpg)\n\n\n\nrdMolAlign.GetAllConformerBestRMS()\nThe new function GetAllConformerBestRMS() makes it easy to calculate the RMSDs between all of the conformers of a molecule.\n\nfrom rdkit.Chem import rdDistGeom\nfrom rdkit.Chem import rdMolAlign\n\n\nps = rdDistGeom.srETKDGv3()\nps.randomSeed = 0xa100f\nps.numThreads = 6\n\nm = Chem.AddHs(Chem.MolFromSmiles('N[C@@H]([C@@H]1CC[C@H](CC1)NS(=O)(=O)c2ccc(F)cc2F)C(=O)N3CC[C@H](F)C3'))\nrdDistGeom.EmbedMultipleConfs(m,100,ps)\nm.GetNumConformers()\n\n100\n\n\n\n# generating RMSDs with Hs generally doesn't make sense:\nm_noh = Chem.RemoveHs(m)\nrmsds = rdMolAlign.GetAllConformerBestRMS(m_noh)\n\n\nlen(rmsds)\n\n4950\n\n\nYou can also run the calculation using multiple threads to speed things up:\n\n%timeit rmsds = rdMolAlign.GetAllConformerBestRMS(m_noh,numThreads=6)\n\n6.17 ms ± 49 μs per loop (mean ± std. dev. of 7 runs, 100 loops each)"
  },
  {
    "objectID": "posts/2021-07-06-number-of-fp-bits-set.html",
    "href": "posts/2021-07-06-number-of-fp-bits-set.html",
    "title": "Looking at the number of bits set by different fingerprints",
    "section": "",
    "text": "This is an updated version of a post. The original version of the notebook can be found in github.\nI’ve done a number of posts looking at Morgan fingerprint statistics before, including:\n\nThe number of collisions in Morgan fingerprints.\nMorgan fingerprint stats\nCollisions in Morgan fingerprints revisited\n\nI have done similar analysis for other fingerprint types, but it looks like I didn’t post that (at least I can’t find it if I did). It’s useful to do this because, as we’ll see, the different fingerprint types have very different numbers of bits set for typical molecules.\nHere’s the summary of the mean and standard deviation of the number of bits set, from an analysis of 5 million molecules with less than 50 heavy atoms extracted from ZINC:\n\n\n\nFingerprint\nType\nMean num_bits\nSD num_bits\n\n\n\n\nMorgan1\nsparse\n29.4\n5.6\n\n\nMorgan2\nsparse\n48.7\n9.6\n\n\nMorgan3\nsparse\n66.8\n13.8\n\n\nFeatMorgan1\nsparse\n20.1\n3.9\n\n\nFeatMorgan2\nsparse\n38.1\n7.7\n\n\nFeatMorgan3\nsparse\n56.0\n11.8\n\n\nRDKit5\nbitvect\n363\n122\n\n\nRDKit6\nbitvect\n621\n233\n\n\nRDKit7\nbitvect\n993\n406\n\n\npattern\nbitvect\n446\n122\n\n\navalon\nbitvect\n280\n130\n\n\natom pairs\nsparse\n167\n56\n\n\nTT\nsparse\n33.4\n9.8\n\n\natom pairs\nbitvect\n267\n90\n\n\nTT\nbitvect\n47.2\n12.0\n\n\n\nThe bit vector fingerprints were all 4096 bits long.\n\nfrom rdkit import Chem,DataStructs\nimport time,random,gzip,pickle,copy\nimport numpy as np\nfrom collections import Counter,defaultdict\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem import rdMolDescriptors\nfrom rdkit.Avalon import pyAvalonTools\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit import DataStructs\nfrom rdkit import rdBase\n%pylab inline\n\nprint(rdBase.rdkitVersion)\nimport time\nprint(time.asctime())\n\nPopulating the interactive namespace from numpy and matplotlib\n2021.09.1pre\nTue Jul  6 04:58:28 2021\n\n\n/home/glandrum/miniconda3/lib/python3.7/site-packages/IPython/core/magics/pylab.py:160: UserWarning: pylab import has clobbered these variables: ['copy', 'random']\n`%matplotlib` prevents importing * from pylab and numpy\n  \"\\n`%matplotlib` prevents importing * from pylab and numpy\"\n\n\n\ntry:\n    import ipyparallel as ipp\n    rc = ipp.Client()\n    dview = rc[:]\n    dview.execute('from rdkit import Chem')\n    dview.execute('from rdkit import Descriptors')\n    dview.execute('from rdkit.Chem import rdMolDescriptors')\n    dview.execute('from rdkit.Avalon import pyAvalonTools')\nexcept:\n    print(\"could not use ipyparallel\")\n    dview = None\n\nFor test data I’ll use the same 16 million ZINC compounds I used in the bit statistics post.\n\nfilen='/scratch/RDKit_git/LocalData/Zinc/zinc_all_clean.pkl.gz'\n\nLoop over the molecules, skip anything with more than 50 atoms, and build fingerprints for all the others.\nThe fingerprints I generate for this analysis are: - Sparse Morgan with radii 1, 2, and 3 - Sparse FeatureMorgan with radii 1, 2, and 3 - RDKit BitVect with maxPath 5, 6, and 7 - Pattern BitVect - Avalon BitVect - Sparse Atom Pairs - Sparse Topological Torsions - Atom Pair BitVect - Topological Torsion BitVect\nAll of the BitVect fingerprints are 4096 bits long\n\nimport copy\n\nhistoryf = gzip.open('../data/fp_bit_counts.history.pkl.gz','wb+')\n\ncounts=defaultdict(Counter)\nt1 = time.time()\nwith gzip.open(filen,'rb') as inf:\n    i = 0\n    ms = []\n    while 1:\n        try:\n            m,nm = pickle.load(inf)\n        except EOFError:\n            break\n        if not m or m.GetNumHeavyAtoms()&gt;50: continue\n        ms.append(m)\n        i+=1\n        if len(ms)&gt;=10000:\n            for v in 1,2,3:\n                cnts = dview.map_sync(lambda x,v=v:len(rdMolDescriptors.GetMorganFingerprint(x,v).GetNonzeroElements()),\n                                     ms)\n                for obc in cnts:\n                    counts[('Morgan',v)][obc]+=1\n            for v in 1,2,3:\n                cnts = dview.map_sync(lambda x,v=v:len(rdMolDescriptors.GetMorganFingerprint(x,v,useFeatures=True).GetNonzeroElements()),\n                                     ms)\n                for obc in cnts:\n                    counts[('FeatMorgan',v)][obc]+=1\n            for v in 5,6,7:\n                cnts = dview.map_sync(lambda x,v=v:Chem.RDKFingerprint(x,maxPath=v,fpSize=4096).GetNumOnBits(),\n                                      ms)\n                for obc in cnts:\n                    counts[('RDKit',v)][obc]+=1\n            cnts = dview.map_sync(lambda x:Chem.PatternFingerprint(x,fpSize=4096).GetNumOnBits(),\n                                  ms)\n            for obc in cnts:\n                counts[('pattern',-1)][obc]+=1\n            cnts = dview.map_sync(lambda x:pyAvalonTools.GetAvalonFP(x,nBits=4096).GetNumOnBits(),\n                                  ms)\n            for obc in cnts:\n                counts[('avalon',-1)][obc]+=1\n            cnts = dview.map_sync(lambda x:len(rdMolDescriptors.GetAtomPairFingerprint(x).GetNonzeroElements()),\n                                  ms)\n            for obc in cnts:\n                counts[('ap-counts',-1)][obc]+=1\n            cnts = dview.map_sync(lambda x:len(rdMolDescriptors.GetTopologicalTorsionFingerprint(x).GetNonzeroElements()),\n                                  ms)\n            for obc in cnts:\n                counts[('tt-counts',-1)][obc]+=1\n            cnts = dview.map_sync(lambda x:rdMolDescriptors.GetHashedAtomPairFingerprintAsBitVect(x,nBits=4096).GetNumOnBits(),\n                                  ms)\n            for obc in cnts:\n                counts[('ap-bv',-1)][obc]+=1\n            cnts = dview.map_sync(lambda x:rdMolDescriptors.GetHashedTopologicalTorsionFingerprintAsBitVect(x,nBits=4096).GetNumOnBits(),\n                                  ms)\n            for obc in cnts:\n                counts[('tt-bv',-1)][obc]+=1\n            ms = []\n            \n        if not i%50000:\n            t2 = time.time()\n            print(\"Done %d in %.2f sec\"%(i,t2-t1))\n        if not i%500000:\n            pickle.dump(dict(counts),historyf)\n        if i&gt;=5000000:\n            break\n\nDone 50000 in 38.63 sec\nDone 100000 in 77.02 sec\nDone 150000 in 115.17 sec\nDone 200000 in 163.61 sec\nDone 250000 in 215.39 sec\nDone 300000 in 267.96 sec\nDone 350000 in 319.74 sec\nDone 400000 in 373.11 sec\nDone 450000 in 415.37 sec\nDone 500000 in 468.50 sec\nDone 550000 in 526.23 sec\nDone 600000 in 570.65 sec\nDone 650000 in 622.83 sec\nDone 700000 in 674.11 sec\nDone 750000 in 724.71 sec\nDone 800000 in 775.76 sec\nDone 850000 in 823.44 sec\nDone 900000 in 873.37 sec\nDone 950000 in 922.91 sec\nDone 1000000 in 971.03 sec\nDone 1050000 in 1019.84 sec\nDone 1100000 in 1068.24 sec\nDone 1150000 in 1116.11 sec\nDone 1200000 in 1164.39 sec\nDone 1250000 in 1211.31 sec\nDone 1300000 in 1255.67 sec\nDone 1350000 in 1306.25 sec\nDone 1400000 in 1356.04 sec\nDone 1450000 in 1402.95 sec\nDone 1500000 in 1453.38 sec\nDone 1550000 in 1500.31 sec\nDone 1600000 in 1546.90 sec\nDone 1650000 in 1593.48 sec\nDone 1700000 in 1640.38 sec\nDone 1750000 in 1696.32 sec\nDone 1800000 in 1750.83 sec\nDone 1850000 in 1810.42 sec\nDone 1900000 in 1868.12 sec\nDone 1950000 in 1926.07 sec\nDone 2000000 in 1983.37 sec\nDone 2050000 in 2043.56 sec\nDone 2100000 in 2102.81 sec\nDone 2150000 in 2160.67 sec\nDone 2200000 in 2218.30 sec\nDone 2250000 in 2272.73 sec\nDone 2300000 in 2323.77 sec\nDone 2350000 in 2375.39 sec\nDone 2400000 in 2427.04 sec\nDone 2450000 in 2481.36 sec\nDone 2500000 in 2536.57 sec\nDone 2550000 in 2591.71 sec\nDone 2600000 in 2644.06 sec\nDone 2650000 in 2698.32 sec\nDone 2700000 in 2752.86 sec\nDone 2750000 in 2805.41 sec\nDone 2800000 in 2856.95 sec\nDone 2850000 in 2909.60 sec\nDone 2900000 in 2965.05 sec\nDone 2950000 in 3021.72 sec\nDone 3000000 in 3073.35 sec\nDone 3050000 in 3127.90 sec\nDone 3100000 in 3177.67 sec\nDone 3150000 in 3234.92 sec\nDone 3200000 in 3288.20 sec\nDone 3250000 in 3341.28 sec\nDone 3300000 in 3393.97 sec\nDone 3350000 in 3446.92 sec\nDone 3400000 in 3499.45 sec\nDone 3450000 in 3549.88 sec\nDone 3500000 in 3601.67 sec\nDone 3550000 in 3653.41 sec\nDone 3600000 in 3705.95 sec\nDone 3650000 in 3759.37 sec\nDone 3700000 in 3810.11 sec\nDone 3750000 in 3861.68 sec\nDone 3800000 in 3912.28 sec\nDone 3850000 in 3965.28 sec\nDone 3900000 in 4022.67 sec\nDone 3950000 in 4077.32 sec\nDone 4000000 in 4129.91 sec\nDone 4050000 in 4185.33 sec\nDone 4100000 in 4240.67 sec\nDone 4150000 in 4287.86 sec\nDone 4200000 in 4340.04 sec\nDone 4250000 in 4391.57 sec\nDone 4300000 in 4443.67 sec\nDone 4350000 in 4493.96 sec\nDone 4400000 in 4545.53 sec\nDone 4450000 in 4592.16 sec\nDone 4500000 in 4640.05 sec\nDone 4550000 in 4687.30 sec\nDone 4600000 in 4733.79 sec\nDone 4650000 in 4780.85 sec\nDone 4700000 in 4828.29 sec\nDone 4750000 in 4878.40 sec\nDone 4800000 in 4927.55 sec\nDone 4850000 in 4984.36 sec\nDone 4900000 in 5042.20 sec\nDone 4950000 in 5101.82 sec\nDone 5000000 in 5154.32 sec\n\n\n\npickle.dump(dict(counts),gzip.open('../data/fp_bit_counts.pkl.gz','wb+'))\n\nNow plot the distributions of the number of bits set\n\nmorgan_ks = [x for x in counts.keys() if x[0] =='Morgan']\nfeatmorgan_ks = [x for x in counts.keys() if x[0] =='FeatMorgan']\nrdkit_ks = [x for x in counts.keys() if x[0] == 'RDKit']\n\nfigure(figsize=(15,15))\n\npidx=1\nsubplot(3,3,pidx)\nfor n,r in morgan_ks:\n    cnts = sorted(counts[(n,r)].items())\n    \n    plot([x for x,y in cnts],[y for x,y in cnts],label=\n        f\"r={r}\")\n_=title(\"Morgan\")\n_=xlabel(\"num bits set\")\n_=ylabel(\"count\")\n_=legend()\n\npidx=2\nsubplot(3,3,pidx)\nfor n,r in featmorgan_ks:\n    cnts = sorted(counts[(n,r)].items())\n    \n    plot([x for x,y in cnts],[y for x,y in cnts],label=\n        f\"r={r}\")\n_=title(\"FeatMorgan\")\n_=xlabel(\"num bits set\")\n_=ylabel(\"count\")\n_=legend()\n\npidx=3\nsubplot(3,3,pidx)\nfor n,r in rdkit_ks:\n    cnts = sorted(counts[(n,r)].items())\n    \n    plot([x for x,y in cnts],[y for x,y in cnts],label=\n        f\"r={r}\")\n_=title(\"RDKit\")\n_=xlabel(\"num bits set\")\n_=ylabel(\"count\")\n_=legend()\n\nfor k in counts.keys():\n    if k[0] in ('Morgan','FeatMorgan','RDKit'):\n        continue\n    pidx+=1\n    subplot(3,3,pidx)\n    cnts = sorted(counts[k].items())\n    plot([x for x,y in cnts],[y for x,y in cnts])\n    _=title(k[0])\n    _=xlabel(\"num bits set\")\n    _=ylabel(\"count\")\n   \n\n\n\n\n\n\n\n\nThe avalon FP curve has an interesting shape\n\nfor k,cnts in counts.items():\n    accum = 0\n    denom = 0\n    for cnt,num in cnts.items():\n        accum += cnt*num\n        denom += num\n    mean = accum/denom\n    dev = 0\n    for cnt,num in cnts.items():\n        dev += num*(cnt-mean)**2\n    dev /= (denom-1)\n    dev = dev**0.5\n    label = k[0]\n    if k[1]!=-1:\n        label += str(k[1])\n        \n    print(label,'\\t%.1f'%mean,'%.1f'%dev)\n\nMorgan1     29.4 5.6\nMorgan2     48.7 9.6\nMorgan3     66.8 13.8\nFeatMorgan1     20.1 3.9\nFeatMorgan2     38.1 7.7\nFeatMorgan3     56.0 11.8\nRDKit5  363.3 122.5\nRDKit6  621.7 233.2\nRDKit7  993.6 406.3\npattern     445.5 122.5\navalon  279.8 129.9\nap-counts   166.6 56.3\ntt-counts   33.4 9.8\nap-bv   267.3 90.0\ntt-bv   47.2 12.0\n\n\n\nConvergence\nI did 5 million examples, which took a while (about 1.5 hours with 6 worker processes on my PC). Could I have analyzed less and gotten to the same results? Did the means converge? If so, how quickly?\n\nhistoryf = gzip.open('../data/fp_bit_counts.history.pkl.gz','rb')\nmeans = defaultdict(list)\ndevs = defaultdict(list)\nnmols = []\nwhile 1:\n    try:\n        lcounts = pickle.load(historyf)\n    except EOFError:\n        break\n    for k,cnts in lcounts.items():\n        accum = 0\n        denom = 0\n        for cnt,num in cnts.items():\n            accum += cnt*num\n            denom += num\n        mean = accum/denom\n        dev = 0\n        for cnt,num in cnts.items():\n            dev += num*(cnt-mean)**2\n        dev /= (denom-1)\n        dev = dev**0.5\n        \n        if denom not in nmols:\n            nmols.append(denom)\n        means[k].append(mean)\n        devs[k].append(dev)\n        label = k[0]\n        if k[1]!=-1:\n            label += str(k[1])\n\n        print(denom,label,'\\t%.1f'%mean,'%.1f'%dev)    \n\n500000 Morgan1  26.0 6.2\n500000 Morgan2  42.8 10.7\n500000 Morgan3  58.7 15.5\n500000 FeatMorgan1  18.2 4.3\n500000 FeatMorgan2  33.8 8.5\n500000 FeatMorgan3  49.5 13.2\n500000 RDKit5   324.6 133.9\n500000 RDKit6   560.8 256.2\n500000 RDKit7   902.9 445.7\n500000 pattern  408.8 133.9\n500000 avalon   241.8 133.8\n500000 ap-counts    133.3 57.6\n500000 tt-counts    28.6 10.2\n500000 ap-bv    219.5 93.6\n500000 tt-bv    41.9 12.9\n1000000 Morgan1     27.1 6.1\n1000000 Morgan2     44.6 10.5\n1000000 Morgan3     61.2 15.2\n1000000 FeatMorgan1     18.9 4.2\n1000000 FeatMorgan2     35.2 8.4\n1000000 FeatMorgan3     51.6 13.0\n1000000 RDKit5  340.7 133.9\n1000000 RDKit6  588.9 257.4\n1000000 RDKit7  948.5 449.9\n1000000 pattern     425.2 136.0\n1000000 avalon  257.7 136.7\n1000000 ap-counts   143.7 57.7\n1000000 tt-counts   30.1 10.1\n1000000 ap-bv   234.4 92.8\n1000000 tt-bv   43.6 12.9\n1500000 Morgan1     27.3 5.8\n1500000 Morgan2     45.0 9.9\n1500000 Morgan3     61.7 14.3\n1500000 FeatMorgan1     19.0 4.1\n1500000 FeatMorgan2     35.5 8.0\n1500000 FeatMorgan3     52.0 12.3\n1500000 RDKit5  340.3 127.8\n1500000 RDKit6  587.1 246.2\n1500000 RDKit7  944.8 432.0\n1500000 pattern     424.0 129.4\n1500000 avalon  260.5 133.7\n1500000 ap-counts   145.1 54.8\n1500000 tt-counts   30.5 9.8\n1500000 ap-bv   234.9 87.3\n1500000 tt-bv   43.7 12.3\n2000000 Morgan1     28.0 5.7\n2000000 Morgan2     46.2 9.8\n2000000 Morgan3     63.4 14.1\n2000000 FeatMorgan1     19.4 4.0\n2000000 FeatMorgan2     36.3 7.9\n2000000 FeatMorgan3     53.3 12.1\n2000000 RDKit5  350.7 126.6\n2000000 RDKit6  603.5 243.1\n2000000 RDKit7  969.0 425.8\n2000000 pattern     433.3 128.0\n2000000 avalon  269.5 133.1\n2000000 ap-counts   152.4 55.5\n2000000 tt-counts   31.5 9.8\n2000000 ap-bv   245.8 88.2\n2000000 tt-bv   45.0 12.2\n2500000 Morgan1     28.7 5.8\n2500000 Morgan2     47.5 9.8\n2500000 Morgan3     65.3 14.2\n2500000 FeatMorgan1     19.7 4.0\n2500000 FeatMorgan2     37.2 7.9\n2500000 FeatMorgan3     54.7 12.1\n2500000 RDKit5  361.5 126.3\n2500000 RDKit6  621.2 241.1\n2500000 RDKit7  996.0 420.5\n2500000 pattern     443.2 126.4\n2500000 avalon  278.4 132.6\n2500000 ap-counts   160.1 56.9\n2500000 tt-counts   32.6 9.9\n2500000 ap-bv   257.9 90.2\n2500000 tt-bv   46.3 12.2\n3000000 Morgan1     29.1 5.7\n3000000 Morgan2     48.1 9.8\n3000000 Morgan3     66.1 14.1\n3000000 FeatMorgan1     19.9 3.9\n3000000 FeatMorgan2     37.6 7.8\n3000000 FeatMorgan3     55.3 12.0\n3000000 RDKit5  364.5 124.5\n3000000 RDKit6  625.3 237.2\n3000000 RDKit7  1001.4 413.2\n3000000 pattern     446.5 124.1\n3000000 avalon  280.5 131.5\n3000000 ap-counts   163.7 57.0\n3000000 tt-counts   33.1 9.8\n3000000 ap-bv   263.5 90.5\n3000000 tt-bv   46.9 12.1\n3500000 Morgan1     29.2 5.7\n3500000 Morgan2     48.3 9.7\n3500000 Morgan3     66.4 14.0\n3500000 FeatMorgan1     19.9 3.9\n3500000 FeatMorgan2     37.7 7.8\n3500000 FeatMorgan3     55.6 11.9\n3500000 RDKit5  365.3 123.8\n3500000 RDKit6  626.7 236.0\n3500000 RDKit7  1003.7 411.3\n3500000 pattern     448.4 123.3\n3500000 avalon  280.3 131.1\n3500000 ap-counts   165.1 56.7\n3500000 tt-counts   33.3 9.8\n3500000 ap-bv   265.9 90.1\n3500000 tt-bv   47.2 12.1\n4000000 Morgan1     29.4 5.7\n4000000 Morgan2     48.6 9.8\n4000000 Morgan3     66.7 14.1\n4000000 FeatMorgan1     20.0 3.9\n4000000 FeatMorgan2     38.0 7.8\n4000000 FeatMorgan3     55.9 12.0\n4000000 RDKit5  365.2 124.1\n4000000 RDKit6  627.1 236.6\n4000000 RDKit7  1005.0 412.4\n4000000 pattern     448.6 124.0\n4000000 avalon  281.4 131.3\n4000000 ap-counts   165.7 56.9\n4000000 tt-counts   33.4 9.9\n4000000 ap-bv   266.8 90.6\n4000000 tt-bv   47.3 12.2\n4500000 Morgan1     29.4 5.6\n4500000 Morgan2     48.7 9.6\n4500000 Morgan3     66.8 13.9\n4500000 FeatMorgan1     20.1 3.9\n4500000 FeatMorgan2     38.0 7.7\n4500000 FeatMorgan3     55.9 11.8\n4500000 RDKit5  364.3 123.1\n4500000 RDKit6  624.4 234.6\n4500000 RDKit7  999.1 408.8\n4500000 pattern     447.0 122.7\n4500000 avalon  280.7 130.6\n4500000 ap-counts   166.3 56.4\n4500000 tt-counts   33.4 9.8\n4500000 ap-bv   267.3 89.9\n4500000 tt-bv   47.3 12.1\n5000000 Morgan1     29.4 5.6\n5000000 Morgan2     48.7 9.6\n5000000 Morgan3     66.8 13.8\n5000000 FeatMorgan1     20.1 3.9\n5000000 FeatMorgan2     38.1 7.7\n5000000 FeatMorgan3     56.0 11.8\n5000000 RDKit5  363.3 122.5\n5000000 RDKit6  621.7 233.2\n5000000 RDKit7  993.6 406.3\n5000000 pattern     445.5 122.5\n5000000 avalon  279.8 129.9\n5000000 ap-counts   166.6 56.3\n5000000 tt-counts   33.4 9.8\n5000000 ap-bv   267.3 90.0\n5000000 tt-bv   47.2 12.0\n\n\nLet’s look at those graphically:\n\nmorgan_ks = [x for x in counts.keys() if x[0] =='Morgan']\nfeatmorgan_ks = [x for x in counts.keys() if x[0] =='FeatMorgan']\nrdkit_ks = [x for x in counts.keys() if x[0] == 'RDKit']\n\nfigure(figsize=(15,15))\n\nnmols2 = [x/1000000 for x in nmols]\n\npidx=1\nsubplot(3,3,pidx)\nfor n,r in morgan_ks:\n    lmeans = means[(n,r)]\n    ldevs = devs[(n,r)]\n    errorbar(nmols2,lmeans,yerr=ldevs,capsize=3)\n    \n_=title(\"Morgan\")\n_=xlabel(\"num mols (millions)\")\n_=ylabel(\"count\")\n#_=legend()\n\npidx=2\nsubplot(3,3,pidx)\nfor n,r in featmorgan_ks:\n    lmeans = means[(n,r)]\n    ldevs = devs[(n,r)]\n    errorbar(nmols2,lmeans,yerr=ldevs,capsize=3)\n_=title(\"FeatMorgan\")\n_=xlabel(\"num mols (millions)\")\n_=ylabel(\"count\")\n#_=legend()\n\npidx=3\nsubplot(3,3,pidx)\nfor n,r in rdkit_ks:\n    lmeans = means[(n,r)]\n    ldevs = devs[(n,r)]\n    errorbar(nmols2,lmeans,yerr=ldevs,capsize=3)\n_=title(\"RDKit\")\n_=xlabel(\"num mols (millions)\")\n_=ylabel(\"count\")\n#_=legend()\n\nfor k in counts.keys():\n    if k[0] in ('Morgan','FeatMorgan','RDKit'):\n        continue\n    pidx+=1\n    subplot(3,3,pidx)\n    lmeans = means[k]\n    ldevs = devs[k]\n    errorbar(nmols2,lmeans,yerr=ldevs,capsize=3)\n    _=title(k[0])\n    _=xlabel(\"num mols (millions)\")\n    _=ylabel(\"count\")\n   \n\n\n\n\n\n\n\n\nLooks like we would have been fine with 3 million molecules."
  },
  {
    "objectID": "posts/2024-10-10-whats-new-2024-09-2.html",
    "href": "posts/2024-10-10-whats-new-2024-09-2.html",
    "title": "What’s new in 2024.09.1, part II",
    "section": "",
    "text": "This is the second of a short series of posts providing brief introductions to new functionality in the RDKit 2024.09.1 release (added since the 2024.03.1 release).\nimport rdkit\nrdkit.__version__\n\n'2024.09.1'\nfrom rdkit import Chem\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import IPythonConsole"
  },
  {
    "objectID": "posts/2024-10-10-whats-new-2024-09-2.html#about-the-features",
    "href": "posts/2024-10-10-whats-new-2024-09-2.html#about-the-features",
    "title": "What’s new in 2024.09.1, part II",
    "section": "About the features",
    "text": "About the features\nThe default feature definitions used for scoring the alignments are a slightly modified version of the Gobbi and Poppinger features used elsewhere in the RDKit.\nIf the molecules have property that PubChem3D uses to indicate pharmacophore features - PUBCHEM_PHARMACOPHORE_FEATURES - those features will be used instead.\nHere’s an example showing this with conformers downloaded from PubChem3D:\n\nimport requests\nsdf = requests.get('https://pubchem.ncbi.nlm.nih.gov/rest/pug/conformers/000011F200000003/SDF').content\nsuppl = Chem.SDMolSupplier()\nsuppl.SetData(sdf,removeHs=False)\nomeprazole = next(suppl)\nomeprazole\n\n\n        3Dmol.js failed to load for some reason.  Please check your browser console for error messages.\n        \n\n\n\n\n\n\nLook at the feature definitions;\n\nprint(omeprazole.GetProp('PUBCHEM_PHARMACOPHORE_FEATURES'))\n\n9\n1 2 acceptor\n1 3 acceptor\n1 4 acceptor\n1 5 donor\n1 7 acceptor\n3 5 6 11 cation\n5 5 6 11 12 14 rings\n6 12 14 17 19 20 21 rings\n6 7 9 10 13 15 18 rings\n\n\n\nsdf = requests.get('https://pubchem.ncbi.nlm.nih.gov/rest/pug/conformers/0005DA1100000001/SDF').content\nsuppl = Chem.SDMolSupplier()\nsuppl.SetData(sdf,removeHs=False)\nmol = next(suppl)\nmol\n\n\n        3Dmol.js failed to load for some reason.  Please check your browser console for error messages.\n        \n\n\n\n\n\n\n\nprint(mol.GetProp('PUBCHEM_PHARMACOPHORE_FEATURES'))\n\n5\n1 7 donor\n3 7 8 13 cation\n5 7 8 11 12 13 rings\n6 11 12 16 17 21 22 rings\n6 9 14 15 18 19 20 rings\n\n\nAlign the molecules:\n\nshapeTani,colorTani = rdShapeAlign.AlignMol(omeprazole,mol)\nprint(shapeTani,colorTani)\ndrawit([omeprazole,mol])\n\n0.8584853463904615 0.5117278196011656\n\n\n\n        3Dmol.js failed to load for some reason.  Please check your browser console for error messages.\n        \n\n\n\nIf we remove the properties, the code uses the RDKit feature definitions, so we get a different feature score:\n\nt1 = Chem.Mol(omeprazole)\nt1.ClearProp('PUBCHEM_PHARMACOPHORE_FEATURES')\nt2 = Chem.Mol(mol)\nt2.ClearProp('PUBCHEM_PHARMACOPHORE_FEATURES')\nshapeTani,colorTani = rdShapeAlign.AlignMol(t1,t2)\nprint(shapeTani,colorTani)\ndrawit([t1,t2])\n\n0.8584733801282853 0.4440077489499693\n\n\n\n        3Dmol.js failed to load for some reason.  Please check your browser console for error messages.\n        \n\n\n\nAs a final note, it’s possible to disable the use of features in the scoring entirely:\n\nshapeTani,colorTani = rdShapeAlign.AlignMol(t1,t2,useColors=False)\nprint(shapeTani,colorTani)\ndrawit([t1,t2])\n\n0.8584733855324804 0.0\n\n\n\n        3Dmol.js failed to load for some reason.  Please check your browser console for error messages."
  },
  {
    "objectID": "posts/2024-10-31-lwreg-and-the-cartridge.html",
    "href": "posts/2024-10-31-lwreg-and-the-cartridge.html",
    "title": "Using lwreg with the RDKit cartridge",
    "section": "",
    "text": "We recently published an application note introducing lwreg, an open-source chemical registration system with a simple Python API that can be easily integrated into computational workflows. We think lwreg is really useful and hope others agree with us.\nOne of the key ideas behind lwreg is that it should not require any chemical intelligence in the database it uses to store its results. See the paper for more details, but the kinds of identity queries (i.e. “is this molecule or something closely related already registered?”) that a registration system needs to support can be answered with standard text queries. Having said that, there are times when it’s useful to ask questions like “Are there any registered molecules in the database that contain this substructure?”. One easy way to allow this kind of query is to install the RDKit cartridge in the database.\nThis post shows how to use the RDKit cartridge together with an lwreg instance that is using PostgreSQL as the database backend. Since installing PostgreSQL and the cartridge can be challenging for a normal user, I also show how to do that installation and get a database that’s suitable for local use. The instructions below should work on Windows, Linux, or the Mac.\nMany thanks to Jessica Braun, the other main lwreg developer, for her feedback on a draft of this post, which will eventually end up, in some modified form, in the lwreg documentation.\n\nSetting up a local PostgreSQL installation\nYou probably wouldn’t want to use this setup in any very serious way, but it’s great for learning and could certainly work as a way to configure a personal database. I put this notebook together in Windows on my laptop, but it should work on Linux or the Mac too.\n\nAside If you want to do this more seriously without a huge amount of complication, your best bet is probably to setup a docker container that runs postgresql and the cartridge and to use that within lwreg. I will try to put together a post showing how to do this in the not-too-distant future.\n\nAs usual, I assume that you’re using conda since it makes installing the RDKit and all other dependencies incredibly easy.\nCreate a conda environment using the lwreg environment.yml file:\nconda env create -f https://github.com/rinikerlab/lightweight-registration/raw/refs/heads/main/environment.yml\nThis creates an environment named py311_lwreg. Activate that and install lwreg, postgresql, and the rdkit-postgresql cartridge:\nconda activate py311_lwreg\npython -m pip install git+https://github.com/rinikerlab/lightweight-registration\nconda install postgresql\nconda install rdkit-postgresql\nWe need an environment for postgresql to use to store its database files, create that and then tell postgresql to initialize that directory, you will obviously need to pick a different path:\nmkdir c:/users/glandrum/database\ninitdb -D /c/Users/glandrum/database/psql17\nStart the postgresql server:\npg_ctl -D /c/Users/glandrum/database/psql17 -l /c/Users/glandrum/database/psql17.log start\n\nNote If you run the server this way, it will be killed when the shell you launched it from exits. You will need to run this start command each time you want to start using lwreg.\n\nFinally create the database that we’re going to work with here:\ncreatedb gl_structuredemo\nNow everything is set up, let’s get started!\n\nfrom rdkit import Chem\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import IPythonConsole\n\nfrom lwreg import utils\n\nSet up our the configuration we’re going to use for lwreg:\n\ncfg = utils.defaultConfig()\ncfg['host'] = 'localhost'\ncfg['dbtype'] = 'postgresql'\ncfg['dbname'] = 'gl_structuredemo'\n# for this use case we're going to be registering 3D structures and want to keep the conformers:\ncfg['registerConformers'] = True\n# we don't want lwreg to do any standardization of the molecules when we load them:\ncfg['standardization'] = 'none'\nutils.set_default_config(cfg)\n\n\nutils.initdb()\n\nThis will destroy any existing information in the registration database.\n  are you sure? [yes/no]:  yes\n\n\nTrue\n\n\nStart by loading some structures (these are some subsets of molecules I’ve extracted from the COD for another project). You obviously won’t have these files, but you can provide any SDF files that contain 3D molecules.\n\nmrns = utils.bulk_register(sdfile='c:/users/glandrum/ETH/Datasets/COD/COD_2024Feb14.organic.chembl_selected.sdf')\nmrns = utils.bulk_register(sdfile='c:/users/glandrum/ETH/Datasets/COD/COD_2024Feb14.organic.macrocycles.sdf')\nmrns = utils.bulk_register(sdfile='c:/users/glandrum/ETH/Datasets/COD/COD_2024Feb14.organic.cages.sdf')\n\n\nlen(utils.get_all_registry_numbers())\n\n2416\n\n\n\n\nUsing the RDKit cartridge with data from the lwreg tables.\nWe start by installing the cartridge in our database (if it’s not already installed) and create a new schema to hold the RDKit tables.\n\ncn = utils.connect(config=cfg)\ncurs = cn.cursor()\ncurs.execute('create extension if not exists rdkit')\ncurs.execute('create schema if not exists rdk')\ncn.commit()\n\nNow create the rdk.mols table to hold RDKit molecules, populate it with molecules created from the mol blocks in lwreg’s molblocks table, and then create an index on the molecule column to allow us to quickly do substructure searches.\n\ncurs.execute('drop table if exists rdk.mols cascade')\n# the second argument to mol_from_ctab() here tells the cartridge to not store the molecule's conformers, we don't need them\ncurs.execute('select molregno, mol_from_ctab(molblock::cstring,false) m into rdk.mols from molblocks')\ncurs.execute('create index molidx on rdk.mols using gist(m)')\ncn.commit()\n\nNow let’s do some queries.\nStart by looking for one of the torsions that’s used for ETKDGv3:\n\nsmi = '[cH0:1][c:2]([cH1])!@;-[O:3][C:4]'\ncurs.execute(\"select * from rdk.mols where m @&gt; %s::qmol\",(smi,))\nd = curs.fetchall()\nlen(d)\n\n99\n\n\nAnd look at the results with just the torsion substructure highlighted:\n\nq = Chem.MolFromSmarts(smi)\nlabelledAts = [x.GetIdx() for x in q.GetAtoms() if x.GetAtomMapNum()]\n\nms = [Chem.MolFromSmiles(x[1]) for x in d]\nats = []\nfor m in ms:\n    matches = m.GetSubstructMatches(q)\n    tl = []\n    for tm in matches:\n        tl.extend([tm[i] for i in labelledAts])\n    ats.append(tl)\n    \nDraw.MolsToGridImage(ms[:6],subImgSize=(350,300),highlightAtomLists=ats)\n\n\n\n\n\n\n\n\nNow let’s do a query to retrieve conformers for the molecules that match that substructure:\n\ncurs.execute(\"select molregno,conf_id,molblock from rdk.mols join conformers using (molregno) where m@&gt;%s::qmol\",(smi,))\nd = curs.fetchall()\nlen(d)\n\n106\n\n\nAnd collect information about the values of the dihedral that we’re interested in across those conformers:\n\nfrom rdkit.Chem import rdMolTransforms\n\nq = Chem.MolFromSmarts(smi)\nlabelledAts = [x.GetIdx() for x in q.GetAtoms() if x.GetAtomMapNum()]\n\nms = [Chem.MolFromMolBlock(x[2],removeHs=False) for x in d]\nvals = []\nfor m in ms:\n    matches = m.GetSubstructMatches(q)\n    conf = m.GetConformer()\n    for tm in matches:\n        aids = [tm[i] for i in labelledAts]\n        vals.append(rdMolTransforms.GetDihedralDeg(conf,*aids))    \n\n\nlen(vals)\n\n219\n\n\nDo a histogram of the dihedral values:\n\nfrom matplotlib import pyplot as plt\n%matplotlib inline\n\nplt.hist(vals,bins=20);\nplt.xlabel('dihedral')\nplt.ylabel('count')\nplt.title(smi);\n\n\n\n\n\n\n\n\n\n\nKeeping the RDKit tables up-to-date when molecules are added to lwreg\nOur next step is to make sure that RDKit tables in the database are automatically updated when new molecules are added to lwreg. We can do this in PostgreSQL by adding a trigger to the molblock table that is called after a new row is inserted into the molblock table. The trigger is called with the data from the new row, so we can just insert the new molregno and the molecule constructed from the new molblock into the rdk.mols table.\nNote: if using this in production, you probably would need to do some error handling in the trigger. That’s beyond the scope of this blog post (in this case that means: “I don’t know how to do it”).\nThe PostgreSQL docs have more information about creating triggers.\n\ncurs.execute('''CREATE OR REPLACE FUNCTION copy_new_mol() RETURNS TRIGGER AS\n$BODY$\nBEGIN\n    INSERT INTO\n        rdk.mols(molregno,m)\n        VALUES(new.molregno,mol_from_ctab(new.molblock::cstring,false));\n           RETURN new;\nEND;\n$BODY$\nlanguage plpgsql;''')\ncurs.execute('''CREATE OR REPLACE TRIGGER mol_insert_trigger\n     AFTER INSERT ON molblocks\n     FOR EACH ROW\n     EXECUTE FUNCTION copy_new_mol();''')\n\n\nDemonstrate that this worked by creating two new molecules that share a core, generating a conformer for each one, and registering each one.\n\nfrom rdkit.Chem import rdDistGeom\nnewMol = Chem.AddHs(Chem.MolFromSmiles('c1c(O)csn1'))\nrdDistGeom.EmbedMolecule(newMol,randomSeed=0xf00d)\ntm = Chem.RemoveHs(newMol)\nutils.register(mol=tm)\n\n(2792, 2792)\n\n\n\nnewMol = Chem.AddHs(Chem.MolFromSmiles('c1c(OC)csn1'))\nrdDistGeom.EmbedMolecule(newMol,randomSeed=0xf00d)\ntm = Chem.RemoveHs(newMol)\nutils.register(mol=tm)\n\n(2793, 2793)\n\n\nNow show that we can retrieve those two just-registered molecules with a substructure query for the core:\n\nsma = 'c1c(O)csn1'\ncurs.execute(\"select * from rdk.mols where m@&gt;%s::qmol limit 10\",(sma,))\nd = curs.fetchall()\nlen(d)\n\n2\n\n\n\nd[0]\n\n(2792, 'Oc1cnsc1')\n\n\n\nd[1]\n\n(2793, 'COc1cnsc1')"
  },
  {
    "objectID": "posts/2023-10-25-molsmatrixtogridimage.html",
    "href": "posts/2023-10-25-molsmatrixtogridimage.html",
    "title": "Plotting rows and columns of molecules with MolsMatrixToGridImage",
    "section": "",
    "text": "This guest post by Jeremy Monat (GitHub: @bertiewooster), who contributed MolsMatrixToGridImage to the RDKit, is the third of a few posts covering some of the new or improved features in the 2023.09.1 RDKit release.\nMolsMatrixToGridImage, new in RDKit 2023.09.1, is designed to easily plot a rectangular grid of molecules, that is, rows and columns of molecules."
  },
  {
    "objectID": "posts/2023-10-25-molsmatrixtogridimage.html#comparing-molsmatrixtogridimage-to-molstogridimage",
    "href": "posts/2023-10-25-molsmatrixtogridimage.html#comparing-molsmatrixtogridimage-to-molstogridimage",
    "title": "Plotting rows and columns of molecules with MolsMatrixToGridImage",
    "section": "Comparing MolsMatrixToGridImage to MolsToGridImage",
    "text": "Comparing MolsMatrixToGridImage to MolsToGridImage\nMolsMatrixToGridImage builds on MolsToGridImage. In fact, MolsMatrixToGridImage internally calls MolsToGridImage, so they can output the same images and formats.\nThe difference is that MolsMatrixToGridImage creates a rectangular row-and-column format by using nested input data structures. Each data substructure represents a row of molecules. MolsMatrixToGridImage automatically pads rows as needed so all rows are the length of the longest row, making it easy to plot molecules in a matrix without having to think about the length of each row.\nAs a minimal example, if we want to plot a single interhalogen molecule at various cells in a grid, for example to represent a spatial arrangement:\n\n%%capture\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit.Chem import AllChem as Chem\nfrom rdkit.Chem.Draw import MolsToGridImage, rdMolDraw2D, MolsMatrixToGridImage\nimport copy\n\n\nmol = Chem.MolFromSmiles(\"FCl\")\n\nboth of the following produce the same grid image:\n\n# MolsMatrixToGridImage usage\nmolsMatrix = [[mol, mol], [mol, None, mol]]\nMolsMatrixToGridImage(molsMatrix=molsMatrix)\n\n\n\n\n\n\n\n\n\n# MolsToGridImage usage\nmols = [mol, mol, None, mol, None, mol]\nMolsToGridImage(mols=mols, molsPerRow=3)\n\n\n\n\n\n\n\n\nwhere we had to add the first None (null molecule) item for MolsToGridImage to produce the empty cell at the end of the first row.\nThe advantage of MolsMatrixToGridImage is that you need not manually pad shorter (narrower) rows, and you can provide molecules in a nested format that explicitly identifies each row.\nWhile the nested data structure above for MolsMatrixToGridImage is a list of lists, you can use other pairs of iterables: a tuple of tuples, or a list of tuples, etc.\n\nChoosing a grid image function\nUse MolsToGridImage if you want to plot a series of molecules in the least amount of space, where the row that each molecule is on is not important.\nUse MolsMatrixToGridImage if you want each row of molecules to represent something meaningful, and especially if the number of molecules per row can vary. The columns may or may not have meaning: You could plot an uninterrupted series of molecules in a row in no particular order, or you could assign molecules to columns based on some property—for example, a column may represent a spatial location. Or the columns may be used to space out molecules; for example in the retrosynthetic analysis tree below, the columns allow horizontal space for each subtree to avoid visually-confusing overlapping with adjacent subtrees.\nA borderline situation is if each row will have the same number of molecules n (n = 2 below): you can create the same grid using either\n\nMolsToGridImage(molsPerRow=n), for example MolsToGridImage([mol1a, mol1b, mol2a, mol2b, mol3a, mol3b], molsPerRow=2).\nMolsMatrixToGridImage with n molecules in each row, for example MolsMatrixToGridImage([[mol1a, mol1b], [mol2a, mol2b], [mol3a, mol3b]]). You may find this format easier to use because each row is in its own sub-list. Also, you need not explicitly declare the number of molecules per row, so if you later change that number n, or have a different number of molecules on a given row, the grid will automatically adjust accordingly.\n\nBoth MolsMatrixToGridImage and MolsToGridImage are Python functions; they are not available in C++."
  },
  {
    "objectID": "posts/2023-10-25-molsmatrixtogridimage.html#use-cases",
    "href": "posts/2023-10-25-molsmatrixtogridimage.html#use-cases",
    "title": "Plotting rows and columns of molecules with MolsMatrixToGridImage",
    "section": "Use cases",
    "text": "Use cases\nHere are three example use cases. Each comes from an external blog post by the author, which is linked to in the use case’s heading, and which explains more about the chemistry background and how the parameters given below are generated. In each case, we show the MolsMatrixToGridImage usage and then the same output using MolsToGridImage.\n\nSynthetic accessibility\nGiven molecules you want to synthesize, and the reaction to create each, this utility determines the starting materials, checks whether they are commercially available per PubChem, and tells you whether each target is accessible—whether all its starting materials are commercially available.\nHere, MolsMatrixToGridImage is useful because\n\neach row represents a synthetic target\neach target might have a different number of starting materials, and thus a different number of cells (columns). The first column represents the target. Subsequent columns represent the reactants, and are in no particular order.\n\n\n# MolsMatrixToGridImage usage\nsynSmilesMatrix = [['OCN1C2CC(C=C2)C1CC1NCCc2ccccc12', 'NCCc1ccccc1', 'O=CCC1C2C=CC(C2)N1CO'], ['c1ccc(NCC2NCCc3ccccc32)cc1', 'NCCc1ccccc1', 'O=CCNc1ccccc1'], ['[O-][N+](=O)C1=CC=C(C2NCCc3ccccc23)C2=C1C=CC=C2', 'Nc1ccc(C2NCCc3ccccc32)c2ccccc12']]\nsynMolsMatrix = [[Chem.MolFromSmiles(smile) for smile in row] for row in synSmilesMatrix]\nsynLegendsMatrix = [['Pictet-Spengler target accessible: No', 'Reactant available: Yes', 'Reactant available: No'], ['Pictet-Spengler target accesible: Yes', 'Reactant available: Yes', 'Reactant available: Yes'], ['Amine oxidation target accessible: No', 'Reactant available: No']]\nMolsMatrixToGridImage(molsMatrix=synMolsMatrix, legendsMatrix=synLegendsMatrix)\n\n\n\n\n\n\n\n\n\n# MolsToGridImage usage\nsynSmiles = ['OCN1C2CC(C=C2)C1CC1NCCc2ccccc12', 'NCCc1ccccc1', 'O=CCC1C2C=CC(C2)N1CO', 'c1ccc(NCC2NCCc3ccccc32)cc1', 'NCCc1ccccc1', 'O=CCNc1ccccc1', '[O-][N+](=O)C1=CC=C(C2NCCc3ccccc23)C2=C1C=CC=C2', 'Nc1ccc(C2NCCc3ccccc32)c2ccccc12', '']\nsynMols = [Chem.MolFromSmiles(smile) for smile in synSmiles]\nsynLegends = ['Pictet-Spengler target accessible: No', 'Reactant available: Yes', 'Reactant available: No', 'Pictet-Spengler target accesible: Yes', 'Reactant available: Yes', 'Reactant available: Yes', 'Amine oxidation target accessible: No', 'Reactant available: No', '']\nMolsToGridImage(mols=synMols, legends=synLegends, molsPerRow=3)\n\n\n\n\n\n\n\n\n\n\nFind the maximum common substructure and groups off it\nIn drug discovery, the lead optimization step often involves creating analogues of a hit (a promising compound which produces a desired result in an assay) to optimize selectivity and minimize toxicity. Because it has historically been easier to chemically modify the periphery of the molecule (for example the functional groups) than the scaffold, it is helpful to compare the groups off of the common scaffold. A utility function uses the RDKit to find the maximum common substructure (MCS) between a set of molecules, then show the groups off of that core scaffold.\nHere, MolsMatrixToGridImage is useful because\n\neach row represents a molecule in the set\neach of those molecules might have a different number of groups off the core scaffold. The first column represents the molecule. Subsequent columns represent the groups off the core scaffold for that molecule, and are in no particular order.\n\nThe following example is for a set of two pyridinols.\n\n# MolsMatrixToGridImage usage\nmcsStringsMatrix = [['[#6]1:[#6](-[#8]):[#6]:[#7]:[#6](:[#6]:1)-[#7]', 'NC1:C:C:C(O):C:N:1'], ['c1c(O)cnc(N)c(NC(=O)(C))1', '[2*]NC(C)=O'], ['c1c(O)cnc(N(CCC))c1(C)', '[0*]CCC', '[2*]C']]\nmcsMolsMatrix = [[Chem.MolFromSmiles(smile) for smile in row] for row in mcsStringsMatrix]\n\nmcsLegends = [['Max. substructure match', 'Core'], ['aldehyde off aromatic carbon', '[2*]NC(C)=O'], ['alkyl off amine', '[0*]CCC', '[2*]C']]\nmcsHighlightAtomLists = [[(), ()], [(0, 1, 2, 3, 4, 5, 7, 6), ()], [(0, 1, 2, 3, 4, 5, 10, 6), (), ()]]\n\nmcsMolForMatrix = Chem.MolFromSmarts(mcsStringsMatrix[0][0])\n\n# Align cores--optional, for easier visual comparison of molecules\nsubms = [mcsMolsMatrix[0][1]]\nfor row in mcsMolsMatrix[1:]:\n    subms += [row[0]]\nChem.Compute2DCoords(mcsMolForMatrix)\n\nfor m in subms:\n    _ = Chem.GenerateDepictionMatching2DStructure(m, mcsMolForMatrix)\n\nMolsMatrixToGridImage(molsMatrix=mcsMolsMatrix, highlightAtomListsMatrix=mcsHighlightAtomLists, legendsMatrix=mcsLegends, useSVG=True)\n\n\n\n\n\n\n\n\n\n# MolsToGridImage usage\nmcsStrings = ['[#6]1:[#6](-[#8]):[#6]:[#7]:[#6](:[#6]:1)-[#7]', 'NC1:C:C:C(O):C:N:1', '', 'c1c(O)cnc(N)c(NC(=O)(C))1', '[2*]NC(C)=O', '', 'c1c(O)cnc(N(CCC))c1(C)', '[0*]CCC', '[2*]C']\nmolsPerRow = 3\nmcsMols = [Chem.MolFromSmiles(smile) for smile in mcsStrings]\nmcsLegends = ['Max. substructure match', 'Core', '', 'aldehyde off aromatic carbon', '[2*]NC(C)=O', '', 'alkyl off amine', '[0*]CCC', '[2*]C']\nmcsHighlightAtomLists = [(), (), (), (0, 1, 2, 3, 4, 5, 7, 6), (), (), (0, 1, 2, 3, 4, 5, 10, 6), (), ()]\n\nmcsMol = Chem.MolFromSmarts(mcsStrings[0])\n\n# Align cores--optional, just for easier visual comparison of molecules\nsubms = [mcsMols[1]]\nfor mol in mcsMols[molsPerRow::molsPerRow]:\n    subms += [mol]\nChem.Compute2DCoords(mcsMol)\nfor m in subms:\n    _ = Chem.GenerateDepictionMatching2DStructure(m, mcsMol)\n\nMolsToGridImage(mcsMols, highlightAtomLists=mcsHighlightAtomLists, legends=mcsLegends, molsPerRow=molsPerRow, useSVG=True)\n\n\n\n\n\n\n\n\n\n\nRetrosynthetic analysis\nRetrosynthetic analysis involves decomposing a target molecule into a set of fragments that could be combined to make the parent molecule using common reactions. The Recap algorithm by X. Lewell et al. accomplishes that. Recap is implemented in the RDKit.\nHere, MolsMatrixToGridImage is useful because\n\neach row represents a level of fragmentation, with the parent molecule at the top and increasing fragmentation towards the bottom\nwe want to arrange the fragments hierarchically and allow horizontal space for each subtree to avoid visually-confusing overlapping with adjacent subtrees. The columns have no inherent meaning, except that the parent molecule is in the first column, and fragments (of the parent molecule and its fragments) are arrayed to the right.\n\nHere is an example retrosynthetic analysis of [6-(hydroxymethoxy)pyridin-2-yl]oxymethanol.\n\n# MolsMatrixToGridImage usage\nretrosynSmilesMatrix = [['OCOc1cccc(OCO)n1', '', ''],\n ['*CO', '*c1cccc(OCO)n1', ''],\n ['', '*CO', '*c1cccc(*)n1']]\nretrosynMolsMatrix = [[Chem.MolFromSmiles(smile) for smile in row] for row in retrosynSmilesMatrix]\nretrosynLegendsMatrix = copy.deepcopy(retrosynSmilesMatrix)\nretrosynLegendsMatrix[0][0] = \"Parent molecule\"\nMolsMatrixToGridImage(retrosynMolsMatrix, legendsMatrix=retrosynLegendsMatrix)\n\n\n\n\n\n\n\n\n\n# MolsToGridImage usage\nretrosynSmiles = ['OCOc1cccc(OCO)n1', '', '', '*CO', '*c1cccc(OCO)n1', '', '', '*CO', '*c1cccc(*)n1']\nretrosynMols = [Chem.MolFromSmiles(smile) for smile in retrosynSmiles]\nretrosynLegends = ['Parent molecule', '', '', '*CO', '*c1cccc(OCO)n1', '', '', '*CO', '*c1cccc(*)n1']\nMolsToGridImage(mols=retrosynMols, legends=retrosynLegends, molsPerRow=3)"
  },
  {
    "objectID": "posts/2023-10-25-molsmatrixtogridimage.html#molsmatrixtogridimage-parameters",
    "href": "posts/2023-10-25-molsmatrixtogridimage.html#molsmatrixtogridimage-parameters",
    "title": "Plotting rows and columns of molecules with MolsMatrixToGridImage",
    "section": "MolsMatrixToGridImage parameters",
    "text": "MolsMatrixToGridImage parameters\nThe only required parameter to MolsMatrixToGridImage is molsMatrix.\nMolsMatrixToGridImage nests data structures one additional level beyond the analogous parameter in MolsToGridImage. The following table compares those parameters for the two functions, where the example parameters would produce the same output for their respective functions.\n\n\n\n\n\n\nKey to table lines within a cell:MolsToGridImageMolsMatrixToGridImage\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nElements mean\nParameter name\nData structure\nExample\n\n\n\n\nMolecules\nRDKit molecule\nmolsmolsMatrix\nIterable[mol]Iterable[Iterable[mol]]\n[FCl, FCl, None, FCl, None, FCl][[FCl, FCl], [FCl, None, FCl]]\n\n\nLegends\nLegend text\nlegendslegendsMatrix\nIterable[str]Iterable[Iterable[str]]\n[“no highlighting”, “bond highlighted”, ““,”F highlighted”, ““,”Cl and bond highlighted”][[“no highlighting”, “bond highlighted”], [“F highlighted”, ““,”Cl and bond highlighted”]]\n\n\nHighlight atoms\nIndices of atoms to highlight\nhighlightAtomListshighlightAtomListsMatrix\nIterable[Iterable[int]]Iterable[Iterable[Iterable[Int]]\n[[], [], None, [0], None, [1]][[[], []], [[0], None, [1]]]\n\n\nHighlight bonds\nIndices of bonds to highlight\nhighlightBondListshighlightBondListsMatrix\nIterable[Iterable[int]]Iterable[Iterable[Iterable[Int]]\n[[], [0], None, [], None, [0]][[[], [0]], [[], None, [0]]]\n\n\n\nIn the optional highlighting parameters (highlightAtomLists, highlightAtomListsMatrix, highlightBondLists, and highlightBondListsMatrix), to highlight nothing for a given molecule, you can use either None or an empty iterable such as [].\nIf you provide the parameter names in the function call, for example MolsMatrixToGridImage(molsMatrix=molsMatrix, legendsMatrix=legendsMatrix), be careful to include the suffix “Matrix” in those last three parameter names: if you use the parameter name from MolsToGridImage, such as legends, it will be passed to MolsToGridImage as a keyword argument and you will get an error like:\nTypeError: rdkit.Chem.Draw.IPythonConsole.ShowMols() got multiple values for keyword argument 'legends'\nUnlike MolsToGridImage, MolsMatrixToGridImage does not take a molsPerRow parameter because MolsMatrixToGridImage automatically sets the number of molecules per row to the length of the longest row in molsMatrix. Other than that, and the per-molecule parameters having a more nested structure, MolsMatrixToGridImage can accept all the same parameters as MolsToGridImage: useSVG, returnPNG, and **kwargs such as drawOptions. Indeed, MolsMatrixToGridImage passes those three parameters to MolsToGridImage.\n\nRequirements for agreement of dimensions of per-molecule parameters\nmolsMatrix sets the dimensions, and any other supplied Matrix (per-molecule) parameters must match those dimensions. In the example in the table above, molsMatrix has two rows (sub-lists), so legendsMatrix, highlightAtomListsMatrix, and highlightBondListsMatrix (if supplied) must also have two rows. Also, because the first row (sub-list) of molsMatrix has two columns (elements), that must true for those three other parameters. And because the second row (sub-list) of molsMatrix has three columns (elements), that must true for those three other parameters.\n\n\nInserting blank cells\nFor blank cells at the end of a row, MolsMatrixToGridImage will automatically create them so that all rows have the same number of cells.\nFor blank cells in the middle of a row (when there is a molecule after the blank cell), you need to have a blank entry in the iterable. For molecules, this blank entry can either be None or a molecule with no atoms, for example using Chem.MolFromSmiles(\"\"). For legends, a blank cell can be \"\" (an empty string) but not None, which will give a type error. If you create molecules using Chem.MolFromSmiles(\"\"), or use those SMILES strings to create legends, entering an empty string will prevent type errors in both situations. For example, this works:\n\nsmilesMatrixEmptyString = [[\"FCl\", \"FCl\"], [\"FCl\", \"\", \"FCl\"]]\nmolsMatrixEmptyString = [[Chem.MolFromSmiles(smiles) for smiles in row] for row in smilesMatrixEmptyString]\nMolsMatrixToGridImage(molsMatrix=molsMatrixEmptyString, legendsMatrix=smilesMatrixEmptyString)\n\n\n\n\n\n\n\n\nWhereas this gives a type error because Chem.MolFromSmiles() needs a string as input:\n\nsmilesMatrixNone = [[\"FCl\", \"FCl\"], [\"FCl\", None, \"FCl\"]]\ntry:\n    molsMatrixNone = [[Chem.MolFromSmiles(smiles) for smiles in row] for row in smilesMatrixNone]\nexcept TypeError as e:\n    print(e)\n\nNo registered converter was able to produce a C++ rvalue of type std::__1::basic_string&lt;wchar_t, std::__1::char_traits&lt;wchar_t&gt;, std::__1::allocator&lt;wchar_t&gt;&gt; from this Python object of type NoneType\n\n\nas does this because of the None element in legendsMatrix:\n\ntry:\n    MolsMatrixToGridImage(molsMatrix=molsMatrixEmptyString, legendsMatrix=smilesMatrixNone)\nexcept TypeError as e:\n    print(e)\n\nNo registered converter was able to produce a C++ rvalue of type std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; from this Python object of type NoneType\n\n\n\n\nExample with all parameters\nHere is an example of supplying all parameters to MolsMatrixToGridImage.\n\nlegendsMatrix = [[\"no highlighting\", \"bond highlighted\"], [\"F highlighted\", \"\", \"Cl and bond highlighted\"]]\nhighlightAtomListsMatrix = [[[],[]], [[0], None, [1]]]\nhighlightBondListsMatrix = [[[],[0]], [[], None, [0]]]\n\n# Add atom indices to drawing\ndopts = rdMolDraw2D.MolDrawOptions()\ndopts.addAtomIndices = True\n\nMolsMatrixToGridImage(molsMatrix=molsMatrix, subImgSize=(200, 150), legendsMatrix=legendsMatrix, highlightAtomListsMatrix=highlightAtomListsMatrix, highlightBondListsMatrix=highlightBondListsMatrix, useSVG=False, returnPNG=False, drawOptions=dopts)\n\n\n\n\n\n\n\n\nHere is the same image created using MolsToGridImage:\n\nlegends = [\"no highlighting\", \"bond highlighted\", \"\", \"F highlighted\", \"\", \"Cl and bond highlighted\"]\nhighlightAtomLists = [[],[], None, [0], None, [1]]\nhighlightBondLists = [None,[0], [], [], None, [0]]\n\nMolsToGridImage(mols, molsPerRow=3, subImgSize=(200, 150), legends=legends, highlightAtomLists=highlightAtomLists, highlightBondLists=highlightBondLists, useSVG=False, returnPNG=False, drawOptions=dopts)"
  },
  {
    "objectID": "posts/2023-10-25-molsmatrixtogridimage.html#share-your-examples",
    "href": "posts/2023-10-25-molsmatrixtogridimage.html#share-your-examples",
    "title": "Plotting rows and columns of molecules with MolsMatrixToGridImage",
    "section": "Share your examples",
    "text": "Share your examples\nIf you use MolsMatrixToGridImage in a public project, please post a link in the comments below."
  },
  {
    "objectID": "posts/2020-03-30-setting-up-an-environment.html",
    "href": "posts/2020-03-30-setting-up-an-environment.html",
    "title": "Setting up an environment to make Python contributions to the RDKit",
    "section": "",
    "text": "Updated 28.11.2024\nIt has been tricky to contribute code or documentation to the RDKit if you’re a Python programmer who doesn’t want to deal with the complexities of getting an RDKit build working. We want to make it straightforward for people to contribute, so I’m working on some recipes to make thigs easier. This is an attempt at that.\nIn order to fix bugs or add features in Python you need to be able to clone a local fork of the RDKit from github, modify the code in that local clone, and then run the local code in order to test it. The problem is that most RDKit functionality requires some binary components that need to be built from C++ and installed in the appropriate places. We’re going to work around that problem here by copying the binary components from a recent binary distribution of the RDKit into a local clone of the RDKit repo.\nI’m going to explain each of the required steps, but the complete set of steps required is at the bottom of this post. Assuming that you have the prerequisites (explained directly below), I hope that these will “just work” for you, but one never knows… I’d like to be able to include this in the RDKit documentation, so please me know how it goes if you try the recipe out. Please do not add a comment to this blog post, I’ve created a github issue so that we have the comments in one place. If you don’t have a github account, please email me your comments and I’ll add them to the issue.\n\nThe steps explained\nThese instructions should work on linux, the Mac, and Windows. I’ve tried to indicate when there are differences between platforms. If I missed something, please let me know in the github issue.\nPrerequisites:\n\nyou need to have either anaconda python or miniconda installed and in your path\nyou need to have git installed and in your path\nOn Windows: these instructions assume that you are running in git bash (or some other capable bash-type shell). I’m sure you can do all of this in powershell, but I haven’t managed to figure that out.\n\nYou should start by changing into the directory where you want to clone the RDKit source repository and then running:\ngit clone --depth=1 https://github.com/rdkit/rdkit.git\nThat will clone the repo from github into a local directory called rdkit. We now change into that directory and use it to set our RDBASE environment variable:\ncd rdkit\nexport RDBASE=`pwd`\nThe next step is to create the conda environment that we’re going to use to hold the RDKit binary components and install the most recent version of the RDKit into that environment:\nconda create -y -n py312_rdkit_beta python=3.12\nconda activate py312_rdkit_beta\nconda install -y -c conda-forge rdkit pytest\nIf you have mamba installed, you can use that instead of conda in the create and install commands to have things run more quickly.\nThese instructions set up an environment using python 3.12; feel free to change that if you’d prefer another python version. You will need to adjust the path below. If you have other Python packages that you’d like to work with, go ahead and install them into the environment now.\nNext we copy the RDKit binary components from that environment into our local clone of the RDKit repo.\nOn Linux and the Mac you can do this as follows:\ncd $CONDA_PREFIX/lib/python3.12/site-packages/rdkit\nrsync -a -m --include '*/' --include='*.so' --include='inchi.py' --exclude='*' . $RDBASE/rdkit\nNOTE: that rsync command should be one long line.\nOn Windows that’s:\ncd $CONDA_PREFIX/lib/python3.12/site-packages/rdkit\nfind . -name '*.pyd' -exec cp --parents \\{\\} $RDBASE/rdkit \\; \ncp Chem/inchi.py $RDBASE/rdkit/Chem\nFinally we set our PYTHONPATH and then test that everything is working by importing the RDKit’s Chem module:\nexport PYTHONPATH=\"$RDBASE\"\ncd $RDBASE/rdkit\npython -c 'from rdkit import Chem;print(Chem.__file__)'\nThat last command should not generate errors and should show you a filename that is in your local github clone. As an example, I started the first step of this process in my /scratch/rdkit_devel directory, so I see:\n/scratch/rdkit_devel/rdkit/rdkit/Chem/__init__.py\nOn Windows I am working in my Code/rdkit_tmp directory, so I see:\nc:\\Users\\glandrum\\Code\\rdkit_tmp\\rdkit\\Chem\\__init__.py\n\n\nRunning the tests\nIf you’re planning on making an RDKit contribution, it’s important to know how to run the Python tests to make sure that your changes work and don’t break anything else. The RDKit uses pytest to run its python-based tests. For example, if you want to run all of the python tests you would do:\ncd $RDBASE/rdkit\npytest\nThat will take a while and generate a lot of output, including things that look like exceptions and errors, but should finish with something like:\n================================================== 715 passed, 15 skipped, 1 warning in 25.48s ==================================================\nIf you just want to run the tests for the rdkit.Chem module, you can do:\ncd $RDBASE/rdkit\npytest Chem\nFor more fine-grained control over which tests run, take a look at the pytest documentation.\n\n\nFinishing up\nYou’re set. The one thing to remember is that whenever you want to use this environment in a new terminal window or shell, you need to activate the py312_rdkit_beta conda environment (don’t delete it!), set RDBASE, and set your PYTHONPATH:\nconda activate py312_rdkit_beta\ncd your_local_rdkit_clone  # &lt;- replace this with the real name of the directory\nexport RDBASE=`pwd`\nexport PYTHONPATH=\"$RDBASE\"\n\n\nThe recipe\nHere’s the complete recipe for linux and the Mac:\ngit clone --depth=1 https://github.com/rdkit/rdkit.git\ncd rdkit\nexport RDBASE=`pwd`\nconda create -y -n py312_rdkit_beta python=3.12\nconda activate py312_rdkit_beta\nconda install -y -c conda-forge rdkit pytest\ncd $CONDA_PREFIX/lib/python3.12/site-packages/rdkit\nrsync -a -m --include '*/' --include='*.so' --include='inchi.py' --exclude='*' . $RDBASE/rdkit\nexport PYTHONPATH=\"$RDBASE\"\ncd $RDBASE/rdkit\npython -c 'from rdkit import Chem;print(Chem.__file__)'\nand for Windows:\ngit clone --depth=1 https://github.com/rdkit/rdkit.git\ncd rdkit\nexport RDBASE=`pwd`\nconda create -y -n py312_rdkit_beta python=3.12\nconda activate py312_rdkit_beta\nconda install -y -c conda-forge rdkit pytest\ncd $CONDA_PREFIX/lib/python3.12/site-packages/rdkit\nfind . -name '*.pyd' -exec cp --parents \\{\\} $RDBASE/rdkit \\; \ncp Chem/inchi.py $RDBASE/rdkit/Chem \nexport PYTHONPATH=\"$RDBASE\"\ncd $RDBASE/rdkit\npython -c 'from rdkit import Chem;print(Chem.__file__)'"
  },
  {
    "objectID": "posts/2021-05-26-similarity-threshold-observations1.html",
    "href": "posts/2021-05-26-similarity-threshold-observations1.html",
    "title": "Some observations about similarity search thresholds",
    "section": "",
    "text": "Updated 08.06.2021 after I expanded the set of “related compounds”. The source of the previous version of the post is available in github. The updates didn’t change the discussion that much.\n\nTL;DR\nBased on the analysis here it looks like the fingerprint the RDKit provides which does the best job of efficiently retrieving chemically similar structures is the RDKit fingerprint with maxPath set to 6.\n\n\nIntro / Results\nI recently did a post presenting an approach for finding reasonable thresholds for similarity searches using the fingerprints the RDKit provides. This is a followup to that one written after I’ve done some more looking at the data. I want to come up with a suggestion for which fingerprint to use for similarity searches when the goal is retrieving as many chemically related compounds as possible. I’ll do that by looking at search efficiency as measured by the fraction of the total database retrieved when using similarity thresholds sufficient to return 90-95% of the related compounds. See the earlier post for an explanation of what “related compounds” means here and how the searches were done.\nAs a reminder, this is how I presented the results in that post and how to interpret the data:\n\n\n\n\n\n\n\n0.95 of related compounds\n\n\n0.9 of related compounds\n\n\n0.8 of related compounds\n\n\n0.5 of related compounds\n\n\n\n\nFingerprint\n\n\n0.95 noise level\n\n\nthreshold\n\n\ndb fraction / count per million\n\n\nthreshold\n\n\ndb fraction / count per million\n\n\nthreshold\n\n\ndb fraction / count per million\n\n\nthreshold\n\n\ndb fraction / count per million\n\n\n\n\nMorgan2 (bits)\n\n\n0.27\n\n\n0.4\n\n\n0.00019 / 190\n\n\n0.4\n\n\n0.00019 / 190\n\n\n0.45\n\n\n0.00012 / 115\n\n\n0.55\n\n\n2.5e-05 / 25\n\n\n\nThe 0.95 noise level (from the previous analysis) for the MFP2 fingerprint is 0.27. If I want to retrieve 95% of the related compounds I need to set the similarity threshold to 0.4. With this threshold I would retrieve ~190 compounds per million compounds in the database (0.4% of the database). Similarly, if I were willing to live with finding 50% of the related actives I could set the search threshold to 0.55, in which case I’d only retrieve ~25 rows per million compounds in the database.\nI won’t reproduce the full results table from the post here, but here are the rows with the highest search efficiencies (lowest number of compounds returned from the “background database”) at 90% and 95% of related compounds found. I sorted the table by the efficiency at 90% of related compounds retrieved:\n\n\n\n\n\n\n\n0.95 of related compounds\n\n\n0.9 of related compounds\n\n\n0.8 of related compounds\n\n\n0.5 of related compounds\n\n\n\n\nFingerprint\n\n\n0.95 noise level\n\n\nthreshold\n\n\ndb fraction / count per million\n\n\nthreshold\n\n\ndb fraction / count per million\n\n\nthreshold\n\n\ndb fraction / count per million\n\n\nthreshold\n\n\ndb fraction / count per million\n\n\n\n\nRDKit 7 (bits)\n\n\n0.43\n\n\n0.55\n\n\n0.00051 / 510\n\n\n0.6\n\n\n8e-05 / 80\n\n\n0.6\n\n\n8e-05 / 80\n\n\n0.7\n\n\n3e-05 / 30\n\n\n\n\nTopological Torsions (counts)\n\n\n0.19\n\n\n0.35\n\n\n0.00049 / 489\n\n\n0.4\n\n\n0.00011 / 110\n\n\n0.45\n\n\n7.5e-05 / 75\n\n\n0.55\n\n\n2.5e-05 / 25\n\n\n\n\nlinear RDKit 7 (bits)\n\n\n0.26\n\n\n0.45\n\n\n0.00053 / 535\n\n\n0.5\n\n\n0.00013 / 130\n\n\n0.55\n\n\n9e-05 / 90\n\n\n0.65\n\n\n3.5e-05 / 35\n\n\n\n\nRDKit 6 (bits)\n\n\n0.31\n\n\n0.5\n\n\n0.00021 / 210\n\n\n0.55\n\n\n0.00014 / 135\n\n\n0.6\n\n\n6e-05 / 60\n\n\n0.7\n\n\n3e-05 / 30\n\n\n\n\nMorgan2 (counts)\n\n\n0.25\n\n\n0.4\n\n\n0.00014 / 140\n\n\n0.4\n\n\n0.00014 / 140\n\n\n0.45\n\n\n8.5e-05 / 84\n\n\n0.55\n\n\n2e-05 / 20\n\n\n\n\nAvalon 1024 (bits)\n\n\n0.37\n\n\n0.55\n\n\n0.00075 / 750\n\n\n0.6\n\n\n0.00014 / 140\n\n\n0.65\n\n\n9e-05 / 90\n\n\n0.75\n\n\n2.5e-05 / 25\n\n\n\n\nMorgan3 (counts)\n\n\n0.20\n\n\n0.3\n\n\n0.00026 / 260\n\n\n0.35\n\n\n0.00015 / 154\n\n\n0.35\n\n\n0.00015 / 154\n\n\n0.45\n\n\n3.5e-05 / 35\n\n\n\n\nRDKit 5 (bits)\n\n\n0.29\n\n\n0.5\n\n\n0.00025 / 250\n\n\n0.55\n\n\n0.00016 / 155\n\n\n0.6\n\n\n6e-05 / 60\n\n\n0.7\n\n\n3e-05 / 30\n\n\n\n\nTopological Torsions (bits)\n\n\n0.22\n\n\n0.4\n\n\n0.00016 / 160\n\n\n0.4\n\n\n0.00016 / 160\n\n\n0.45\n\n\n0.00011 / 105\n\n\n0.55\n\n\n3.5e-05 / 35\n\n\n\n\nMorgan2 (bits)\n\n\n0.27\n\n\n0.4\n\n\n0.00019 / 190\n\n\n0.4\n\n\n0.00019 / 190\n\n\n0.45\n\n\n0.00012 / 115\n\n\n0.55\n\n\n2.5e-05 / 25\n\n\n\n\nFeatMorgan3 (counts)\n\n\n0.28\n\n\n0.4\n\n\n0.00022 / 220\n\n\n0.4\n\n\n0.00022 / 220\n\n\n0.45\n\n\n0.00013 / 130\n\n\n0.55\n\n\n3e-05 / 30\n\n\n\n\nlinear RDKit 6 (bits)\n\n\n0.28\n\n\n0.5\n\n\n0.00022 / 220\n\n\n0.5\n\n\n0.00022 / 220\n\n\n0.55\n\n\n0.00014 / 140\n\n\n0.7\n\n\n3e-05 / 30\n\n\n\nThe threshold values are rounded to the nearest 0.05.\nI’ve included count-based fingerprints in the above table, but they wouldn’t be my first choice for use in a real-world similarity search application. Calculating similarity for count-based fingerprints is significantly slower than bit vector fingerprints, so they really aren’t practical for large datasets. Note that the RDKit has a method for approximating counts using bit vector fingerprints which is used by the Atom Pair and Topological Torsion fingeprints and could also be an option for the other fingerprint types, but that’s a topic for another post.\nBased on these numbers (and, of course, the dataset I used) it looks like the RDKit fingerprint is the optimal choice for chemical similarity search. Taking the efficiency at both 90% and 95% into account, the version of the fingerprint with maxPath=6 is arguably better than the version with maxPath=7 (which is the default). There’s not a publication for the RDKit fingerprint but it is described in detail in the RDKit documentation.\nThe Morgan3 fingerprint, which is what I kind of expected to be the best at this task, doesn’t do that well - the bit-vector based form didn’t even make this list of top performaers. The Morgan2 fingerprint, on the other hand, seems like another good choice. The Morgan fingerprints are the RDKit’s implementation of the circular fingerprints described in this publication.\nA real surprise to me was how well the topological torsions fingerprint does at this chemical search. I had (I guess without much evidence) thought of it as more of a fuzzy (or “scaffold-hopping”) fingerprint, but the high efficiency on this chemical search problem makes me reconsider that. Topological torsions were introduced in this publication.\nThe Avalon fingerprint seems to be another decent choice, at least at 90%. This isn’t surprising to me, but I’ll probably remain resistant to making heavy of it due to the complexity of the fingerprint itself. The only non-code description I’m aware of for the Avalon FP is in the supplementary material for this paper; it’s likely that the current version of the fingerprint, which was under active development for at least 10 years after that paper appeared, deviates from that.\nBefore getting any deeper into details with this kind of analysis, I think I would like to look into using more than 10K of the “related” molecules and increasing the size of the background database just to make sure the statistics are solid. I’ll do that in a separate post and leave the count-based fingerprints out."
  },
  {
    "objectID": "posts/2024-12-03-introducing-synthon-search.html",
    "href": "posts/2024-12-03-introducing-synthon-search.html",
    "title": "Introducing Synthon Searching",
    "section": "",
    "text": "Note this is a guest post written by Dave Cosgrove (GitHub: @DavidACosgrove).\nThere are a number of combinatorial libraries now available offering compounds made to order from a vast array of possibilities, such as Enamine’s REAL or ChemSpace’s FreedomSpace. The enumerated versions of these databases run to billions of compounds making them expensive and difficult to manage and search. Several groups have proposed algorithms for the rapid search of these libraries in synthon rather than enumerated form (e.g. Spacelight and Liphardt and Sander). This blogpost describes the implementation of substructure and similarity search methods based on the ideas in the latter.\nThe examples use the FreedomSpace 2023 library of some 9 billion compounds. The new module, available starting in the 2024.09.3 release, is rdSynthonSpaceSearch. Timings are from my Mac mini M4 Pro (very nice, you should get one!).\n\nObligatory new functionality disclaimer: this is completely new RDKit functionality and is still a bit experimental. The API and results may change over the next couple of releases as we do more testing and get more feedback from the community\n\n\nfrom rdkit import Chem\nfrom rdkit.Chem import rdSynthonSpaceSearch, rdFingerprintGenerator\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import rdMolDraw2D, rdDepictor\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom IPython.display import SVG\nfrom rdkit import rdBase\nimport time\n\nrdDepictor.SetPreferCoordGen(True)\nprint(rdBase.rdkitVersion)\n\n2024.09.3\n\n\nLoad the library and print some information about it.\n\nstart = time.perf_counter()\nsynthonspace = rdSynthonSpaceSearch.SynthonSpace()\nsynthonspace.ReadTextFile(\"/Users/david/Projects/FreedomSpace/2023-05_Freedom_synthons.txt\")\nprint(f\"Number of reactions : {synthonspace.GetNumReactions()}\")\nprint(f\"Number of products : {synthonspace.GetNumProducts()}\")\nprint(f\"Time to load : {time.perf_counter() - start:4.2f} seconds.\")\n\nNumber of reactions : 10\nNumber of products : 9360696185\nTime to load : 26.47 seconds.\n\n\nThere’s a binary format that loads much more quickly.\n\nsynthonspace.WriteDBFile(\"/Users/david/Projects/FreedomSpace/2023-05_Freedom_synthons.spc\")\nstart = time.perf_counter()\nsynthonspace.ReadDBFile(\"/Users/david/Projects/FreedomSpace/2023-05_Freedom_synthons.spc\")\nprint(f\"Time to load : {time.perf_counter() - start:4.2f} seconds.\")\n\nTime to load : 4.47 seconds.\n\n\nIf you want more information about the library:\n\nsynthonspace.Summarise()\n\nRead from file /Users/david/Projects/FreedomSpace/2023-05_Freedom_synthons.spc\nNumber of reactions : 10\nReaction name a1\n  Synthon set 0 has 18662 synthons\n  Synthon set 1 has 16838 synthons\nReaction name a2\n  Synthon set 0 has 18540 synthons\n  Synthon set 1 has 1503 synthons\nReaction name a3\n  Synthon set 0 has 492 synthons\n  Synthon set 1 has 4700 synthons\nReaction name a4\n  Synthon set 0 has 17547 synthons\n  Synthon set 1 has 4539 synthons\nReaction name a5\n  Synthon set 0 has 6420 synthons\n  Synthon set 1 has 810 synthons\nReaction name a6\n  Synthon set 0 has 5126 synthons\n  Synthon set 1 has 11636 synthons\nReaction name a7\n  Synthon set 0 has 320 synthons\n  Synthon set 1 has 1148 synthons\n  Synthon set 2 has 9608 synthons\nReaction name a77\n  Synthon set 0 has 80 synthons\n  Synthon set 1 has 5890 synthons\n  Synthon set 2 has 8366 synthons\nReaction name a8\n  Synthon set 0 has 10060 synthons\n  Synthon set 1 has 34 synthons\nReaction name a80\n  Synthon set 0 has 20 synthons\n  Synthon set 1 has 8366 synthons\n  Synthon set 2 has 8366 synthons\nApproximate number of molecules in SynthonSpace : 9360696185\n\n\n## Substructure Searching\n\nqmol = Chem.MolFromSmarts(\"c12ccc(C)cc1[nH]nc2C(=O)NCc1cncs1\")\nqmol\n\n\n\n\n\n\n\n\n\nstart = time.perf_counter()\nresults = synthonspace.SubstructureSearch(qmol)\nhits = results.GetHitMolecules()\nhit_names = [m.GetProp(\"_Name\") for m in hits]\nprint(f\"Time to search : {time.perf_counter() - start:4.2f} seconds.\")\nprint(f\"Number of hits : {len(hits)}\")\n\nTime to search : 0.33 seconds.\nNumber of hits : 108\n\n\n\nif hits:\n    img = Draw.MolsToGridImage(hits[:12], legends=hit_names[:12], molsPerRow=4)\nelse:\n    img = \"No Hits\"\nimg\n\n\n\n\n\n\n\n\nThe molecule names are made up of the reaction name and the synthons for that reaction. So the first hit above is made from synthons 2700 and 25231 and reaction a1.\nComplex SMARTS queries are supported, though can take a little longer to run. The maximum number of hits to be returned is capped at 1000 by default. You can obtain an upper bound on the maximum number of hits possible; there may be fewer hits than this in practice, as duplicate matches are counted but not returned and for other more subtle reasons.\n\nqmol = Chem.MolFromSmarts(\"c1c[n,s,o][n,s,o,c]c1C(=O)[$(N1CCCCC1),$(N1CCCC1)]\")\nqmol\n\n\n\n\n\n\n\n\n\nstart = time.perf_counter()\nresults = synthonspace.SubstructureSearch(qmol)\nhits = results.GetHitMolecules()\nhit_names = [m.GetProp(\"_Name\") for m in hits]\nprint(f\"Time to search : {time.perf_counter() - start:4.2f} seconds.\")\nprint(f\"Number of hits : {len(hits)}\")\nprint(f\"Maximum number of hits possible : {results.GetMaxNumResults}\")\n\nTime to search : 0.19 seconds.\nNumber of hits : 1000\nMaximum number of hits possible : 2358187\n\n\nYou can control the number of hits returned, and also get a random sample of the hits, rather than the first N in the list:\n\nparams = rdSynthonSpaceSearch.SynthonSpaceSearchParams()\nparams.maxHits = 12\nparams.randomSample = True\nstart = time.perf_counter()\nresults = synthonspace.SubstructureSearch(qmol, params)\nhits = results.GetHitMolecules()\nhit_names = [m.GetProp(\"_Name\") for m in hits]\nprint(f\"Time to search : {time.perf_counter() - start:4.2f} seconds.\")\nprint(f\"Number of hits : {len(hits)}\")\nprint(f\"Maximum number of hits possible : {results.GetMaxNumResults}\")\nDraw.MolsToGridImage(hits[:12], legends=hit_names[:12], molsPerRow=4)\n\nTime to search : 0.13 seconds.\nNumber of hits : 12\nMaximum number of hits possible : 2358187\n\n\n\n\n\n\n\n\n\nHaving looked at the first 1000 hits, you might want to get the next set in the list. Here we get the 1000 starting at 2000.\n\nparams = rdSynthonSpaceSearch.SynthonSpaceSearchParams()\nparams.maxHits = 1000\nparams.hitStart = 2000\nstart = time.perf_counter()\nresults = synthonspace.SubstructureSearch(qmol, params)\nhits = results.GetHitMolecules()\nhit_names = [m.GetProp(\"_Name\") for m in hits]\nprint(f\"Time to search : {time.perf_counter() - start:4.2f} seconds.\")\nprint(f\"Number of hits : {len(hits)}\")\nDraw.MolsToGridImage(hits[:12], legends=hit_names[:12], molsPerRow=4)\n\nTime to search : 0.19 seconds.\nNumber of hits : 1000\n\n\n\n\n\n\n\n\n\nIt is possible to check the upper bound on the number of hits without building them, just to get an idea of whether you need to refine the search or not.\n\nqmol = Chem.MolFromSmarts(\"c12ccc(C)cc1[nH]nc2C(=O)NCc1cncs1\")\nparams = rdSynthonSpaceSearch.SynthonSpaceSearchParams()\nparams.buildHits = False\nresults = synthonspace.SubstructureSearch(qmol, params)\nhits = results.GetHitMolecules()\nprint(f\"Number of hits : {len(hits)}\")\nprint(f\"Maximum number of hits possible : {results.GetMaxNumResults}\")\n\nNumber of hits : 0\nMaximum number of hits possible : 108\n\n\n## Similarity Searching Any of the RDKit fingerprint generators can be used, although the similarity metric is hard-coded as Tanimoto on a hashed fingerprint. The search structure is Osimertinib which is paying my pension so deserves acknowledgement. Similarity values are returned in the property “Similarity” on each molecule. If the binary file doesn’t contain fingerprints, they will need to be generated. This can be done ahead of time or it will be done as part of the first search.\n\nfpgen = rdFingerprintGenerator.GetRDKitFPGenerator(fpSize=2048)\nsynthonspace.BuildSynthonFingerprints(fpgen)\nqmol = Chem.MolFromSmiles(\"C=CC(=O)Nc1cc(Nc2nccc(-c3cn(C)c4ccccc34)n2)c(OC)cc1N(C)CCN(C)C\")\nqmol\n\n[11:01:56] Building the fingerprints may take some time.\n\n\n\n\n\n\n\n\n\n\nstart = time.perf_counter()\nresults = synthonspace.FingerprintSearch(qmol, fpgen)\nhits = results.GetHitMolecules()\nhit_names = [f'{m.GetProp(\"_Name\")} : {float(m.GetProp(\"Similarity\")):4.2f}' for m in hits]\nprint(f\"Time to search : {time.perf_counter() - start:4.2f} seconds.\")\nprint(f\"Number of hits : {len(hits)}\")\nprint(f\"Maximum number of hits possible : {results.GetMaxNumResults}\")\nDraw.MolsToGridImage(hits[:12], legends=hit_names[:12], molsPerRow=4)\n\nTime to search : 20.29 seconds.\nNumber of hits : 1000\nMaximum number of hits possible : 35911098\n\n\n\n\n\n\n\n\n\nThe extra runtime is due to 2 factors. The first is that osimertinib is a largish molecule, so many fragments are generated that all need to be compared with the synthons. The second is that the screenout by fingerprint is less efficient, as you can see from the fact that 35911098 hits were possible having passed the initial fragment screening, although many of those won’t make the similarity cutoff when the potential hit molecule is built and checked.\nThe similarity cutoff can be raised from the default 0.5 however this can result in large search times if there are few hits that meet the threshold - it may have to check all 35911098 potential hits. Note that in the search below we take a random sample of the results, so the hits are not the same as above.\n\nparams = rdSynthonSpaceSearch.SynthonSpaceSearchParams()\nparams.maxHits = 12\nparams.randomSample = True\nparams.similarityCutoff = 0.55\nstart = time.perf_counter()\nresults = synthonspace.FingerprintSearch(qmol, fpgen, params)\nhits = results.GetHitMolecules()\nhit_names = [f'{m.GetProp(\"_Name\")} : {float(m.GetProp(\"Similarity\")):4.2f}' for m in hits]\nprint(f\"Time to search : {time.perf_counter() - start:4.2f} seconds.\")\nprint(f\"Number of hits : {len(hits)}\")\nprint(f\"Maximum number of hits possible : {results.GetMaxNumResults}\")\nDraw.MolsToGridImage(hits[:12], legends=hit_names[:12], molsPerRow=4)\n\nTime to search : 15.84 seconds.\nNumber of hits : 12\nMaximum number of hits possible : 3925204\n\n\n\n\n\n\n\n\n\nTanimoto similarities between small molecules with sparsely populated fingerprints are known to be be lower and more granular than similiarties for larger entities. This is relevant because the search starts by comparing fragments from the query molecule with synthons in the database. Only synthons that match the fragment within the cutoff are considered as a basis for a hit. There is a parameter that lowers the similarity cutoff for the fragment comparison compared to the global cutoff, which defaults to 0.1. Thus, if your similarityCutoff is set to 0.5, synthons are considered a match to a fragment if their Tanimoto similarities are above 0.4. If you want a faster search and don’t mind possibly missing some hits, you can lower that difference.\n\nparams = rdSynthonSpaceSearch.SynthonSpaceSearchParams()\nparams.maxHits = 12\nparams.randomSample = True\nparams.similarityCutoff = 0.5\nparams.fragSimilarityAdjuster = 0.0\nstart = time.perf_counter()\nresults = synthonspace.FingerprintSearch(qmol, fpgen, params)\nhits = results.GetHitMolecules()\nhit_names = [f'{m.GetProp(\"_Name\")} : {float(m.GetProp(\"Similarity\")):4.2f}' for m in hits]\nprint(f\"Time to search : {time.perf_counter() - start:4.2f} seconds.\")\nprint(f\"Number of hits : {len(hits)}\")\nprint(f\"Maximum number of hits possible : {results.GetMaxNumResults}\")\nDraw.MolsToGridImage(hits[:12], legends=hit_names[:12], molsPerRow=4)\n\nTime to search : 15.74 seconds.\nNumber of hits : 12\nMaximum number of hits possible : 690134\n\n\n\n\n\n\n\n\n\nAs you can see, the potential number of hits it had to check went down to 690134.\n\n\nIn order to use this functionality, you obviously need access to a synthon description of the space you want to search. Due to the size of the files, we don’t include a space description with the RDKit itself, so you need to get the data elsewhere.\nChemSpace’s FreedomSpace 3.0 and Enamine’s REAL are available on request via the links above. If you just want to experiment then there are small test spaces here. The Syntons_5567.csv file is a substantial random extract from the FreedomSpace 2023 library.\nWe don’t currently know of any others, but we will update this post as if/when we learn about more. Please leave a comment or get in touch some other way if you have a space you want to share. If you work with a provider of make-on-demand libraries or DELs, ask them if they can provide their libraries in synthon form, and we will add the link above. I (Dave) can work with providers on getting the data in the appropriate format.\n\n\n\nThanks to Greg for pointing me (Dave) at the problem and providing valuable insight and discussions.\nThanks are also due to Olga Tarkhanova and colleagues at ChemSpace for providing the FreedomSpace 2023 library in synthon and enumerated forms for me to use during development and testing, and also to Yurii Moroz at Enamine for help and discussions."
  },
  {
    "objectID": "posts/2024-12-03-introducing-synthon-search.html#working-with-synthon-spaces-yourself",
    "href": "posts/2024-12-03-introducing-synthon-search.html#working-with-synthon-spaces-yourself",
    "title": "Introducing Synthon Searching",
    "section": "",
    "text": "In order to use this functionality, you obviously need access to a synthon description of the space you want to search. Due to the size of the files, we don’t include a space description with the RDKit itself, so you need to get the data elsewhere.\nChemSpace’s FreedomSpace 3.0 and Enamine’s REAL are available on request via the links above. If you just want to experiment then there are small test spaces here. The Syntons_5567.csv file is a substantial random extract from the FreedomSpace 2023 library.\nWe don’t currently know of any others, but we will update this post as if/when we learn about more. Please leave a comment or get in touch some other way if you have a space you want to share. If you work with a provider of make-on-demand libraries or DELs, ask them if they can provide their libraries in synthon form, and we will add the link above. I (Dave) can work with providers on getting the data in the appropriate format."
  },
  {
    "objectID": "posts/2024-12-03-introducing-synthon-search.html#acknowledgements",
    "href": "posts/2024-12-03-introducing-synthon-search.html#acknowledgements",
    "title": "Introducing Synthon Searching",
    "section": "",
    "text": "Thanks to Greg for pointing me (Dave) at the problem and providing valuable insight and discussions.\nThanks are also due to Olga Tarkhanova and colleagues at ChemSpace for providing the FreedomSpace 2023 library in synthon and enumerated forms for me to use during development and testing, and also to Yurii Moroz at Enamine for help and discussions."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "RDKit experiments, tips, and tutorials",
    "section": "",
    "text": "The primary author of this blog is Greg Landrum.\nThe repo with the original Jupyter notebooks and data for this blog is here\nThe hub for information about the RDKit is rdkit.org\nIf you’re an Anaconda Python user, installing the RDKit is as simple as conda install -c conda-forge rdkit\nYou can also install the RDKit from PyPi: pip install rdkit-pypi\n \n  \n   \n  \n    \n     @rdkit_org\n  \n  \n    \n     RDKit group on linkedin\n  \n  \n    \n     Github\n  \n\n\n\nProfessional support and services for the RDKit are provided by T5 Informatics GmbH.\nContact us if you are interested in RDKit support."
  },
  {
    "objectID": "posts/2022-12-23-descriptor-tutorial.html",
    "href": "posts/2022-12-23-descriptor-tutorial.html",
    "title": "Descriptor calculation tutorial",
    "section": "",
    "text": "A question asked on Mastodon made me realize that we don’t have a tutorial anywhere on descriptor calculation. Here’s a first pass at doing that. This will eventually end up in the RDKit documentation\nStart by doing the usual imports\n\nfrom rdkit import Chem\nimport rdkit\nrdkit.__version__\n\n'2022.09.1'\n\n\nA test molecule:\n\ndoravirine = Chem.MolFromSmiles('Cn1c(n[nH]c1=O)Cn2ccc(c(c2=O)Oc3cc(cc(c3)Cl)C#N)C(F)(F)F')\ndoravirine\n\n\n\n\n\n\n\n\nThe Descriptors module has a list of the available descriptors. The list is made of (name, function) 2-tuples:\n\nfrom rdkit.Chem import Descriptors\nprint(len(Descriptors._descList))\nprint(Descriptors._descList[:5])\n\n208\n[('MaxEStateIndex', &lt;function MaxEStateIndex at 0x7fe4a4f2d1f0&gt;), ('MinEStateIndex', &lt;function MinEStateIndex at 0x7fe4a4f2d280&gt;), ('MaxAbsEStateIndex', &lt;function MaxAbsEStateIndex at 0x7fe4a4f2d310&gt;), ('MinAbsEStateIndex', &lt;function MinAbsEStateIndex at 0x7fe4a4f2d3a0&gt;), ('qed', &lt;function qed at 0x7fe4a4e2e3a0&gt;)]\n\n\nWe can use those functions to directly calculate the corresponding descriptor. So, for example, the value of MaxEStateIndex for doravirine is:\n\nDescriptors._descList[0][1](doravirine)\n\n13.412553309006833\n\n\nAs an aside, if we just want a few named descriptors, it’s a lot clearer (and easier to write the code!) if we call the individual descriptor functions directly:\n\nDescriptors.MaxEStateIndex(doravirine)\n\n13.412553309006833\n\n\nOften we want to calculate all the descriptors. As of the 2022.09 release of the rdkit there’s no real convenience function for descriptor calculation, so let’s create one:\n\ndef getMolDescriptors(mol, missingVal=None):\n    ''' calculate the full list of descriptors for a molecule\n    \n        missingVal is used if the descriptor cannot be calculated\n    '''\n    res = {}\n    for nm,fn in Descriptors._descList:\n        # some of the descriptor fucntions can throw errors if they fail, catch those here:\n        try:\n            val = fn(mol)\n        except:\n            # print the error message:\n            import traceback\n            traceback.print_exc()\n            # and set the descriptor value to whatever missingVal is\n            val = missingVal\n        res[nm] = val\n    return res\n        \n\n\ngetMolDescriptors(doravirine)\n\n{'MaxEStateIndex': 13.412553309006833,\n 'MinEStateIndex': -4.871620672188628,\n 'MaxAbsEStateIndex': 13.412553309006833,\n 'MinAbsEStateIndex': 0.045220418860841605,\n 'qed': 0.6914051268589834,\n 'MolWt': 425.754,\n 'HeavyAtomMolWt': 414.66600000000005,\n 'ExactMolWt': 425.050251552,\n 'NumValenceElectrons': 150,\n 'NumRadicalElectrons': 0,\n 'MaxPartialCharge': 0.4197525104273902,\n 'MinPartialCharge': -0.45079941098947357,\n 'MaxAbsPartialCharge': 0.45079941098947357,\n 'MinAbsPartialCharge': 0.4197525104273902,\n 'FpDensityMorgan1': 1.3103448275862069,\n 'FpDensityMorgan2': 2.0344827586206895,\n 'FpDensityMorgan3': 2.6206896551724137,\n 'BCUT2D_MWHI': 35.495691906445956,\n 'BCUT2D_MWLOW': 10.182401353178228,\n 'BCUT2D_CHGHI': 2.363442602497932,\n 'BCUT2D_CHGLO': -2.1532454345808123,\n 'BCUT2D_LOGPHI': 2.362094239067197,\n 'BCUT2D_LOGPLOW': -2.2620565247489415,\n 'BCUT2D_MRHI': 6.30376236817795,\n 'BCUT2D_MRLOW': -0.13831572005086737,\n 'BalabanJ': 2.1143058157682066,\n 'BertzCT': 1236.821427505276,\n 'Chi0': 21.344570503761737,\n 'Chi0n': 14.619315272563007,\n 'Chi0v': 15.375244218581463,\n 'Chi1': 13.595574016164479,\n 'Chi1n': 7.8933192308003095,\n 'Chi1v': 8.271283703809537,\n 'Chi2n': 5.882827756329733,\n 'Chi2v': 6.319263536801718,\n 'Chi3n': 3.9307609940961763,\n 'Chi3v': 4.148978884332168,\n 'Chi4n': 2.4772835642835087,\n 'Chi4v': 2.7023697348309867,\n 'HallKierAlpha': -3.519999999999999,\n 'Ipc': 2291995.915536308,\n 'Kappa1': 20.220355828454835,\n 'Kappa2': 7.4789147435283585,\n 'Kappa3': 4.168020338062062,\n 'LabuteASA': 164.8909024413842,\n 'PEOE_VSA1': 9.303962601591405,\n 'PEOE_VSA10': 11.3129633249809,\n 'PEOE_VSA11': 5.824404497999927,\n 'PEOE_VSA12': 5.749511833283905,\n 'PEOE_VSA13': 5.559266895052007,\n 'PEOE_VSA14': 11.86604191564695,\n 'PEOE_VSA2': 9.361636831863176,\n 'PEOE_VSA3': 9.893218992372859,\n 'PEOE_VSA4': 23.531818506063985,\n 'PEOE_VSA5': 0.0,\n 'PEOE_VSA6': 11.600939890232516,\n 'PEOE_VSA7': 24.26546827384644,\n 'PEOE_VSA8': 18.267148868031594,\n 'PEOE_VSA9': 18.177429210401844,\n 'SMR_VSA1': 17.908108096824506,\n 'SMR_VSA10': 11.600939890232516,\n 'SMR_VSA2': 5.261891554738487,\n 'SMR_VSA3': 19.331562912184786,\n 'SMR_VSA4': 7.04767198267719,\n 'SMR_VSA5': 12.72105492335605,\n 'SMR_VSA6': 0.0,\n 'SMR_VSA7': 73.27433730199388,\n 'SMR_VSA8': 0.0,\n 'SMR_VSA9': 17.568244979360085,\n 'SlogP_VSA1': 15.98587324705553,\n 'SlogP_VSA10': 13.171245143024459,\n 'SlogP_VSA11': 11.49902366656781,\n 'SlogP_VSA12': 11.600939890232516,\n 'SlogP_VSA2': 19.331562912184786,\n 'SlogP_VSA3': 19.76872690603324,\n 'SlogP_VSA4': 11.33111286753076,\n 'SlogP_VSA5': 16.95130748139392,\n 'SlogP_VSA6': 40.05138621360316,\n 'SlogP_VSA7': 5.022633313741326,\n 'SlogP_VSA8': 0.0,\n 'SlogP_VSA9': 0.0,\n 'TPSA': 105.70000000000002,\n 'EState_VSA1': 28.738272135679853,\n 'EState_VSA10': 22.760319511168106,\n 'EState_VSA11': 0.0,\n 'EState_VSA2': 28.704757542634727,\n 'EState_VSA3': 6.06636706846161,\n 'EState_VSA4': 21.397409935657397,\n 'EState_VSA5': 19.18040611960041,\n 'EState_VSA6': 6.069221312792274,\n 'EState_VSA7': 0.0,\n 'EState_VSA8': 10.197363616602075,\n 'EState_VSA9': 21.599694398771053,\n 'VSA_EState1': 47.48050639865553,\n 'VSA_EState10': 5.842061004535676,\n 'VSA_EState2': 24.16343117595945,\n 'VSA_EState3': 14.921853617262808,\n 'VSA_EState4': -2.8980189732872814,\n 'VSA_EState5': -1.0781549918202147,\n 'VSA_EState6': 6.092225491490601,\n 'VSA_EState7': -3.945179835565914,\n 'VSA_EState8': -0.2762282865821226,\n 'VSA_EState9': 1.3919488437959202,\n 'FractionCSP3': 0.17647058823529413,\n 'HeavyAtomCount': 29,\n 'NHOHCount': 1,\n 'NOCount': 8,\n 'NumAliphaticCarbocycles': 0,\n 'NumAliphaticHeterocycles': 0,\n 'NumAliphaticRings': 0,\n 'NumAromaticCarbocycles': 1,\n 'NumAromaticHeterocycles': 2,\n 'NumAromaticRings': 3,\n 'NumHAcceptors': 7,\n 'NumHDonors': 1,\n 'NumHeteroatoms': 12,\n 'NumRotatableBonds': 4,\n 'NumSaturatedCarbocycles': 0,\n 'NumSaturatedHeterocycles': 0,\n 'NumSaturatedRings': 0,\n 'RingCount': 3,\n 'MolLogP': 2.65458,\n 'MolMR': 94.87570000000002,\n 'fr_Al_COO': 0,\n 'fr_Al_OH': 0,\n 'fr_Al_OH_noTert': 0,\n 'fr_ArN': 0,\n 'fr_Ar_COO': 0,\n 'fr_Ar_N': 4,\n 'fr_Ar_NH': 1,\n 'fr_Ar_OH': 0,\n 'fr_COO': 0,\n 'fr_COO2': 0,\n 'fr_C_O': 0,\n 'fr_C_O_noCOO': 0,\n 'fr_C_S': 0,\n 'fr_HOCCN': 0,\n 'fr_Imine': 0,\n 'fr_NH0': 4,\n 'fr_NH1': 1,\n 'fr_NH2': 0,\n 'fr_N_O': 0,\n 'fr_Ndealkylation1': 0,\n 'fr_Ndealkylation2': 0,\n 'fr_Nhpyrrole': 1,\n 'fr_SH': 0,\n 'fr_aldehyde': 0,\n 'fr_alkyl_carbamate': 0,\n 'fr_alkyl_halide': 3,\n 'fr_allylic_oxid': 0,\n 'fr_amide': 0,\n 'fr_amidine': 0,\n 'fr_aniline': 0,\n 'fr_aryl_methyl': 0,\n 'fr_azide': 0,\n 'fr_azo': 0,\n 'fr_barbitur': 0,\n 'fr_benzene': 1,\n 'fr_benzodiazepine': 0,\n 'fr_bicyclic': 0,\n 'fr_diazo': 0,\n 'fr_dihydropyridine': 0,\n 'fr_epoxide': 0,\n 'fr_ester': 0,\n 'fr_ether': 1,\n 'fr_furan': 0,\n 'fr_guanido': 0,\n 'fr_halogen': 4,\n 'fr_hdrzine': 0,\n 'fr_hdrzone': 0,\n 'fr_imidazole': 0,\n 'fr_imide': 0,\n 'fr_isocyan': 0,\n 'fr_isothiocyan': 0,\n 'fr_ketone': 0,\n 'fr_ketone_Topliss': 0,\n 'fr_lactam': 0,\n 'fr_lactone': 0,\n 'fr_methoxy': 0,\n 'fr_morpholine': 0,\n 'fr_nitrile': 1,\n 'fr_nitro': 0,\n 'fr_nitro_arom': 0,\n 'fr_nitro_arom_nonortho': 0,\n 'fr_nitroso': 0,\n 'fr_oxazole': 0,\n 'fr_oxime': 0,\n 'fr_para_hydroxylation': 0,\n 'fr_phenol': 0,\n 'fr_phenol_noOrthoHbond': 0,\n 'fr_phos_acid': 0,\n 'fr_phos_ester': 0,\n 'fr_piperdine': 0,\n 'fr_piperzine': 0,\n 'fr_priamide': 0,\n 'fr_prisulfonamd': 0,\n 'fr_pyridine': 1,\n 'fr_quatN': 0,\n 'fr_sulfide': 0,\n 'fr_sulfonamd': 0,\n 'fr_sulfone': 0,\n 'fr_term_acetylene': 0,\n 'fr_tetrazole': 0,\n 'fr_thiazole': 0,\n 'fr_thiocyan': 0,\n 'fr_thiophene': 0,\n 'fr_unbrch_alkane': 0,\n 'fr_urea': 0}\n\n\nSuppose I want to generate the full set of descriptors for a bunch of molecules…\n\n!head ../data/herg_data.txt\n\ncanonical_smiles molregno activity_id standard_value standard_units\nN[C@@H]([C@@H]1CC[C@H](CC1)NS(=O)(=O)c2ccc(F)cc2F)C(=O)N3CC[C@H](F)C3 29272 671631 49000 nM\nN[C@@H](C1CCCCC1)C(=O)N2CCSC2 29758 674222 28000 nM\nN[C@@H]([C@@H]1CC[C@H](CC1)NC(=O)c2ccc(F)c(F)c2)C(=O)N3CCSC3 29449 675583 5900 nM\nN[C@@H]([C@@H]1CC[C@H](CC1)NS(=O)(=O)c2ccc(F)cc2F)C(=O)N3CCCC3 29244 675588 35000 nM\nN[C@@H]([C@@H]1CC[C@H](CC1)NS(=O)(=O)c2ccc(OC(F)(F)F)cc2)C(=O)N3CC[C@@H](F)C3 29265 679299 6000 nM\nN[C@@H]([C@@H]1CC[C@H](CC1)NS(=O)(=O)c2ccc(F)cc2F)C(=O)N3CC[C@@H](F)C3 29253 679302 52000 nM\nN[C@@H]([C@@H]1CC[C@H](CC1)NC(=O)c2ccc(F)c(F)c2)C(=O)N3CCCC3 29482 683566 29000 nM\nN[C@@H]([C@@H]1CC[C@H](CC1)NC(=O)c2ccccc2C(F)(F)F)C(=O)N3CCSC3 29340 685042 39000 nM\nN[C@@H]([C@@H]1CC[C@H](CC1)NC(=O)OCc2ccccc2)C(=O)N3CC[C@@H](F)C3 29213 685047 43000 nM\n\n\nWe can read in all the molecules using a “Supplier” object, there’s more about this in the documentation\n\nsuppl = Chem.SmilesMolSupplier('../data/herg_data.txt')\nmols = [m for m in suppl]\nlen(mols)\n\n1090\n\n\nNow calculate the descriptors. This takes a bit (10-20 seconds on my machine) for the ~1100 molecules I read in.\n\nallDescrs = [getMolDescriptors(m) for m in mols]\n\nThe problem here is that we have a list of dictionaries… that’s not useful for most things. Let’s convert it to a pandas dataframe:\n\nimport pandas as pd\ndf = pd.DataFrame(allDescrs)\ndf.head()\n\n\n\n\n\n\n\n\nMaxEStateIndex\nMinEStateIndex\nMaxAbsEStateIndex\nMinAbsEStateIndex\nqed\nMolWt\nHeavyAtomMolWt\nExactMolWt\nNumValenceElectrons\nNumRadicalElectrons\n...\nfr_sulfide\nfr_sulfonamd\nfr_sulfone\nfr_term_acetylene\nfr_tetrazole\nfr_thiazole\nfr_thiocyan\nfr_thiophene\nfr_unbrch_alkane\nfr_urea\n\n\n\n\n0\n13.787943\n-4.120373\n13.787943\n0.074317\n0.759946\n419.469\n395.277\n419.149047\n156\n0\n...\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n1\n12.032152\n-0.232407\n12.032152\n0.186944\n0.777429\n228.361\n208.201\n228.129634\n86\n0\n...\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n2\n13.255664\n-1.036185\n13.255664\n0.017845\n0.835147\n383.464\n360.280\n383.147904\n142\n0\n...\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n3\n13.787093\n-4.072560\n13.787093\n0.015196\n0.786287\n401.479\n376.279\n401.158469\n150\n0\n...\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n4\n13.326286\n-4.859254\n13.326286\n0.063966\n0.625645\n467.485\n442.285\n467.150190\n174\n0\n...\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n\n\n5 rows × 208 columns\n\n\n\nAnd now we have something that we could use to build models, filter, etc."
  },
  {
    "objectID": "posts/2023-05-03-new-release-highlights.html",
    "href": "posts/2023-05-03-new-release-highlights.html",
    "title": "New stuff from the 2023.03 RDKit release",
    "section": "",
    "text": "The 2023.03 RDKit release contains the usual long list of enhancements and bug fixes. The list in the release notes is too long to cover in detail but, as usual, I wanted to do a post with a few things that I think are highlights.\n\nfrom rdkit import Chem\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit.Chem import Draw\nimport rdkit\nprint(rdkit.__version__)\n\n2023.03.1\n\n\n\nMaking it easy to calculate all 2D descriptors\nThere used to be a bit of a dance required in order to calculate all of the 2D descriptors. We’ve cleared that up in this release by adding a single function Descriptors.CalcMolDescriptors() which does the work.\nThis is embarassingly simple to demonstrate:\n\ndoravirine = Chem.MolFromSmiles('Cn1c(n[nH]c1=O)Cn2ccc(c(c2=O)Oc3cc(cc(c3)Cl)C#N)C(F)(F)F')\ndoravirine\n\n\n\n\n\n\n\n\n\nfrom rdkit.Chem import Descriptors\ndescrs = Descriptors.CalcMolDescriptors(doravirine)\ndescrs\n\n{'MaxAbsEStateIndex': 13.412553309006833,\n 'MaxEStateIndex': 13.412553309006833,\n 'MinAbsEStateIndex': 0.045220418860841605,\n 'MinEStateIndex': -4.871620672188628,\n 'qed': 0.6914051268589834,\n 'MolWt': 425.754,\n 'HeavyAtomMolWt': 414.66600000000005,\n 'ExactMolWt': 425.050251552,\n 'NumValenceElectrons': 150,\n 'NumRadicalElectrons': 0,\n 'MaxPartialCharge': 0.4197525104273902,\n 'MinPartialCharge': -0.45079941098947357,\n 'MaxAbsPartialCharge': 0.45079941098947357,\n 'MinAbsPartialCharge': 0.4197525104273902,\n 'FpDensityMorgan1': 1.3103448275862069,\n 'FpDensityMorgan2': 2.0344827586206895,\n 'FpDensityMorgan3': 2.6206896551724137,\n 'BCUT2D_MWHI': 35.495691906445956,\n 'BCUT2D_MWLOW': 10.182401353178228,\n 'BCUT2D_CHGHI': 2.363442602497932,\n 'BCUT2D_CHGLO': -2.1532454345808123,\n 'BCUT2D_LOGPHI': 2.362094239067197,\n 'BCUT2D_LOGPLOW': -2.2620565247489415,\n 'BCUT2D_MRHI': 6.30376236817795,\n 'BCUT2D_MRLOW': -0.13831572005086737,\n 'AvgIpc': 2.951845570725043,\n 'BalabanJ': 2.1143058157682066,\n 'BertzCT': 1236.821427505276,\n 'Chi0': 21.344570503761737,\n 'Chi0n': 14.619315272563007,\n 'Chi0v': 15.375244218581463,\n 'Chi1': 13.595574016164479,\n 'Chi1n': 7.8933192308003095,\n 'Chi1v': 8.271283703809537,\n 'Chi2n': 5.882827756329733,\n 'Chi2v': 6.319263536801718,\n 'Chi3n': 3.9307609940961763,\n 'Chi3v': 4.148978884332168,\n 'Chi4n': 2.4772835642835087,\n 'Chi4v': 2.7023697348309867,\n 'HallKierAlpha': -3.519999999999999,\n 'Ipc': 2291995.915536308,\n 'Kappa1': 20.220355828454835,\n 'Kappa2': 7.4789147435283585,\n 'Kappa3': 4.168020338062062,\n 'LabuteASA': 164.8909024413842,\n 'PEOE_VSA1': 9.303962601591405,\n 'PEOE_VSA10': 11.3129633249809,\n 'PEOE_VSA11': 5.824404497999927,\n 'PEOE_VSA12': 5.749511833283905,\n 'PEOE_VSA13': 5.559266895052007,\n 'PEOE_VSA14': 11.86604191564695,\n 'PEOE_VSA2': 9.361636831863176,\n 'PEOE_VSA3': 9.893218992372859,\n 'PEOE_VSA4': 23.531818506063985,\n 'PEOE_VSA5': 0.0,\n 'PEOE_VSA6': 11.600939890232516,\n 'PEOE_VSA7': 24.26546827384644,\n 'PEOE_VSA8': 18.267148868031594,\n 'PEOE_VSA9': 18.177429210401844,\n 'SMR_VSA1': 17.908108096824506,\n 'SMR_VSA10': 11.600939890232516,\n 'SMR_VSA2': 5.261891554738487,\n 'SMR_VSA3': 19.331562912184786,\n 'SMR_VSA4': 7.04767198267719,\n 'SMR_VSA5': 12.72105492335605,\n 'SMR_VSA6': 0.0,\n 'SMR_VSA7': 73.27433730199388,\n 'SMR_VSA8': 0.0,\n 'SMR_VSA9': 17.568244979360085,\n 'SlogP_VSA1': 15.98587324705553,\n 'SlogP_VSA10': 13.171245143024459,\n 'SlogP_VSA11': 11.49902366656781,\n 'SlogP_VSA12': 11.600939890232516,\n 'SlogP_VSA2': 19.331562912184786,\n 'SlogP_VSA3': 19.76872690603324,\n 'SlogP_VSA4': 11.33111286753076,\n 'SlogP_VSA5': 16.95130748139392,\n 'SlogP_VSA6': 40.05138621360316,\n 'SlogP_VSA7': 5.022633313741326,\n 'SlogP_VSA8': 0.0,\n 'SlogP_VSA9': 0.0,\n 'TPSA': 105.70000000000002,\n 'EState_VSA1': 28.738272135679853,\n 'EState_VSA10': 22.760319511168106,\n 'EState_VSA11': 0.0,\n 'EState_VSA2': 28.704757542634727,\n 'EState_VSA3': 6.06636706846161,\n 'EState_VSA4': 21.397409935657397,\n 'EState_VSA5': 19.18040611960041,\n 'EState_VSA6': 6.069221312792274,\n 'EState_VSA7': 0.0,\n 'EState_VSA8': 10.197363616602075,\n 'EState_VSA9': 21.599694398771053,\n 'VSA_EState1': 47.48050639865553,\n 'VSA_EState10': 5.842061004535676,\n 'VSA_EState2': 24.16343117595945,\n 'VSA_EState3': 14.921853617262808,\n 'VSA_EState4': -2.8980189732872814,\n 'VSA_EState5': -1.0781549918202147,\n 'VSA_EState6': 6.092225491490601,\n 'VSA_EState7': -3.945179835565914,\n 'VSA_EState8': -0.2762282865821226,\n 'VSA_EState9': 1.3919488437959202,\n 'FractionCSP3': 0.17647058823529413,\n 'HeavyAtomCount': 29,\n 'NHOHCount': 1,\n 'NOCount': 8,\n 'NumAliphaticCarbocycles': 0,\n 'NumAliphaticHeterocycles': 0,\n 'NumAliphaticRings': 0,\n 'NumAromaticCarbocycles': 1,\n 'NumAromaticHeterocycles': 2,\n 'NumAromaticRings': 3,\n 'NumHAcceptors': 7,\n 'NumHDonors': 1,\n 'NumHeteroatoms': 12,\n 'NumRotatableBonds': 4,\n 'NumSaturatedCarbocycles': 0,\n 'NumSaturatedHeterocycles': 0,\n 'NumSaturatedRings': 0,\n 'RingCount': 3,\n 'MolLogP': 2.65458,\n 'MolMR': 94.87570000000002,\n 'fr_Al_COO': 0,\n 'fr_Al_OH': 0,\n 'fr_Al_OH_noTert': 0,\n 'fr_ArN': 0,\n 'fr_Ar_COO': 0,\n 'fr_Ar_N': 4,\n 'fr_Ar_NH': 1,\n 'fr_Ar_OH': 0,\n 'fr_COO': 0,\n 'fr_COO2': 0,\n 'fr_C_O': 0,\n 'fr_C_O_noCOO': 0,\n 'fr_C_S': 0,\n 'fr_HOCCN': 0,\n 'fr_Imine': 0,\n 'fr_NH0': 4,\n 'fr_NH1': 1,\n 'fr_NH2': 0,\n 'fr_N_O': 0,\n 'fr_Ndealkylation1': 0,\n 'fr_Ndealkylation2': 0,\n 'fr_Nhpyrrole': 1,\n 'fr_SH': 0,\n 'fr_aldehyde': 0,\n 'fr_alkyl_carbamate': 0,\n 'fr_alkyl_halide': 3,\n 'fr_allylic_oxid': 0,\n 'fr_amide': 0,\n 'fr_amidine': 0,\n 'fr_aniline': 0,\n 'fr_aryl_methyl': 0,\n 'fr_azide': 0,\n 'fr_azo': 0,\n 'fr_barbitur': 0,\n 'fr_benzene': 1,\n 'fr_benzodiazepine': 0,\n 'fr_bicyclic': 0,\n 'fr_diazo': 0,\n 'fr_dihydropyridine': 0,\n 'fr_epoxide': 0,\n 'fr_ester': 0,\n 'fr_ether': 1,\n 'fr_furan': 0,\n 'fr_guanido': 0,\n 'fr_halogen': 4,\n 'fr_hdrzine': 0,\n 'fr_hdrzone': 0,\n 'fr_imidazole': 0,\n 'fr_imide': 0,\n 'fr_isocyan': 0,\n 'fr_isothiocyan': 0,\n 'fr_ketone': 0,\n 'fr_ketone_Topliss': 0,\n 'fr_lactam': 0,\n 'fr_lactone': 0,\n 'fr_methoxy': 0,\n 'fr_morpholine': 0,\n 'fr_nitrile': 1,\n 'fr_nitro': 0,\n 'fr_nitro_arom': 0,\n 'fr_nitro_arom_nonortho': 0,\n 'fr_nitroso': 0,\n 'fr_oxazole': 0,\n 'fr_oxime': 0,\n 'fr_para_hydroxylation': 0,\n 'fr_phenol': 0,\n 'fr_phenol_noOrthoHbond': 0,\n 'fr_phos_acid': 0,\n 'fr_phos_ester': 0,\n 'fr_piperdine': 0,\n 'fr_piperzine': 0,\n 'fr_priamide': 0,\n 'fr_prisulfonamd': 0,\n 'fr_pyridine': 1,\n 'fr_quatN': 0,\n 'fr_sulfide': 0,\n 'fr_sulfonamd': 0,\n 'fr_sulfone': 0,\n 'fr_term_acetylene': 0,\n 'fr_tetrazole': 0,\n 'fr_thiazole': 0,\n 'fr_thiocyan': 0,\n 'fr_thiophene': 0,\n 'fr_unbrch_alkane': 0,\n 'fr_urea': 0}\n\n\n\n\nImproved rendering of generic query atoms\nMolecules with “standard” generic query atoms (A, Q, M, X, etc.) read in from mol/SDF files are now rendered much more readably than in previous versions.\nHere’s an example:\n\nqmol = Chem.MolFromMolBlock('''\n  Mrv2305 04202308462D          \n\n  0  0  0     0  0            999 V3000\nM  V30 BEGIN CTAB\nM  V30 COUNTS 8 8 0 0 0\nM  V30 BEGIN ATOM\nM  V30 1 C -2.6667 3.8734 0 0\nM  V30 2 C -4.0003 3.1034 0 0\nM  V30 3 C -4.0003 1.5633 0 0\nM  V30 4 C -2.6667 0.7933 0 0\nM  V30 5 C -1.333 1.5633 0 0\nM  V30 6 C -1.333 3.1034 0 0\nM  V30 7 A 0.0007 3.8733 0 0\nM  V30 8 X -5.334 3.8733 0 0\nM  V30 END ATOM\nM  V30 BEGIN BOND\nM  V30 1 1 1 2\nM  V30 2 2 2 3\nM  V30 3 1 3 4\nM  V30 4 2 4 5\nM  V30 5 1 5 6\nM  V30 6 2 1 6\nM  V30 7 1 6 7\nM  V30 8 1 2 8\nM  V30 END BOND\nM  V30 END CTAB\nM  END\n''')\nqmol\n\n\n\n\n\n\n\n\nAs a reminder, this is what these looked like in previous versions:\n\nIPythonConsole.drawOptions.useComplexQueryAtomSymbols = False\nqmol\n\n\n\n\n\n\n\n\n\nIPythonConsole.drawOptions.useComplexQueryAtomSymbols = True\n\n\n\nChEMBL filter sets now available in the FilterCatalog\nThis is based on Pat Walters’ version of the ChEMBL filters\n\nfrom rdkit.Chem import rdfiltercatalog\n\nfcp = rdfiltercatalog.FilterCatalogParams()\nfcp.AddCatalog(rdfiltercatalog.FilterCatalogParams.FilterCatalogs.CHEMBL)\nfc = rdfiltercatalog.FilterCatalog(fcp)\nfc.GetNumEntries()\n\n770\n\n\n\nm = Chem.MolFromSmiles('c1ccccc1CCl')\nl = fc.GetMatches(m)\nlen(l)\n\n7\n\n\n\nfor entry in l:\n    print(entry.GetDescription())\n\nR1 Reactive alkyl halides\nalkyl halide\nprimary_halide_sulfate\nalkyl_halides\nalkyl halide\nFilter6_benzyl_halide\nalkyl halide\n\n\nI’ve deliberately picked an example which demonstrates why one needs to be careful with these things. :-)\n\n\nImproved handling of organometallic species\nThis is part of an ongoing series of improvements to do a better job handling organometallic species.\nIn this release the major changes are to support switching between two common representations of molecules like ferrocene:\n\nIPythonConsole.kekulizeStructures = False\nferrocene = Chem.MolFromMolBlock('''\n  Mrv2211 04212306592D          \n\n  0  0  0     0  0            999 V3000\nM  V30 BEGIN CTAB\nM  V30 COUNTS 13 12 2 0 0\nM  V30 BEGIN ATOM\nM  V30 1 C -4.4799 15.329 0 0 CHG=-1\nM  V30 2 C -5.2994 16.3341 0 0\nM  V30 3 C -8.0977 16.3517 0 0\nM  V30 4 C -9.0012 15.3605 0 0\nM  V30 5 C -6.794 14.7503 0 0\nM  V30 6 C -4.3949 10.4304 0 0 CHG=-1\nM  V30 7 C -5.2144 11.4355 0 0\nM  V30 8 C -8.0127 11.4531 0 0\nM  V30 9 C -8.9162 10.4619 0 0\nM  V30 10 C -6.6924 9.8351 0 0\nM  V30 11 Fe -6.6772 12.9717 0 0 CHG=2\nM  V30 12 * -6.7645 15.6718 0 0\nM  V30 13 * -6.6461 10.7232 0 0\nM  V30 END ATOM\nM  V30 BEGIN BOND\nM  V30 1 9 12 11 ENDPTS=(5 1 2 3 4 5) ATTACH=ALL\nM  V30 2 4 1 5\nM  V30 3 4 4 5\nM  V30 4 4 4 3\nM  V30 5 4 2 3\nM  V30 6 4 1 2\nM  V30 7 4 6 10\nM  V30 8 4 9 10\nM  V30 9 4 9 8\nM  V30 10 4 7 8\nM  V30 11 4 6 7\nM  V30 12 9 13 11 ENDPTS=(5 6 7 8 9 10) ATTACH=ALL\nM  V30 END BOND\nM  V30 BEGIN SGROUP\nM  V30 1 DAT 0 ATOMS=(1 1) FIELDNAME=MRV_IMPLICIT_H -\nM  V30 FIELDDISP=\"    0.0000    0.0000    DR    ALL  0       0\" -\nM  V30 FIELDDATA=IMPL_H1\nM  V30 2 DAT 0 ATOMS=(1 6) FIELDNAME=MRV_IMPLICIT_H -\nM  V30 FIELDDISP=\"    0.0000    0.0000    DR    ALL  0       0\" -\nM  V30 FIELDDATA=IMPL_H1\nM  V30 END SGROUP\nM  V30 END CTAB\nM  END\n''')\nferrocene\n\n\n\n\n\n\n\n\nThis shows one common representation: using a coordination/dative bond from a multi-center attachment point in the middle of each ring to indicate the haptic bonding of the rings to the metal. The new drawing code highlights the atoms involved in the haptic bond.\nSometimes it’s useful to have another representation of these species which has direct dative bonds from the atoms in the ring to the metal. The HapticBondsToDative() function does this:\n\ndative_ferro = Chem.HapticBondsToDative(ferrocene)\nChem.SanitizeMol(dative_ferro)\ndative_ferro\n\n\n\n\n\n\n\n\nAs you might expect, you can also go from the dative representation back to the haptic one:\n\nferro2 = Chem.DativeBondsToHaptic(dative_ferro)\nChem.SanitizeMol(ferro2)\nferro2\n\n\n\n\n\n\n\n\nThis, of course, also works with other haptic bonds. Here’s an example of a nickel complex with propylene:\n\nni_complex = Chem.MolFromMolBlock('''\n  Mrv2211 05012317022D          \n\n  0  0  0     0  0            999 V3000\nM  V30 BEGIN CTAB\nM  V30 COUNTS 9 6 0 0 0\nM  V30 BEGIN ATOM\nM  V30 1 C -10.7917 -1.75 0 0 CHG=-1\nM  V30 2 C -9.458 -0.98 0 0\nM  V30 3 C -8.1243 -1.75 0 0\nM  V30 4 * -9.458 -1.4933 0 0\nM  V30 5 C -10.792 -6.2983 0 0 CHG=-1\nM  V30 6 C -9.4583 -5.5283 0 0\nM  V30 7 C -8.1246 -6.2983 0 0\nM  V30 8 * -9.4583 -6.0416 0 0\nM  V30 9 Ni -9.25 -3.7083 0 0 CHG=2\nM  V30 END ATOM\nM  V30 BEGIN BOND\nM  V30 1 1 1 2\nM  V30 2 2 2 3\nM  V30 3 1 5 6\nM  V30 4 2 6 7\nM  V30 5 9 4 9 ENDPTS=(3 1 2 3) ATTACH=ALL\nM  V30 6 9 8 9 ENDPTS=(3 5 6 7) ATTACH=ALL\nM  V30 END BOND\nM  V30 END CTAB\nM  END\n''')\nni_complex\n\n\n\n\n\n\n\n\n\ndative_ni= Chem.HapticBondsToDative(ni_complex)\nChem.SanitizeMol(dative_ni)\ndative_ni\n\n\n\n\n\n\n\n\n\nni2 = Chem.DativeBondsToHaptic(dative_ni)\nChem.SanitizeMol(ni2)\nni2\n\n\n\n\n\n\n\n\n\n\nDrawing molecules in arbitrary locations on a canvas\nBy using the new MolDraw2D.SetFlexiMode() and MolDraw2D.SetOffset() methods, it’s now possible to draw molecules in arbitrary locations on the MolDraw2D canvas. This, with a bit of work, allows considerably more complex molecular graphics to be created.\nHere’s an example… I hope to show something more useful in a future post.\n\n# structures from: https://pubs.acs.org/doi/10.1021/acs.jmedchem.3c00210\nhit = Chem.MolFromSmiles('c1ccc(o1)-c1cc(n(n1)C(=O)CCC(=O)O)-c1c(Cl)nc2cc(C)ccc2c1')\nlead = Chem.MolFromSmiles('c1ccc(o1)-c1cc(nn1C(C)(C)C)-c1[nH]c2ccc(Cl)cc2n1')\ninterm = Chem.MolFromSmiles('c1ccc(o1)-c1cc(nn1C(C)(C)C)-c1oc2ccccc2n1')\n\n\nhitLabel = 'Hit 1a\\nP2Y6R : 0.126 uM'\nleadLabel = '50\\nP2Y6R : 5.9 nM'\nintermLabel = '16\\nP2Y6R : 30.8 nM'\n\n\nfrom IPython.display import SVG\n\nfrom rdkit import Geometry\nfrom rdkit.Chem.Draw import rdMolDraw2D\nsizer = rdMolDraw2D.MolDraw2DSVG(-1,-1)\nhit_sz = sizer.GetMolSize(hit,legend=hitLabel)\nlead_sz = sizer.GetMolSize(lead,legend=leadLabel)\ninterm_sz = sizer.GetMolSize(interm,legend=intermLabel)\n\narrowLength = 100\narrowPadding = 10\n\nwidth = max((lead_sz[0]+interm_sz[0]),hit_sz[0])\nsecondRowHeight = max(lead_sz[1],interm_sz[1])\nheight = secondRowHeight+hit_sz[1]+arrowLength + arrowPadding\nd2d = rdMolDraw2D.MolDraw2DSVG(width,height)\nd2d.SetFlexiMode(True)\nd2d.ClearDrawing()\nd2d.drawOptions().clearBackground = False\nd2d.SetOffset(width//2 - hit_sz[0]//2,0)\nd2d.DrawMolecule(hit,legend=hitLabel)\n\nd2d.SetOffset(0,height-secondRowHeight)\nd2d.DrawMolecule(interm,legend=intermLabel)\n\nd2d.SetOffset(width - lead_sz[0],height-secondRowHeight)\nd2d.DrawMolecule(lead,legend=leadLabel)\n\n\narrowStart = Geometry.Point2D(width//2,hit_sz[1]+arrowPadding/2)\narrowEnd1 = arrowStart + Geometry.Point2D(0,arrowLength)\narrowEnd1.x -= interm_sz[0]/2\narrowEnd2 = arrowStart + Geometry.Point2D(0,arrowLength)\narrowEnd2.x += lead_sz[0]/2\n\nd2d.SetOffset(0,0)\nd2d.SetLineWidth(4)\nd2d.DrawArrow(arrowStart,arrowEnd1,rawCoords=True)\nd2d.DrawArrow(arrowStart,arrowEnd2,rawCoords=True)\n\nlabelPos = arrowStart\nlabelPos.y += arrowLength/2\nd2d.SetFontSize(d2d.FontSize()*1.5)\nd2d.DrawString(\"optimization\",labelPos,0,rawCoords=True)\n\nd2d.FinishDrawing()\n\nSVG(d2d.GetDrawingText())\n\n\n\n\n\n\n\n\nAs mentioned, there is some work required to figure out where to place everything on the canvas, but I think this opens the doors to doing a bunch of cool molecular visualizations.\nThat’s it for this post. I’ll probably do another one or two of this as other thing strike me. If you see something in the release notes that you’re curious about, leave a commet. I’ll try and do a follow up to answer whatever questions come up."
  },
  {
    "objectID": "posts/2022-03-14-rgd-and-molzip.html",
    "href": "posts/2022-03-14-rgd-and-molzip.html",
    "title": "R-group decomposition and molzip",
    "section": "",
    "text": "Recently a couple of customers have asked questions along the lines of: “How do I do an R-group decomposition and then recombine the cores and R groups to create new molecules?” That’s an interesting and useful task which the RDKit has some built-in tools to help with, so I figured I’d do a blog post.\nfrom rdkit import Chem\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem import rdqueries\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit.Chem import rdRGroupDecomposition\nfrom rdkit.Chem import rdDepictor\nfrom rdkit import Geometry\nrdDepictor.SetPreferCoordGen(True)\nimport itertools\nimport rdkit\nprint(rdkit.__version__)\n\n2022.03.1pre\nNote: Though I’m doing this blog post using a local build from RDKit master all of the functionality which I demonstrate here is already available in the 2021.09 release series."
  },
  {
    "objectID": "posts/2022-03-14-rgd-and-molzip.html#quick-intro-to-molzip",
    "href": "posts/2022-03-14-rgd-and-molzip.html#quick-intro-to-molzip",
    "title": "R-group decomposition and molzip",
    "section": "Quick intro to molzip",
    "text": "Quick intro to molzip\nWe’ll use the RDKit’s molzip() function to recombine the cores with the side chains.\nmolzip lets you take a molecule containing multiple fragments and “zip” them together. The atoms which should be bonded in the final molecule are labelled by connecting them to dummy atoms. The code identifies matching dummy atoms (by default this means dummies with the same isotopic label) in the fragments, adds bonds between the atoms connected to the dummies, and then removes the dummies.\nHere’s a simple example using a molecule with three fragments:\n\nsample = Chem.MolFromSmiles('[*:1]c1nc([*:2])ncc1.CO[*:1].[*:2]N(C)C')\nsample\n\n\n\n\n\n\n\n\nAnd this is what happens when we zip those together:\n\nChem.molzip(sample)"
  },
  {
    "objectID": "posts/2022-03-14-rgd-and-molzip.html#using-molzip-with-rgd-output",
    "href": "posts/2022-03-14-rgd-and-molzip.html#using-molzip-with-rgd-output",
    "title": "R-group decomposition and molzip",
    "section": "Using molzip with RGD output",
    "text": "Using molzip with RGD output\nThe molzip function is perfect for working with the output from an R-group decomposition.\nHere I’ll define the function we’re going to use to enumerate all of the products:\n\nimport random\ndef enumerate_all_products(core,*rgroups,randomOrder=False):\n    # preserve the positions of the non-dummy core atoms, \n    # we will use these to make sure the cores are drawn\n    # the same way in each molecule we generate\n    corePos = {}\n    conf = core.GetConformer()\n    for i in range(conf.GetNumAtoms()):\n        corePos[i] = Geometry.Point2D(conf.GetAtomPosition(i))\n        \n    # Python's itertools handles doing the combinatorics of generating\n    # every possible combination of R groups:\n    order = itertools.product(*rgroups)\n    if randomOrder:\n        order = list(order)\n        random.shuffle(order)\n        \n    # now we just loop over each combination, copy all the pieces into\n    # one molecule, and zip it. That's our product\n    for tpl in order:\n        tm = Chem.RWMol(core)\n        for r in tpl:\n            tm.InsertMol(r)\n        prod = Chem.molzip(tm)\n        if prod is not None:\n            # generate 2d coordinates with the core fixed in place\n            rdDepictor.Compute2DCoords(prod,canonOrient=False,coordMap=corePos)\n            \n            # and finally yield the product molecule\n            yield prod\n\nWe’re going to use the core which came from the RGD since it’s labelled in the same way as the sidechains\n\nrgd_core = rgd['Core'][0]\nrgd_core\n\n\n\n\n\n\n\nscaffold\n1\n\n\n\n\n\nLet’s try it out:\n\n# this returns a generator which produces products:\nprod_gen = enumerate_all_products(rgd_core,r1s,r2s,r3s)\n\n# now get the first unique products \nprods = []\nseen = set()\nfor prod in prod_gen:\n    if prod is not None:\n        Chem.SanitizeMol(prod)\n        smi = Chem.MolToSmiles(prod)\n        if smi not in seen:\n            prods.append(prod)\n            seen.add(smi)\n        if len(prods)&gt;=12:\n            break\nDraw.MolsToGridImage(prods,molsPerRow=4)\n\n\n\n\n\n\n\n\nThose come back ordered by the R groups (i.e. all products created using the first value of R1, then all products created using the second value of R1, etc.). This is fine if we’re planning on enumerating all the molecules, but if we only need a subset we can tell enumerate_all_products() to return the results in a random order:\n\n# set a random seed so that we get reproducible results\nrandom.seed(0xbaff7ed)\nprod_gen = enumerate_all_products(rgd_core,r1s,r2s,r3s,randomOrder=True)\nprods = []\nseen = set()\nfor prod in prod_gen:\n    if prod is not None:\n        Chem.SanitizeMol(prod)\n        smi = Chem.MolToSmiles(prod)\n        if smi not in seen:\n            prods.append(prod)\n            seen.add(smi)\n        if len(prods)&gt;=12:\n            break\nDraw.MolsToGridImage(prods,molsPerRow=4)\n\n\n\n\n\n\n\n\nHopefully this brief post is useful!"
  },
  {
    "objectID": "posts/2023-08-25-about-rdkit-versioning.html",
    "href": "posts/2023-08-25-about-rdkit-versioning.html",
    "title": "Rethinking the RDKit versioning model",
    "section": "",
    "text": "Update, 10 November 2023\nWe decided to try moving forward with the new versioning model: future minor releases of the RDKit will include new features that don’t cause backwards incompatibility problems or change existing behavior. The 2023.09.2 release is the first example of this.\n\n\nBackground\nThe current RDKit versioning scheme is pretty simple: we do two major releases a year, one in March/April and one in September/October, and a patch release about once a month. So version 2023.03.3 is the second patch release of the 2023.03 major release cycle. In the patch releases we (try to) only include bug fixes which don’t change the API or introduce major backwards incompatible changes. Everything else - new features, deprecations, code refactoring, API changes, larger backwards incompatibilities, etc. - goes in the major releases.\nI think aspects of this make a lot of sense: if you install a patch release of the RDKit you can be comfortable that whatever code you’ve built on top of it will continue to run. Your code may generate different results if it’s using RDKit code where a bug fix was applied (after all, fixing bugs can change results), but everything should still run. You’re probably safe just installing a patch release without being too concerned about reading the release notes. However, you definitely want to read the release notes, particularly the “backwards incompatibilities” part, before installing a new major version of the RDKit.\n\nAside: if you are working on a research project and you are concerned about reproducibility, or if you’ve deployed a model which uses fingerprints or descriptors as input, then you should be very careful about changing versions of the RDKit or any other dependency. Bug fixes may well change the results you get in unpredictable ways. It’s always safest to either stick with whatever software version(s) you are using or to regenerate all of your results.\nMy general practice here is to create a conda environment at the beginning of a project which pins the versions of the RDKit and other sensitive libraries (like scikit-learn) and then to use that environment throughout the project. If I write things up, I will include the .yml file for the environment as part of the SI/code for the paper.\n\n\n\nA possible change\nLately I’ve been thinking about the fact that there are many circumstances where adding new features is as safe as (or even safer than) doing bug fixes. For example, us doing things like adding a new fingerprint type, supporting a new file format, or adding a new feature to the conformer generation algorithm will have zero impact on existing code. So we could theoretically roll changes like this out in a point release without worrying about breaking anyone’s code. It would be nice to be able to get new stuff out there to the community more than twice a year.\nIf we went down this road, we’d have to think carefully about which new features got rolled out in the point releases. Obviously anything where major refactoring work was done or which makes backwards incompatible changes wouldn’t qualify for a point release. We probably wouldn’t want to add new descriptors - that will change the length of the descriptor list, which might break code - but that would be something to think about. It would mean that we (the maintainers) would have to think a bit more carefully when assigning milestones to new features and it would also create a small amount of extra work when creating releases (more stuff to backport), but I suspect that both of those would be fairly minor.\nI do think it would be cool and useful to be able to make new stuff available more quickly.\nAny thoughts or concerns? Something I missed? As always, feedback is appreciated.\n\nFinal note: this post is not an invitation to debate the merits of different version numbering schemes. We aren’t going to make any changes there."
  },
  {
    "objectID": "posts/2023-01-05-rgd-edge-cases.html",
    "href": "posts/2023-01-05-rgd-edge-cases.html",
    "title": "R-Group Decomposition: Edge Cases",
    "section": "",
    "text": "This is an updated version of an earlier post.\nThe RDKit’s code for doing R-group decomposition (RGD) is quite flexible but also rather “undocumented”. Thanks to that fact, you may not be aware of some of the cool stuff that’s there. This post is an attempt to at least begin to remedy that by looking at some of the edge cases that come up while doing RGD.\nI have another post coming in the near future which is a bit more of a tutorial, but here we’ll look at a number of difficult/interesting problems that arise all the time when doing RGD on real-world datasets:\n\nHandling symmetric cores\nHandling stereochemistry\nHandling sidechains that attach to the core at more than one point\nHandling multiple scaffolds or variable scaffolds\n\nSome of these problems are really tricky to solve perfectly, so please expect that there will be bugs (particularly in the code for handling symmetrization). If you find something that seems wrong, please do file a bug report, ideally with the exact code and structures that you used.\nThe code in this blog post behaves correctly with v2019.09.1 and later of the RDKit. Older versions have bugs that generate different results for some of the examples here.\n\nimport pandas as pd\nfrom rdkit import Chem\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem import rdDepictor\nfrom rdkit.Chem import PandasTools\nIPythonConsole.ipython_useSVG=True\nfrom rdkit.Chem import rdRGroupDecomposition\nfrom rdkit import RDLogger\nRDLogger.DisableLog('rdApp.warning')\nimport rdkit\nprint(rdkit.__version__)\n\n2022.09.1\n\n\n\nPandasTools.RenderImagesInAllDataFrames()\n\n\nBasics: a symmetric core\nLet’s start with an easy example that has a symmetric core. In this case R1 and R5 are symmetry equivalent as are R2 and R4):\n\nscaffold = Chem.MolFromSmiles('[*:1]c1c([*:2])c([*:3])c([*:4])c([*:5])n1')\nscaffold\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHere are some molecules that share that scaffold. We’ve provided the atoms in different orders to make sure that’s properly handled by the RGD code.\n\nmols = [Chem.MolFromSmiles(smi) for smi in 'c1c(F)cccn1 c1c(Cl)c(C)ccn1 c1c(O)cccn1 c1c(F)c(C)ccn1 c1cc(Cl)c(F)cn1'.split()]\nDraw.MolsToGridImage(mols,molsPerRow=4)\n\n\n\n\n\n\n\n\nDo a version where we provide a scaffold without the R labels to start with:\n\nscaffold = Chem.MolFromSmiles('c1ccccn1')\nscaffold\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngroups,_ = rdRGroupDecomposition.RGroupDecompose([scaffold],mols,asSmiles=False,asRows=False) \nPandasTools.RGroupDecompositionToFrame(groups,mols,include_core=True)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMol\nCore\nR1\nR2\n\n\n\n\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThose labels were automatically assigned and they aren’t consistent with what we had above. Notice, however, that the symmetry in the scaffold has been properly handled.\nIf we care about the R group labels, We can explicitly label the side chains:\n\n# note: there's a bug in RDKit 2019.03.3 and 2019.03.4 that causes this to generate different\n# results with those versions\nscaffold = Chem.MolFromSmiles('c1c([*:2])c([*:3])ccn1')\ngroups,_ = rdRGroupDecomposition.RGroupDecompose([scaffold],mols,asSmiles=False,asRows=False) \nPandasTools.RGroupDecompositionToFrame(groups,mols,include_core=True)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMol\nCore\nR2\nR3\n\n\n\n\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe’ve just been looking at compound images since that’s a bit more readable. Here’s what the raw output from the function looks like:\n\ngroups,_ = rdRGroupDecomposition.RGroupDecompose([scaffold],mols,asSmiles=True,asRows=False) \nprint(groups)\n\n{'Core': ['c1cc([*:3])c([*:2])cn1', 'c1cc([*:3])c([*:2])cn1', 'c1cc([*:3])c([*:2])cn1', 'c1cc([*:3])c([*:2])cn1', 'c1cc([*:3])c([*:2])cn1'], 'R2': ['F[*:2]', 'Cl[*:2]', 'O[*:2]', 'F[*:2]', 'F[*:2]'], 'R3': ['[H][*:3]', 'C[*:3]', '[H][*:3]', 'C[*:3]', 'Cl[*:3]']}\n\n\nWe can also get that in a row-oriented format:\n\ngroups,_ = rdRGroupDecomposition.RGroupDecompose([scaffold],mols,asSmiles=True,asRows=True) \nprint(groups)\n\n[{'Core': 'c1cc([*:3])c([*:2])cn1', 'R2': 'F[*:2]', 'R3': '[H][*:3]'}, {'Core': 'c1cc([*:3])c([*:2])cn1', 'R2': 'Cl[*:2]', 'R3': 'C[*:3]'}, {'Core': 'c1cc([*:3])c([*:2])cn1', 'R2': 'O[*:2]', 'R3': '[H][*:3]'}, {'Core': 'c1cc([*:3])c([*:2])cn1', 'R2': 'F[*:2]', 'R3': 'C[*:3]'}, {'Core': 'c1cc([*:3])c([*:2])cn1', 'R2': 'F[*:2]', 'R3': 'Cl[*:3]'}]\n\n\n\n\nStereochemistry\nMaking sure that the sidechains are labelled correctly on chiral centers can be a bit trickier.\nHere’s a set of molecules we’ll be using. Some have a chiral center, some don’t. There are a few that have sidechains with dual attachment points (i.e. rings). We’ll look at those in the next section.\n\nmols = [x for x in Chem.SDMolSupplier('../data/rgd_chiral.sdf')]\nDraw.MolsToGridImage(mols,molsPerRow=4)\n\n\n\n\n\n\n\n\nRemove the examples with “ring” sidechains. We’ll get to those later\n\nq = Chem.MolFromSmarts('[R2]')\nmols = [x for x in mols if not x.HasSubstructMatch(q)]\nDraw.MolsToGridImage(mols,molsPerRow=4)\n\n\n\n\n\n\n\n\nWe’ll define two scaffolds, the first with a chiral center, the second without. In this case we will add explicit markers for the substituents. This is currently (v2019.09) necessary to properly handle atomic chirality.\n\nscaffold = Chem.MolFromSmiles('[*:1]C1([*:2])OCCC=C1')\nchiral_scaffold = Chem.MolFromSmiles('[*:1][C@]1([*:2])OCCC=C1')\nDraw.MolsToGridImage([scaffold,chiral_scaffold])\n\n\n\n\n\n\n\n\nStart with doing a decomposition with the non-chiral scaffold. This matches all the molecules, but generates results that are not consistent with the chirality. The compounds in rows 2 and 3 (numbered from zero) demonstrate the problem clearly.\n\ngroups,_ = rdRGroupDecomposition.RGroupDecompose([scaffold],mols,asSmiles=False,asRows=False) \nPandasTools.RGroupDecompositionToFrame(groups,mols,include_core=True)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMol\nCore\nR1\nR2\n\n\n\n\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n7\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n8\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n9\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTry the chiral scaffold. This one will only match the chiral compounds, but it does the right thing with those:\n\ngroups,unmatched = rdRGroupDecomposition.RGroupDecompose([chiral_scaffold],mols,asSmiles=False,asRows=False)\ntmols = [mols[x] for x in range(len(mols)) if x not in unmatched]\nPandasTools.RGroupDecompositionToFrame(groups,tmols,include_core=True,redraw_sidechains=True)\n\n[13:50:06] No core matches\n[13:50:06] No core matches\n[13:50:06] No core matches\n[13:50:06] No core matches\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMol\nCore\nR1\nR2\n\n\n\n\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote that in each case the atom is assigned to the correct R group.\nWe can also combine the two scaffolds so that we can get the chiral and achiral cases. Order is important, so we include the more specific scaffold (the chiral one) first. In this case the stereochemistry determines the R1/R2 assignment for the chiral molecules. For the non-chiral molecules R1 and R2 are assigned using the standard symmetrization code.\n\ngroups,unmatched = rdRGroupDecomposition.RGroupDecompose([chiral_scaffold,scaffold],mols,asSmiles=False,asRows=False)\nPandasTools.RGroupDecompositionToFrame(groups,mols,include_core=True,redraw_sidechains=True)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMol\nCore\nR1\nR2\n\n\n\n\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n7\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n8\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n9\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSidechains that attach in more than one place\nThis one is tricky, and there’s not really a right answer, this is just a demonstration of what the current code does\n\nmols = [x for x in Chem.SDMolSupplier('../data/rgd_chiral.sdf')]\nq = Chem.MolFromSmarts('[R2]')\nmols = [x for x in mols if x.HasSubstructMatch(q)]\nDraw.MolsToGridImage(mols,molsPerRow=4)\n\n\n\n\n\n\n\n\n\nscaffold = Chem.MolFromSmiles('C1OCC=CC1')\ngroups,unmatched = rdRGroupDecomposition.RGroupDecompose([scaffold],mols,asSmiles=False,asRows=False)\nPandasTools.RGroupDecompositionToFrame(groups,mols,include_core=True,redraw_sidechains=True)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMol\nCore\nR1\nR2\n\n\n\n\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nScaffold Variation\nWhat happens if there are small variations in the scaffold within the series, something that we see all the time in med chem work?\n\nmols = [Chem.MolFromSmiles(smi) for smi in 'c1c(F)cccn1 c1c(Cl)c(C)ccn1 c1c(F)cncn1 c1c(F)c(C)ccn1'.split()]\nDraw.MolsToGridImage(mols,molsPerRow=4)\n\n\n\n\n\n\n\n\n\nscaffold = Chem.MolFromSmiles('c1c([*:1])c([*:2])ccn1')\ngroups,unmatched = rdRGroupDecomposition.RGroupDecompose([scaffold],mols,asSmiles=True,asRows=False)\n# the second return value, unmatched, provides the indices of the molecules that did not match a scaffold:\nprint(unmatched)\ngroups\n\n[2]\n\n\n[13:50:06] No core matches\n\n\n{'Core': ['c1cc([*:2])c([*:1])cn1',\n  'c1cc([*:2])c([*:1])cn1',\n  'c1cc([*:2])c([*:1])cn1'],\n 'R1': ['F[*:1]', 'Cl[*:1]', 'F[*:1]'],\n 'R2': ['[H][*:2]', 'C[*:2]', 'C[*:2]']}\n\n\nYou can see that now we only get three results, the third molecule (index 2) didn’t end up in the output. Sometimes this is ok, but in cases like this it would be great if that molecule were also included in the R-group decomposition.\nOne solution to this is to provide two different scaffolds:\n\nscaffold2 = Chem.MolFromSmiles('c1c([*:1])c([*:2])ncn1')\ngroups,unmatched = rdRGroupDecomposition.RGroupDecompose([scaffold,scaffold2],mols,asSmiles=False,asRows=False)\nprint(unmatched)\nPandasTools.RGroupDecompositionToFrame(groups,mols,include_core=True)\n\n[]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMol\nCore\nR1\nR2\n\n\n\n\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNotice that unmatched is now empty; all molecules matched one of the two cores\nAnother is provide the scaffold as SMARTS:\n\nsma_scaffold = Chem.MolFromSmarts('c:1:c(-[*:1]):c(-[*:2]):*:c:n:1')\ngroups,unmatched = rdRGroupDecomposition.RGroupDecompose([sma_scaffold],mols,asSmiles=False,asRows=False)\nPandasTools.RGroupDecompositionToFrame(groups,mols,include_core=True)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMol\nCore\nR1\nR2\n\n\n\n\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMultiple scaffolds\nWhat about if we have multiple scaffolds which share a common SAR? Here we just provide them both and label the attachment points manually to show the correspondance.\n\nmols = [Chem.MolFromSmiles(smi) for smi in 'Fc1ccc(O)cc1 Fc1ccc(OC)cc1 Oc1ccc(Cl)cc1 Clc1ccc(OC)cc1 Fc1ccc(O)s1 COc1ccc(F)s1 Clc1ccc(O)s1 Clc1ccc(OC)s1'.split()]\nDraw.MolsToGridImage(mols,molsPerRow=4)\n\n\n\n\n\n\n\n\n\nscaffolds = [Chem.MolFromSmiles('[*:1]c1ccc([*:2])cc1'),Chem.MolFromSmiles('[*:1]c1ccc([*:2])s1')]\ngroups,unmatched = rdRGroupDecomposition.RGroupDecompose(scaffolds,mols,asSmiles=False,asRows=False)\nPandasTools.RGroupDecompositionToFrame(groups,mols,include_core=True)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMol\nCore\nR1\nR2\n\n\n\n\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n7\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNotice that the symmetrization also worked.\n\n\nLooking at the options that are available\nWe’ll use a real dataset pulled from ChEMBL for this:\n\ncore = Chem.MolFromSmiles('c1ccccc1-c2nc(c1ccccc1)no2')\ncore\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsmiles = ['CCOCCC1(Oc2ccc(Oc3ccc(-c4nc(-c5ccccc5)no4)cc3)cc2)C(=O)NC(=O)NC1=O', 'CCOc1ccc(-c2nc(-c3ccc(CN4CC(C(=O)O)C4)cc3)no2)cc1', 'CC(C)Cc1ccc(-c2nc(-c3ccc(CN4CC(C(=O)O)C4)cc3)no2)cc1', 'CCOCCC1(Oc2ccc(Oc3ccc(-c4nc(-c5ccc(F)cc5)no4)cc3)cc2)C(=O)NC(=O)NC1=O', 'O=C(O)C1CN(Cc2ccc(-c3noc(-c4ccc(C5CCC5)cc4)n3)cc2)C1', 'CCOCCC1(Oc2ccc(Oc3ccc(-c4noc(-c5ccccc5)n4)cc3)cc2)C(=O)NC(=O)NC1=O', 'O=C(O)C1CN(Cc2ccc(-c3noc(-c4ccc([C@@H]5CCC(F)(F)C5)cc4)n3)cc2)C1', 'CC(C)(C)c1ccc(-c2nc(-c3ccc(CN4CC(C(=O)O)C4)cc3)no2)cc1', 'Cc1cc(CCC(=O)O)ccc1-c1noc(-c2ccc(OC(C)C(F)(F)F)c(C#N)c2)n1', 'Cc1cc(-c2nc(-c3ccc(CCC(=O)O)cc3C)no2)ccc1OC(C)C', 'CC(C)(C)Cc1ccc(-c2nc(-c3ccc(CN4CC(C(=O)O)C4)cc3)no2)cc1', 'Cc1cc(CCC(=O)O)ccc1-c1noc(-c2ccc(OC(C)C)c(F)c2)n1', 'COc1cc(-c2nc(-c3ccc(CCC(=O)O)cc3C)no2)ccc1OC(C)C', 'CC(C)(C)c1ccc(-c2noc(-c3ccc(CN4CC(C(=O)O)C4)cc3)n2)cc1', 'Cc1cc(CCCCCC(=O)O)ccc1-c1noc(-c2ccc(C3CCCCC3)cc2)n1', 'Cc1cc(CCC(=O)O)ccc1-c1noc(-c2ccc(OCC(F)(F)F)c(C#N)c2)n1', 'CCOCCC1(Oc2ccc(Oc3ccc(-c4nc(-c5cccc(F)c5)no4)cc3)cc2)C(=O)NC(=O)NC1=O', 'Cc1ccccc1-c1noc(-c2ccc(C3CCCCC3)cc2)n1', 'CCCCc1ccc(-c2nc(-c3ccc(CN4CC(C(=O)O)C4)cc3)no2)cc1', 'Cc1cc(CCC(=O)O)ccc1-c1noc(-c2ccc(OC(C)C)c(C#N)c2)n1', 'O=C(O)C1CN(Cc2ccc(-c3noc(-c4ccc(CCC(F)(F)F)cc4)n3)cc2)C1', 'O=C(O)C1CN(Cc2ccc(-c3noc(-c4ccc(-c5ccccc5)cc4)n3)cc2)C1', 'O=C(O)C1CN(Cc2ccc(-c3noc(-c4ccc(C5CCCCC5)cc4)n3)cc2)C1', 'CC[C@H](C)Oc1ccc(-c2nc(-c3ccc(CCC(=O)O)cc3C)no2)cc1C#N', 'Cc1cc(CCCC(=O)O)ccc1-c1noc(-c2ccc(C3CCCCC3)cc2)n1', 'Cc1cc(CCC(=O)O)ccc1-c1noc(-c2ccc(OC(C)C)c(C(F)(F)F)c2)n1', 'Cc1cc(CCC(=O)O)ccc1-c1noc(-c2ccc(OC(C)C)c(Cl)c2)n1', 'CCCCCCc1ccc(-c2nc(-c3ccc(CN4CC(C(=O)O)C4)cc3)no2)cc1', 'Cc1cc(CCC(=O)O)ccc1-c1noc(-c2ccc(OC(C)C)c(Br)c2)n1', 'Cc1cc(CCC(=O)O)ccc1-c1noc(-c2ccc(OC(C(F)(F)F)C(F)(F)F)c(C#N)c2)n1', 'O=C(O)C1CN(Cc2ccc(-c3noc(-c4ccc(C5CCCC5)cc4)n3)cc2)C1', 'O=C(O)C1CN(Cc2ccc(-c3noc(-c4ccc([C@H]5CCC(F)(F)C5)cc4)n3)cc2)C1', 'O=C(O)C1CN(Cc2ccc(-c3noc(-c4ccc(C5CC5)cc4)n3)cc2)C1', 'CCCc1ccc(-c2nc(-c3ccc(CN4CC(C(=O)O)C4)cc3)no2)cc1', 'CCOCCC1(Oc2ccc(Oc3ccc(-c4nc(-c5ccccc5F)no4)cc3)cc2)C(=O)NC(=O)NC1=O', 'CCC(C)(C)c1ccc(-c2nc(-c3ccc(CN4CC(C(=O)O)C4)cc3)no2)cc1', 'Cc1cc(CC(=O)O)ccc1-c1noc(-c2ccc(C3CCCCC3)cc2)n1', 'CC(C)Oc1ccc(-c2nc(-c3ccc(CN4CC(C(=O)O)C4)cc3)no2)cc1', 'Cc1cc(C(=O)O)ccc1-c1noc(-c2ccc(C3CCCCC3)cc2)n1', 'CCOc1ccc(-c2nc(-c3ccc(CCC(=O)O)cc3C)no2)cc1C(F)(F)F', 'Cc1cc(CCC(=O)O)ccc1-c1noc(-c2ccc(C3CCCCC3)cc2)n1', 'COc1ccc(-c2nc(-c3ccc(CCC(=O)O)cc3C)no2)cc1C(F)(F)F']\nmols = [Chem.MolFromSmiles(x) for x in smiles]\n\n\nDraw.MolsToGridImage(mols[:16],molsPerRow=4)\n\n\n\n\n\n\n\n\n\n# we'll use just the first 16 molecules to make things a bit smaller for this demo\nm16 = mols[:16]\ngroups,unmatched = rdRGroupDecomposition.RGroupDecompose([core],m16,asSmiles=False,asRows=False)\nPandasTools.RGroupDecompositionToFrame(groups,m16,include_core=True,redraw_sidechains=True)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMol\nCore\nR1\nR2\nR3\nR4\n\n\n\n\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n7\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n8\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n9\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n11\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n12\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n13\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n14\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n15\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLet’s do a query with labelled R groups:\n\nlcore = Chem.MolFromSmiles('c1cc([*:1])ccc1-c2nc(c1ccc([*:2])cc1)no2')\nlcore\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngroups,unmatched = rdRGroupDecomposition.RGroupDecompose([lcore],m16,asSmiles=False,asRows=False)\nPandasTools.RGroupDecompositionToFrame(groups,m16,include_core=True,redraw_sidechains=True)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMol\nCore\nR1\nR2\nR3\nR4\n\n\n\n\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n7\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n8\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n9\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n11\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n12\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n13\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n14\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n15\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe can exclude any molecules that have R groups in non-labelled positions:\n\nparams = rdRGroupDecomposition.RGroupDecompositionParameters()\nparams.onlyMatchAtRGroups = True\ngroups,unmatched = rdRGroupDecomposition.RGroupDecompose([lcore],m16,asSmiles=False,asRows=False,options=params)\ntmols = [x for i,x in enumerate(m16) if i not in unmatched]\nPandasTools.RGroupDecompositionToFrame(groups,tmols,include_core=True,redraw_sidechains=True)\n\n[13:50:08] No core matches\n[13:50:08] No core matches\n[13:50:08] No core matches\n[13:50:08] No core matches\n[13:50:08] No core matches\n[13:50:08] No core matches\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMol\nCore\nR1\nR2\n\n\n\n\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n7\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n8\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n9\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThere are other useful parameters to control the calculation in that RGroupDecompositionParameters object, but this post is already getting pretty long, so I’m going to wrap up now and leave exploring those as an exercise for the reader. ;-)"
  },
  {
    "objectID": "posts/2021-08-03-generalized-substructure-search.html",
    "href": "posts/2021-08-03-generalized-substructure-search.html",
    "title": "Generalized substructure search",
    "section": "",
    "text": "[Updated 10.03.2023 by Charles T Hoyt to demonstrate the use of his chembl_downloader] [Updated 19.12.2021 to use new functionality from the 2021.09 RDKit release]\nOver the last couple of releases we’ve added a number of RDKit features which allow useage of more advanced substructure query features and more control over the results returned by substructure searches. These include\n\nChem.AdjustQueryProperties() to tune the results returned by a substructure query\nrdMolEnumerator.Enumerate() to enumerate some V3000 mol block query features (as of the 2021.03 release the supported features are variable attachment points and link nodes)\nrdTautomerQuery.TautomerQuery() to allow tautomer-insensitive substructures search\n\nIn this post I’ll show how to use all of those together to do “generalized substructures searching” with the RDKit. Towards the bottom of the post there are a couple of Python functions which can be used in other scripts to make this process easier. I’ll also try and figure out a good way to get that into a future RDKit release.\nAAs an example, here’s a query:\n\nand here are four ChEMBL molecules returned using that query:\n\n\nfrom rdkit import Chem\nfrom rdkit.Chem import rdMolEnumerator\nfrom rdkit.Chem import rdTautomerQuery\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import IPythonConsole\nIPythonConsole.drawOptions.minFontSize = 10\nDraw.SetComicMode(IPythonConsole.drawOptions)\nfrom rdkit.Chem import rdDepictor\nrdDepictor.SetPreferCoordGen(True)\nimport rdkit\nprint(rdkit.__version__)\nimport time\nprint(time.asctime())\n\n2021.09.3\nSun Dec 19 06:14:00 2021\n\n\nLoad a SubstructLibrary created using ChEMBL 29. The chembl_downloader Python package is used to abstract away downloading and parsing the ChEMBL SDF data. More information can be found in this blog post: https://cthoyt.com/2021/08/04/taming-chembl-sdf.html. The code used to construct this is:\nfrom rdkit import RDLogger\nfrom rdkit import Chem\nfrom rdkit.Chem import rdSubstructLibrary\nimport pickle, time\nimport gzip\nimport chembl_downloader\n\nRDLogger.DisableLog(\"rdApp.warning\")\nwith chembl_downloader.supplier(version=\"29\") as suppl:\n    t1=time.time()\n    data = []\n    for i,mol in enumerate(suppl):\n        if not ((i+1)%50000):\n            print(f\"Processed {i+1} molecules in {(time.time()-t1):.1f} seconds\")\n        if mol is None or mol.GetNumAtoms()&gt;50:\n            continue\n        fp = Chem.PatternFingerprint(mol,fpSize=1024,tautomerFingerprints=True)\n        smi = Chem.MolToSmiles(mol)\n        data.append((smi,fp))\nt2=time.time()\npickle.dump(data,open('../data/chembl29_sssdata.pkl','wb+'))\nt1=time.time()\nmols = rdSubstructLibrary.CachedTrustedSmilesMolHolder()\nfps = rdSubstructLibrary.TautomerPatternHolder(1024)\nfor smi,fp in data:\n    mols.AddSmiles(smi)\n    fps.AddFingerprint(fp)\nlibrary = rdSubstructLibrary.SubstructLibrary(mols,fps)\nt2=time.time()\nprint(f\"That took {t2-t1:.2f} seconds. The library has {len(library)} molecules.\")\npickle.dump(library,open('../data/chembl29_ssslib.pkl','wb+'))\n\nimport pickle\nwith open('./results/chembl29_ssslib.pkl','rb') as inf:\n    sslib = pickle.load(inf)\nprint(f'SubstructLibrary loaded with {len(sslib)} molecules')\n\nSubstructLibrary loaded with 2049078 molecules\n\n\n\nEnumeration\nStart with a query including a variable attachment point:\n\nqry = Chem.MolFromMolBlock('''\n  Mrv2108 08012107372D          \n\n  0  0  0     0  0            999 V3000\nM  V30 BEGIN CTAB\nM  V30 COUNTS 11 11 0 0 0\nM  V30 BEGIN ATOM\nM  V30 1 C -2.4167 7.8734 0 0\nM  V30 2 C -3.7503 7.1034 0 0\nM  V30 3 C -3.7503 5.5633 0 0\nM  V30 4 N -2.4167 4.7933 0 0\nM  V30 5 C -1.083 5.5633 0 0\nM  V30 6 C -1.083 7.1034 0 0\nM  V30 7 N 0.3973 7.5279 0 0\nM  V30 8 N 0.3104 5.0377 0 0\nM  V30 9 C 1.2585 6.2511 0 0\nM  V30 10 * 0.3539 6.2828 0 0\nM  V30 11 C 1.5089 8.2833 0 0\nM  V30 END ATOM\nM  V30 BEGIN BOND\nM  V30 1 1 1 2\nM  V30 2 2 2 3\nM  V30 3 1 3 4\nM  V30 4 2 4 5\nM  V30 5 1 5 6\nM  V30 6 2 1 6\nM  V30 7 1 7 6\nM  V30 8 1 5 8\nM  V30 9 1 8 9\nM  V30 10 2 7 9\nM  V30 11 1 10 11 ENDPTS=(2 8 7) ATTACH=ANY\nM  V30 END BOND\nM  V30 END CTAB\nM  END\n''')\nqry\n\n\n\n\n\n\n\n\n\nbndl = rdMolEnumerator.Enumerate(qry)\nmatches = sslib.GetMatches(bndl)\nprint(f'{len(matches)} matches')\nmols = [sslib.GetMol(x) for x in matches]\n# sort the molecules by number of atoms and preserve the match ID\nsorted_res = sorted(zip(mols,matches),key=lambda x:x[0].GetNumAtoms())\nsorted_mols,sorted_matches = zip(*sorted_res)\nDraw.MolsToGridImage(sorted_mols[:12],legends=[str(x) for x in sorted_matches],molsPerRow=4)\n\n1000 matches\n\n\n\n\n\n\n\n\n\nThose include some addditional rings attached to the core in molecules like 1476, 10083, and 10853. We can prevent that by calling AdjustQueryProperties():\n\nbndl = Chem.MolBundle()\nfor m in rdMolEnumerator.Enumerate(qry):\n    bndl.AddMol(Chem.AdjustQueryProperties(m))\nmatches = sslib.GetMatches(bndl)\nprint(f'{len(matches)} matches')\nmols = [sslib.GetMol(x) for x in matches]\n# sort the molecules by number of atoms and preserve the match ID\nsorted_res = sorted(zip(mols,matches),key=lambda x:x[0].GetNumAtoms())\nsorted_mols,sorted_matches = zip(*sorted_res)\nDraw.MolsToGridImage(sorted_mols[:12],legends=[str(x) for x in sorted_matches],molsPerRow=4)\n\n148 matches\n\n\n\n\n\n\n\n\n\nAn aside: this would be more convenient if AdjustQueryProperties directly supported passing MolBundle objects. That’s something for a future version.\nNow let’s make the query more complex by adding a link node in addition to the variable attachment point:\n\nqry = Chem.MolFromMolBlock('''\n  Mrv2108 08012108062D          \n\n  0  0  0     0  0            999 V3000\nM  V30 BEGIN CTAB\nM  V30 COUNTS 13 13 0 0 0\nM  V30 BEGIN ATOM\nM  V30 1 C -2.4167 7.8734 0 0\nM  V30 2 C -3.7503 7.1034 0 0\nM  V30 3 C -3.7503 5.5633 0 0\nM  V30 4 N -2.4167 4.7933 0 0\nM  V30 5 C -1.083 5.5633 0 0\nM  V30 6 C -1.083 7.1034 0 0\nM  V30 7 N 0.3973 7.5279 0 0\nM  V30 8 N 0.3104 5.0377 0 0\nM  V30 9 C 1.2585 6.2511 0 0\nM  V30 10 * 0.3539 6.2828 0 0\nM  V30 11 C 1.5089 8.2833 0 0\nM  V30 12 C 2.7975 6.1974 0 0\nM  V30 13 N 3.6136 7.5033 0 0\nM  V30 END ATOM\nM  V30 BEGIN BOND\nM  V30 1 1 1 2\nM  V30 2 2 2 3\nM  V30 3 1 3 4\nM  V30 4 2 4 5\nM  V30 5 1 5 6\nM  V30 6 2 1 6\nM  V30 7 1 7 6\nM  V30 8 1 5 8\nM  V30 9 1 8 9\nM  V30 10 2 7 9\nM  V30 11 1 10 11 ENDPTS=(2 8 7) ATTACH=ANY\nM  V30 12 1 9 12\nM  V30 13 1 12 13\nM  V30 END BOND\nM  V30 LINKNODE 1 2 2 12 9 12 13\nM  V30 END CTAB\nM  END\n''')\nqry\n\n\n\n\n\n\n\n\n\nbndl = rdMolEnumerator.Enumerate(qry)\nmatches = sslib.GetMatches(bndl)\nprint(f'{len(matches)} matches')\nmols = [sslib.GetMol(x) for x in matches]\n# sort the molecules by number of atoms and preserve the match ID\nsorted_res = sorted(zip(mols,matches),key=lambda x:x[0].GetNumAtoms())\nsorted_mols,sorted_matches = zip(*sorted_res)\nDraw.MolsToGridImage(sorted_mols[:12],legends=[str(x) for x in sorted_matches],molsPerRow=4)\n\n193 matches\n\n\n\n\n\n\n\n\n\n\n\nEnumeration + tautomer-insensitive queries\nHere we will use the RDKit’s TautomerQuery class to do tautomer-insensitive substructure queries. We start by enumerating the molecules, as above, but then convert each of the results into a TautomerQuery\nTo see what’s going on here it helps to have the result molecules all aligned the same way. In order to do that we also need to generate query molecules with aligned coordinates.\n\nfrom rdkit.Chem import rdFMCS\n\ndef getAlignedQueries(qry):\n    # generate a conformer for the query if we don't have one already\n    if not qry.GetNumConformers():\n        rdDepictor.Compute2DCoords(qry)\n\n    bndl = rdMolEnumerator.Enumerate(qry)\n    \n    # find the MCS of the enumerated molecules:\n    mcs = rdFMCS.FindMCS(bndl)\n    qmcs = Chem.MolFromSmarts(mcs.smartsString)\n    \n    # and now adjust the properties, generate coordinates, and create the TautomerQuery\n    queries = []\n    for q in bndl:\n        q = Chem.AdjustQueryProperties(q)\n        rdDepictor.GenerateDepictionMatching2DStructure(q,qry,refPatt=qmcs)\n        queries.append(rdTautomerQuery.TautomerQuery(q))\n    return queries\n\ndef drawAlignedMols(mols,qry,legends=None,molsPerRow=4):\n    queries = getAlignedQueries(qry)\n    for i,m in enumerate(mols):\n        for q in queries:\n            if q.IsSubstructOf(m):\n                rdDepictor.GenerateDepictionMatching2DStructure(m,q.GetTemplateMolecule())\n    return Draw.MolsToGridImage(mols,legends=legends,molsPerRow=molsPerRow)\n\n\nqry = Chem.MolFromMolBlock('''\n  Mrv2108 08012108222D          \n\n  0  0  0     0  0            999 V3000\nM  V30 BEGIN CTAB\nM  V30 COUNTS 12 12 0 0 0\nM  V30 BEGIN ATOM\nM  V30 1 C -2.4167 7.8734 0 0\nM  V30 2 C -3.7503 7.1034 0 0\nM  V30 3 C -3.7503 5.5633 0 0\nM  V30 4 N -2.4167 4.7933 0 0\nM  V30 5 C -1.083 5.5633 0 0\nM  V30 6 C -1.083 7.1034 0 0\nM  V30 7 N 0.3973 7.5279 0 0\nM  V30 8 N 0.3104 5.0377 0 0\nM  V30 9 C 1.2585 6.2511 0 0\nM  V30 10 * -3.0835 7.4884 0 0\nM  V30 11 [C,N,O] -3.0835 9.7984 0 0\nM  V30 12 * 2.7975 6.1974 0 0\nM  V30 END ATOM\nM  V30 BEGIN BOND\nM  V30 1 1 1 2\nM  V30 2 2 2 3\nM  V30 3 1 3 4\nM  V30 4 2 4 5\nM  V30 5 1 5 6\nM  V30 6 2 1 6\nM  V30 7 1 7 6\nM  V30 8 1 5 8\nM  V30 9 1 8 9\nM  V30 10 2 7 9\nM  V30 11 1 10 11 ENDPTS=(2 2 1) ATTACH=ANY\nM  V30 12 1 9 12\nM  V30 END BOND\nM  V30 END CTAB\nM  END\n''')\nqry\n\n\n\n\n\n\n\n\nStart by doing a tautomer-sensitive query to see how many results we get:\n\nbndl = rdMolEnumerator.Enumerate(qry)\nmatches = []\nfor m in bndl:\n    m = Chem.AdjustQueryProperties(m)\n    matches.extend(sslib.GetMatches(m))\nprint(f'{len(matches)} matches')\nmols = [sslib.GetMol(x) for x in matches]\n\n# sort the molecules by number of atoms and preserve the match ID\nsorted_res = sorted(zip(mols,matches),key=lambda x:x[0].GetNumAtoms())\nsorted_mols,sorted_matches = zip(*sorted_res)\ndrawAlignedMols(sorted_mols[:12],qry,[str(x) for x in sorted_matches])\n\n276 matches\n\n\n\n\n\n\n\n\n\nNow do the tautomer-insensitive version of that and show just the new molecules\n\nbndl = rdMolEnumerator.Enumerate(qry)\nmatches2 = []\nfor m in bndl:\n    m = Chem.AdjustQueryProperties(m)\n    tqry = rdTautomerQuery.TautomerQuery(m)\n    matches2.extend(sslib.GetMatches(tqry))\nextras = set(matches2).difference(matches)\nprint(f'{len(matches2)} matches, {len(extras)} are non-overlapping')\nmols = [sslib.GetMol(x) for x in extras]\n# sort the molecules by number of atoms and preserve the match ID\nsorted_res = sorted(zip(mols,matches),key=lambda x:x[0].GetNumAtoms())\nsorted_mols,sorted_matches = zip(*sorted_res)\ndrawAlignedMols(sorted_mols[:12],qry,[str(x) for x in sorted_matches])\n\n288 matches, 12 are non-overlapping\n\n\n\n\n\n\n\n\n\n\n\nBring it all together\nNow let’s put that all together in one function and include the information required to do atom highlighting in the structure drawings\n\nfrom rdkit.Chem import rdFMCS\nfrom rdkit.Chem import rdTautomerQuery\n\n# this function does the enumeration of the queries\ndef getAlignedQueries(qry,tautomerInsensitive=True):\n    if not qry.GetNumConformers():\n        rdDepictor.Compute2DCoords(qry)\n    bndl = rdMolEnumerator.Enumerate(qry)\n    \n    # find the MCS of the enumerated molecules:\n    mcs = rdFMCS.FindMCS(bndl)\n    qmcs = Chem.MolFromSmarts(mcs.smartsString)\n    \n    # and now adjust the properties, generate coordinates, and create the TautomerQuery\n    queries = []\n    for q in bndl:\n        q = Chem.AdjustQueryProperties(q)\n        rdDepictor.GenerateDepictionMatching2DStructure(q,qry,refPatt=qmcs)\n        if tautomerInsensitive:\n            q = rdTautomerQuery.TautomerQuery(q)\n        queries.append(q)\n    return queries\n\n\ndef generalizedSubstructureSearch(query,sslib,tautomerInsensitive=True,alignResults=True,\n                                  maxResults=1000):\n    queries = getAlignedQueries(query,tautomerInsensitive=tautomerInsensitive)\n    matches = []\n    for q in queries:\n        matches.extend(sslib.GetMatches(q,maxResults=maxResults))\n    tmols = [(x,sslib.GetMol(x)) for x in matches]\n    mols = []\n    for idx,mol in sorted(tmols,key=lambda x:x[1].GetNumAtoms()):\n        match = None\n        if(alignResults):\n            for q in queries:\n                if tautomerInsensitive:\n                    match = q.GetSubstructMatch(mol)\n                    if match:\n                        rdDepictor.GenerateDepictionMatching2DStructure(mol,q.GetTemplateMolecule())\n                        break\n                else:\n                    match = mol.GetSubstructMatch(q)\n                    if match:\n                        rdDepictor.GenerateDepictionMatching2DStructure(mol,q)\n                        break\n                \n        mols.append((idx,mol,match))\n        if len(mols)&gt;=maxResults:\n            break\n    return mols\n    \n\n\nres = generalizedSubstructureSearch(qry,sslib)\nids,mols,matchAtoms = zip(*res)\nprint(f'{len(mols)} results')\nDraw.MolsToGridImage(mols[:12],legends=[str(x) for x in ids],highlightAtomLists=matchAtoms,\n                     molsPerRow=4)\n\n288 results\n\n\n\n\n\n\n\n\n\n\nres = generalizedSubstructureSearch(qry,sslib,tautomerInsensitive=False)\nids,mols,matchAtoms = zip(*res)\nprint(f'{len(mols)} results')\nDraw.MolsToGridImage(mols[:12],legends=[str(x) for x in ids],highlightAtomLists=matchAtoms,\n                     molsPerRow=4)\n\n276 results\n\n\n\n\n\n\n\n\n\nLast example, link nodes + variable attachment + tautomer enumeration\n\nqry = Chem.MolFromMolBlock('''\n  Mrv2108 08032106392D          \n\n  0  0  0     0  0            999 V3000\nM  V30 BEGIN CTAB\nM  V30 COUNTS 13 13 0 0 0\nM  V30 BEGIN ATOM\nM  V30 1 C -2.4167 7.8734 0 0\nM  V30 2 C -3.7503 7.1034 0 0\nM  V30 3 C -3.7503 5.5633 0 0\nM  V30 4 N -2.4167 4.7933 0 0\nM  V30 5 C -1.083 5.5633 0 0\nM  V30 6 C -1.083 7.1034 0 0\nM  V30 7 N 0.3973 7.5279 0 0\nM  V30 8 N 0.3104 5.0377 0 0\nM  V30 9 C 1.2585 6.2511 0 0\nM  V30 10 * -3.0835 7.4884 0 0\nM  V30 11 [C,N,O] -3.0835 9.7984 0 0\nM  V30 12 * 2.7975 6.1974 0 0\nM  V30 13 N 3.6136 7.5033 0 0\nM  V30 END ATOM\nM  V30 BEGIN BOND\nM  V30 1 1 1 2\nM  V30 2 2 2 3\nM  V30 3 1 3 4\nM  V30 4 2 4 5\nM  V30 5 1 5 6\nM  V30 6 2 1 6\nM  V30 7 1 7 6\nM  V30 8 1 5 8\nM  V30 9 1 8 9\nM  V30 10 2 7 9\nM  V30 11 1 10 11 ENDPTS=(3 3 2 1) ATTACH=ANY\nM  V30 12 1 9 12\nM  V30 13 1 12 13\nM  V30 END BOND\nM  V30 LINKNODE 1 3 2 12 9 12 13\nM  V30 END CTAB\nM  END\n''')\nqry\n\n\n\n\n\n\n\n\n\nres = generalizedSubstructureSearch(qry,sslib)\nids,mols,matchAtoms = zip(*res)\nprint(f'{len(mols)} results')\nDraw.MolsToGridImage(mols[:12],legends=[str(x) for x in ids],highlightAtomLists=matchAtoms,\n                     molsPerRow=4)\n\n24 results\n\n\n\n\n\n\n\n\n\nImage for the blog post summary:\n\nkeep = [0,1,4,6]\nids,mols,matchAtoms = zip(*[res[x] for x in keep])\nDraw.MolsToGridImage(mols[:12],legends=[str(x) for x in ids],highlightAtomLists=matchAtoms,\n                    molsPerRow=2,subImgSize=(300,250))"
  },
  {
    "objectID": "posts/2023-11-11-usingmultithreadedreaders.html",
    "href": "posts/2023-11-11-usingmultithreadedreaders.html",
    "title": "Using the Multithreaded Mol Readers",
    "section": "",
    "text": "As part of the 2020 Google Summer of Code, Shrey Aryan (Github: @shrey183) added new versions of the SmilesMolSupplier and SDMolSupplier to the RDKit which are capable of taking advantage of the multiple cores present on modern CPUs by reading multiple molecules at once. Aside from a passing mention in a blog post a few years ago, I have never really discussed these. This blog post aims to clear that up.\nThe MultithreadedSDMolSupplier and MultithreadedSmilesMolSupplier are intended to be drop-in replacements for SDMolSupplier and SmilesMolSupplier. They should take all of the same arguments and can be used more or less the same way in your code. Both classes take an additional keyword argument, numWriterThreads, which controls the number of molecules which can be read in parallel. The default value of numWriterThreads is 1 (not using more than one thread unless you ask for it is standard practice in the RDKit; I suppose we can/should consider revisiting that in this case). The major difference in usage is that the multi-threaded suppliers are not guaranteed to return the molecules in the same order they are found in the input file; the molecules are returned in the order in which processing is finished. There’s more on this below.\nAs a final aside: please note that, as the documentation says the API for using the two multithreaded suppliers should still be considered to be experimental and, as such, could change a bit between releases.\nThe other part of Shrey’s project was a “generalized file reader” that makes it easier to read molecules from standard input file types by trying to automatically determine the type of the file. Shrey ran out of time to do the python wrappers for that and I still haven’t managed to do it myself… that’s a ToDo for me.\nIf you’re interested in more details about Shrey’s project, the pull request has a summary of the GSoC project.\nfrom rdkit import Chem\n\nimport rdkit\nprint(rdkit.__version__)\n\nimport matplotlib.pylab as plt\n%matplotlib inline\n\n2023.09.2\nfilename = '/scratch/RDKit_git/Regress/Data/znp.50k.smi'\nSimple example of reading all molecules from the file:\nms = [m for m in Chem.MultithreadedSmilesMolSupplier(filename,numWriterThreads=5) if m is not None]\nThis is significantly faster than using a standard SmilesMolSupplier:\n%timeit ms = [m for m in Chem.SmilesMolSupplier(filename) if m is not None]\n\n6.33 s ± 47.8 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n%timeit ms = [m for m in Chem.MultithreadedSmilesMolSupplier(filename,numWriterThreads=5) if m is not None]\n\n1.41 s ± 9.41 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\nHere’s a demo of using the multithreaded supplier in a filter: only returning the molecules which match a substructure query.\nqry = Chem.MolFromSmarts('Fc1[c,n]cccc1')\n%timeit ms = [m for m in Chem.SmilesMolSupplier(filename) if m is not None and m.HasSubstructMatch(qry)]\n\n7.02 s ± 31.3 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n%timeit ms = [m for m in Chem.MultithreadedSmilesMolSupplier(filename,numWriterThreads=5) if m is not None and m.HasSubstructMatch(qry)]\n\n1.44 s ± 20.8 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\nThe same thing works for SDF files:\nsdfilename = '/scratch/RDKit_git/Regress/Data/znp.50k.sdf'\n%timeit ms = [m for m in Chem.SDMolSupplier(sdfilename) if m is not None]\n\n7.24 s ± 11.1 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n%timeit ms = [m for m in Chem.MultithreadedSDMolSupplier(sdfilename,numWriterThreads=5) if m is not None]\n\n1.94 s ± 75.1 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\nAnother demo of generating fingerprints faster:\nfrom rdkit.Chem import rdFingerprintGenerator\nfpg = rdFingerprintGenerator.GetMorganGenerator()\n%timeit fps = [fpg.GetFingerprint(m) for m in Chem.SmilesMolSupplier(filename) if m is not None]\n\n10.9 s ± 37.4 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n%timeit fps = [fpg.GetFingerprint(m) for m in Chem.MultithreadedSmilesMolSupplier(filename,numWriterThreads=5) if m is not None]\n\n4.81 s ± 72.3 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\nOf course the differences here are less dramatic since the speedup only happens for reading the molecules; we’re still generating the fingerprints themselves in a single thread.\nimport time\ntimes = {}\nfor nthreads in range(1,11):\n    t1 = time.time()\n    k = [m.GetNumAtoms() for m in Chem.MultithreadedSmilesMolSupplier(filename,numWriterThreads=nthreads) if m is not None]\n    t2 = time.time()\n    times[nthreads] = t2-t1\n    print(f'{nthreads} threads, {t2-t1:.1f} seconds')\n\n1 threads, 6.6 seconds\n2 threads, 3.4 seconds\n3 threads, 2.4 seconds\n4 threads, 1.9 seconds\n5 threads, 1.5 seconds\n6 threads, 1.3 seconds\n7 threads, 1.2 seconds\n8 threads, 1.1 seconds\n9 threads, 1.1 seconds\n10 threads, 1.1 seconds\nplt.figure(figsize=(6,6))\nplt.scatter(times.keys(),times.values());\nplt.plot(times.keys(),times.values());\nplt.xlabel('num threads')\nplt.ylabel('time (s)');"
  },
  {
    "objectID": "posts/2023-11-11-usingmultithreadedreaders.html#an-important-detail-to-keep-in-mind",
    "href": "posts/2023-11-11-usingmultithreadedreaders.html#an-important-detail-to-keep-in-mind",
    "title": "Using the Multithreaded Mol Readers",
    "section": "An important detail to keep in mind",
    "text": "An important detail to keep in mind\nThe standard MolSuppliers return the molecules in the order that they were found in the input file, but the MultithreadedMolSuppliers return them in a non-deterministic order (it’s the order in which the individual threads end up finishing processing the molecules):\n\nnms_st = [m.GetProp('_Name') for m in Chem.SDMolSupplier(sdfilename) if m is not None]\nnms_mt = [m.GetProp('_Name') for m in Chem.MultithreadedSDMolSupplier(sdfilename,numWriterThreads=5) if m is not None]\n\n\nnms_st[:5]\n\n['ZINC01628630',\n 'ZINC71389266',\n 'ZINC03847541',\n 'ZINC67911113',\n 'ZINC41584184']\n\n\n\nnms_mt[:5]\n\n['ZINC01628630',\n 'ZINC03847541',\n 'ZINC71389266',\n 'ZINC02386460',\n 'ZINC02124320']\n\n\nSo when working with these, instead of tracking results using the index of the molecule, it’s better to use a property read from the file, like the _Name:\n\nsmis = dict([(m.GetProp('_Name'),Chem.MolToSmiles(m)) for m in Chem.MultithreadedSDMolSupplier(sdfilename,numWriterThreads=5) if m is not None])\n\n\nsmis['ZINC00000135']\n\n'OCC(O)COc1ccc(Cl)cc1'\n\n\nOr you can use the supplier outside of a list comprehension, and take advantage of the GetLastRecordId() function, which returns the index+1 of the last molecule read from the input file:\n\nwith Chem.MultithreadedSDMolSupplier(sdfilename,numWriterThreads=5) as suppl:\n    mol_order = dict([(suppl.GetLastRecordId(),m) for m in suppl if m is not None])\n\n\ntsuppl = Chem.SDMolSupplier(sdfilename)\nfor i in range(5):\n    print(tsuppl[i].GetProp('_Name'),mol_order[i+1].GetProp('_Name'))\n\nZINC01628630 ZINC01628630\nZINC71389266 ZINC71389266\nZINC03847541 ZINC03847541\nZINC67911113 ZINC67911113\nZINC41584184 ZINC41584184\n\n\nIf you use this, don’t forget the “off by one” nature of the record IDs!"
  },
  {
    "objectID": "posts/2020-11-18-sphere-exclusion-clustering.html",
    "href": "posts/2020-11-18-sphere-exclusion-clustering.html",
    "title": "Sphere exclusion clustering with the RDKit",
    "section": "",
    "text": "Roger Sayle contributed an implementation of sphere-exclusion picking to the RDKit as part of the 2019.09 release and I recently realized that I’d never blogged about that code or how to use it to do compound clustering. So here’s a short(ish) one.\nThe RDKit has had an implementation of the MaxMin algorithm for picking diverse compounds for quite a while (Roger made this a lot faster back in 2017). The input to the MaxMin picker is the number of diverse compounds you want. The new algorithm is different: you provide the minimum distance allowed between the compounds picked and it returns a set of compounds satisfying that constraint.\nBoth of these methods for picking diverse compounds can then be converted into clustering algorithms by defining those picked points to be cluster centroids and then assigning non-picked compounds to the nearest centroid. We’ll do that here for the sphere-exclusion algorithm.\nFurther reading: - for more about the sphere-exclusion picker and/or learn how it works: here’s Roger’s UGM presentation - Roger’s UGM presentation describing his fast implementation of the MaxMin picker is here - Tim Dudgeon’s guest post on this blog provides a nice overview of the new MaxMin picker.\nfrom rdkit import Chem\nfrom rdkit import DataStructs\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit.Chem import rdDepictor, rdMolDescriptors\nimport time\nrdDepictor.SetPreferCoordGen(True)\nimport rdkit\n%pylab inline\nprint(rdkit.__version__)\n\nPopulating the interactive namespace from numpy and matplotlib\n2020.09.1"
  },
  {
    "objectID": "posts/2020-11-18-sphere-exclusion-clustering.html#looking-at-the-clusters",
    "href": "posts/2020-11-18-sphere-exclusion-clustering.html#looking-at-the-clusters",
    "title": "Sphere exclusion clustering with the RDKit",
    "section": "Looking at the clusters",
    "text": "Looking at the clusters\nLet’s look at the compounds inside a couple of clusters in order to see how closely related they seem to be:\n\nclusts12 = [x for x in clusters if len(clusters[x])==12]\nlen(clusts12)\n\n10\n\n\n\nDraw.MolsToGridImage([ms[x] for x in clusters[clusts12[0]]],molsPerRow=4)\n\n\n\n\n\n\n\n\nWe can also look at the intra-cluster similarities\n\ndef intracluster_similarities(cluster,fps):\n    res = []\n    cfps = [fps[x] for x in cluster]\n    for i,fpid in enumerate(cluster):\n        tres = DataStructs.BulkTanimotoSimilarity(cfps[i],cfps)\n        del tres[i]\n        res.extend(tres)\n    return res\n        \n\n\nhist(intracluster_similarities(clusters[clusts12[0]],fps));\nxlabel('Similarity');\n\n\n\n\n\n\n\n\n\nDraw.MolsToGridImage([ms[x] for x in clusters[clusts12[1]]],molsPerRow=4)\n\n\n\n\n\n\n\n\n\nhist(intracluster_similarities(clusters[clusts12[1]],fps));\nxlabel('Similarity');\n\n\n\n\n\n\n\n\nBoth clusters are clearly include related compounds"
  },
  {
    "objectID": "posts/2020-11-18-sphere-exclusion-clustering.html#decreasing-the-sphere-radius",
    "href": "posts/2020-11-18-sphere-exclusion-clustering.html#decreasing-the-sphere-radius",
    "title": "Sphere exclusion clustering with the RDKit",
    "section": "Decreasing the sphere radius",
    "text": "Decreasing the sphere radius\nWhat about if we make the clusters tighter by decreasing the threshold distance?\n\nthresh = 0.35 # &lt;- minimum distance between cluster centroids\npicks = lp.LazyBitVectorPick(fps,len(fps),thresh)\nprint(len(picks))\n\n1832\n\n\n\nclusters = assignPointsToClusters(picks,fps)\nhist([len(clusters[x]) for x in clusters]);\nxlabel('cluster size');\n\n\n\n\n\n\n\n\nWe’ve got more clusters and they are smaller. No big surprise\nAnd let’s look at a couple of those\n\nclusts12 = [x for x in clusters if len(clusters[x])==12]\nlen(clusts12)\n\n17\n\n\n\nDraw.MolsToGridImage([ms[x] for x in clusters[clusts12[0]]],molsPerRow=4)\n\n\n\n\n\n\n\n\n\nhist(intracluster_similarities(clusters[clusts12[0]],fps));\nxlabel('Similarity');\n\n\n\n\n\n\n\n\n\nDraw.MolsToGridImage([ms[x] for x in clusters[clusts12[1]]],molsPerRow=4)\n\n\n\n\n\n\n\n\n\nhist(intracluster_similarities(clusters[clusts12[1]],fps));\nxlabel('Similarity');\n\n\n\n\n\n\n\n\nAgain, those mostly look quite similar to each other, maybe even more similar than before?"
  },
  {
    "objectID": "posts/2020-11-18-sphere-exclusion-clustering.html#impact-of-sphere-radius-on-the-number-of-clusters",
    "href": "posts/2020-11-18-sphere-exclusion-clustering.html#impact-of-sphere-radius-on-the-number-of-clusters",
    "title": "Sphere exclusion clustering with the RDKit",
    "section": "Impact of sphere radius on the number of clusters",
    "text": "Impact of sphere radius on the number of clusters\nLook at the number of clusters as a function of the threshold\n\nresults = []\nfor thresh in arange(0.65,0.05,-0.05):\n    tpicks = lp.LazyBitVectorPick(fps,len(fps),thresh)\n    results.append([thresh,len(tpicks)])\n\n\nscatter([x for x,y in results],[y for x,y in results]);\nylabel('number of clusters')\nxlabel('distance threshold')\n\nText(0.5, 0, 'distance threshold')"
  },
  {
    "objectID": "posts/2023-01-18-fingerprint-generator-tutorial.html",
    "href": "posts/2023-01-18-fingerprint-generator-tutorial.html",
    "title": "FingerprintGenerator tutorial",
    "section": "",
    "text": "The RDKit supports a number of different fingerprinting algorithms and fingerprint types. For historical reasons (i.e. “bad decisions made a long time ago”) these are accessed via an inconsistent and confusing set of function names. Boran Adas, a student doing a Google Summer of Code project back in 2018, added a new API with a consistent interface for a number of the fingerprint types. I’ve mentioned this a few times and used it in some blog posts, but it has remained “underdocumented”. This blog post is an attempt to remedy that. Some of this content will end up in a future version of the RDKit docs.\nfrom rdkit import Chem\nfrom rdkit.Chem import rdFingerprintGenerator\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit import DataStructs\nimport rdkit\nprint(rdkit.__version__)\n%pylab inline\n\n2022.09.1\n%pylab is deprecated, use %matplotlib inline and import the required libraries.\nPopulating the interactive namespace from numpy and matplotlib\nStart by getting some molecules to work with\nms = [x for x in Chem.SmilesMolSupplier('../data/BLSets_selected_actives.txt') if x.GetProp('_Name')=='CHEMBL204']\nlen(ms)\n\n452\nms[0]\n\n\n\n\n\n\n\ntarget_index\n0"
  },
  {
    "objectID": "posts/2023-01-18-fingerprint-generator-tutorial.html#count-simulation",
    "href": "posts/2023-01-18-fingerprint-generator-tutorial.html#count-simulation",
    "title": "FingerprintGenerator tutorial",
    "section": "Count simulation",
    "text": "Count simulation\nIt’s possible to simulate count-based fingerprints using bit vector fingerprints. I’ve discussed this in another blog post and there’s a description in the section of the RDKit book about atom pair and topological torsion fingerprints, so I won’t get into heavy detail here.\nThe fingerprint generators allow you to use count simulation for every fingerprint algorithm. It’s enabled by default for atom pairs and topological torsions, but you can also use it with the other fingerprints by using the keyword argument countSimulation=True when constructing the fingerprints\nHere’s a quick demo of the impact that has with the Morgan fingerprint for the set of molecules we loaded here.\n\nfrom rdkit import DataStructs\nfpgen = rdFingerprintGenerator.GetMorganGenerator(radius=2,fpSize=1024)\n# for a direct comparison we need to use a fingerprint 4 times as long:\nsimfpgen = rdFingerprintGenerator.GetMorganGenerator(radius=2,fpSize=4096,countSimulation=True)\nfps = [fpgen.GetFingerprint(m) for m in ms]\ncountfps = [fpgen.GetCountFingerprint(m) for m in ms]\nsimfps = [simfpgen.GetFingerprint(m) for m in ms]\n\ncountsims = []\nsims = []\nsimsims = []\nfor i in range(len(ms)//2):\n    for j in range(i+i,len(ms)//2):\n        countsims.extend(DataStructs.BulkTanimotoSimilarity(countfps[i],countfps[j:]))\n        sims.extend(DataStructs.BulkTanimotoSimilarity(fps[i],fps[j:]))\n        simsims.extend(DataStructs.BulkTanimotoSimilarity(simfps[i],simfps[j:]))\n\n\nfrom scipy import stats\n\n\nbvr,_ = stats.spearmanr(countsims,sims)\nsimr,_ = stats.spearmanr(countsims,simsims)\nprint(bvr,simr)\n\n0.8353509796090909 0.9430970250118949\n\n\n\nfigsize(12,6)\nsubplot(1,2,1)\nhexbin(countsims,sims,bins='log')\nplot((0,1),(0,1),'k-')\ntitle(f'bit vector similarity, r={bvr:.2f}')\nxlabel('count similarity')\nsubplot(1,2,2)\nhexbin(countsims,simsims,bins='log')\nplot((0,1),(0,1),'k-')\ntitle(f'simulated counts similarity, r={simr:.2f}')\nxlabel('count similarity');\n\n\n\n\n\n\n\n\n\nYou can see that, in general, the count simulation results in closer similarity values."
  },
  {
    "objectID": "posts/2023-01-18-fingerprint-generator-tutorial.html#rooted-fingerprints",
    "href": "posts/2023-01-18-fingerprint-generator-tutorial.html#rooted-fingerprints",
    "title": "FingerprintGenerator tutorial",
    "section": "“Rooted” fingerprints",
    "text": "“Rooted” fingerprints\nIt’s often useful to generate fingerprints which only include bits from particular atoms. We can easily do this with the fingerprint generators\n\nfrom rdkit.Chem import Draw\nopts = Draw.MolDrawOptions()\nopts.addAtomIndices = True\nDraw.MolToImage(ibuprofen,size=(350,300),options=opts)\n\n\n\n\n\n\n\n\n\n# define a query which returns the C atom from a carboxyl group:\ncarboxyl = Chem.MolFromSmarts('[$(C(=O)[OH,O-])]')\nmatches = [x[0] for x in ibuprofen.GetSubstructMatches(carboxyl)]\nmatches\n\n[12]\n\n\n\nttgen = rdFingerprintGenerator.GetTopologicalTorsionGenerator()\n\nao = rdFingerprintGenerator.AdditionalOutput()\nao.AllocateBitPaths()\n\nfp = ttgen.GetSparseCountFingerprint(ibuprofen,fromAtoms=matches,additionalOutput=ao)\nao.GetBitPaths()\n\n{5645816361: ((6, 7, 10, 12), (8, 7, 10, 12))}\n\n\nWe can do the same thing with RDKit fingerprints, but since those involve bond indices, we need to see the those:\n\nfrom rdkit.Chem import Draw\nopts = Draw.MolDrawOptions()\nopts.addBondIndices = True\nDraw.MolToImage(ibuprofen,size=(350,300),options=opts)\n\n\n\n\n\n\n\n\n\nrdkgen = rdFingerprintGenerator.GetRDKitFPGenerator(maxPath=3, # &lt;- max of 3 bonds in the subgraph\n                                                    numBitsPerFeature=1) # &lt;- only set one bit per subgraph (the default is 2)\n\nao = rdFingerprintGenerator.AdditionalOutput()\nao.AllocateBitPaths()\n\nfp = rdkgen.GetSparseCountFingerprint(ibuprofen,fromAtoms=matches,additionalOutput=ao)\nao.GetBitPaths()\n\n{733740352: ((11, 9, 7), (11, 9, 6)),\n 1444346785: ((12, 13),),\n 1461736417: ((11, 12),),\n 1480085840: ((11, 12, 10),),\n 1524090560: ((11, 13),),\n 1728147184: ((11, 13, 12),),\n 1940446997: ((11, 10),),\n 2001612136: ((11, 9),),\n 2172716083: ((12,),),\n 2821383998: ((11, 13, 9),),\n 3146241850: ((11, 10, 9),),\n 3508377372: ((11, 12, 9),),\n 3977409745: ((11, 13, 10),),\n 4274652475: ((13,),),\n 4275705116: ((11,),)}\n\n\nSince the RDKit fingerprint can include branched subgraphs (not just linear paths like topological torsions), there’s no concept of a “start” or “central” atom, so we get all subgraphs which include bonds involving the carboxyl C - in this case bonds 11, 12, and 13\nIn both of the examples above I used GetSparseCountFingerprint(), but the fromAtoms argument works with all of the fingerprint generation functions."
  },
  {
    "objectID": "posts/2023-01-18-fingerprint-generator-tutorial.html#working-with-numpy",
    "href": "posts/2023-01-18-fingerprint-generator-tutorial.html#working-with-numpy",
    "title": "FingerprintGenerator tutorial",
    "section": "Working with numpy",
    "text": "Working with numpy\nIf you’re generating fingerprints and it would be useful to have them represented as numpy arrays (for example, if you’re using the FPs with scikit-learn), there are two convenience functions for directly getting numpy arrays from the fingerprint generators:\n\nimport numpy as np\n\nnp_bits = rdkgen.GetFingerprintAsNumPy(ibuprofen)\nnp_bits\n\narray([0, 0, 0, ..., 0, 0, 0], dtype=uint8)\n\n\n\nnp_counts = rdkgen.GetCountFingerprintAsNumPy(ibuprofen)\nnp_counts\n\narray([0, 0, 0, ..., 0, 0, 0], dtype=uint32)\n\n\nthose arrays are each as long as the generator’s fingerprint size (2048 by default):\n\nprint(np_bits.size)\nprint(np_counts.size)\n\n2048\n2048"
  },
  {
    "objectID": "posts/2023-01-18-fingerprint-generator-tutorial.html#saving-info-about-the-fingerprints",
    "href": "posts/2023-01-18-fingerprint-generator-tutorial.html#saving-info-about-the-fingerprints",
    "title": "FingerprintGenerator tutorial",
    "section": "Saving info about the fingerprints",
    "text": "Saving info about the fingerprints\nThe fingerprint generators also provide a simple way to get a text string describing the parameters used to generate fingerprints: the GetInfoString() method:\n\nfpg = rdFingerprintGenerator.GetMorganGenerator(radius=2,fpSize=2048)\nfpg.GetInfoString()\n\n'Common arguments : countSimulation=0 fpSize=2048 bitsPerFeature=1 includeChirality=0 --- MorganArguments onlyNonzeroInvariants=0 radius=2 --- MorganEnvironmentGenerator --- MorganInvariantGenerator includeRingMembership=1 --- MorganInvariantGenerator useBondTypes=1 useChirality=0'\n\n\n\nfpg = rdFingerprintGenerator.GetRDKitFPGenerator()\nfpg.GetInfoString()\n\n'Common arguments : countSimulation=0 fpSize=2048 bitsPerFeature=2 includeChirality=0 --- RDKitFPArguments minPath=1 maxPath=7 useHs=1 branchedPaths=1 useBondOrder=1 --- RDKitFPEnvGenerator --- RDKitFPAtomInvGenerator --- No bond invariants generator'"
  },
  {
    "objectID": "posts/2021-05-18-fingerprint-thresholds1.html",
    "href": "posts/2021-05-18-fingerprint-thresholds1.html",
    "title": "Thresholds for “random” in fingerprints the RDKit supports",
    "section": "",
    "text": "This is an updated version of a post. The original version of the notebook can be found in github.\nA frequent question that comes up when considering fingerprint similarity is: “What threshold should I use to determine what a neighbor is?” The answer is poorly defined. Of course it depends heavily on the details of the fingerprint, but there’s also a very subjective component: you want to pick a low enough threshold that you’re sure you won’t miss anything, but you don’t want to pick up too much noise.\nThe goal here is to systematically come up with some guidelines that can be used for fingerprints supported within the RDKit. We will do that by looking a similarities between random “drug-like” (MW&lt;600) molecules picked from ChEMBL.\nFor the analysis, the 25K similarity values are sorted and the values at particular threshold are examined.\nThere’s a fair amount of code and results below, so here’s the summary table. To help interpret this: 22500 of the 25000 pairs (90%) have a MACCS keys similarity value less than 0.528.\nfrom rdkit import Chem\nfrom rdkit.Chem import rdMolDescriptors\nfrom rdkit.Avalon import pyAvalonTools\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit import rdBase\nfrom rdkit import DataStructs\nfrom collections import defaultdict\nimport pickle,random,gzip\nprint(rdBase.rdkitVersion)\nimport time\nprint(time.asctime())\n%pylab inline\n\n2021.03.1\nTue May 18 06:44:23 2021\nPopulating the interactive namespace from numpy and matplotlib\n\n\n/home/glandrum/miniconda3/envs/rdkit_blog/lib/python3.9/site-packages/IPython/core/magics/pylab.py:159: UserWarning: pylab import has clobbered these variables: ['random']\n`%matplotlib` prevents importing * from pylab and numpy\n  warn(\"pylab import has clobbered these variables: %s\"  % clobbered +"
  },
  {
    "objectID": "posts/2021-05-18-fingerprint-thresholds1.html#count-based",
    "href": "posts/2021-05-18-fingerprint-thresholds1.html#count-based",
    "title": "Thresholds for “random” in fingerprints the RDKit supports",
    "section": "count based",
    "text": "count based\n\ncompareFPs(ms1,ms2,lambda x:rdMolDescriptors.GetMorganFingerprint(x,0),\"Morgan0 (counts)\")\n\n0.7 0.42857142857142855\n0.8 0.47058823529411764\n0.9 0.525\n0.95 0.5675675675675675\n0.99 0.6511627906976745\n\n\n\n\n\n\n\n\n\n\ncompareFPs(ms1,ms2,lambda x:rdMolDescriptors.GetMorganFingerprint(x,1),\"Morgan1 (counts)\")\n\n0.7 0.2653061224489796\n0.8 0.2926829268292683\n0.9 0.3333333333333333\n0.95 0.36363636363636365\n0.99 0.42857142857142855\n\n\n\n\n\n\n\n\n\n\ncompareFPs(ms1,ms2,lambda x:rdMolDescriptors.GetMorganFingerprint(x,2),\"Morgan2 (counts)\")\n\n0.7 0.18110236220472442\n0.8 0.20125786163522014\n0.9 0.22916666666666666\n0.95 0.2523364485981308\n0.99 0.304635761589404\n\n\n\n\n\n\n\n\n\n\ncompareFPs(ms1,ms2,lambda x:rdMolDescriptors.GetMorganFingerprint(x,3),\"Morgan3 (counts)\")\n\n0.7 0.140625\n0.8 0.1557377049180328\n0.9 0.17751479289940827\n0.95 0.19607843137254902\n0.99 0.23841059602649006"
  },
  {
    "objectID": "posts/2021-05-18-fingerprint-thresholds1.html#bit-vector-based",
    "href": "posts/2021-05-18-fingerprint-thresholds1.html#bit-vector-based",
    "title": "Thresholds for “random” in fingerprints the RDKit supports",
    "section": "bit-vector based",
    "text": "bit-vector based\n\ncompareFPs(ms1,ms2,lambda x:rdMolDescriptors.GetHashedMorganFingerprint(x,0,1024),\"Morgan0 (bits)\")\n\n0.7 0.43478260869565216\n0.8 0.475\n0.9 0.5294117647058824\n0.95 0.5714285714285714\n0.99 0.65625\n\n\n\n\n\n\n\n\n\n\ncompareFPs(ms1,ms2,lambda x:rdMolDescriptors.GetHashedMorganFingerprint(x,1,1024),\"Morgan1 (bits)\")\n\n0.7 0.2727272727272727\n0.8 0.30120481927710846\n0.9 0.34065934065934067\n0.95 0.37142857142857144\n0.99 0.4342105263157895\n\n\n\n\n\n\n\n\n\n\ncompareFPs(ms1,ms2,lambda x:rdMolDescriptors.GetHashedMorganFingerprint(x,2,1024),\"Morgan2 (bits)\")\n\n0.7 0.19708029197080293\n0.8 0.2169811320754717\n0.9 0.24603174603174602\n0.95 0.2689655172413793\n0.99 0.3217391304347826\n\n\n\n\n\n\n\n\n\n\ncompareFPs(ms1,ms2,lambda x:rdMolDescriptors.GetHashedMorganFingerprint(x,3,1024),\"Morgan3 (bits)\")\n\n0.7 0.16477272727272727\n0.8 0.18072289156626506\n0.9 0.20261437908496732\n0.95 0.2222222222222222\n0.99 0.26356589147286824"
  },
  {
    "objectID": "posts/2021-05-18-fingerprint-thresholds1.html#count-based-1",
    "href": "posts/2021-05-18-fingerprint-thresholds1.html#count-based-1",
    "title": "Thresholds for “random” in fingerprints the RDKit supports",
    "section": "count based",
    "text": "count based\n\ncompareFPs(ms1,ms2,lambda x:rdMolDescriptors.GetMorganFingerprint(x,0,useFeatures=True),\"FeatMorgan0 (counts)\")\n\n0.7 0.5833333333333334\n0.8 0.6296296296296297\n0.9 0.6896551724137931\n0.95 0.7368421052631579\n0.99 0.8181818181818182\n\n\n\n\n\n\n\n\n\n\ncompareFPs(ms1,ms2,lambda x:rdMolDescriptors.GetMorganFingerprint(x,1,useFeatures=True),\"FeatMorgan1 (counts)\")\n\n0.7 0.3902439024390244\n0.8 0.42528735632183906\n0.9 0.47368421052631576\n0.95 0.5106382978723404\n0.99 0.5813953488372093\n\n\n\n\n\n\n\n\n\n\ncompareFPs(ms1,ms2,lambda x:rdMolDescriptors.GetMorganFingerprint(x,2,useFeatures=True),\"FeatMorgan2 (counts)\")\n\n0.7 0.272\n0.8 0.29770992366412213\n0.9 0.3333333333333333\n0.95 0.36363636363636365\n0.99 0.424\n\n\n\n\n\n\n\n\n\n\ncompareFPs(ms1,ms2,lambda x:rdMolDescriptors.GetMorganFingerprint(x,3,useFeatures=True),\"FeatMorgan3 (counts)\")\n\n0.7 0.2087378640776699\n0.8 0.22818791946308725\n0.9 0.2558139534883721\n0.95 0.2785714285714286\n0.99 0.3275862068965517"
  },
  {
    "objectID": "posts/2021-05-18-fingerprint-thresholds1.html#bit-vectors",
    "href": "posts/2021-05-18-fingerprint-thresholds1.html#bit-vectors",
    "title": "Thresholds for “random” in fingerprints the RDKit supports",
    "section": "bit vectors",
    "text": "bit vectors\n\ncompareFPs(ms1,ms2,lambda x:rdMolDescriptors.GetHashedMorganFingerprint(x,0,1024,useFeatures=True),\"FeatMorgan0 (bits)\")\n\n0.7 0.5833333333333334\n0.8 0.6296296296296297\n0.9 0.6896551724137931\n0.95 0.7368421052631579\n0.99 0.8181818181818182\n\n\n\n\n\n\n\n\n\n\ncompareFPs(ms1,ms2,lambda x:rdMolDescriptors.GetHashedMorganFingerprint(x,1,1024,useFeatures=True),\"FeatMorgan1 (bits)\")\n\n0.7 0.39473684210526316\n0.8 0.42857142857142855\n0.9 0.4772727272727273\n0.95 0.5142857142857142\n0.99 0.5849056603773585\n\n\n\n\n\n\n\n\n\n\ncompareFPs(ms1,ms2,lambda x:rdMolDescriptors.GetHashedMorganFingerprint(x,2,1024,useFeatures=True),\"FeatMorgan2 (bits)\")\n\n0.7 0.28368794326241137\n0.8 0.30973451327433627\n0.9 0.3469387755102041\n0.95 0.37606837606837606\n0.99 0.43434343434343436\n\n\n\n\n\n\n\n\n\n\ncompareFPs(ms1,ms2,lambda x:rdMolDescriptors.GetHashedMorganFingerprint(x,3,1024,useFeatures=True),\"FeatMorgan3 (bits)\")\n\n0.7 0.22807017543859648\n0.8 0.24770642201834864\n0.9 0.27564102564102566\n0.95 0.29901960784313725\n0.99 0.3488372093023256"
  },
  {
    "objectID": "posts/2021-05-18-fingerprint-thresholds1.html#branched-default",
    "href": "posts/2021-05-18-fingerprint-thresholds1.html#branched-default",
    "title": "Thresholds for “random” in fingerprints the RDKit supports",
    "section": "Branched (default)",
    "text": "Branched (default)\n\ncompareFPs(ms1,ms2,lambda x:Chem.RDKFingerprint(x,maxPath=4),\"RDKit 4 (bits)\")\n\n0.7 0.2094017094017094\n0.8 0.23863636363636365\n0.9 0.2849462365591398\n0.95 0.3254237288135593\n0.99 0.4258373205741627\n\n\n\n\n\n\n\n\n\n\ncompareFPs(ms1,ms2,lambda x:Chem.RDKFingerprint(x,maxPath=5),\"RDKit 5 (bits)\")\n\n0.7 0.19672131147540983\n0.8 0.21875\n0.9 0.2534562211981567\n0.95 0.28735632183908044\n0.99 0.3682170542635659\n\n\n\n\n\n\n\n\n\n\ncompareFPs(ms1,ms2,lambda x:Chem.RDKFingerprint(x,maxPath=6),\"RDKit 6 (bits)\")\n\n0.7 0.22965641952983726\n0.8 0.2502120441051739\n0.9 0.28023598820059\n0.95 0.30818767249310025\n0.99 0.3686382393397524\n\n\n\n\n\n\n\n\n\n\ncompareFPs(ms1,ms2,lambda x:Chem.RDKFingerprint(x,maxPath=7),\"RDKit 7 (bits)\")\n\n0.7 0.3130372492836676\n0.8 0.34558303886925795\n0.9 0.38909541511771994\n0.95 0.4286600496277916\n0.99 0.5068903535050928"
  },
  {
    "objectID": "posts/2021-05-18-fingerprint-thresholds1.html#linear",
    "href": "posts/2021-05-18-fingerprint-thresholds1.html#linear",
    "title": "Thresholds for “random” in fingerprints the RDKit supports",
    "section": "linear",
    "text": "linear\n\ncompareFPs(ms1,ms2,lambda x:Chem.RDKFingerprint(x,maxPath=4,branchedPaths=False),\"linear RDKit 4 (bits)\")\n\n0.7 0.22456140350877193\n0.8 0.25773195876288657\n0.9 0.30864197530864196\n0.95 0.35403726708074534\n0.99 0.46153846153846156\n\n\n\n\n\n\n\n\n\n\ncompareFPs(ms1,ms2,lambda x:Chem.RDKFingerprint(x,maxPath=5,branchedPaths=False),\"linear RDKit 5 (bits)\")\n\n0.7 0.19756838905775076\n0.8 0.22549019607843138\n0.9 0.2687224669603524\n0.95 0.3090909090909091\n0.99 0.40425531914893614\n\n\n\n\n\n\n\n\n\n\ncompareFPs(ms1,ms2,lambda x:Chem.RDKFingerprint(x,maxPath=6,branchedPaths=False),\"linear RDKit 6 (bits)\")\n\n0.7 0.18657937806873978\n0.8 0.21005917159763313\n0.9 0.24612403100775193\n0.95 0.2820069204152249\n0.99 0.36476426799007444\n\n\n\n\n\n\n\n\n\n\ncompareFPs(ms1,ms2,lambda x:Chem.RDKFingerprint(x,maxPath=7,branchedPaths=False),\"linear RDKit 7 (bits)\")\n\n0.7 0.18204488778054864\n0.8 0.20286085825747724\n0.9 0.23367198838896952\n0.95 0.2640625\n0.99 0.33689024390243905"
  },
  {
    "objectID": "posts/2021-05-18-fingerprint-thresholds1.html#count-based-2",
    "href": "posts/2021-05-18-fingerprint-thresholds1.html#count-based-2",
    "title": "Thresholds for “random” in fingerprints the RDKit supports",
    "section": "count-based",
    "text": "count-based\n\ncompareFPs(ms1,ms2,lambda x:rdMolDescriptors.GetAtomPairFingerprint(x),\"Atom Pairs (counts)\")\n\n0.7 0.17993630573248406\n0.8 0.20386266094420602\n0.9 0.23671497584541062\n0.95 0.26545454545454544\n0.99 0.32547169811320753\n\n\n\n\n\n\n\n\n\n\ncompareFPs(ms1,ms2,lambda x:rdMolDescriptors.GetTopologicalTorsionFingerprint(x),\"Torsions (counts)\")\n\n0.7 0.10714285714285714\n0.8 0.13\n0.9 0.16470588235294117\n0.95 0.19387755102040816\n0.99 0.26582278481012656"
  },
  {
    "objectID": "posts/2021-05-18-fingerprint-thresholds1.html#bit-vectors-1",
    "href": "posts/2021-05-18-fingerprint-thresholds1.html#bit-vectors-1",
    "title": "Thresholds for “random” in fingerprints the RDKit supports",
    "section": "bit vectors",
    "text": "bit vectors\n\ncompareFPs(ms1,ms2,lambda x:rdMolDescriptors.GetHashedAtomPairFingerprintAsBitVect(x),\"Atom Pairs (bits)\")\n\n0.7 0.27488151658767773\n0.8 0.3008298755186722\n0.9 0.3353658536585366\n0.95 0.36342042755344417\n0.99 0.4146341463414634\n\n\n\n\n\n\n\n\n\n\ncompareFPs(ms1,ms2,lambda x:rdMolDescriptors.GetHashedTopologicalTorsionFingerprintAsBitVect(x),\"Torsions (bits)\")\n\n0.7 0.1326530612244898\n0.8 0.1553398058252427\n0.9 0.18840579710144928\n0.95 0.2191780821917808\n0.99 0.2876712328767123"
  },
  {
    "objectID": "posts/2021-05-21-similarity-search-thresholds.html",
    "href": "posts/2021-05-21-similarity-search-thresholds.html",
    "title": "Fingerprint similarity thresholds for database searches",
    "section": "",
    "text": "Updated 08.06.2021 after I expanded the set of “related compounds”. The source of the previous version of the post is available in github"
  },
  {
    "objectID": "posts/2021-05-21-similarity-search-thresholds.html#similarity-between-random-molecules",
    "href": "posts/2021-05-21-similarity-search-thresholds.html#similarity-between-random-molecules",
    "title": "Fingerprint similarity thresholds for database searches",
    "section": "Similarity between random molecules",
    "text": "Similarity between random molecules\nThe workflow and dataset for this is described in a blog post. The very quick summary is that I generated statistics for the similarity distribution of 25K random pairs of reasonable sized (MW&lt;600) molecules exported from ChEMBL."
  },
  {
    "objectID": "posts/2021-05-21-similarity-search-thresholds.html#groups-of-related-compounds",
    "href": "posts/2021-05-21-similarity-search-thresholds.html#groups-of-related-compounds",
    "title": "Fingerprint similarity thresholds for database searches",
    "section": "Groups of related compounds",
    "text": "Groups of related compounds\nThis is really the central pillar of the post: how do we pick sets of compounds we can use to quantify similarity search performance?\nOne obvious possibility is to just take groups of molecules which are known to be active against the same targets. This is the classic similarity-based virtual screening use case and it’s one which has been done a lot in the literature. That’s an interesting (and important) use case and it’s something which I may come back to in a future post, but it requires a connection between chemical similarity and biological activity. That connection (or lack thereof) makes analysis of the threshold results more complex and introduces a significant amount of variability.\nHere I want to look at a different use case: searching a database and retrieving compounds which are chemically similar to each other. For this I need to pick groups of chemically similar compounds without actually using a traditional approach to chemical similarity. The approach I used is to assume that the typical medicinal chemistry SAR paper includes a bunch of compounds which come from a small number of chemical series (typically one). These compounds are definitely related to each other and it’s not unreasonable to expect that a similarity search for one should return the others as results.\nThis led me back to an earlier blog post looking at identifying scaffolds from ChEMBL compounds tested in the same assay (given the structure of ChEMBL, this implies that the compounds are from the same paper). That post includes some pre-filtering of the results to try and get only SAR papers by only keeping assays (papers) where 50-100 compounds were measured. For this post I re-ran that analysis against ChEMBL28 and expanded my search criteria to include IC50 data as well as the Ki data used in the original set. The analysis produced results for 1396 groups (a group is the compounds tested in one assay); for this analysis I further filtered these down to the 1047 groups (70026 compounds in total) where the number of atoms in the scaffold is at least 50% of the average number of atoms for compounds in the group. I further filtered each group to only include compounds which have a substructure match to the fuzzy MCS which was found for the full set. The hope here is that this will limit us to only consider the compounds which are part of the chemical series being reported. This lowers the total number of compounds to 66577 across the 1047 groups.\nSo given these 1047 groups of chemically related compounds I was ready to start doing some searches."
  },
  {
    "objectID": "posts/2021-05-21-similarity-search-thresholds.html#determining-background-retrieval-rates",
    "href": "posts/2021-05-21-similarity-search-thresholds.html#determining-background-retrieval-rates",
    "title": "Fingerprint similarity thresholds for database searches",
    "section": "Determining background retrieval rates",
    "text": "Determining background retrieval rates\nIn order to get a sense of how many compounds would be retrieved from a database when using the related compounds, I randomly picked 100K molecules from ChEMBL28 to use as a background. I wanted a representative sample, so I didn’t apply MW filters when doing this selection.\nI then queried the background compounds with each molecule in a random subset of the 66K members of the “related compounds” set, counted the number of results each returned for each fingerprint/similarity threshold combination, and did statistics based on those results."
  },
  {
    "objectID": "posts/2021-05-21-similarity-search-thresholds.html#summarizing-the-data",
    "href": "posts/2021-05-21-similarity-search-thresholds.html#summarizing-the-data",
    "title": "Fingerprint similarity thresholds for database searches",
    "section": "Summarizing the data",
    "text": "Summarizing the data\nHere’s an example of a graphical summary of the results presented in the final notebook listed below:\n\nThe violin plots show the distribution of similarity values required to match 50% of the related compound pairs for each of the fingerprints. The dark gray boxes show the noise level for the fingerprints. The red line shows the median fraction of the 100K ChEMBL compounds retrieved when using the median value from the violin plots as a similarity threshold."
  },
  {
    "objectID": "posts/2021-05-21-similarity-search-thresholds.html#the-notebooks",
    "href": "posts/2021-05-21-similarity-search-thresholds.html#the-notebooks",
    "title": "Fingerprint similarity thresholds for database searches",
    "section": "The notebooks",
    "text": "The notebooks\nHere are the github links for the notebooks I used: - Similarity between random molecules (this is the previous analysis): https://github.com/greglandrum/rdkit_blog/blob/master/notebooks/Fingerprint%20Thresholds.ipynb - Finding scaffolds for ChEMBL documents with Ki values (also a previous analysis): https://github.com/greglandrum/rdkit_blog/blob/master/notebooks/Finding%20Scaffolds%20Revisited%20again.ipynb - Similarity distributions for related compounds: https://github.com/greglandrum/rdkit_blog/blob/master/notebooks/Fingerprint%20Thresholds%20Scaffolds.ipynb Note that this is a new one and I’m still working on cleaning it up and adding more text/explanation - Fraction of the database retrieved when searching (this one also has the calculation of the summary results presented here): https://github.com/greglandrum/rdkit_blog/blob/master/notebooks/Fingerprint%20Thresholds%20Database%20Fraction.ipynb Note that this is a new one and I’m still working on cleaning it up and adding more text/explanation"
  },
  {
    "objectID": "posts/2021-01-31-looking-at-random-coordinate-embedding.html",
    "href": "posts/2021-01-31-looking-at-random-coordinate-embedding.html",
    "title": "Looking at random-coordinate embedding",
    "section": "",
    "text": "This post discusses and shows the impact of the useRandomCoords option for the RDKit’s conformer generator.\nThe RDKit’s conformation generator is based on distance geometry. Here are the basic steps for the standard approach:\nAnother way to generate the initial set of coordinates is to replace steps 3 and 4 with just picking a set of random coordinates (i.e. scatter the atoms randomly about a 3D box) and then moving on to step 5 and minimizing those using the distance geometry force field mentioned above. I learned of this approach from David Spellmeyer, who published it back in 1997: https://doi.org/10.1016/S1093-3263(97)00014-4\nStarting from random coordinates has been possible within the RDKit more or less since the beginning (I’ve known David a long time ;-), but it’s not the default because my implementation of it was slower than the standard embedding approach in the early testing and validation work I did. I’ve been saying for years that random-coordinate embedding is more robust (though slower), but I haven’t actually gone back and tested/quantified that since my initial experiments. This blog post aims to clear some of that up.\nTL;DR: I ran some experiments using a set of 900 molecules with varying numbers of rotatable bonds and two different macrocycle sizes. Each molecule has at least two specified stereocenters. Given the current implementation, random-coordinate embedding is more robust - it’s more likely to produce the requested number of conformers for these structures than the standard metric embedding is - but it still tends to be a bit slower.\nHere’s a graphical summary of the results:  The main conclusion about timing can be see by comparing the red (metric) and blue (random) data.\nHere’s a plot comparing how long it takes to generate each conformer when trying for 50 conformers (left) or 50 more diverse conformers (right), the plot has been zoomed in, so a few extreme outliers (which impact the standard metric embedding more severely than the random-coordinate embedding) are not visible.\nGiven that it is certainly more robust and that the overall performance difference isn’t huge, I think I’m likely to switch to using random-coordinate embedding for my future work. Maybe we can think about making it the default in the RDKit too.\nFor those who are interested, here’s the original literature about ETKDG:\nIf you want to play with the compounds yourself, the SMILES are all in the rdkit_blog github repo\nOk, let’s get to work and generate the data.\nfrom rdkit import Chem\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit.Chem import rdDepictor\nrdDepictor.SetPreferCoordGen(True)\nimport pandas as pd\nimport rdkit\nprint(rdkit.__version__)\n%load_ext sql\n%pylab inline\n\n2020.09.4\nThe sql extension is already loaded. To reload it, use:\n  %reload_ext sql\nPopulating the interactive namespace from numpy and matplotlib"
  },
  {
    "objectID": "posts/2021-01-31-looking-at-random-coordinate-embedding.html#single-conformer",
    "href": "posts/2021-01-31-looking-at-random-coordinate-embedding.html#single-conformer",
    "title": "Looking at random-coordinate embedding",
    "section": "Single conformer",
    "text": "Single conformer\n\nps = AllChem.ETKDGv3()\nps.randomSeed=0xf00d\nmetric_etkdg_res = []\nfor i,m in enumerate(ms):\n    if not (i+1)%10:\n        print(f'Doing {i+1} of {len(ms)}')\n    m = Chem.Mol(m)\n    t1 = time.time()\n    AllChem.EmbedMolecule(m,ps)\n    t2 = time.time()\n    metric_etkdg_res.append((t2-t1,m.GetNumConformers(),m,m.GetIntProp('RTB')))\nwith open('./results/random_coords_expt.pkl','wb+') as outf:\n    pickle.dump((metric_etkdg_res,),outf)\n\n\nps = AllChem.ETKDGv3()\nps.randomSeed=0xf00d\nps.useRandomCoords = True\nrandom_etkdg_res = []\nfor i,m in enumerate(ms):\n    if not (i+1)%10:\n        print(f'Doing {i+1} of {len(ms)}')\n    m = Chem.Mol(m)\n    t1 = time.time()\n    AllChem.EmbedMolecule(m,ps)\n    t2 = time.time()\n    random_etkdg_res.append((t2-t1,m.GetNumConformers(),m,m.GetIntProp('RTB')))\nwith open('./results/random_coords_expt.pkl','wb+') as outf:\n    pickle.dump((metric_etkdg_res,random_etkdg_res,),outf)"
  },
  {
    "objectID": "posts/2021-01-31-looking-at-random-coordinate-embedding.html#conformers",
    "href": "posts/2021-01-31-looking-at-random-coordinate-embedding.html#conformers",
    "title": "Looking at random-coordinate embedding",
    "section": "50 conformers",
    "text": "50 conformers\n\nps = AllChem.ETKDGv3()\nps.randomSeed=0xf00d\nps.numThreads = 4\nmetric_etkdg50_res = []\nfor i,m in enumerate(ms):\n    if not (i+1)%10:\n        print(f'Doing {i+1} of {len(ms)}')\n    m = Chem.Mol(m)\n    t1 = time.time()\n    AllChem.EmbedMultipleConfs(m,50,ps)\n    t2 = time.time()\n    metric_etkdg50_res.append((t2-t1,m.GetNumConformers(),m,m.GetIntProp('RTB')))\nwith open('./results/random_coords_expt.pkl','wb+') as outf:\n    pickle.dump((metric_etkdg_res,random_etkdg_res,metric_etkdg50_res,),outf)\n\n\nps = AllChem.ETKDGv3()\nps.randomSeed=0xf00d\nps.numThreads = 4\nps.useRandomCoords = True\nrandom_etkdg50_res = []\nfor i,m in enumerate(ms):\n    if not (i+1)%10:\n        print(f'Doing {i+1} of {len(ms)}')\n    m = Chem.Mol(m)\n    t1 = time.time()\n    AllChem.EmbedMultipleConfs(m,50,ps)\n    t2 = time.time()\n    random_etkdg50_res.append((t2-t1,m.GetNumConformers(),m,m.GetIntProp('RTB')))\nwith open('./results/random_coords_expt.pkl','wb+') as outf:\n    pickle.dump((metric_etkdg_res,random_etkdg_res,metric_etkdg50_res,random_etkdg50_res,),outf)"
  },
  {
    "objectID": "posts/2021-01-31-looking-at-random-coordinate-embedding.html#number-of-conformers-generated",
    "href": "posts/2021-01-31-looking-at-random-coordinate-embedding.html#number-of-conformers-generated",
    "title": "Looking at random-coordinate embedding",
    "section": "Number of conformers generated",
    "text": "Number of conformers generated\n\nfigsize(7.5,6)\nnrots = sorted(set(x[-1] for x in metric_etkdg_res))\nprint(f'number of mols with below 50 conformers:')\nfor nrot in nrots:\n    xp = [x[1] for x in metric_etkdg50_res if x[-1]==nrot]\n    yp = [x[1] for x in random_etkdg50_res if x[-1]==nrot]\n    print(f'  {nrot} rotatable bonds, metric: {len([1 for x in xp if x!=50])} random: {len([1 for x in yp if x!=50])}')\n    scatter(xp,yp,label=str(nrot))\nlegend();\n#xlim(0,30);\n#ylim(0,40);\n#plot((0,30),(0,30))\ntitle('num confs generated out of 50')\nxlabel('metric')\nylabel('random coords');\n\nnumber of mols with below 50 conformers:\n  -14 rotatable bonds, metric: 8 random: 0\n  -10 rotatable bonds, metric: 1 random: 1\n  1 rotatable bonds, metric: 2 random: 2\n  2 rotatable bonds, metric: 2 random: 2\n  5 rotatable bonds, metric: 1 random: 1\n  10 rotatable bonds, metric: 4 random: 0\n  15 rotatable bonds, metric: 10 random: 0\n  20 rotatable bonds, metric: 27 random: 0\n  25 rotatable bonds, metric: 28 random: 0\n\n\n\n\n\n\n\n\n\n\nfigsize(7.5,6)\nnrots = sorted(set(x[-1] for x in metric_etkdg_res))\nprint(f'number of mols with below 50 conformers:')\nfor nrot in nrots:\n    xp = [x[1] for x in metric_etkdg50_rms_res if x[-1]==nrot]\n    yp = [x[1] for x in random_etkdg50_rms_res if x[-1]==nrot]\n    print(f'  {nrot} rotatable bonds, metric: {len([1 for x in xp if x!=50])} random: {len([1 for x in yp if x!=50])}')\n    scatter(xp,yp,label=str(nrot))\nlegend();\n#xlim(0,30);\n#ylim(0,40);\nplot((0,50),(0,50))\ntitle('num diverse confs generated out of 50')\nxlabel('metric')\nylabel('random coords');\n\nnumber of mols with below 50 conformers:\n  -14 rotatable bonds, metric: 31 random: 17\n  -10 rotatable bonds, metric: 85 random: 83\n  1 rotatable bonds, metric: 99 random: 99\n  2 rotatable bonds, metric: 100 random: 100\n  5 rotatable bonds, metric: 93 random: 85\n  10 rotatable bonds, metric: 32 random: 19\n  15 rotatable bonds, metric: 13 random: 1\n  20 rotatable bonds, metric: 27 random: 0\n  25 rotatable bonds, metric: 28 random: 0\n\n\n\n\n\n\n\n\n\n\nfigsize(7.5,6)\nnrots = sorted(set(x[-1] for x in metric_etkdg_res))\nprint(f'number of mols with below 50 conformers:')\nfor nrot in nrots:\n    xp = [x[1] for x in metric_etkdg50_nochiral_res if x[-1]==nrot]\n    yp = [x[1] for x in random_etkdg50_nochiral_res if x[-1]==nrot]\n    print(f'  {nrot} rotatable bonds, metric: {len([1 for x in xp if x!=50])} random: {len([1 for x in yp if x!=50])}')\n    scatter(xp,yp,label=str(nrot))\nlegend();\n#xlim(0,30);\n#ylim(0,40);\n#plot((0,30),(0,30))\ntitle('num nochiral confs generated out of 50')\nxlabel('metric')\nylabel('random coords');\n\nnumber of mols with below 50 conformers:\n  -14 rotatable bonds, metric: 6 random: 0\n  -10 rotatable bonds, metric: 0 random: 0\n  1 rotatable bonds, metric: 0 random: 0\n  2 rotatable bonds, metric: 0 random: 0\n  5 rotatable bonds, metric: 0 random: 0\n  10 rotatable bonds, metric: 2 random: 0\n  15 rotatable bonds, metric: 9 random: 0\n  20 rotatable bonds, metric: 26 random: 0\n  25 rotatable bonds, metric: 21 random: 0\n\n\n\n\n\n\n\n\n\nThe random coordinate embedding produces 50 conformers in almost every case, while there are a significant number of examples where metric embedding is unable to produce all 50 conformers."
  },
  {
    "objectID": "posts/2021-01-31-looking-at-random-coordinate-embedding.html#time-per-conformer-generated",
    "href": "posts/2021-01-31-looking-at-random-coordinate-embedding.html#time-per-conformer-generated",
    "title": "Looking at random-coordinate embedding",
    "section": "Time per conformer generated",
    "text": "Time per conformer generated\n\nfigsize(15,6)\nnrots = sorted(set(x[-1] for x in metric_etkdg_res))\n\nsubplot(1,2,1)\nfor nrot in nrots:\n    keep = [i for i,(x,y) in enumerate(zip(metric_etkdg50_res,random_etkdg50_res)) if x[-1]==nrot and x[1]!=0 and y[1]!=0]\n    xp = [metric_etkdg50_res[x][0]/metric_etkdg50_res[x][1] for x in keep]\n    yp = [random_etkdg50_res[x][0]/random_etkdg50_res[x][1] for x in keep]\n    scatter(xp,yp,label=str(nrot))\nlegend();\nxlim(0,1.5);\nylim(0,1.2);\nplot((0,.8),(0,.8))\ntitle('time per conformer produced (4 threads)')\nxlabel('metric')\nylabel('random coords');\n\nsubplot(1,2,2)\nfor nrot in nrots:\n    keep = [i for i,(x,y) in enumerate(zip(metric_etkdg50_rms_res,random_etkdg50_rms_res)) if x[-1]==nrot and x[1]!=0 and y[1]!=0]\n    xp = [metric_etkdg50_res[x][0]/metric_etkdg50_rms_res[x][1] for x in keep]\n    yp = [random_etkdg50_res[x][0]/random_etkdg50_rms_res[x][1] for x in keep]\n    scatter(xp,yp,label=str(nrot))\nlegend();\nxlim(0,1.5);\nylim(0,2);\nplot((0,1),(0,1))\ntitle('time per diverse conformer produced (4 threads)')\nxlabel('metric')\nylabel('random coords');\n\n\n\n\n\n\n\n\nLook at the same thing without cropping outliers.\n\nfigsize(15,6)\nnrots = sorted(set(x[-1] for x in metric_etkdg_res))\n\nsubplot(1,2,1)\nfor nrot in nrots:\n    keep = [i for i,(x,y) in enumerate(zip(metric_etkdg50_res,random_etkdg50_res)) if x[-1]==nrot and x[1]!=0 and y[1]!=0]\n    xp = [metric_etkdg50_res[x][0]/metric_etkdg50_res[x][1] for x in keep]\n    yp = [random_etkdg50_res[x][0]/random_etkdg50_res[x][1] for x in keep]\n    scatter(xp,yp,label=str(nrot))\nlegend();\nplot((0,3.5),(0,3.5))\ntitle('time per conformer produced (4 threads)')\nxlabel('metric')\nylabel('random coords');\n\nsubplot(1,2,2)\nfor nrot in nrots:\n    keep = [i for i,(x,y) in enumerate(zip(metric_etkdg50_rms_res,random_etkdg50_rms_res)) if x[-1]==nrot and x[1]!=0 and y[1]!=0]\n    xp = [metric_etkdg50_res[x][0]/metric_etkdg50_rms_res[x][1] for x in keep]\n    yp = [random_etkdg50_res[x][0]/random_etkdg50_rms_res[x][1] for x in keep]\n    scatter(xp,yp,label=str(nrot))\nlegend();\nplot((0,3.5),(0,3.5))\ntitle('time per diverse conformer produced (4 threads)')\nxlabel('metric')\nylabel('random coords');\n\n\n\n\n\n\n\n\nNote that these times per conformer cannot be directly compared to the time to generate a single conformer since these were run using multiple threads."
  },
  {
    "objectID": "posts/2021-01-31-looking-at-random-coordinate-embedding.html#ignoring-chirality",
    "href": "posts/2021-01-31-looking-at-random-coordinate-embedding.html#ignoring-chirality",
    "title": "Looking at random-coordinate embedding",
    "section": "Ignoring chirality",
    "text": "Ignoring chirality\n\nfigsize(7.5,6)\nnrots = sorted(set(x[-1] for x in metric_etkdg_res))\nfor nrot in nrots:\n    xp = [x[0] for x in metric_etkdg50_nochiral_res if x[-1]==nrot]\n    yp = [x[0] for x in random_etkdg50_nochiral_res if x[-1]==nrot]\n    scatter(xp,yp,label=str(nrot))\nlegend();\n#xlim(0,30);\n#ylim(0,40);\nplot((0,15),(0,15))\ntitle('nochiral time(s)')\nxlabel('metric')\nylabel('random coords');\n\n\n\n\n\n\n\n\nGeneral impact of ignoring chirality\n\nnrots = sorted(set(x[-1] for x in metric_etkdg_res))\nfigsize(15,6)\nsubplot(1,2,1)\nfor nrot in nrots:\n    xp = [x[0] for x in metric_etkdg50_res if x[-1]==nrot]\n    yp = [x[0] for x in metric_etkdg50_nochiral_res if x[-1]==nrot]\n    scatter(xp,yp,label=str(nrot))\nlegend();\nxlim(0,50);\nylim(0,30);\nplot((0,30),(0,30))\ntitle('metric embedding time(s)')\nxlabel('chiral')\nylabel('nochiral');\n\nsubplot(1,2,2)\nfor nrot in nrots:\n    xp = [x[0] for x in random_etkdg50_res if x[-1]==nrot]\n    yp = [x[0] for x in random_etkdg50_nochiral_res if x[-1]==nrot]\n    scatter(xp,yp,label=str(nrot))\nlegend();\nxlim(0,50);\nylim(0,40);\nplot((0,40),(0,40))\ntitle('random embedding time(s)')\nxlabel('chiral')\nylabel('nochiral');"
  },
  {
    "objectID": "posts/2021-01-31-looking-at-random-coordinate-embedding.html#impact-of-box-size-on-random-embedding",
    "href": "posts/2021-01-31-looking-at-random-coordinate-embedding.html#impact-of-box-size-on-random-embedding",
    "title": "Looking at random-coordinate embedding",
    "section": "Impact of box size on random embedding",
    "text": "Impact of box size on random embedding\n\nnrots = sorted(set(x[-1] for x in metric_etkdg_res))\nfigsize(15,6)\nsubplot(1,2,1)\nfor nrot in nrots:\n    xp = [x[0] for x in random_etkdg50_res if x[-1]==nrot]\n    yp = [x[0] for x in random_etkdg50_box1_res if x[-1]==nrot]\n    scatter(xp,yp,label=str(nrot))\nlegend();\nxlim(0,80);\nylim(0,80);\nplot((0,60),(0,60))\ntitle('random embedding time(s)')\nxlabel('mult=2 (default)')\nylabel('mult=1');\n    \n    \nsubplot(1,2,2)\nfor nrot in nrots:\n    xp = [x[0] for x in random_etkdg50_res if x[-1]==nrot]\n    yp = [x[0] for x in random_etkdg50_box2_res if x[-1]==nrot]\n    scatter(xp,yp,label=str(nrot))\nlegend();\nxlim(0,80);\nylim(0,80);\nplot((0,60),(0,60))\ntitle('random embedding time(s)')\nxlabel('mult=2 (default)')\nylabel('mult=0.5');"
  },
  {
    "objectID": "posts/2021-01-31-looking-at-random-coordinate-embedding.html#summaries",
    "href": "posts/2021-01-31-looking-at-random-coordinate-embedding.html#summaries",
    "title": "Looking at random-coordinate embedding",
    "section": "Summaries",
    "text": "Summaries\n\ndef set_box_color(bp, color):\n    setp(bp['boxes'], color=color)\n    setp(bp['whiskers'], color=color)\n    setp(bp['caps'], color=color)\n    setp(bp['medians'], color=color)\n    setp(bp['fliers'], markeredgecolor=color)\n\nfigsize(15,6)\n\nax = axes()\nax.set_yscale('log');\nax.set_ylabel('time(s)')\nax.set_xlabel('nrot')\n\nnrots = sorted(set(x[-1] for x in metric_etkdg_res))\nd = [[x[0] for x in metric_etkdg50_res if x[-1]==nrot] for nrot in nrots]\nbp = ax.boxplot(d,positions = [3*x for x in range(len(d))]);\nset_box_color(bp,'r')\n\nd = [[x[0] for x in random_etkdg50_res if x[-1]==nrot] for nrot in nrots]\nbp = ax.boxplot(d,positions = [3*x+.5 for x in range(len(d))]);\nset_box_color(bp,'b')\n\nd = [[x[0] for x in random_etkdg50_nochiral_res if x[-1]==nrot] for nrot in nrots]\nbp = ax.boxplot(d,positions = [3*x+1 for x in range(len(d))]);\nset_box_color(bp,'c')\n\nd = [[x[0] for x in random_etkdg50_box1_res if x[-1]==nrot] for nrot in nrots]\nbp = ax.boxplot(d,positions = [3*x+1.5 for x in range(len(d))]);\nset_box_color(bp,'m')\n\nd = [[x[0] for x in random_etkdg50_box2_res if x[-1]==nrot] for nrot in nrots]\nbp = ax.boxplot(d,positions = [3*x+2 for x in range(len(d))]);\nset_box_color(bp,'y')\n\n#set_axis_style(ax, [str(x) for x in nrots])\nticks = [str(x) for x in nrots]\nxticks(np.arange(0, len(ticks) * 3, 3)+1, ticks);\n\n\n\nplot([], c='r', label='metric')\nplot([], c='b', label='random')\nplot([], c='c', label='random-nochiral')\nplot([], c='m', label='random-box1')\nplot([], c='y', label='random-box0.5')\n\nlegend();\n\n\n\n\n\n\n\n\n\ndef set_box_color(bp, color):\n    setp(bp['boxes'], color=color)\n    setp(bp['whiskers'], color=color)\n    setp(bp['caps'], color=color)\n    setp(bp['medians'], color=color)\n    setp(bp['fliers'], markeredgecolor=color)\n\nfigsize(15,6)\n\nax = axes()\nax.set_yscale('log');\nax.set_ylabel('time per conformer (s)')\nax.set_xlabel('nrot')\n\nnrots = sorted(set(x[-1] for x in metric_etkdg_res))\nd = [[x[0]/x[2].GetNumConformers() for x in metric_etkdg50_res if x[-1]==nrot and x[2].GetNumConformers()!=0] for nrot in nrots]\nbp = ax.boxplot(d,positions = [3*x for x in range(len(d))]);\nset_box_color(bp,'r')\n\nd = [[x[0]/x[2].GetNumConformers() for x in metric_etkdg50_rms_res if x[-1]==nrot and x[2].GetNumConformers()!=0] for nrot in nrots]\nbp = ax.boxplot(d,positions = [3*x+.5 for x in range(len(d))]);\nset_box_color(bp,'c')\n\nd = [[x[0]/x[2].GetNumConformers() for x in random_etkdg50_res if x[-1]==nrot and x[2].GetNumConformers()!=0] for nrot in nrots]\nbp = ax.boxplot(d,positions = [3*x+1 for x in range(len(d))]);\nset_box_color(bp,'b')\n\nd = [[x[0]/x[2].GetNumConformers() for x in random_etkdg50_rms_res if x[-1]==nrot and x[2].GetNumConformers()!=0] for nrot in nrots]\nbp = ax.boxplot(d,positions = [3*x+1.5 for x in range(len(d))]);\nset_box_color(bp,'m')\n\n\n#set_axis_style(ax, [str(x) for x in nrots])\nticks = [str(x) for x in nrots]\nxticks(np.arange(0, len(ticks) * 3, 3)+1, ticks);\n\n\n\nplot([], c='r', label='metric')\nplot([], c='c', label='metric-diverse')\nplot([], c='b', label='random')\nplot([], c='m', label='random-diverse')\n\nlegend();"
  },
  {
    "objectID": "posts/2022-12-09-timing-text-methods-for-serializing-mols.html",
    "href": "posts/2022-12-09-timing-text-methods-for-serializing-mols.html",
    "title": "Timing methods for serializing molecules",
    "section": "",
    "text": "This is just a short one, mainly to have the information online to use as a reference.\nThe RDKit has a number of different ways of serializing and deserializing molecules (converting them to and from strings). This post looks at how long it takes to do that with the three serialization approaches I normally recommend: 1. CXSMILES 2. The RDKit’s internal binary format 3. the RDKit’s variant of commonchem JSON.\nI looked at just serializing the molecular structure, including atomic coordinates, and serializing a few propertis together with the molecule.\nNote that this isn’t exactly comparing apples to apples: the binary and JSON formats both capture more or less the full perceived state of the molecule (aromaticity, ring systems, etc), while the CXSMILES variant doesn’t include the ring information.\nHere are the timing results for 50K molecules from ChEMBL. I ran this on my normal desktop machine, a 3-year old Dell desktop with a 3.1GHz Intel Core9 CPU. I’m running the conda-forge RDKit build.\nTimes are in seconds\nWriting\n\n\n\nMethod\nMol\nMol + coordinates\nMol + properties\n\n\n\n\nCXSMILES\n3.9\n6.4\nN/A\n\n\nPickle\n1.31\n1.48\n1.44\n\n\nJSON\n2.4\n3.1\n4.1\n\n\n\nReading\n\n\n\nMethod\nMol\nMol + coordinates\nMol + properties\n\n\n\n\nCXSMILES\n1.56\n3.78\nN/A\n\n\nPickle\n0.9\n1.14\n1.16\n\n\nJSON\n1.66\n2.08\n2.14\n\n\n\nThe binary format is, of course, the fastest. The JSON format is slower than that, but it’s still faster than using CXSMILES when serializing coordinates and roughly equivalent to CXSMILES when just storing the molecule (but, as noted above, the JSON contains more info than the CXSMILES does).\n\nfrom rdkit import Chem\nimport time\nimport gzip\nimport rdkit\nprint(rdkit.__version__)\n\n2022.09.1\n\n\nRead in a set of 50K ChEMBL molecules that we’ll use for the testing.\n\nmols = []\nsuppl = Chem.SmilesMolSupplier('../data/new_chembl_document_activity_set.smi')\nwhile len(mols)&lt;50000:\n    try:\n        m = next(suppl)\n    except StopIteration:\n        break;\n    mols.append(m)\n    \n\n\nlen(mols)\n\n50000\n\n\nThis class makes timing our runs easier:\n\nclass timer(object):\n    def __init__(self, *args, **kwargs):\n        pass\n    def __enter__(self):\n        self.t1=time.time()\n    def __exit__(self, type, value, traceback):\n        delta = time.time()-self.t1\n        print(f'That took {delta:.2f} seconds')\n\n\njsons[0]\n\n'{\"commonchem\":{\"version\":10},\"defaults\":{\"atom\":{\"z\":6,\"impHs\":0,\"chg\":0,\"nRad\":0,\"isotope\":0,\"stereo\":\"unspecified\"},\"bond\":{\"bo\":1,\"stereo\":\"unspecified\"}},\"molecules\":[{\"name\":\"436078\",\"atoms\":[{\"z\":8,\"chg\":-1},{\"z\":7,\"chg\":1},{\"z\":8},{},{\"impHs\":1},{\"impHs\":1},{},{\"z\":7},{},{\"z\":8},{\"impHs\":1,\"stereo\":\"ccw\"},{\"impHs\":1},{\"impHs\":2},{\"impHs\":2},{\"impHs\":1},{\"z\":8},{\"impHs\":1,\"stereo\":\"ccw\"},{},{\"z\":8},{},{\"impHs\":1},{\"impHs\":1},{\"impHs\":1},{\"impHs\":1},{}],\"bonds\":[{\"atoms\":[0,1]},{\"bo\":2,\"atoms\":[1,2]},{\"atoms\":[1,3]},{\"bo\":2,\"atoms\":[3,4]},{\"atoms\":[4,5]},{\"bo\":2,\"atoms\":[5,6]},{\"atoms\":[6,7]},{\"atoms\":[7,8]},{\"bo\":2,\"atoms\":[8,9]},{\"atoms\":[8,10]},{\"atoms\":[10,11]},{\"atoms\":[11,12]},{\"atoms\":[12,13]},{\"atoms\":[13,14]},{\"atoms\":[14,15]},{\"atoms\":[14,16]},{\"atoms\":[16,17]},{\"bo\":2,\"atoms\":[17,18]},{\"atoms\":[6,19]},{\"bo\":2,\"atoms\":[19,20]},{\"atoms\":[20,21]},{\"bo\":2,\"atoms\":[21,22]},{\"atoms\":[22,23]},{\"bo\":2,\"atoms\":[23,24]},{\"atoms\":[24,3]},{\"atoms\":[17,7]},{\"atoms\":[16,10]},{\"atoms\":[15,11]},{\"atoms\":[24,19]}],\"properties\":{\"numAtoms\":25,\"numBonds\":29,\"numRings\":5,\"smiles\":\"O=C1[C@@H]2C3CCC(O3)[C@@H]2C(=O)N1c1ccc([N+](=O)[O-])c2ccccc12\"},\"extensions\":[{\"name\":\"rdkitRepresentation\",\"formatVersion\":2,\"toolkitVersion\":\"2022.09.1\",\"aromaticAtoms\":[3,4,5,6,19,20,21,22,23,24],\"aromaticBonds\":[3,4,5,18,19,20,21,22,23,24,28],\"cipRanks\":[23,19,24,13,7,6,12,18,16,21,8,14,0,1,15,20,9,17,22,10,4,2,3,5,11],\"cipCodes\":[[10,\"S\"],[16,\"R\"]],\"atomRings\":[[3,24,19,6,5,4],[8,7,17,16,10],[12,11,15,14,13],[15,14,16,10,11],[20,21,22,23,24,19]]}]}]}'\n\n\n\nMolecules without conformers\nGenerating CXSMILES:\n\nwith timer() as cm:\n    smis = [Chem.MolToCXSmiles(m) for m in mols]\n\nThat took 3.88 seconds\n\n\nGenerating the RDKit’s binary format:\n\nwith timer() as cm:\n    pkls = [m.ToBinary() for m in mols]\n\nThat took 1.31 seconds\n\n\nGenerating the RDKit’s variant of commonchem JSON:\n\nwith timer() as cm:\n    jsons = [Chem.MolToJSON(m) for m in mols]\n\nThat took 2.40 seconds\n\n\nGenerating JSON for all of the molecules at once:\n\nwith timer() as cm:\n    allJson = Chem.MolsToJSON(mols)\n\nThat took 2.83 seconds\n\n\nNow look at reading the molecules.\nStart from SMILES, but skip full sanitization since we know that the chemistry and aromaticity are correct:\n\nwith timer() as cm:\n    for smi in smis:\n        m = Chem.MolFromSmiles(smi,sanitize=False)\n        m.UpdatePropertyCache()\n\nThat took 1.56 seconds\n\n\nFrom the binary format:\n\nwith timer() as cm:\n    for pkl in pkls:\n        m = Chem.Mol(pkl)\n\nThat took 0.92 seconds\n\n\nAnd the two variants for parsing JSON:\n\nwith timer() as cm:\n    for js in jsons:\n        m = Chem.JSONToMols(js)[0]\n\nThat took 1.66 seconds\n\n\n\nwith timer() as cm:\n    _ = Chem.JSONToMols(allJson)\n\nThat took 1.49 seconds\n\n\n\n\nMolecules with a conformer\nAdd a conformer to each molecule (which will be written to the output) and re-do the timing runs:\n\nfrom rdkit.Chem import rdDepictor\nfor mol in mols:\n    rdDepictor.Compute2DCoords(mol)\n\n\nwith timer() as cm:\n    smis = [Chem.MolToCXSmiles(m) for m in mols]\n\nThat took 6.43 seconds\n\n\n\nsmis[0]\n\n'O=C1[C@@H]2C3CCC(O3)[C@@H]2C(=O)N1c1ccc([N+](=O)[O-])c2ccccc12 |(-1.03854,-2.25072,;-1.65866,-0.884909,;-3.12813,-0.583792,;-4.49394,-1.20391,;-5.96341,-0.902797,;-6.13112,0.587798,;-4.7653,1.20792,;-3.75347,0.100581,;-3.29584,0.906803,;-1.93002,1.52692,;-1.62891,2.99639,;-0.918193,0.419586,;0.572402,0.587296,;1.17246,1.96204,;2.66305,2.12976,;3.55359,0.922718,;5.04419,1.09043,;5.93473,-0.116609,;5.64424,2.46518,;2.95354,-0.452031,;3.84407,-1.65907,;3.24402,-3.03382,;1.75342,-3.20153,;0.862885,-1.99449,;1.46294,-0.619741,)|'\n\n\n\nwith timer() as cm:\n    pkls = [m.ToBinary() for m in mols]\n\nThat took 1.48 seconds\n\n\n\nwith timer() as cm:\n    jsons = [Chem.MolToJSON(m) for m in mols]\n\nThat took 3.07 seconds\n\n\n\nwith timer() as cm:\n    for smi in smis:\n        m = Chem.MolFromSmiles(smi,sanitize=False)\n        m.UpdatePropertyCache()\n\nThat took 3.78 seconds\n\n\n\nwith timer() as cm:\n    for pkl in pkls:\n        m = Chem.Mol(pkl)\n\nThat took 1.14 seconds\n\n\n\nwith timer() as cm:\n    for js in jsons:\n        m = Chem.JSONToMols(js)[0]\n\nThat took 2.08 seconds\n\n\n\n\nMolecules with properties\nSince all three formats can also save properties, see how those impact writing and parsing times:\n\nfor mol in mols:\n    mol.RemoveAllConformers()\n    mol.SetIntProp('numAtoms',mol.GetNumAtoms())\n    mol.SetIntProp('numBonds',mol.GetNumBonds())\n    mol.SetIntProp('numRings',mol.GetRingInfo().NumRings())\n    mol.SetProp('smiles',Chem.MolToSmiles(mol))\n    \n\n\nwith timer() as cm:\n    pkls = [m.ToBinary(Chem.PropertyPickleOptions.MolProps) for m in mols]\n\nThat took 1.44 seconds\n\n\n\nwith timer() as cm:\n    jsons = [Chem.MolToJSON(m) for m in mols]\n\nThat took 4.09 seconds\n\n\n\nwith timer() as cm:\n    for pkl in pkls:\n        m = Chem.Mol(pkl)\n\nThat took 1.16 seconds\n\n\n\nwith timer() as cm:\n    for js in jsons:\n        m = Chem.JSONToMols(js)[0]\n\nThat took 2.14 seconds"
  },
  {
    "objectID": "posts/2021-12-23-ternary-ghost.html",
    "href": "posts/2021-12-23-ternary-ghost.html",
    "title": "A Ternary GHOST",
    "section": "",
    "text": "When we published the GHOST paper on shifting the decision boundary to improve the predictive performance of classification models built on imbalanced datasets, we only considered binary classifiers (e.g. active/inactive, soluble/insoluble, etc.). I was recently asked if the method could be extended to ternary (three-class) classifiers. This post is about doing that.\nThe code here isn’t set up for easy re-use at the moment. It will eventually find its way into the open-source ghostml package once we’ve had a chance to review and test it more thoroughly.\n\nAside: the ghostml package is now pip installable: python -m pip install ghostml to install it in your environment\n\nIn order for this to make sense, I think I should start with some explanation of the way I’ve approached the problem:\n\n\nThings are a bit more complicated here than with binary classifiers. For the binary case we just have a single threshold which determines whether an instance is predicted to be in class 0 or 1. So, assuming that we optimized based on the probability of class 1, we can formulate the decision as:\nif probabilities[1] &gt;= threshold:\n   prediction = 1\nelse:\n   prediction = 0\nBefore doing any optimization threshold is equal to 0.5.\nFor ternary predictions we have two different decision boundaries and there’s no longer a simple threshold; instead the default decision rule can be expressed as:\nprediction = argmax(probabilities)\ni.e., the prediction is the class which has the highest predicted probability.\n\nAside: the same decision rule can be used for a binary classifier with the default threshold. It’s just easier to explain using the threshold of 0.5.\n\nIf we want to introduce two thresholds for the ternary classifier, and assuming that we optimize the thresholds for classes 0 and 2, we have to use a more complex decision rule:\n        if probabilities[0]&gt;=thresholds[0]:\n            # we might still be in class 2 if the relative probability of that\n            # is larger than the probability of class 0\n            if (probabilities[2]-thresholds[1])&gt;(probabilities[0]-thresholds[0]):\n                prediction = 2\n            else:\n                prediction = 0\n        elif probabilities[2]&gt;=thresholds[1]:\n            prediction = 0\n        else:\n            prediction = 1\n\n\n\nFor the sake of this post let’s assume that we’re optimizing the thresholds for classes 0 and 2; we could also do 0 and 1, or 1 and 2, the results should still be the same.\nIn this post I explore two different approaches for optimizing these thresholds.\n\n\nHere I optimize the two thresholds independently of each other by constructing two binary classification problems and optimizing the thresholds for those problems. Here’s the process:\n\nCreate a binary classification set by setting the training-set y values to 1 if the original value is 0 and to 0 otherwise.\nUse the original ghostml approach with that binary classification data and the predicted probabilities of each training point to be 0 in order to set threshold0, the threshold for the predicted probability of being 0.\nCreate a binary classification set by setting the training-set y values to 1 if the original value is 2 and to 0 otherwise.\nUse the original ghostml approach with that binary classification data and the predicted probabilities of each training point to be 2 in order to set threshold2, the threshold for the predicted probability of being 2.\n\nSince the current ghostml code doesn’t support using balanced accuracy for optimization, I just use kappa for the greedy optimization.\n\n\n\nExplore the full grid of possible (threshold0, threshold2) pairs and pick the one which produces the optimal Cohen’s kappa value. I also try a variant of this which optimizes balanced accuracy instead of Cohen’s kappa.\n\n\n\n\nBoth approaches work well with both simulated data and a couple of datasets from ChEMBL. There doesn’t seem to be a large or consistent difference in the quality of the results generated with the two different methods. The greedy optimization approach is, however, quite a bit faster.\nHere’s the improvement in three scoring metrics (kappa, balanced accuracy, and overall accuracy) when using the greedy optimization procedure on 50 simulated datasets with a 10-80-10 class split; the threshold shift improves both kappa and balanced accuracy on all datasets:\n\nAnd here’s the same plot for 20 different random stratified train/tests splits with target CHEMBL205 (carbonic anhydrase II) with activity thresholds chosen to give a 19-72-9 class split. Once again, the threshold shift improves predictive performance:\n\nNote: the original version of this notebook and the two CHEMBL data files (file1, file2), are both in github in the older rdkit blog repo.\n\n\n\nI put some thought into figuring out how to extend this to the general multi-class prediction case, but that turned out to be more difficult than I’d anticipated. If you have suggestions, ideally suggestions accompanied by code, please let me know in the comments!\n\n\n\nMany thanks to Ryo Kunimoto and Takayuki Serizawa at Daiichi Sankyo for inspiring and funding the initial part of this work.\nAnd now onto the code and more detailed exploration\n\nfrom rdkit import Chem\nfrom rdkit.Chem import rdMolDescriptors\nfrom rdkit.Chem import rdFingerprintGenerator\nfrom rdkit.Chem import PandasTools\n# note that you can install ghost using pip: python -m pip install ghostml\nimport ghostml\nimport pandas as pd\nfrom sklearn import metrics\nimport numpy as np\n\n\n%pylab inline\n\nPopulating the interactive namespace from numpy and matplotlib"
  },
  {
    "objectID": "posts/2021-12-23-ternary-ghost.html#using-thresholds-in-ternary-problems",
    "href": "posts/2021-12-23-ternary-ghost.html#using-thresholds-in-ternary-problems",
    "title": "A Ternary GHOST",
    "section": "",
    "text": "Things are a bit more complicated here than with binary classifiers. For the binary case we just have a single threshold which determines whether an instance is predicted to be in class 0 or 1. So, assuming that we optimized based on the probability of class 1, we can formulate the decision as:\nif probabilities[1] &gt;= threshold:\n   prediction = 1\nelse:\n   prediction = 0\nBefore doing any optimization threshold is equal to 0.5.\nFor ternary predictions we have two different decision boundaries and there’s no longer a simple threshold; instead the default decision rule can be expressed as:\nprediction = argmax(probabilities)\ni.e., the prediction is the class which has the highest predicted probability.\n\nAside: the same decision rule can be used for a binary classifier with the default threshold. It’s just easier to explain using the threshold of 0.5.\n\nIf we want to introduce two thresholds for the ternary classifier, and assuming that we optimize the thresholds for classes 0 and 2, we have to use a more complex decision rule:\n        if probabilities[0]&gt;=thresholds[0]:\n            # we might still be in class 2 if the relative probability of that\n            # is larger than the probability of class 0\n            if (probabilities[2]-thresholds[1])&gt;(probabilities[0]-thresholds[0]):\n                prediction = 2\n            else:\n                prediction = 0\n        elif probabilities[2]&gt;=thresholds[1]:\n            prediction = 0\n        else:\n            prediction = 1"
  },
  {
    "objectID": "posts/2021-12-23-ternary-ghost.html#optimizing-thresholds-for-ternary-problems",
    "href": "posts/2021-12-23-ternary-ghost.html#optimizing-thresholds-for-ternary-problems",
    "title": "A Ternary GHOST",
    "section": "",
    "text": "For the sake of this post let’s assume that we’re optimizing the thresholds for classes 0 and 2; we could also do 0 and 1, or 1 and 2, the results should still be the same.\nIn this post I explore two different approaches for optimizing these thresholds.\n\n\nHere I optimize the two thresholds independently of each other by constructing two binary classification problems and optimizing the thresholds for those problems. Here’s the process:\n\nCreate a binary classification set by setting the training-set y values to 1 if the original value is 0 and to 0 otherwise.\nUse the original ghostml approach with that binary classification data and the predicted probabilities of each training point to be 0 in order to set threshold0, the threshold for the predicted probability of being 0.\nCreate a binary classification set by setting the training-set y values to 1 if the original value is 2 and to 0 otherwise.\nUse the original ghostml approach with that binary classification data and the predicted probabilities of each training point to be 2 in order to set threshold2, the threshold for the predicted probability of being 2.\n\nSince the current ghostml code doesn’t support using balanced accuracy for optimization, I just use kappa for the greedy optimization.\n\n\n\nExplore the full grid of possible (threshold0, threshold2) pairs and pick the one which produces the optimal Cohen’s kappa value. I also try a variant of this which optimizes balanced accuracy instead of Cohen’s kappa."
  },
  {
    "objectID": "posts/2021-12-23-ternary-ghost.html#tldr-results-summary",
    "href": "posts/2021-12-23-ternary-ghost.html#tldr-results-summary",
    "title": "A Ternary GHOST",
    "section": "",
    "text": "Both approaches work well with both simulated data and a couple of datasets from ChEMBL. There doesn’t seem to be a large or consistent difference in the quality of the results generated with the two different methods. The greedy optimization approach is, however, quite a bit faster.\nHere’s the improvement in three scoring metrics (kappa, balanced accuracy, and overall accuracy) when using the greedy optimization procedure on 50 simulated datasets with a 10-80-10 class split; the threshold shift improves both kappa and balanced accuracy on all datasets:\n\nAnd here’s the same plot for 20 different random stratified train/tests splits with target CHEMBL205 (carbonic anhydrase II) with activity thresholds chosen to give a 19-72-9 class split. Once again, the threshold shift improves predictive performance:\n\nNote: the original version of this notebook and the two CHEMBL data files (file1, file2), are both in github in the older rdkit blog repo."
  },
  {
    "objectID": "posts/2021-12-23-ternary-ghost.html#beyond-ternary-problems",
    "href": "posts/2021-12-23-ternary-ghost.html#beyond-ternary-problems",
    "title": "A Ternary GHOST",
    "section": "",
    "text": "I put some thought into figuring out how to extend this to the general multi-class prediction case, but that turned out to be more difficult than I’d anticipated. If you have suggestions, ideally suggestions accompanied by code, please let me know in the comments!"
  },
  {
    "objectID": "posts/2021-12-23-ternary-ghost.html#acknowledgements",
    "href": "posts/2021-12-23-ternary-ghost.html#acknowledgements",
    "title": "A Ternary GHOST",
    "section": "",
    "text": "Many thanks to Ryo Kunimoto and Takayuki Serizawa at Daiichi Sankyo for inspiring and funding the initial part of this work.\nAnd now onto the code and more detailed exploration\n\nfrom rdkit import Chem\nfrom rdkit.Chem import rdMolDescriptors\nfrom rdkit.Chem import rdFingerprintGenerator\nfrom rdkit.Chem import PandasTools\n# note that you can install ghost using pip: python -m pip install ghostml\nimport ghostml\nimport pandas as pd\nfrom sklearn import metrics\nimport numpy as np\n\n\n%pylab inline\n\nPopulating the interactive namespace from numpy and matplotlib"
  },
  {
    "objectID": "posts/2021-12-23-ternary-ghost.html#try-a-10-80-10-split",
    "href": "posts/2021-12-23-ternary-ghost.html#try-a-10-80-10-split",
    "title": "A Ternary GHOST",
    "section": "Try a 10-80-10 split",
    "text": "Try a 10-80-10 split\nI will test this with multiple different forms of imbalance, just to be sure that it generalizes. Let’s start with an example where the majority class is in the middle:\n\nfrom sklearn.datasets import make_classification\n\naccum_10_80_10 = []\n\nfor rep in range(50):\n    print('--------------')\n    # Generate a ternary imbalanced classification problem\n    X, y = make_classification(n_samples=6000, n_features=20,\n                               n_informative=10, n_redundant=0, n_classes=3, \n                               random_state=0xf00d+rep, shuffle=False, weights = [0.1, 0.8, 0.1])\n    run_ternary_experiment(X,y,accum_10_80_10)\n\nStart by comparing the model-performance metrics kappa, balanced accuracy, and accuracy between the model with the greedy threshold shift based on kappa and the model with “default thresholds”.\n\naccum = accum_10_80_10\nfigsize(9,6)\nscatter([x['orig-kappa'] for x in accum],[x['shift-kappa'] for x in accum],label='kappa');\nscatter([x['orig-balanced'] for x in accum],[x['shift-balanced'] for x in accum],label='balanced accuracy');\nscatter([x['orig-accuracy'] for x in accum],[x['shift-accuracy'] for x in accum],label='accuracy');\nplot([.4,1],[.4,1]);\nlegend();\nxlabel('orig')\nylabel('greedy shift');\ntitle('10-80-10');\n\n\n\n\n\n\n\n\nThe shift improves all three metrics for every dataset.\nNow compare the results for using a grid search based on Cohen’s kappa to the greedy shift results:\n\nscatter([x['shift-kappa'] for x in accum],[x['global-k-shift-kappa'] for x in accum],label='kappa');\nscatter([x['shift-balanced'] for x in accum],[x['global-k-shift-balanced'] for x in accum],label='balanced accuracy');\nscatter([x['shift-accuracy'] for x in accum],[x['global-k-shift-accuracy'] for x in accum],label='accuracy');\nplot([.4,1],[.4,1]);\nlegend();\nxlabel('greedy shift')\nylabel('grid-kappa');\ntitle('10-80-10');\n\n\n\n\n\n\n\n\nHere the changes are reasonably small, but they do tend to slightly favor the results of the grid search.\nFinally, do the equivalent plot comparing the result from using balanced accuracy in the grid search to the results from the greedy shift:\n\nscatter([x['shift-kappa'] for x in accum],[x['global-ba-shift-kappa'] for x in accum],label='kappa');\nscatter([x['shift-balanced'] for x in accum],[x['global-ba-shift-balanced'] for x in accum],label='balanced accuracy');\nscatter([x['shift-accuracy'] for x in accum],[x['global-ba-shift-accuracy'] for x in accum],label='accuracy');\nplot([.4,1],[.4,1]);\nlegend();\nxlabel('greedy shift')\nylabel('grid-balanced');\ntitle('10-80-10');\n\n\n\n\n\n\n\n\nThat plot makes it look like doing the threshold shifts using balanced accuracy doesn’t improve kappa, but it’s important to remember that this comparing the balanced accuracy shift vs the kappa shift.\nUsing balanced accuracy to do the shift instead of kappa does actually help kappa too, as this plot shows:\n\nscatter([x['orig-kappa'] for x in accum],[x['global-ba-shift-kappa'] for x in accum],label='kappa');\nscatter([x['orig-balanced'] for x in accum],[x['global-ba-shift-balanced'] for x in accum],label='balanced accuracy');\nscatter([x['orig-accuracy'] for x in accum],[x['global-ba-shift-accuracy'] for x in accum],label='accuracy');\nplot([.4,1],[.4,1]);\nlegend();\nxlabel('orig')\nylabel('grid-balanced');\ntitle('10-80-10');\n\n\n\n\n\n\n\n\nStill, with these datasets it looks like optimizing the threshold with kappa instead of balanced accuracy is a better idea."
  },
  {
    "objectID": "posts/2021-12-23-ternary-ghost.html#is-the-majority-class",
    "href": "posts/2021-12-23-ternary-ghost.html#is-the-majority-class",
    "title": "A Ternary GHOST",
    "section": "0 is the majority class",
    "text": "0 is the majority class\nNow let’s make sure that the code doesn’t have some “feature” which causes it to only work with the middle class is the majority:\n\naccum_80_10_10 = []\n\nfor rep in range(50):\n    print('--------------')\n    # Generate a ternary imbalanced classification problem\n    X, y = make_classification(n_samples=6000, n_features=20,\n                               n_informative=10, n_redundant=0, n_classes=3, \n                               random_state=0xf00d+rep, shuffle=False, weights = [0.8, 0.1, 0.1])\n    run_ternary_experiment(X,y,accum_80_10_10)\n\n\naccum = accum_80_10_10\nfigsize(9,6)\nscatter([x['orig-kappa'] for x in accum],[x['shift-kappa'] for x in accum],label='kappa');\nscatter([x['orig-balanced'] for x in accum],[x['shift-balanced'] for x in accum],label='balanced accuracy');\nscatter([x['orig-accuracy'] for x in accum],[x['shift-accuracy'] for x in accum],label='accuracy');\nplot([.4,1],[.4,1]);\nlegend();\nxlabel('orig')\nylabel('greedy shift');\ntitle('80-10-10');\n\n\n\n\n\n\n\n\n\nscatter([x['shift-kappa'] for x in accum],[x['global-k-shift-kappa'] for x in accum],label='kappa');\nscatter([x['shift-balanced'] for x in accum],[x['global-k-shift-balanced'] for x in accum],label='balanced accuracy');\nscatter([x['shift-accuracy'] for x in accum],[x['global-k-shift-accuracy'] for x in accum],label='accuracy');\nplot([.4,1],[.4,1]);\nlegend();\nxlabel('greedy shift')\nylabel('grid-kappa');\ntitle('80-10-10');\n\n\n\n\n\n\n\n\n\nscatter([x['shift-kappa'] for x in accum],[x['global-ba-shift-kappa'] for x in accum],label='kappa');\nscatter([x['shift-balanced'] for x in accum],[x['global-ba-shift-balanced'] for x in accum],label='balanced accuracy');\nscatter([x['shift-accuracy'] for x in accum],[x['global-ba-shift-accuracy'] for x in accum],label='accuracy');\nplot([.4,1],[.4,1]);\nlegend();\nxlabel('greedy shift')\nylabel('grid-balanced');\ntitle('80-10-10');\n\n\n\n\n\n\n\n\nSame conclusions as before (good thing!)"
  },
  {
    "objectID": "posts/2021-12-23-ternary-ghost.html#is-the-majority-class-1",
    "href": "posts/2021-12-23-ternary-ghost.html#is-the-majority-class-1",
    "title": "A Ternary GHOST",
    "section": "2 is the majority class",
    "text": "2 is the majority class\n\naccum_10_10_80 = []\n\nfor rep in range(50):\n    print('--------------')\n    # Generate a ternary imbalanced classification problem\n    X, y = make_classification(n_samples=6000, n_features=20,\n                               n_informative=10, n_redundant=0, n_classes=3, \n                               random_state=0xf00d+rep, shuffle=False, weights = [0.1, 0.1, 0.8])\n    run_ternary_experiment(X,y,accum_10_10_80)\n\n\naccum = accum_10_10_80\nfigsize(9,6)\nscatter([x['orig-kappa'] for x in accum],[x['shift-kappa'] for x in accum],label='kappa');\nscatter([x['orig-balanced'] for x in accum],[x['shift-balanced'] for x in accum],label='balanced accuracy');\nscatter([x['orig-accuracy'] for x in accum],[x['shift-accuracy'] for x in accum],label='accuracy');\nplot([.4,1],[.4,1]);\nlegend();\nxlabel('orig')\nylabel('greedy shift');\ntitle('10-10-80');\n\n\n\n\n\n\n\n\n\nscatter([x['shift-kappa'] for x in accum],[x['global-k-shift-kappa'] for x in accum],label='kappa');\nscatter([x['shift-balanced'] for x in accum],[x['global-k-shift-balanced'] for x in accum],label='balanced accuracy');\nscatter([x['shift-accuracy'] for x in accum],[x['global-k-shift-accuracy'] for x in accum],label='accuracy');\nplot([.4,1],[.4,1]);\nlegend();\nxlabel('greedy shift')\nylabel('grid-kappa');\ntitle('10-10-80');\n\n\n\n\n\n\n\n\n\nscatter([x['shift-kappa'] for x in accum],[x['global-ba-shift-kappa'] for x in accum],label='kappa');\nscatter([x['shift-balanced'] for x in accum],[x['global-ba-shift-balanced'] for x in accum],label='balanced accuracy');\nscatter([x['shift-accuracy'] for x in accum],[x['global-ba-shift-accuracy'] for x in accum],label='accuracy');\nplot([.4,1],[.4,1]);\nlegend();\nxlabel('greedy shift')\nylabel('grid-balanced');\ntitle('10-10-80');\n\n\n\n\n\n\n\n\nSame conclusions as before (good thing!)"
  },
  {
    "objectID": "posts/2021-12-23-ternary-ghost.html#chembl205-carbonic-anhydrase-ii",
    "href": "posts/2021-12-23-ternary-ghost.html#chembl205-carbonic-anhydrase-ii",
    "title": "A Ternary GHOST",
    "section": "CHEMBL205: Carbonic Anhydrase II",
    "text": "CHEMBL205: Carbonic Anhydrase II\n\ndata = pd.read_csv('../data/target_CHEMBL205.csv.gz')\nPandasTools.AddMoleculeColumnToFrame(data,smilesCol='canonical_smiles')\ndata['pKi'] = [-math.log10(x*1e-9) for x in data['standard_value']]\ndata.head()\n\n\n\n\n\n\n\n\ncompound_chembl_id\ncanonical_smiles\nstandard_value\nstandard_units\nstandard_relation\nstandard_type\nyear\nROMol\npKi\n\n\n\n\n0\nCHEMBL1054\nNS(=O)(=O)c1cc2c(cc1Cl)NC(C(Cl)Cl)NS2(=O)=O\n91.0\nnM\n=\nKi\n2009\n\n7.040959\n\n\n1\nCHEMBL1055\nNS(=O)(=O)c1cc(C2(O)NC(=O)c3ccccc32)ccc1Cl\n138.0\nnM\n=\nKi\n2009\n\n6.860121\n\n\n2\nCHEMBL1060\nO=P([O-])([O-])O.[Na+].[Na+]\n13200000.0\nnM\n=\nKi\n2004\n\n1.879426\n\n\n3\nCHEMBL106848\nNS(=O)(=O)c1ccc(SCCO)cc1\n21.0\nnM\n=\nKi\n2013\n\n7.677781\n\n\n4\nCHEMBL107217\nCCN(CC)C(=S)[S-].[Na+]\n3100.0\nnM\n=\nKi\n2009\n\n5.508638\n\n\n\n\n\n\n\nPick two pKi values for binning\n\ndef binner(act,bins=(5,8.5)):\n    for i,bin in enumerate(bins):\n        if act&lt;=bin:\n            return i\n    return len(bins)\ndata['activity'] = [binner(x) for x in data.pKi]\ndata.groupby('activity').describe()\n\n\n\n\n\n\n\n\nstandard_value\nyear\npKi\n\n\n\ncount\nmean\nstd\nmin\n25%\n50%\n75%\nmax\ncount\nmean\n...\n75%\nmax\ncount\nmean\nstd\nmin\n25%\n50%\n75%\nmax\n\n\nactivity\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0\n968.0\n1.242009e+18\n3.864224e+19\n10000.000\n10000.0000\n50000.0\n196700.000\n1.202264e+21\n968.0\n2012.994835\n...\n2016.0\n2020.0\n968.0\n4.069107\n1.200449\n-12.080000\n3.706216\n4.301030\n5.000000\n5.00000\n\n\n1\n3582.0\n7.292523e+02\n1.778519e+03\n3.200\n13.5000\n73.4\n417.750\n9.900000e+03\n3582.0\n2013.261307\n...\n2017.0\n2020.0\n3582.0\n7.050231\n0.915651\n5.004365\n6.379084\n7.134306\n7.869666\n8.49485\n\n\n2\n427.0\n1.309327e+00\n8.709364e-01\n0.008\n0.6355\n1.0\n2.035\n3.100000e+00\n427.0\n2014.962529\n...\n2017.0\n2020.0\n427.0\n9.050659\n0.500779\n8.508638\n8.691437\n9.000000\n9.196895\n11.09691\n\n\n\n\n3 rows × 24 columns\n\n\n\nOk, that’s imbalanced :-)\nGenerate fingerprints:\n\nfrom rdkit.Chem import SaltRemover\nsr = SaltRemover.SaltRemover()\nstripped = [sr.StripMol(m) for m in data.ROMol]\nfpgen = rdFingerprintGenerator.GetMorganGenerator(radius=2)\nfps = [fpgen.GetFingerprint(m) for m in stripped]\n\nAnd now run the experiment with 20 random splits:\n\naccum_chembl205 = []\nfor i in range(20):\n    run_ternary_experiment(fps,data.activity,accum_chembl205,random_state=0xf00d+i)\n\n\naccum = accum_chembl205\nfigsize(9,6)\nscatter([x['orig-kappa'] for x in accum],[x['shift-kappa'] for x in accum],label='kappa');\nscatter([x['orig-balanced'] for x in accum],[x['shift-balanced'] for x in accum],label='balanced accuracy');\nscatter([x['orig-accuracy'] for x in accum],[x['shift-accuracy'] for x in accum],label='accuracy');\nplot([.4,1],[.4,1]);\nlegend();\nxlabel('orig')\nylabel('greedy shift');\ntitle('CHEMBL205');\n\n\n\n\n\n\n\n\n\nscatter([x['shift-kappa'] for x in accum],[x['global-k-shift-kappa'] for x in accum],label='kappa');\nscatter([x['shift-balanced'] for x in accum],[x['global-k-shift-balanced'] for x in accum],label='balanced accuracy');\nscatter([x['shift-accuracy'] for x in accum],[x['global-k-shift-accuracy'] for x in accum],label='accuracy');\nplot([.4,1],[.4,1]);\nlegend();\nxlabel('greedy shift')\nylabel('grid-kappa');\ntitle('CHEMBL205');\n\n\n\n\n\n\n\n\n\nscatter([x['shift-kappa'] for x in accum],[x['global-ba-shift-kappa'] for x in accum],label='kappa');\nscatter([x['shift-balanced'] for x in accum],[x['global-ba-shift-balanced'] for x in accum],label='balanced accuracy');\nscatter([x['shift-accuracy'] for x in accum],[x['global-ba-shift-accuracy'] for x in accum],label='accuracy');\nplot([.4,1],[.4,1]);\nlegend();\nxlabel('greedy shift')\nylabel('grid-balanced');\ntitle('CHEMBL205');\n\n\n\n\n\n\n\n\nWe see the same behavior as before: shifting the descision thresholds using either the greedy approach or grid-based approach improves prediction accuracy over the default decision thresholds."
  },
  {
    "objectID": "posts/2021-12-23-ternary-ghost.html#chembl217-dopamine-d2",
    "href": "posts/2021-12-23-ternary-ghost.html#chembl217-dopamine-d2",
    "title": "A Ternary GHOST",
    "section": "CHEMBL217: Dopamine D2",
    "text": "CHEMBL217: Dopamine D2\n\ndata = pd.read_csv('../data/target_CHEMBL217.csv.gz')\nPandasTools.AddMoleculeColumnToFrame(data,smilesCol='canonical_smiles')\ndata['pKi'] = [-math.log10(x*1e-9) for x in data['standard_value']]\ndef binner(act,bins=(5,8)):\n    for i,bin in enumerate(bins):\n        if act&lt;=bin:\n            return i\n    return len(bins)\ndata['activity'] = [binner(x) for x in data.pKi]\ndata.groupby('activity').describe()\n\n\n\n\n\n\n\n\nstandard_value\nyear\npKi\n\n\n\ncount\nmean\nstd\nmin\n25%\n50%\n75%\nmax\ncount\nmean\n...\n75%\nmax\ncount\nmean\nstd\nmin\n25%\n50%\n75%\nmax\n\n\nactivity\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0\n356.0\n143415.189354\n781194.668326\n10000.000\n10000.0000\n10000.00\n24234.5\n10000000.00\n356.0\n2011.679775\n...\n2017.0\n2019.0\n356.0\n4.672916\n0.581865\n2.000000\n4.615626\n5.000000\n5.000000\n5.000000\n\n\n1\n4014.0\n830.546163\n1471.610125\n10.000\n63.1875\n238.51\n931.0\n9906.00\n4014.0\n2011.100648\n...\n2015.0\n2020.0\n4014.0\n6.620074\n0.724919\n5.004102\n6.031050\n6.622494\n7.199370\n8.000000\n\n\n2\n607.0\n3.715942\n2.786155\n0.027\n1.2150\n3.00\n5.9\n9.86\n607.0\n2011.957166\n...\n2016.0\n2019.0\n607.0\n8.614671\n0.475862\n8.006123\n8.229148\n8.522879\n8.915457\n10.568636\n\n\n\n\n3 rows × 24 columns\n\n\n\n\nfrom rdkit.Chem import SaltRemover\nsr = SaltRemover.SaltRemover()\nstripped = [sr.StripMol(m) for m in data.ROMol]\nfpgen = rdFingerprintGenerator.GetMorganGenerator(radius=2)\nfps = [fpgen.GetFingerprint(m) for m in stripped]\n\n\naccum_chembl217 = []\nfor i in range(20):\n    run_ternary_experiment(fps,data.activity,accum_chembl217,random_state=0xf00d+i)\n\n\naccum = accum_chembl217\nfigsize(9,6)\nscatter([x['orig-kappa'] for x in accum],[x['shift-kappa'] for x in accum],label='kappa');\nscatter([x['orig-balanced'] for x in accum],[x['shift-balanced'] for x in accum],label='balanced accuracy');\nscatter([x['orig-accuracy'] for x in accum],[x['shift-accuracy'] for x in accum],label='accuracy');\nplot([.2,1],[.2,1]);\nlegend();\nxlabel('orig')\nylabel('greedy shift');\ntitle('CHEMBL217');\n\n\n\n\n\n\n\n\n\nscatter([x['shift-kappa'] for x in accum],[x['global-k-shift-kappa'] for x in accum],label='kappa');\nscatter([x['shift-balanced'] for x in accum],[x['global-k-shift-balanced'] for x in accum],label='balanced accuracy');\nscatter([x['shift-accuracy'] for x in accum],[x['global-k-shift-accuracy'] for x in accum],label='accuracy');\nplot([.4,1],[.4,1]);\nlegend();\nxlabel('greedy shift')\nylabel('grid-kappa');\ntitle('CHEMBL217');\n\n\n\n\n\n\n\n\n\nscatter([x['shift-kappa'] for x in accum],[x['global-ba-shift-kappa'] for x in accum],label='kappa');\nscatter([x['shift-balanced'] for x in accum],[x['global-ba-shift-balanced'] for x in accum],label='balanced accuracy');\nscatter([x['shift-accuracy'] for x in accum],[x['global-ba-shift-accuracy'] for x in accum],label='accuracy');\nplot([.4,1],[.4,1]);\nlegend();\nxlabel('greedy shift')\nylabel('grid-balanced');\ntitle('CHEMBL217');\n\n\n\n\n\n\n\n\nAgain, the same conclusions hold here."
  },
  {
    "objectID": "posts/2021-05-01-rdkit-cffi-part1.html",
    "href": "posts/2021-05-01-rdkit-cffi-part1.html",
    "title": "A new way to use the RDKit from other languages",
    "section": "",
    "text": "We’ve added a new API which makes it easy to use the RDKit from programming languages other than C++, Python, Java or C#."
  },
  {
    "objectID": "posts/2021-05-01-rdkit-cffi-part1.html#parsing-molecule-formats-and-operating-on-molecules",
    "href": "posts/2021-05-01-rdkit-cffi-part1.html#parsing-molecule-formats-and-operating-on-molecules",
    "title": "A new way to use the RDKit from other languages",
    "section": "Parsing molecule formats and operating on molecules",
    "text": "Parsing molecule formats and operating on molecules\nThe “hello world” equivalent in cheminformatics is generating canonical SMILES. Here’s a full C program showing how you do that with rdkit-cffi, I will explain the rdkit-cffi functions and how they are used in more detail below:\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdlib.h&gt;\n#include \"cffiwrapper.h\"\n\nvoid canon_smiles(){\n  char *pkl;\n  size_t pkl_size;\n  \n  pkl = get_mol(\"c1cc(O)ccc1\",&pkl_size,\"\");\n  char *smiles=get_smiles(pkl,pkl_size,NULL);\n  printf(\"Canonical SMILES: %s\\n\",smiles);\n  free(smiles);\n  free(pkl);\n}\n\nint main(){\n  enable_logging();\n  printf(\"hello %s\\n\",version()); \n  canon_smiles();\n  return 0;\n}\nI compiled this on my linux machine as follows:\n% cc -o demo.exe -I $RDBASE/Code demo.c $RDBASE/lib/librdkitcffi.so\nRunning it produces:\n% ./demo.exe\nhello 2021.09.1pre\nCanonical SMILES: Oc1ccccc1\nLet’s look at the rdkit-cffi parts of this, starting with the main() function.\nWe start by enabling the RDKit’s logging system:\n  enable_logging();\nIf you skip this, you won’t see any of the usual RDKit errors or warnings.\nNext we use the version() function to get the version of the RDKit which is being used and then print that out.\nWith that basic initialization out of the way we call the function canon_smiles(), which is where the real work happens. Here we start by parsing a SMILES using the get_mol() function:\n  pkl = get_mol(\"c1cc(O)ccc1\",&pkl_size,\"\");\n\nget_mol() returns a binary string with the pickled representation of the molecule and uses the pkl_size argument (an integer) to return the length of that string (this is an unfortunately necessary implementation detail). The final argument to get_mol(), the empty string, can be used to pass in an JSON string containing additional arguments controlling the parsing (we could have also passed this argument as NULL). get_mol() currently supports constructing molecules from SMILES (and CXSMILES), Mol/SDF, and the RDKit’s JSON format; it recognized automatically which parser should be used. We will be expanding the list of supported formats in the future.\nAfter we have the molecule processed we can get the canonical SMILES for it by calling the get_smiles() function:\n  char *smiles=get_smiles(pkl,pkl_size,NULL);\nget_smiles() follows the general pattern for rdkit-cffi functions which operate on molecules: the first two arguments are the pickled molecule and the length of the pickle string, the third argument is a JSON string with additional options to be used when generating the SMILES; in this case we want the defaults, so we pass a NULL pointer (we could also have used the empty string \"\").\nFinally, and not to be overlooked when working in C, we need to free the memory which was allocated to hold the molecule pickle and the SMILES:\n  free(smiles);\n  free(pkl);\nThe functions which are available are declared in cffiwrapper.h."
  },
  {
    "objectID": "posts/2021-05-01-rdkit-cffi-part1.html#modifying-molecules",
    "href": "posts/2021-05-01-rdkit-cffi-part1.html#modifying-molecules",
    "title": "A new way to use the RDKit from other languages",
    "section": "Modifying molecules",
    "text": "Modifying molecules\nSome rdkit-cffi functions modify the molecule. In this case the general pattern is the modify the molecule in place, i.e. to modify the current molecule instead of returning a new one.\nHere’s a simple function which parses a SMILES, add Hs to the molecule, generates a 3D conformer using a fixed random seed, and then prints out the molblock for the modified molecule:\nvoid generate_conformer(){\n  char *pkl;\n  size_t pkl_size;\n  \n  pkl = get_mol(\"c1cc(O)ccc1\",&pkl_size,NULL);\n\n  add_hs(&pkl,&pkl_size);\n\n  set_3d_coords(&pkl,&pkl_size,\"{\\\"randomSeed\\\":42}\");\n\n  char *molb = get_molblock(pkl,pkl_size,NULL);\n  printf(\"%s\\n\",molb);\n  free(molb);\n  free(pkl);\n}\nWe’ve already seen get_mol(). As mentioned above add_hs() modifies the molecule in place, so you need to pass pointers to the pickle string and pickle size so that they can be modifed. set_3d_coords() also modifies the molecule in place to add the conformer. This is also the first time we use the JSON string that most of the functions take as their last argument: here we set the random number seed used in the conformer generation so that we get reproducible results. Finally get_molblock(), like get_smiles(), returns a string with the MOL file data for the molecule. This can be saved to a file and opened in most chemistry software."
  },
  {
    "objectID": "posts/2023-03-17-setting-up-a-cxx-dev-env2.html",
    "href": "posts/2023-03-17-setting-up-a-cxx-dev-env2.html",
    "title": "Setting up an RDKit development environment 1",
    "section": "",
    "text": "This post walks provides a series of step-by-step instructions for getting a local build of the RDKit working on your machine. This is potentially useful if you want to contribute to the RDKit C++ code, make Python contributions (an alternative approach for this is described here) or just try out/work with the pre-release version of the RDKit.\nThe instructions in this blog post currently work on linux and the Mac. I will do a second post with instructions for Windows in the next few days. In the meantime, David Cosgrove has put together some instructions in a thread on the RDKit discussions tab.\nThanks to Felix Pultar and Jessica Braun for testing and proofreading these instructions.\n\nPart 0: getting ready\nThis assumes that you have a local install of conda. That could be miniconda, miniforge, or one of the larger conda installations. If you’re just getting started, I would suggest miniforge.\nYou also need to have a working C++17 compiler on your machine. This is not a problem on modern linux distributions where you can install either g++ or clang++ directly from the distribution. On the Mac you need to install the xcode command line tools, the command to do that is xcode-select --install.\nFinally, you need a working version of git. If you haven’t done this already: there are a number of easy ways to install git, you can decide which makes most sense for you. The simplest is probably to just install it using conda.\nNow that you’ve got everything set up, go to the directory where you want to keep the RDKit source code and clone the github repo:\ngit clone https://github.com/rdkit/rdkit.git RDKit_git\nThis will create a directory called RDKit_git with the RDKit source.\n\n\nPart 1: setup conda environment\nConda makes it very, very easy to install all of the dependencies for building the RDKit, here’s the command:\nmamba create -n py310_rdkit_build -c conda-forge python=3.10 boost-cpp boost cairo pandas pillow freetype cmake numpy eigen matplotlib \nNote that I use mamba instead of conda for installing things. mamba is often significantly faster than conda. It’s installed by default with miniforge, or you can install it manually with conda install -c conda-forge mamba\n\n\nPart 2: run cmake and build\nNow we’re going to actually build the RDKit. These instructions build the code and install it in the RDKit source tree (instead of trying to install it centrally on your computer).\nFrom inside the RDKit source directory you checked out above:\nconda activate py310_rdkit_build\nmkdir build_demo\ncd build_demo\ncmake -DRDK_BUILD_INCHI_SUPPORT=ON -DRDK_BUILD_YAEHMOP_SUPPORT=ON -DRDK_BUILD_XYZ2MOL_SUPPORT=ON ..\nThat should run without errors. It’ll produce a bunch of warnings, but should end with something like:\n-- Generating done\n-- Build files have been written to: /localhome/glandrum/RDKit_git/build_demo\nNow actually build it:\nmake -j4 install\nThe -j4 here controls the number of jobs which run simultaneously. If you have a lot of memory on your machine, you can definitely increase the value from 4 to 8 (or whatever).\nThat will take a while and generate a few warnings, but shouldn’t have any errors. The last line of the output should be something like this:\n-- Installing: /localhome/glandrum/RDKit_git/rdkit/RDPaths.py\n\n\nPart 3: setup your environment and then run the tests\nAt this point you have a completed build of the RDKit that is installed within the source tree. Now we’re going to set up your enviroment so that you can actually use that build.\nDo this from inside the RDKit source directory (not the build directory). On linux:\nexport RDBASE=`pwd`\nexport PYTHONPATH=$RDBASE\nexport LD_LIBRARY_PATH=$RDBASE/lib:$CONDA_PREFIX/lib\non the Mac, that is:\nexport RDBASE=`pwd`\nexport PYTHONPATH=$RDBASE\nexport DYLD_LIBRARY_PATH=$RDBASE/lib:$CONDA_PREFIX/lib\nNow you can run the tests:\ncd build_demo\nctest -j4 –output-on-failure\nThis will take a bit of time and generate a lot of output, but the last bit should look something like this:\n100% tests passed, 0 tests failed out of 219\n\nTotal Test time (real) =  63.92 sec\nThat’s it! You have now built the RDKit and can work with it locally.\nIf you make changes to the C++ code and want to test them out, you just need to run make -j4 install. After making Python changes you don’t need to do anything in order to have those changes available. I do, however, strongly suggest running the tests again (ctest -j4 --output-on-failure) after making any change. It’s good to find out quickly if you’ve broken anything!\n\n\nPart 4: Using the environment\nIn order to use the code you just need to set up your environment by repeating the export commands shown above. I find the following aliases really useful on linux (the Mac form just needs LD_LIBRARY_PATH changed to DYLD_LIBRARY_PATH).\nalias remote_rdkit='unset RDBASE;export PYTHONPATH=\"\";export LD_LIBRARY_PATH=\"\"'\nalias local_rdkit='conda activate py310_rdkit_build;export RDBASE=\"/localhome/glandrum/RDKit_git\";export PYTHONPATH=\"$RDBASE\";export LD_LIBRARY_PATH=\"$RDBASE/lib:$CONDA_PREFIX/lib\"'\nalias rdkit_vers='python -c \"import rdkit;print(rdkit.__version__,rdkit.__file__)\"'\nlocal_rdkit sets up the shell to use my local RDKit build. remote_rdkit clears that stuff out so that you can use a conda rdkit install rdkit_vers shows the current rdkit version and where the files are coming from\nI hope this was useful. If you have suggestions for how to make these instructions clearer or find any mistakes, please comment!"
  },
  {
    "objectID": "posts/2023-10-17-release-new-stuff-1.html",
    "href": "posts/2023-10-17-release-new-stuff-1.html",
    "title": "What’s new in the 2023.09.1 release, part 1",
    "section": "",
    "text": "This is the first of a few posts covering some of the new features added to the RDKit in the 2023.09.1 release.\nThe full release notes are available here.\nNote: starting in this release cycle we are going to try changing the RDKit release model to include new features in minor releases. So the 2023.09.2 release may potentially include new features. There’s some description of the thinking behind this change in this blog post.\n\nfrom rdkit import Chem\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit.Chem import Draw\nimport rdkit\nprint(rdkit.__version__)\n\n2023.09.1\n\n\n\nGeneralized substructure search\nI wrote a blog post on this topic a while ago. The functionality in this release builds on and refines the ideas in that post.\nHere are some molecules we’ll do queries against\n\ndata = [('CHEMBL1622258','CCn1c(=N)n(CCO)c2ccccc21'),\n        ('CHEMBL464157','CCn1c(N)nc2ccccc21'),\n        ('CHEMBL256226','Cc1cccc2c1n(C)c(=N)n2CC(=O)c1ccc(Cl)cc1'),\n        ('CHEMBL4560326','COC(=O)Nc1nc2c(C)cccc2[nH]1'),\n        ('CHEMBL402567','Cc1ccc2c(c1)n(CC(=O)c1ccc(Cl)cc1)c(=N)n2C'),\n        ('CHEMBL9514','COC(=O)Nc1nc2cc(C(=O)c3cccs3)ccc2[nH]1'),\n        ('CHEMBL1981059','Cc1cc2[nH]c(=NS(=O)(=O)c3cc(C)c(Cl)cc3S)[nH]c2cc1C'),\n        ('CHEMBL483978','Cc1cccc(-c2ccc3nc(N)[nH]c3c2)c1'),\n       ]\n\nnms,smis = zip(*data)\nmols = [Chem.MolFromSmiles(x) for x in smis]\nDraw.MolsToGridImage(mols,legends=nms)\n\n\n\n\n\n\n\n\nAnd a query which has both a variable attachment point and some possible tautomers.\n\nqry = Chem.MolFromMolBlock('''\n  Mrv2211 10142305482D          \n\n  0  0  0     0  0            999 V3000\nM  V30 BEGIN CTAB\nM  V30 COUNTS 12 12 0 0 0\nM  V30 BEGIN ATOM\nM  V30 1 C -4.7499 1.9567 0 0\nM  V30 2 C -6.0836 1.1867 0 0\nM  V30 3 C -6.0836 -0.3534 0 0\nM  V30 4 C -4.7499 -1.1234 0 0\nM  V30 5 C -3.4163 -0.3534 0 0\nM  V30 6 C -3.4163 1.1867 0 0\nM  V30 7 N -1.9692 1.7134 0 0\nM  V30 8 N -1.8822 -0.7768 0 0\nM  V30 9 C -1.0211 0.4999 0 0\nM  V30 10 * -5.639 -0.0967 0 0\nM  V30 11 C -5.639 -2.4067 0 0\nM  V30 12 N 0.518 0.5537 0 0\nM  V30 END ATOM\nM  V30 BEGIN BOND\nM  V30 1 1 1 2\nM  V30 2 2 2 3\nM  V30 3 1 3 4\nM  V30 4 2 4 5\nM  V30 5 1 5 6\nM  V30 6 2 1 6\nM  V30 7 1 8 9\nM  V30 8 1 7 6\nM  V30 9 1 5 8\nM  V30 10 2 7 9\nM  V30 11 1 10 11 ENDPTS=(2 4 3) ATTACH=ANY\nM  V30 12 1 9 12\nM  V30 END BOND\nM  V30 END CTAB\nM  END\n''')\nqry\n\n\n\n\n\n\n\n\n\ndef filter_and_draw_with_highlights(mols,query_func):\n    keep = []\n    matches = []\n    for mol in mols:\n        match = query_func(mol)\n        if match:\n            keep.append(mol)\n            matches.append(match)\n    return Draw.MolsToGridImage(keep,highlightAtomLists=matches,subImgSize=(300,250))\nfilter_and_draw_with_highlights(mols,lambda x,q=qry: x.GetSubstructMatch(qry))\n\n\n\n\n\n\n\n\nSome of those matches are surprising/ugly since the RDKit is just treating the variable attachment point as a carbon connected to a dummy atom which is not bound to the main scaffold, basically this:\n\nChem.MolFromSmiles(Chem.MolToSmiles(qry))\n\n\n\n\n\n\n\n\nIn order to actually use the query feature, we need to create an extended query molecule and then use the generalized substructure search functionality:\n\nfrom rdkit.Chem import rdGeneralizedSubstruct\nxqm = rdGeneralizedSubstruct.CreateExtendedQueryMol(qry)\n\n\nfilter_and_draw_with_highlights(mols,lambda x,q=xqm: rdGeneralizedSubstruct.MolGetSubstructMatch(x,q))\n\n\n\n\n\n\n\n\nCreateExtendedQueryMol() can also call AdjustQueryProperties(). Here’s a demo of using that to only return matches where there are no additional ring substitutions:\n\nps = Chem.AdjustQueryParameters.NoAdjustments()\nps.adjustDegreeFlags = Chem.AdjustQueryWhichFlags.ADJUST_IGNORECHAINS\nps.adjustDegree = True\nxqm = rdGeneralizedSubstruct.CreateExtendedQueryMol(qry,adjustQueryProperties=True,adjustQueryParameters=ps)\n\nfilter_and_draw_with_highlights(mols,lambda x,q=xqm: rdGeneralizedSubstruct.MolGetSubstructMatch(x,q))\n\n\n\n\n\n\n\n\n\n\nUsing generics and generalized substructure search with the PostgreSQL cartridge\nThe generalized substructure functionality is also available in the cartridge as is the ability to search with “Beilstein” generic queries.\n\nfrom rdkit import Chem\nfrom rdkit.Chem import Draw\n%load_ext sql\n\nStart with a generic query:\n\nChem.MolFromSmiles('O=C(-*)(-*) |$;;ARY_p;ARY_p$|')\n\n\n\n\n\n\n\n\nBy default query the generics are just used as dummy atoms, so the results we get from the query ignore the “ARY” groups:\n\nd = %sql postgresql://localhost/chembl_31 \\\n  select * from rdk.million_mols where m @&gt;&gt; mol_adjust_query_properties('O=C(-*)(-*) |$;;ARY_p;ARY_p$|'::mol, \\\n                        '{\"adjustDegree\": false, \"makeDummiesQueries\": true}')\\\n            order by molregno asc limit 10;\nms = [Chem.MolFromSmiles(y) for x,y in d]\nDraw.MolsToGridImage(ms,molsPerRow=4)\n\n10 rows affected.\n\n\n\n\n\n\n\n\n\nBut by passing setGenericQueryFromProperties to mol_adjust_query_properties() we tell the cartridge to use the generics groups:\n\n%sql postgresql://localhost/chembl_31 \\\n  select  'CC(=O)C'::mol @&gt;&gt; mol_adjust_query_properties('O=C(-*)(-*) |$;;ARY_p;ARY_p$|'::mol, \\\n                        '{\"setGenericQueryFromProperties\": true, \"adjustDegree\": false}');\n\n1 rows affected.\n\n\n\n\n\n?column?\n\n\n\n\nFalse\n\n\n\n\n\n\nd = %sql postgresql://localhost/chembl_31 \\\n  select * from rdk.million_mols where m @&gt;&gt; mol_adjust_query_properties('O=C(-*)(-*) |$;;ARY_p;ARY_p$|'::mol, \\\n                        '{\"setGenericQueryFromProperties\": true, \"adjustDegree\": false, \"makeDummiesQueries\": true}')\\\n            order by molregno asc limit 10;\nms = [Chem.MolFromSmiles(y) for x,y in d]\nDraw.MolsToGridImage(ms,molsPerRow=4)\n\n10 rows affected.\n\n\n\n\n\n\n\n\n\nNow let’s look at using generalized substructure search by starting with a query molecule drawn as a tautomer which doesn’t exist in ChEMBL:\n\nmb = '''\n     RDKit          2D\n\n  0  0  0  0  0  0  0  0  0  0999 V3000\nM  V30 BEGIN CTAB\nM  V30 COUNTS 7 7 1 0 0\nM  V30 BEGIN ATOM\nM  V30 1 C 1.208608 -2.457143 0.000000 0\nM  V30 2 C 2.445787 -1.742857 0.000000 0\nM  V30 3 C 2.445787 -0.314286 0.000000 0\nM  V30 4 N 1.208608 0.400000 0.000000 0\nM  V30 5 C -0.028571 -0.314286 0.000000 0\nM  V30 6 C -0.028571 -1.742857 0.000000 0\nM  V30 7 O -1.265751 0.400000 0.000000 0\nM  V30 END ATOM\nM  V30 BEGIN BOND\nM  V30 1 1 1 2\nM  V30 2 1 2 3\nM  V30 3 1 3 4\nM  V30 4 2 4 5\nM  V30 5 1 5 6\nM  V30 6 1 6 1\nM  V30 7 1 5 7\nM  V30 END BOND\nM  V30 BEGIN SGROUP\nM  V30 1 DAT 0 ATOMS=(1 7) FIELDDISP=\"    0.0000    0.0000    DR    ALL  0 0\" -\nM  V30 QUERYTYPE=SMARTSQ QUERYOP== FIELDDATA=\"[#8&X1]\"\nM  V30 END SGROUP\nM  V30 END CTAB\nM  END\n$$$$\n'''\nm = Chem.MolFromMolBlock(mb)\nm\n\n\n\n\n\n\n\n\n\nChem.MolToSmarts(m)\n\n'[#6]1-[#6]-[#6]-[#7]=[#6](-[#6]-1)-[#8&X1]'\n\n\nThis doesn’t return any results:\n\nd = %sql postgresql://localhost/chembl_31 \\\n  select * from rdk.million_mols where m @&gt; mol_from_ctab(:mb)\\\n            order by molregno asc limit 10;\nif not len(d):\n    raise ValueError('no matches!')\nms = [Chem.MolFromSmiles(y) for x,y in d]\nDraw.MolsToGridImage(ms,molsPerRow=4)\n\n0 rows affected.\n\n\n\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\nCell In[8], line 3\n      1 d = get_ipython().run_line_magic('sql', 'postgresql://localhost/chembl_31    select * from rdk.million_mols where m @&gt; mol_from_ctab(:mb)             order by molregno asc limit 10;')\n      2 if not len(d):\n----&gt; 3     raise ValueError('no matches!')\n      4 ms = [Chem.MolFromSmiles(y) for x,y in d]\n      5 Draw.MolsToGridImage(ms,molsPerRow=4)\n\nValueError: no matches!\n\n\n\nBut we can enable generalized substructure search by calling mol_to_xqmol() (this creates an extended query molecule, discussed above) and using that for the substructure search:\n\nd = %sql postgresql://localhost/chembl_31 \\\n  select * from rdk.million_mols where m @&gt; mol_to_xqmol(mol_from_ctab(:mb))\\\n            order by molregno asc limit 10;\nms = [Chem.MolFromSmiles(y) for x,y in d]\nDraw.MolsToGridImage(ms,molsPerRow=4)\n\n10 rows affected.\n\n\n\n\n\n\n\n\n\nHere’s a demo that this works with link nodes and tautomers:\n\nqry = Chem.MolFromSmiles('OCc1nc2cccnc2[nH]1 |LN:1:2.3|')\nqry\n\n\n\n\n\n\n\n\n\nd = %sql postgresql://localhost/chembl_31 \\\n  select * from rdk.million_mols where m @&gt; mol_to_xqmol('OCc1nc2cccnc2[nH]1 |LN:1:2.3|')\\\n            limit 10;\nms = [Chem.MolFromSmiles(y) for x,y in d]\nDraw.MolsToGridImage(ms,molsPerRow=4)\n\n6 rows affected.\n\n\n\n\n\n\n\n\n\nAnd, as a final demo, link nodes, variable attachment points, and tautomers:\n\nmb = '''qry \n  Mrv2305 09052314502D          \n\n  0  0  0     0  0            999 V3000\nM  V30 BEGIN CTAB\nM  V30 COUNTS 13 13 0 0 0\nM  V30 BEGIN ATOM\nM  V30 1 N -4.75 1.9567 0 0\nM  V30 2 C -6.0837 1.1867 0 0\nM  V30 3 C -6.0837 -0.3534 0 0\nM  V30 4 C -4.75 -1.1234 0 0\nM  V30 5 C -3.4163 -0.3534 0 0\nM  V30 6 C -3.4163 1.1867 0 0\nM  V30 7 N -1.9692 1.7134 0 0\nM  V30 8 N -1.8822 -0.7768 0 0\nM  V30 9 C -1.0211 0.4999 0 0\nM  V30 10 C 0.5179 0.5536 0 0\nM  V30 11 N 1.2409 1.9133 0 0\nM  V30 12 * -5.6391 -0.0967 0 0\nM  V30 13 C -5.6391 -2.4067 0 0\nM  V30 END ATOM\nM  V30 BEGIN BOND\nM  V30 1 1 1 2\nM  V30 2 2 2 3\nM  V30 3 1 3 4\nM  V30 4 2 4 5\nM  V30 5 1 5 6\nM  V30 6 2 1 6\nM  V30 7 1 8 9\nM  V30 8 1 7 6\nM  V30 9 1 5 8\nM  V30 10 2 7 9\nM  V30 11 1 9 10\nM  V30 12 1 10 11\nM  V30 13 1 12 13 ENDPTS=(3 4 3 2) ATTACH=ANY\nM  V30 END BOND\nM  V30 LINKNODE 1 2 2 10 9 10 11\nM  V30 END CTAB\nM  END'''\nChem.MolFromMolBlock(mb)\n\n\n\n\n\n\n\n\n\nd = %sql postgresql://localhost/chembl_31 \\\n  select * from rdk.million_mols where m @&gt; mol_to_xqmol(mol_from_ctab(:mb))\\\n            limit 10;\nms = [Chem.MolFromSmiles(y) for x,y in d]\nDraw.MolsToGridImage(ms,molsPerRow=4)\n\n8 rows affected."
  },
  {
    "objectID": "posts/2022-03-18-refactoring-moldraw2d.html",
    "href": "posts/2022-03-18-refactoring-moldraw2d.html",
    "title": "Some thoughts on refactoring the MolDraw2D code",
    "section": "",
    "text": "The functionality described here is available in the 2022.03.1 and later releases of the RDKit"
  },
  {
    "objectID": "posts/2022-03-18-refactoring-moldraw2d.html#molecule-rendering",
    "href": "posts/2022-03-18-refactoring-moldraw2d.html#molecule-rendering",
    "title": "Some thoughts on refactoring the MolDraw2D code",
    "section": "Molecule rendering",
    "text": "Molecule rendering\nThere are some small differences in the way molecules are rendered; these will most likely only be visible if you are really paying attention."
  },
  {
    "objectID": "posts/2022-03-18-refactoring-moldraw2d.html#reaction-rendering",
    "href": "posts/2022-03-18-refactoring-moldraw2d.html#reaction-rendering",
    "title": "Some thoughts on refactoring the MolDraw2D code",
    "section": "Reaction rendering",
    "text": "Reaction rendering\nHere the changes are a bit larger: the reaction rendering code now makes better use of the available space.\nHere’s a rendering of one of the sample reactions we use in the testing code using the 2021.09.4 release of the RDKit:\n\nHere’s the new version:"
  },
  {
    "objectID": "posts/2022-03-18-refactoring-moldraw2d.html#drawing-molecules-in-grids-using-different-scales",
    "href": "posts/2022-03-18-refactoring-moldraw2d.html#drawing-molecules-in-grids-using-different-scales",
    "title": "Some thoughts on refactoring the MolDraw2D code",
    "section": "Drawing molecules in grids using different scales",
    "text": "Drawing molecules in grids using different scales\nWhen drawing molecules in a grid the default behavior is to draw them all at the same scale. Here’s an example of that:\n\nSince the last molecule is big, the other two molecules end up being drawn really small. We can change that by setting the new drawing option drawMolsSameScale to False:\n\nAs an aside: if you’re bothered by how big small molecules like ethanol end up being, you can use the fixedBondLength drawing option (units are, roughly, pixels per angstrom) to set the maximum bond length. Combining this with drawMolsSameScale=False for the three molecules above results in:"
  },
  {
    "objectID": "posts/2022-03-18-refactoring-moldraw2d.html#the-flexicanvas-fitting-the-canvas-size-to-the-molecule",
    "href": "posts/2022-03-18-refactoring-moldraw2d.html#the-flexicanvas-fitting-the-canvas-size-to-the-molecule",
    "title": "Some thoughts on refactoring the MolDraw2D code",
    "section": "The “flexicanvas”: fitting the canvas size to the molecule",
    "text": "The “flexicanvas”: fitting the canvas size to the molecule\nAside: I added the initial version of this before Dave did the refactoring, but the new backend simplifies the implementation.\nNormally the drawing code scales the molecule and font size to fit the canvas provided for it. With the SVG and Cairo renderers it’s now possible to set the font size and scale and let the drawer figure out how large the canvas needs to be. If I use this feature I get a larger canvas for oxytocin:\n\nthan I do for ezetimibe:\n\nbut the bond lengths and font sizes are the same in each image.\nYou can use this functionality by creating a MolDraw2D object with width and height set to -1. Here’s the code used to produce the image of ezetimibe above:\nezetimibe = Chem.MolFromSmiles('O=C1[C@H](CC[C@H](O)c2ccc(F)cc2)[C@@H](c2ccc(O)cc2)N1c1ccc(F)cc1')\nd2d = Draw.MolDraw2DCairo(-1,-1)\nd2d.drawOptions().scalingFactor = 20  # units are roughly pixels/angstrom\nd2d.drawOptions().fixedFontSize = 14\nd2d.DrawMolecule(ezetimibe)\nd2d.FinishDrawing()\nImage(d2d.GetDrawingText())"
  },
  {
    "objectID": "posts/2021-11-26-highlighting-changed-bonds-in-reactions.html",
    "href": "posts/2021-11-26-highlighting-changed-bonds-in-reactions.html",
    "title": "Highlighting changing atoms and bonds in reactions",
    "section": "",
    "text": "A while ago there was a question on Twitter about highlighting the bonds which changed in a reaction. I put together a quick bit of example code to answer that question and made a note to do a blog post on the topic. I’m finally getting around to doing that blog post.\nFair warning: This one is heavy on code and light on words. :-)\n\nfrom rdkit import Chem\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit.Chem import rdChemReactions\nimport rdkit\nprint(rdkit.__version__)\n\n2021.09.2\n\n\nHere’s something similar to the reaction from the question:\n\nrxn1 = rdChemReactions.ReactionFromRxnBlock('''$RXN\n\n      Mrv2102  111820212128\n\n  2  1\n$MOL\n\n  Mrv2102 11182121282D          \n\n 13 13  0  0  0  0            999 V2000\n   -7.5723    2.6505    0.0000 C   0  0  0  0  0  0  0  0  0  1  0  0\n   -6.8579    2.2380    0.0000 O   0  0  0  0  0  0  0  0  0  2  0  0\n   -6.8580    1.4130    0.0000 C   0  0  0  0  0  0  0  0  0  3  0  0\n   -6.1435    1.0004    0.0000 O   0  0  0  0  0  0  0  0  0  4  0  0\n   -7.5725    1.0005    0.0000 C   0  0  0  0  0  0  0  0  0  5  0  0\n   -7.5725    0.1755    0.0000 N   0  0  0  0  0  0  0  0  0  6  0  0\n   -8.2869   -0.2369    0.0000 C   0  0  0  0  0  0  0  0  0  7  0  0\n   -8.2870   -1.0620    0.0000 C   0  0  0  0  0  0  0  0  0  8  0  0\n   -9.0015   -1.4745    0.0000 C   0  0  0  0  0  0  0  0  0  9  0  0\n   -9.0015   -2.2995    0.0000 C   0  0  0  0  0  0  0  0  0 10  0  0\n   -8.2870   -2.7120    0.0000 C   0  0  0  0  0  0  0  0  0 11  0  0\n   -7.5726   -2.2995    0.0000 C   0  0  0  0  0  0  0  0  0 12  0  0\n   -7.5726   -1.4745    0.0000 C   0  0  0  0  0  0  0  0  0 13  0  0\n  1  2  1  0  0  0  0\n  2  3  1  0  0  0  0\n  3  4  2  0  0  0  0\n  3  5  1  0  0  0  0\n  5  6  1  0  0  0  0\n  6  7  2  0  0  0  0\n  7  8  1  0  0  0  0\n  8  9  1  0  0  0  0\n  8 13  2  0  0  0  0\n  9 10  2  0  0  0  0\n 10 11  1  0  0  0  0\n 11 12  2  0  0  0  0\n 12 13  1  0  0  0  0\nM  END\n$MOL\n\n  Mrv2102 11182121282D          \n\n 12 11  0  0  0  0            999 V2000\n   -3.7934    0.7703    0.0000 C   0  0  0  0  0  0  0  0  0 14  0  0\n   -3.0790    1.1828    0.0000 C   0  0  0  0  0  0  0  0  0 15  0  0\n   -2.3645    0.7703    0.0000 C   0  0  0  0  0  0  0  0  0 16  0  0\n   -3.7934   -0.0547    0.0000 C   0  0  0  0  0  0  0  0  0 17  0  0\n   -4.5078   -0.4672    0.0000 O   0  0  0  0  0  0  0  0  0 18  0  0\n   -3.0789   -0.4671    0.0000 O   0  0  0  0  0  0  0  0  0 19  0  0\n   -1.6500    1.1828    0.0000 O   0  0  0  0  0  0  0  0  0 20  0  0\n   -2.3645   -0.0547    0.0000 O   0  0  0  0  0  0  0  0  0 21  0  0\n   -3.0788   -1.2922    0.0000 C   0  0  0  0  0  0  0  0  0 22  0  0\n   -1.6500   -0.4672    0.0000 C   0  0  0  0  0  0  0  0  0 23  0  0\n   -2.3644   -1.7046    0.0000 C   0  0  0  0  0  0  0  0  0 24  0  0\n   -1.6500   -1.2922    0.0000 C   0  0  0  0  0  0  0  0  0 25  0  0\n  1  2  2  0  0  0  0\n  1  4  1  0  0  0  0\n  2  3  1  0  0  0  0\n  3  7  2  0  0  0  0\n  3  8  1  0  0  0  0\n  4  5  2  0  0  0  0\n  4  6  1  0  0  0  0\n  6  9  1  0  0  0  0\n  8 10  1  0  0  0  0\n  9 11  1  0  0  0  0\n 10 12  1  0  0  0  0\nM  END\n$MOL\n\n  Mrv2102 11182121282D          \n\n 25 26  0  0  0  0            999 V2000\n    5.1328    0.9532    0.0000 C   0  0  0  0  0  0  0  0  0  5  0  0\n    5.8002    0.4683    0.0000 N   0  0  0  0  0  0  0  0  0  6  0  0\n    5.5453   -0.3163    0.0000 C   0  0  0  0  0  0  0  0  0  7  0  0\n    4.7203   -0.3163    0.0000 C   0  0  0  0  0  0  0  0  0 14  0  0\n    4.4654    0.4683    0.0000 C   0  0  0  0  0  0  0  0  0 15  0  0\n    5.1328    1.7782    0.0000 C   0  0  0  0  0  0  0  0  0  3  0  0\n    3.6807    0.7232    0.0000 C   0  0  0  0  0  0  0  0  0 16  0  0\n    4.2354   -0.9838    0.0000 C   0  0  0  0  0  0  0  0  0 17  0  0\n    6.0302   -0.9838    0.0000 C   0  0  0  0  0  0  0  0  0  8  0  0\n    6.8507   -0.8975    0.0000 C   0  0  0  0  0  0  0  0  0  9  0  0\n    7.3356   -1.5650    0.0000 C   0  0  0  0  0  0  0  0  0 10  0  0\n    7.0001   -2.3187    0.0000 C   0  0  0  0  0  0  0  0  0 11  0  0\n    6.1796   -2.4049    0.0000 C   0  0  0  0  0  0  0  0  0 12  0  0\n    5.6947   -1.7375    0.0000 C   0  0  0  0  0  0  0  0  0 13  0  0\n    3.4149   -0.8975    0.0000 O   0  0  0  0  0  0  0  0  0 18  0  0\n    4.5709   -1.7375    0.0000 O   0  0  0  0  0  0  0  0  0 19  0  0\n    4.0860   -2.4049    0.0000 C   0  0  0  0  0  0  0  0  0 22  0  0\n    3.2655   -2.3187    0.0000 C   0  0  0  0  0  0  0  0  0 24  0  0\n    3.5092    1.5302    0.0000 O   0  0  0  0  0  0  0  0  0 20  0  0\n    3.0676    0.1712    0.0000 O   0  0  0  0  0  0  0  0  0 21  0  0\n    2.2830    0.4261    0.0000 C   0  0  0  0  0  0  0  0  0 23  0  0\n    1.6699   -0.1259    0.0000 C   0  0  0  0  0  0  0  0  0 25  0  0\n    5.8473    2.1907    0.0000 O   0  0  0  0  0  0  0  0  0  4  0  0\n    4.4183    2.1907    0.0000 O   0  0  0  0  0  0  0  0  0  2  0  0\n    4.4183    3.0157    0.0000 C   0  0  0  0  0  0  0  0  0  1  0  0\n  1  2  1  0  0  0  0\n  2  3  1  0  0  0  0\n  3  4  1  0  0  0  0\n  4  5  1  0  0  0  0\n  1  5  1  0  0  0  0\n  1  6  1  0  0  0  0\n  5  7  1  0  0  0  0\n  4  8  1  0  0  0  0\n  3  9  1  0  0  0  0\n 10 11  2  0  0  0  0\n 11 12  1  0  0  0  0\n 12 13  2  0  0  0  0\n 13 14  1  0  0  0  0\n  9 10  1  0  0  0  0\n  9 14  2  0  0  0  0\n  8 15  2  0  0  0  0\n  8 16  1  0  0  0  0\n 16 17  1  0  0  0  0\n 17 18  1  0  0  0  0\n  7 19  2  0  0  0  0\n  7 20  1  0  0  0  0\n 20 21  1  0  0  0  0\n 21 22  1  0  0  0  0\n  6 23  2  0  0  0  0\n  6 24  1  0  0  0  0\n 24 25  1  0  0  0  0\nM  END\n''')\n\nLet’s take a look at the reaction:\n\nIPythonConsole.molSize = (600,250)\nIPythonConsole.highlightByReactant = True\nrxn1\n\n\n\n\n\n\n\n\nWe can ask the reaction to tell us which atoms in the reactants are modified in the reaction:\n\nrxn1.Initialize()\nrxn1.GetReactingAtoms()\n\n((4, 5, 6), (0, 1))\n\n\nThe information about which atoms react is enough to figure out which bonds change, but we have to do some additional work for this:\n\nfrom collections import namedtuple\nAtomInfo = namedtuple('AtomInfo',('mapnum','reactant','reactantAtom','product','productAtom'))\ndef map_reacting_atoms_to_products(rxn,reactingAtoms):\n    ''' figures out which atoms in the products each mapped atom in the reactants maps to '''\n    res = []\n    for ridx,reacting in enumerate(reactingAtoms):\n        reactant = rxn.GetReactantTemplate(ridx)\n        for raidx in reacting:\n            mapnum = reactant.GetAtomWithIdx(raidx).GetAtomMapNum()\n            foundit=False\n            for pidx,product in enumerate(rxn.GetProducts()):\n                for paidx,patom in enumerate(product.GetAtoms()):\n                    if patom.GetAtomMapNum()==mapnum:\n                        res.append(AtomInfo(mapnum,ridx,raidx,pidx,paidx))\n                        foundit = True\n                        break\n                    if foundit:\n                        break\n    return res\ndef get_mapped_neighbors(atom):\n    ''' test all mapped neighbors of a mapped atom'''\n    res = {}\n    amap = atom.GetAtomMapNum()\n    if not amap:\n        return res\n    for nbr in atom.GetNeighbors():\n        nmap = nbr.GetAtomMapNum()\n        if nmap:\n            if amap&gt;nmap:\n                res[(nmap,amap)] = (atom.GetIdx(),nbr.GetIdx())\n            else:\n                res[(amap,nmap)] = (nbr.GetIdx(),atom.GetIdx())\n    return res\n\nBondInfo = namedtuple('BondInfo',('product','productAtoms','productBond','status'))\ndef find_modifications_in_products(rxn):\n    ''' returns a 2-tuple with the modified atoms and bonds from the reaction '''\n    reactingAtoms = rxn.GetReactingAtoms()\n    amap = map_reacting_atoms_to_products(rxn,reactingAtoms)\n    res = []\n    seen = set()\n    # this is all driven from the list of reacting atoms:\n    for _,ridx,raidx,pidx,paidx in amap:\n        reactant = rxn.GetReactantTemplate(ridx)\n        ratom = reactant.GetAtomWithIdx(raidx)\n        product = rxn.GetProductTemplate(pidx)\n        patom = product.GetAtomWithIdx(paidx)\n\n        rnbrs = get_mapped_neighbors(ratom)\n        pnbrs = get_mapped_neighbors(patom)\n        for tpl in pnbrs:\n            pbond = product.GetBondBetweenAtoms(*pnbrs[tpl])\n            if (pidx,pbond.GetIdx()) in seen:\n                continue\n            seen.add((pidx,pbond.GetIdx()))\n            if not tpl in rnbrs:\n                # new bond in product\n                res.append(BondInfo(pidx,pnbrs[tpl],pbond.GetIdx(),'New'))\n            else:\n                # present in both reactants and products, check to see if it changed\n                rbond = reactant.GetBondBetweenAtoms(*rnbrs[tpl])\n                if rbond.GetBondType()!=pbond.GetBondType():\n                    res.append(BondInfo(pidx,pnbrs[tpl],pbond.GetIdx(),'Changed'))\n    return amap,res\n\nLet’s look at what that function returns for our reaction:\n\natms,bnds = find_modifications_in_products(rxn1)\nprint(atms)\nprint(bnds)\n\n[AtomInfo(mapnum=5, reactant=0, reactantAtom=4, product=0, productAtom=0), AtomInfo(mapnum=6, reactant=0, reactantAtom=5, product=0, productAtom=1), AtomInfo(mapnum=7, reactant=0, reactantAtom=6, product=0, productAtom=2), AtomInfo(mapnum=14, reactant=1, reactantAtom=0, product=0, productAtom=3), AtomInfo(mapnum=15, reactant=1, reactantAtom=1, product=0, productAtom=4)]\n[BondInfo(product=0, productAtoms=(4, 0), productBond=4, status='New'), BondInfo(product=0, productAtoms=(2, 1), productBond=1, status='Changed'), BondInfo(product=0, productAtoms=(3, 2), productBond=2, status='New'), BondInfo(product=0, productAtoms=(4, 3), productBond=3, status='Changed')]\n\n\nFinally, define the funciton which we’ll use to draw the product molecule with highlights shown for bonds and atoms involved in the reaction:\n\nfrom IPython.display import Image\ndef draw_product_with_modified_bonds(rxn,atms,bnds,productIdx=None,showAtomMaps=False):\n    if productIdx is None:\n        pcnts = [x.GetNumAtoms() for x in rxn.GetProducts()]\n        largestProduct = list(sorted(zip(pcnts,range(len(pcnts))),reverse=True))[0][1]\n        productIdx = largestProduct\n    d2d = Draw.rdMolDraw2D.MolDraw2DCairo(350,300)\n    pmol = Chem.Mol(rxn.GetProductTemplate(productIdx))\n    Chem.SanitizeMol(pmol)\n    if not showAtomMaps:\n        for atom in pmol.GetAtoms():\n            atom.SetAtomMapNum(0)\n    bonds_to_highlight=[]\n    highlight_bond_colors={}\n    atoms_seen = set()\n    for binfo in bnds:\n        if binfo.product==productIdx and binfo.status=='New':\n            bonds_to_highlight.append(binfo.productBond)\n            atoms_seen.update(binfo.productAtoms)\n            highlight_bond_colors[binfo.productBond] = (1,.4,.4)\n        if binfo.product==productIdx and binfo.status=='Changed':\n            bonds_to_highlight.append(binfo.productBond)\n            atoms_seen.update(binfo.productAtoms)\n            highlight_bond_colors[binfo.productBond] = (.4,.4,1)\n    atoms_to_highlight=set()\n    for ainfo in atms:\n        if ainfo.product != productIdx or ainfo.productAtom in atoms_seen:\n            continue\n        atoms_to_highlight.add(ainfo.productAtom)\n\n    d2d.drawOptions().useBWAtomPalette()\n    d2d.drawOptions().continuousHighlight=False\n    d2d.drawOptions().highlightBondWidthMultiplier = 24\n    d2d.drawOptions().setHighlightColour((.9,.9,0))\n    d2d.drawOptions().fillHighlights=False\n    atoms_to_highlight.update(atoms_seen)\n    d2d.DrawMolecule(pmol,highlightAtoms=atoms_to_highlight,highlightBonds=bonds_to_highlight,\n                     highlightBondColors=highlight_bond_colors)\n    d2d.FinishDrawing()\n    return d2d.GetDrawingText()\n\nNow we can draw the highlighted product molecule:\n\nImage(draw_product_with_modified_bonds(rxn1,atms,bnds))\n\n\n\n\n\n\n\n\nLet’s look at some other reactions. I will use the SI data from\n\nimport pandas as pd\ndf = pd.read_csv('../data/reaction_data_ci6b00564/dataSetB.csv')\ndf.head()\n\n\n\n\n\n\n\n\nrxn_Class\npatentID\nrxnSmiles_Mapping_NameRxn\nreactantSet_NameRxn\nNameRxn_Mapping_Complete\nrxnSmiles_Mapping_IndigoTK\nreactantSet_IndigoTK\nIndigoTK_Mapping_Complete\nrxnSmiles_IndigoAutoMapperKNIME\nreactantSet_IndigoAutoMapperKNIME\nIndigoAutoMapperKNIME_Mapping_Complete\n\n\n\n\n0\n6\nUS05849732\nC.CCCCCC.CO.O=C(OCc1ccccc1)[NH:1][CH2:2][CH2:3...\nset([3, 4])\nTrue\nC(OC([NH:11][CH2:12][CH2:13][CH2:14][CH2:15][C...\nset([0, 2])\nTrue\nC.CCCCCC.CO.[CH3:10][O:11][C:12]([C@@H:14]([NH...\nset([3, 4])\nTrue\n\n\n1\n2\nUS20120114765A1\nO[C:1](=[O:2])[c:3]1[cH:4][c:5]([N+:6](=[O:7])...\nset([0, 1])\nTrue\n[Cl:1][c:2]1[cH:3][n:4][cH:5][c:6]([Cl:20])[c:...\nset([0, 1])\nTrue\n[NH2:1][c:2]1[c:11]2[c:6]([cH:7][n:8][cH:9][cH...\nset([0, 1])\nTrue\n\n\n2\n1\nUS08003648B2\nCl.O=[CH:1][c:2]1[cH:3][cH:4][c:5](-[c:6]2[n:7...\nset([1, 3])\nTrue\n[CH2:1]([NH:3][CH2:4][CH3:5])[CH3:2].C([BH3-])...\nset([0, 3])\nTrue\n[CH3:1][CH2:2][NH:3][CH2:4][CH3:5].[CH3:6][c:7...\nset([0, 1])\nTrue\n\n\n3\n1\nUS09045475B2\nCC(=O)O[BH-](OC(C)=O)OC(C)=O.ClCCl.O=[C:1]([CH...\nset([2, 3])\nTrue\n[nH:1]1[c:5]2[n:6][cH:7][c:8]([O:10][c:11]3[cH...\nset([0, 3])\nTrue\nCC(O[BH-](OC(=O)C)OC(=O)C)=O.[CH3:14][C:15]1([...\nset([1, 3])\nTrue\n\n\n4\n2\nUS08188098B2\nCCN(C(C)C)C(C)C.ClCCl.Cl[C:1](=[O:2])[O:3][CH:...\nset([2, 5])\nTrue\nCl[C:2]([O:4][CH:5]1[CH2:9][CH2:8][CH2:7][CH2:...\nset([0, 2])\nTrue\nCCN(C(C)C)C(C)C.[CH3:10][CH2:11][O:12][c:13]1[...\nset([1, 4])\nTrue\n\n\n\n\n\n\n\n\nrxnclass = 1\nclass_smis = df[df['rxn_Class']==rxnclass].rxnSmiles_Mapping_NameRxn.to_list()\nrxn = rdChemReactions.ReactionFromSmarts(class_smis[3],useSmiles=True)\nrxn.Initialize()\natms,bnds = find_modifications_in_products(rxn)\nprint(atms)\nprint(bnds)\nImage(draw_product_with_modified_bonds(rxn,atms,bnds))\n\n[AtomInfo(mapnum=1, reactant=3, reactantAtom=1, product=0, productAtom=0), AtomInfo(mapnum=7, reactant=4, reactantAtom=0, product=0, productAtom=6)]\n[BondInfo(product=0, productAtoms=(6, 0), productBond=5, status='New')]\n\n\n\n\n\n\n\n\n\n\nrxnclass = 4\nclass_smis = df[df['rxn_Class']==rxnclass].rxnSmiles_Mapping_NameRxn.to_list()\nrxn = rdChemReactions.ReactionFromSmarts(class_smis[1],useSmiles=True)\nrxn.Initialize()\natms,bnds = find_modifications_in_products(rxn)\nprint(atms)\nprint(bnds)\nImage(draw_product_with_modified_bonds(rxn,atms,bnds))\n\n[AtomInfo(mapnum=1, reactant=1, reactantAtom=1, product=0, productAtom=0), AtomInfo(mapnum=2, reactant=1, reactantAtom=2, product=0, productAtom=9), AtomInfo(mapnum=16, reactant=2, reactantAtom=0, product=0, productAtom=18), AtomInfo(mapnum=17, reactant=2, reactantAtom=1, product=0, productAtom=16), AtomInfo(mapnum=19, reactant=2, reactantAtom=3, product=0, productAtom=15)]\n[BondInfo(product=0, productAtoms=(9, 0), productBond=8, status='Changed'), BondInfo(product=0, productAtoms=(18, 0), productBond=18, status='New'), BondInfo(product=0, productAtoms=(15, 9), productBond=14, status='New'), BondInfo(product=0, productAtoms=(16, 18), productBond=17, status='Changed'), BondInfo(product=0, productAtoms=(15, 16), productBond=15, status='Changed')]\n\n\n\n\n\n\n\n\n\nLook at an example where there are no changed bonds in the products but where there is a changed atom:\n\nrxnclass = 7\nclass_smis = df[df['rxn_Class']==rxnclass].rxnSmiles_Mapping_NameRxn.to_list()\nrxn = rdChemReactions.ReactionFromSmarts(class_smis[1],useSmiles=True)\nrxn.Initialize()\natms,bnds = find_modifications_in_products(rxn)\nprint(atms)\nprint(bnds)\nImage(draw_product_with_modified_bonds(rxn,atms,bnds))\n\n[AtomInfo(mapnum=1, reactant=1, reactantAtom=1, product=0, productAtom=0)]\n[]"
  },
  {
    "objectID": "posts/2024-02-11-more-multithreading.html",
    "href": "posts/2024-02-11-more-multithreading.html",
    "title": "Some new ways to speed RDKit calls up using multiple threads",
    "section": "",
    "text": "This is another in a series of blog posts highlighting built-in RDKit support for speeding up some tasks by running multiple threads at once.\nPrevious posts discussing this topic:\n\nUsing the Multithreaded Mol Readers\n\n\nPreliminaries\nStart by reading in a bunch of molecules, multithreaded of course\n\nimport rdkit\nprint(rdkit.__version__)\n\n2023.09.5\n\n\n\n!head ../data/BLSets_actives.txt\n\nsmiles  target_chembl_id    label   pKi\nClc1ccc(cc1Cl)N2NC(=O)\\C(=C\\c3cccc(OCc4ccccc4)c3)\\C2=O  CHEMBL1862  inactive    6.00\nCc1ccc(cc1C)N2NC(=O)\\C(=C\\c3oc(cc3)c4ccc(C)c(Cl)c4)\\C2=O    CHEMBL1862  inactive    5.30\nO=C(Nc1ccccc1)Nc2nnc(Cc3ccccc3)s2   CHEMBL1862  inactive    4.24\nBrc1cc2OCOc2cc1\\C=C/3\\C(=O)NN(C3=O)c4ccc(I)cc4  CHEMBL1862  inactive    5.60\nNc1[nH]cnc2nnc(c3ccc(Cl)cc3)c12 CHEMBL1862  inactive    6.30\nIc1ccc(cc1)N2NC(=O)\\C(=C\\c3ccccc3)\\C2=O CHEMBL1862  inactive    6.22\nIc1ccc(cc1)C(=O)Nc2nnc(CCc3ccccc3)s2    CHEMBL1862  inactive    6.40\nIc1ccccc1C(=O)Nc2nnc(CCc3ccccc3)s2  CHEMBL1862  inactive    5.89\nIc1ccc(\\C=C/2\\C(=O)NN(C2=O)c3ccc(I)cc3)cc1  CHEMBL1862  inactive    6.10\n\n\n\nfrom rdkit import Chem\nfilename = '../data/BLSets_actives.txt'\nms = [m for m in Chem.MultithreadedSmilesMolSupplier(filename,numWriterThreads=5) if m is not None]\nlen(ms)\n\n91663\n\n\n\n\nGenerating fingerprints\n2023.09.3 release\n\nfrom rdkit.Chem import rdFingerprintGenerator\nfpg = rdFingerprintGenerator.GetMorganGenerator()\n\n\n%timeit fps=[fpg.GetFingerprint(m) for m in ms]\n\n7.11 s ± 90.7 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n\n\nWith the getFingerprints() function we can generate all the fingerprints in a single call. This uses one thread by default and isn’t significantly faster:\n\n%timeit fps=fpg.GetFingerprints(ms)\n\n7.02 s ± 44.3 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n\n\nBut we can also use getFingerprints with multiple threads, this does make a difference in run time:\n\n%timeit fps=fpg.GetFingerprints(ms, numThreads=5)\n\n1.56 s ± 33.5 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n\n\nThere are three analogous functions for the other fingerprint forms:\n\nfpg.GetCountFingerprints(ms)\nfpg.GetSparseFingerprints(ms)\nfpg.GetSparseCountFingerprints(ms)\n\n\n\nMolecular standardization\n2023.09.3 and 2023.09.4 releases\nFirst check whether or not any of the molecules in the data set have multiple fragments:\n\nfrom collections import Counter\ncntr = Counter()\nfor m in ms:\n    frags = Chem.GetMolFrags(m)\n    cntr[len(frags)] += 1\ncntr\n\nCounter({1: 86368, 2: 4662, 3: 530, 4: 56, 5: 47})\n\n\nSome do… we’ll standardize them by finding the fragment parent:\n\nfrom rdkit.Chem.MolStandardize import rdMolStandardize\n\nSince we’re going to be modifying the molecules in place we need to make a copy first so that we can do multiple experiments on the same input molecules. This adds a bit of time to the overall experiments, so let’s figure out how much that is:\n\n%timeit cms = [Chem.Mol(m) for m in ms]\n\n1.24 s ± 7.19 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n\n\nFind the fragment parent (largest organic fragment) for all of the molecules using a single thread:\n\n%timeit cms = [Chem.Mol(m) for m in ms];rdMolStandardize.FragmentParentInPlace(cms,numThreads=1)\n\n1min 3s ± 949 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n\n\nUsing 5 threads:\n\n%timeit cms = [Chem.Mol(m) for m in ms];rdMolStandardize.FragmentParentInPlace(cms,numThreads=5)\n\n14.5 s ± 64.4 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n\n\nOther standardization functions that can operate on muliple molecules and support a numThreads argument:\n\nCleanupInPlace(): cleans up the molecule by removing Hs, sanitizing, disconnecting metals, normalizing, reionizing, and assigning stereochemistry.\nNormalizeInPlace(): normalizes the molecule by standardizing some functional groups\nReionizeInPlace(): rearranges charges so that the strongest acids ionize first\nRemoveFragmentsInPlace(): removes common salts and solvents\nTautomerParentInPlace(): finds the canonical tautomer and then calls cleanup\nStereoParentInPlace(): removes all stereochemistry markers\nIsotopeParentInPlace(): removes all isotope labels\nChargeParentInPlace(): neutralizes the molecule\nSuperParentInPlace(): this is the fragment, charge, isotope, stereo, and tautomer parent of the molecule\n\n\nm = Chem.MolFromSmiles('CC.[Na+].[Cl-].C.[Fe].CCO')\nm = rdMolStandardize.RemoveFragments(m)\nChem.MolToSmiles(m)\n\n'C.CC.[Fe]'\n\n\n\nm = Chem.MolFromSmiles('CC(O)=CCCO[Na]')\nrdMolStandardize.TautomerParentInPlace(m)\nChem.MolToSmiles(m)\n\n'CC(=O)CCC[O-].[Na+]'\n\n\n\n\nRMSD calculations\n2023.09.3 release\n\nfrom rdkit.Chem import rdDistGeom\nfrom rdkit.Chem import rdMolAlign\nfrom rdkit.Chem.Draw import IPythonConsole\nIPythonConsole.ipython_3d = True\n\nDownload the ligand from a recent PDB structure\n\nimport requests\nd = requests.get('https://www.ebi.ac.uk/pdbe/static/files/pdbechem_v2/U9X_model.sdf').text\nmol = Chem.MolFromMolBlock(d,removeHs=False)\nmol\n\n[08:03:21] Warning: molecule is tagged as 2D, but at least one Z coordinate is not zero. Marking the mol as 3D.\n\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol\n        \n\n\n\n\n\n\nYou’ve been able to use multiple threads during conformer generation for a while, it makes a big difference:\n\nmcp = Chem.Mol(mol)\nps = rdDistGeom.ETKDGv3()\nps.randomSeed = 0xc0ffee\n\n%timeit rdDistGeom.EmbedMultipleConfs(mcp,500,ps)\n\n2min 29s ± 236 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n\n\n\nmcp = Chem.Mol(mol)\nps = rdDistGeom.ETKDGv3()\nps.randomSeed = 0xc0ffee\nps.numThreads = 5\n%timeit rdDistGeom.EmbedMultipleConfs(mcp,500,ps)\n\n36 s ± 78.2 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n\n\nGetAllConformerBestRMS() returns the “distance matrix” between all of the molecule’s conformers, it also can be nicely run in multiple threads:\n\nmol_noh = Chem.RemoveHs(mol)\nmcp_noh = Chem.RemoveHs(mcp)\n%timeit rdMolAlign.GetAllConformerBestRMS(mcp_noh)\n\n3.52 s ± 92.3 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n\n\n\n%timeit rdMolAlign.GetAllConformerBestRMS(mcp_noh, numThreads=5)\n\n937 ms ± 26.4 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n\n\nWe can use this to quickly find the conformer with the best RMSD to the crystal conformer:\n\nmcp_noh.GetNumConformers()\n\n500\n\n\nAdd the crystal conformer at the end of the conformer list:\n\nmcp_noh.AddConformer(mol_noh.GetConformer(),assignId=True)\nmcp_noh.GetNumConformers()\n\n501\n\n\n\ndmat = rdMolAlign.GetAllConformerBestRMS(mcp_noh, numThreads=5)\nlen(dmat)\n\n125250\n\n\nThe elements of dmat are stored in the RDKit’s usual way for symmetric matrices, with the indices in the order: [(1,0),(2,0),(2,1),(3,0),...], so the distances to the last conformer (the crystal conformer we just added) are at the end:\n\ndists_to_xtal = dmat[-500:]\nmin(dists_to_xtal)\n\n1.812529263358374\n\n\nThat’s not a fantastic result, but the molecule I picked for this demo is super flexible and we only generated 500 conformers."
  },
  {
    "objectID": "posts/2021-12-20-substructlibrary-search-order.html",
    "href": "posts/2021-12-20-substructlibrary-search-order.html",
    "title": "Some new features in the SubstructLibrary",
    "section": "",
    "text": "Earlier this year I did a blog post on “Generalized substructure search” with the RDKit. That demonstrated how to use some advanced query features like link nodes, variable attachment points, and tautomer insensitivity to search through the compounds from ChEMBL 29 with the RDKit’s SubstructLibrary.\nThis post uses the same ChEMBL 29 SubstructLibrary to demonstrate a couple of new features which were added in the 2021.09 release of the RDKit: 1. Changing the search order 2. Specifying which compounds are actually searched 3. Saving a molecule key (or name) together with the molecules in the SubstructLibrary\nFor more about the SubstructLibrary, take a look at this earlier post about generalized substructure search.\n\nfrom rdkit import Chem\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem import rdSubstructLibrary\nfrom rdkit import RDLogger\nfrom rdkit import rdBase\nimport pickle\nimport time\nimport gzip\nprint(rdBase.rdkitVersion)\nprint(time.asctime())\n\n2021.09.3\nMon Dec 20 05:14:01 2021\n\n\nHere’s the code to build the SubstructLibrary from the sdf file distributed by the ChEMBL team. This uses a feature added in RDKit v2021.09 to allow a molecule key (or name) to be stored with the molecules in a SubstructLibrary.\nExecuting this takes about 45 minutes on my machine.\nRDLogger.DisableLog(“rdApp.warning”)\nmolholder = rdSubstructLibrary.CachedTrustedSmilesMolHolder() patts = rdSubstructLibrary.TautomerPatternHolder() # this will automatically grab the “_Name” property for each molecule # in the ChEMBL SD file this contains the ChEMBL ID for the molecules. keys = rdSubstructLibrary.KeyFromPropHolder() slib = rdSubstructLibrary.SubstructLibrary(molholder,patts,keys) t1 = time.time() with gzip.GzipFile(‘/home/glandrum/Downloads/chembl_29.sdf.gz’) as gz, Chem.ForwardSDMolSupplier(gz) as suppl: nDone = 0 for m in suppl: if m is None: continue # skip huge molecules if m.GetNumHeavyAtoms()&gt;75: continue slib.AddMol(m) nDone += 1 if not nDone%50000: print(f’ did {nDone} in {time.time()-t1:.2f}s’) with open(‘./results/chembl29_ssslib.pkl’,‘wb+’) as outf: pickle.dump(slib,outf) print(f’That took {time.time()-t1:.2f}s in total.’) with open(‘./results/chembl29_ssslib.pkl’,‘wb+’) as outf: pickle.dump(slib,outf)\nWe’re going to use the number of heavy atoms to determine the search order. Since that takes a while, go ahead and pre-calculate those values and store them in the same pickle file as the SubstructLibrary:\nholder = slib.GetMolHolder() nats = sorted([(holder.GetMol(x).GetNumHeavyAtoms(),x) for x in range(len(slib))]) order = [y for x,y in nats] # append that to the pickle file with the substruct lib: with open(‘./results/chembl29_ssslib.pkl’,‘ab’) as outf: pickle.dump(order,outf)\nRead in the saved data:\n\nwith open('./results/chembl29_ssslib.pkl','rb') as inf:\n    slib = pickle.load(inf)\n    nat_order = pickle.load(inf)\n\nHere’s the query we’ll use for this post:\n\nqry = Chem.MolFromSmarts('[O,N]=C-c:1:c:c:n:c:c:1')\nqry\n\n\n\n\n\n\n\n\nLet’s look at doing a search. We also take advantage of the SubstructLibrary’s KeyHolder (a new feature in v2021.09) to include the compound ChEMBL IDs in the results:\n\nmids = slib.GetMatches(qry)\nprint(f'{len(mids)} results')\nms = [slib.GetMolHolder().GetMol(x) for x in mids[:9]]\nlegends = [slib.GetKeyHolder().GetKey(x) for x in mids[:9]]\nDraw.MolsToGridImage(ms,legends=legends,subImgSize=(250,200))\n\n1000 results\n\n\n\n\n\n\n\n\n\nOne of the new features is that we can change the search order; this allows us to get the smallest molecules first (always a good idea with a substructure search).\nHere we’re using the number of heavy atoms to set the search order:\n\nslib.SetSearchOrder(nat_order)\nmids = slib.GetMatches(qry)\nprint(f'{len(mids)} results')\nms = [slib.GetMolHolder().GetMol(x) for x in mids[:9]]\nlegends = [slib.GetKeyHolder().GetKey(x) for x in mids[:9]]\nDraw.MolsToGridImage(ms,legends=legends,subImgSize=(250,200))\n\n1000 results\n\n\n\n\n\n\n\n\n\nIt’s important to note that we are not just sorting the results from the search here: we’re changing the order in which the search is done. So even though we’re only getting 1000 results (the default max number of results from the SubstructLibrary), we know that they are the 1000 smallest results.\nSo if we change the maximum number of results to three, we’ll get the same first three results:\n\nslib.SetSearchOrder(nat_order)\nmids2 = slib.GetMatches(qry,maxResults=3)\nprint(f'{len(mids2)} results')\nms = [slib.GetMolHolder().GetMol(x) for x in mids2[:9]]\nlegends = [slib.GetKeyHolder().GetKey(x) for x in mids2[:9]]\nDraw.MolsToGridImage(ms,legends=legends,subImgSize=(250,200))\n\n3 results\n\n\n\n\n\n\n\n\n\nWe can also use the search order to limit the compounds we search. In this case I’m going to refine the results of the previous search and identify compounds which also contain Br:\n\nslib.SetSearchOrder(mids)\nmids_new = slib.GetMatches(Chem.MolFromSmarts('[Br]'))\nprint(f'{len(mids_new)} sub-results')\nms = [slib.GetMolHolder().GetMol(x) for x in mids_new[:9]]\nlegends = [slib.GetKeyHolder().GetKey(x) for x in mids_new[:9]]\nDraw.MolsToGridImage(ms,legends=legends,subImgSize=(250,200))\n\n66 sub-results\n\n\n\n\n\n\n\n\n\nNotice that the results are still coming back sorted by the number of heavy atoms. That’s because the IDs of the molecules being used for the search search is sorted.\nWe almost certainly ran up against the default limit on the number of results (1000 compounds) when doing the first search. Let’s loosen that to 50K. This will take longer since the first query ends up having to run through the entire database.\n\nslib.SetSearchOrder(nat_order)\nmids = slib.GetMatches(qry,maxResults=50000)\nprint(f'{len(mids)} results')\n\nslib.SetSearchOrder(mids)\nmids_new = slib.GetMatches(Chem.MolFromSmarts('[Br]'))\nprint(f'{len(mids_new)} sub-results')\n\n17764 results\n919 sub-results\n\n\nIt’s never a bad idea to check the performance of these queries.\nHere’s the run time for the default value of maxResults:\n\nslib.SetSearchOrder(nat_order)\n%timeit mids = slib.GetMatches(qry)\n\n71.7 ms ± 710 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)\n\n\nAnd here’s the search time for going through the entire database (we only get 17K results here, so maxResults=50K corresponds to searching through the entire database):\n\nslib.SetSearchOrder(nat_order)\n%timeit mids = slib.GetMatches(qry,maxResults=50000)\n\n5.09 s ± 79.4 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)"
  },
  {
    "objectID": "posts/2023-12-01-using_sascore_and_npscore.html",
    "href": "posts/2023-12-01-using_sascore_and_npscore.html",
    "title": "Calculating the SA_Score and NP_Score descriptors",
    "section": "",
    "text": "The RDKit’s Contrib directory includes implementations of two descriptors, SA_Score and NP_Score, which are not included in the core RDKit because they both use large data files. Still, the descriptors can be useful and questions about how to use them come up every once in a while, so here’s a really short blog post showing how to use them.\nBoth descriptors are implemented in Python, so they’re currently only accessible from Python. We’re working on making them available in KNIME too (in fact this blog post was prompted by a question Alice at KNIME asked me as she was working on the node), but that’s going to take a bit longer.\nIf you want to learn more about the descriptors themselves, the publications describing for those two descriptors are:\n\nSA_Score: http://www.jcheminf.com/content/1/1/8 (this one is open access)\nNP_Score: http://pubs.acs.org/doi/abs/10.1021/ci700286x (this one is not open access)\n\n\nfrom rdkit import Chem\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit.Chem import rdDepictor\nrdDepictor.SetPreferCoordGen(True)\nimport rdkit\nprint(rdkit.__version__)\n\n2023.09.2\n\n\nWe’ll use a compound from one of the papers in J. Med. Chem.’s ASAP section as I was writing this post (https://pubs.acs.org/doi/10.1021/acs.jmedchem.3c01626).\n\nMini rant: it was easy for me to get the structure of this compound since J. Med. Chem. suggests that authors provide SMILES strings for the compounds in their papers and compliance is pretty good. Too bad this isn’t true in computational/cheminformatics journals.\n\n\nm  = Chem.MolFromSmiles('FC1=CN=C(NC2=NC=C(C(N3CCN(C(C4CC4)=O)CC3)=O)C=C2)N=C1C5=CC=C6N=C(N(CC)CC)SC6=C5')\nm\n\n\n\n\n\n\n\n\n\nUsing the RDKit installed from conda-forge\nThe Contrib directory is installed with the RDKit conda package, you just need to tell python to look in the appropriate place:\n\nimport sys\nimport os\nsys.path.append(os.path.join(os.environ['CONDA_PREFIX'],'share','RDKit','Contrib'))\n\nfrom SA_Score import sascorer\nfrom NP_Score import npscorer\n\n\n\nUsing the RDKit installed from pypi\nWhen Chris (@kuelumbus on GitHub) packages the RDKit for pypi, he copies the Contrib directory into the rest of the Python code, so you do:\nfrom rdkit.Contrib.SA_Score import sascorer\nfrom rdkit.Contrib.NP_Score import npscorer\n\n\nCalculating the scores\nThis is the same regardless of how you have the RDKit installed:\n\nsascorer.calculateScore(m)\n\n2.8716389090191434\n\n\nThe SA_Score ranges from 1 to 10 with 1 being easy to make and 10 being hard to make.\n\nfscore = npscorer.readNPModel()\nnpscorer.scoreMol(m,fscore)\n\nreading NP model ...\nmodel in\n\n\n-1.960519718438019\n\n\nThe NP score ranges from -5 to 5, so this is pretty low.\nYou can also get a confidence value:\n\nnpscorer.scoreMolWConfidence(m,fscore)\n\nNPLikeness(nplikeness=-1.960519718438019, confidence=1.0)\n\n\nThat’s it for this post. As I said in the intro, it’s a short one!"
  },
  {
    "objectID": "posts/2024-09-20-additive-fingerprints1.html",
    "href": "posts/2024-09-20-additive-fingerprints1.html",
    "title": "Additive fingerprints",
    "section": "",
    "text": "This is a reformatted and lightly revised version of a blog post from 2019.\nThe goal here is to evaluate one strategy for enabling similarity search of virtual libraries defined via molecular fragments that can be combined using simple rules. One obvious approach is to just enumerate the molecules in the library, generate their fingerprints, and the calculate similarity. This is clearly impractical if the libraries are really big, so I want to see if it’s possible to make things faster by skipping the enumeration step and approximating the fingerprint of a molecule with the sum of the fingerprints that make it up plus constant correction terms.\nFor example, suppose I form a molecule by combining the two fragments c1ccccc1-[16*] and CCCCO-[3*] to make c1ccccc1-OCCCC, I want to see how closely I can approximate the fingerprint of the final molecule by adding the fingerprints of the two fragments together with a correction term that is characteristic of the bond type being formed (in this case the 16-3 combination rule). This obviously won’t work well with fingerprints like Atom Pairs that include terms encompassing the entire molecule, but may be useful for more “local” descriptors like the Morgan fingerprint, topological torsions, or the RDKit fingerprint.\nThis isn’t a really new idea - it’s inspired by the idea behind Truchon and Bayly’s GLARE algorithm and I’ve explored it a bit in the past - but I haven’t seen it published and never really dug into it. That’s what this post (likely a series of posts) is for.\nDemonstrating that this really works requires a fair amount of effort, but we can get a good initial readout by comparing the calculated similarities between a bunch of real molecules calculated with their “real” fingerprints and then with the “additive” fingerprints. I’ll start here with the Morgan fingerprint, since that’s one of the more popular ones in the RDKit (and one where the approach seems likely to work). If that goes well, I’ll try another fingerprint type or two and maybe do some more comprehensive validation.\nimport numpy as np\nfrom rdkit import DataStructs\nfrom rdkit import Chem\nfrom rdkit.Chem import rdFingerprintGenerator\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit.Chem.MolStandardize import rdMolStandardize\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem import BRICS\nimport rdkit\nprint(rdkit.__version__)\nfrom matplotlib import pyplot as plt\n%matplotlib inline\n\n2024.03.5\nStart by reading in the set of molecules we’ll work with. This dataset was described in a recent RDKit blog post.\nBring in the molecules and do salt stripping:\nfrom rdkit import rdBase\nrdBase.DisableLog('rdApp.info')\nms = [rdMolStandardize.FragmentParent(x) for x in Chem.SmilesMolSupplier('../data/BLSets_selected_actives.txt')]\n_ = [Chem.GetSymmSSSR(m) for m in ms]\nlen(ms)\n\n6359\nIn order to fragment the molecules we’re going to be using the BRICS fragmentation rules as implemented in the RDKit. Note that the RDKit implementation has differs from the published BRICS rules in that atom types 2 and 5 (both Ns) have been combined with each other. This is, unfortunately not (yet) documented outside of the code itself, but there’s an explanation here: https://github.com/rdkit/rdkit/blob/master/Code/GraphMol/ChemTransforms/MolFragmenter.cpp#L101\nFor the purposes of this evaluation as to whether or not additive fingerprints work, we will only be using the ten most common BRICS bonds in the dataset. Let’s start by finding those.\nThis is what the list of BRICS bonds for each molecule looks like:\nlist(BRICS.FindBRICSBonds(ms[0]))\n\n[((2, 1), ('1', '5')),\n ((8, 7), ('1', '5')),\n ((6, 7), ('4', '5')),\n ((15, 20), ('5', '12')),\n ((8, 10), ('6', '13')),\n ((6, 30), ('8', '15')),\n ((23, 24), ('8', '16'))]\nThe first element of each tuple contains the indices of the atoms defining the bond, the second element has the BRICS atom types of those atoms. For example, the first BRICS bond in the molecule above is between atom 2 (BRICS type 1) and atom 1 (BRICS type 5).\nLoop over all the molecules and count the number of times each bond type occurs:\nfrom collections import defaultdict, Counter\ncntr = Counter()\nfor m in ms:\n    bbnds = BRICS.FindBRICSBonds(m)\n    for aids,lbls in bbnds:\n        cntr[lbls] += 1\nfreqs = sorted([(y,x) for x,y in cntr.items()],reverse=True)\nfreqs[:10]\n\n[(7337, ('4', '5')),\n (4619, ('1', '5')),\n (3488, ('8', '16')),\n (2599, ('3', '16')),\n (1817, ('5', '16')),\n (1507, ('3', '4')),\n (997, ('6', '16')),\n (853, ('5', '15')),\n (789, ('8', '14')),\n (714, ('8', '15'))]\nThe top two bond types are 4-5(alkyl C - amine) and 1-5 (the amide bond).\nKeep those top 10:\nbondsToKeep = [y for x,y in freqs[:10]]\nIn order to clarify what the more complex code below does, here’s a worked example demonstrating fragmenting a single molecule along two bonds, both between BRICS atom types 1 and 5 (these bonds and the types come from the example above where we found the molecule’s BRICS bonds):\ntm=Chem.FragmentOnSomeBonds(ms[0],[ms[0].GetBondBetweenAtoms(2,1).GetIdx(),ms[0].GetBondBetweenAtoms(8,7).GetIdx()],\n                         dummyLabels=[[1,5],[1,5]])\n[Chem.MolToSmiles(x) for x in tm]\n\n['[1*]C(=O)C(=O)C(NC(=O)[C@@H]1CC[C@H]2CN(S(=O)(=O)Cc3ccccc3)CC(=O)N21)[C@H]1CC[C@H](N)CC1.[5*]NC',\n '[1*]C(=O)[C@@H]1CC[C@H]2CN(S(=O)(=O)Cc3ccccc3)CC(=O)N21.[5*]NC(C(=O)C(=O)NC)[C@H]1CC[C@H](N)CC1']\nTo make it visual, here’s a drawing of the two fragmentations:\nfms = Chem.FragmentOnSomeBonds(ms[0],[ms[0].GetBondBetweenAtoms(2,1).GetIdx(),ms[0].GetBondBetweenAtoms(8,7).GetIdx()],\n                         dummyLabels=[[1,5],[1,5]])\nDraw.MolsToGridImage(fms,subImgSize=(300,250))\nLet’s define some functions that we’ll use for the rest of this:\ndef splitMol(mol,bondsToKeep):\n    ''' fragments a molecule on a particular set of BRICS bonds. \n    Partially sanitizes the results \n    '''\n    bbnds = BRICS.FindBRICSBonds(mol)\n    bndsToTry = []\n    lbls = []\n    for aids,lbl in bbnds:\n        if lbl in bondsToKeep:\n            bndsToTry.append(mol.GetBondBetweenAtoms(aids[0],aids[1]).GetIdx())\n            lbls.append([int(x) for x in lbl])\n    if not bndsToTry:\n        return []\n    res = Chem.FragmentOnSomeBonds(mol,bndsToTry,dummyLabels=lbls)\n    # We need at least a partial sanitization for the rest of what we will be doing:\n    for entry in res:\n        entry.UpdatePropertyCache(False)\n        Chem.FastFindRings(entry)\n    return res\n\ndef getDifferenceFPs(mol,bondsToKeep,fpgen):\n    ''' generates the difference fingerprint between the molecule\n    and each of its fragmentations based on the BRICS bond types passed in.\n    \n    This calculates the sum of the fragment fingerprints by just generating the\n    fingerprint of the fragmented molecule, so whole-molecule fingerprints like\n    atom pairs will not work here. That's fine since they are unlikely to be useful\n    with this approach anyway\n    '''\n    frags = splitMol(mol,bondsToKeep)\n    if not frags:\n        return []\n    res = []\n    # get the fingerprint for the molecule:\n    molfp = fpgen.GetCountFingerprint(mol)\n    # now loop over each fragmentation\n    for frag in frags:\n        # generate the fingerprint of the fragmented molecule\n        # (equivalent to the sum of the fingerprints of the fragments)\n        ffp = fpgen.GetCountFingerprint(frag)\n        # and keep the difference\n        res.append(molfp-ffp)\n    return res\n\ndef getSumFP(fragMol,fpgen,delta):\n    ''' Constructs the sum fingerprint for a fragmented molecule using\n    delta as a constant offset\n    \n    note that any elements of the fingerprint that are negative after adding the\n    constant offset will be set to zero\n    \n    '''\n    ffp = fpgen.GetCountFingerprint(fragMol)\n    for idx,v in delta.GetNonzeroElements().items():\n        tv = ffp[idx] + v\n        if tv&lt;0:\n            tv = 0;\n        ffp[idx] = tv\n    return ffp\n# demonstrate what splitMol returns:\nfrags = splitMol(ms[0],bondsToKeep[2:3])\nDraw.MolsToGridImage(frags)\nNow walk through the analysis with a single bond type: 1-5\nThe first thing we need to do is determine the constant offset term for this bond type. We will do that by generating difference fingerprints for all the fragmentations it generates and then averaging those difference fingerprints.\nStart by generating the difference fingerprints for all the fragmentations using that bond type:\n# for this analysis we will use a 4096 \"bit\" count-based Morgan fingerprints with a radius of 2\nfpgen = rdFingerprintGenerator.GetMorganGenerator(radius=2,fpSize=4096)\ndfps= []\nfor m in ms:\n    dfps.extend(getDifferenceFPs(m,bondsToKeep[1:2],fpgen))\nNow find the average value of the difference fingerprint, being careful to keep only integer values:\ndelta1 = dfps[0]\nfor dfp in dfps[1:]:\n    delta1 += dfp\nnfps = len(dfps)\nfor k,v in delta1.GetNonzeroElements().items():\n    delta1[k] = round(v/nfps)\ndelta1.GetNonzeroElements()\n\n{226: -2, 264: -1, 1831: -1}\nTo quickly summarize that this is telling us: We can simulate the MFP2 fingerprint for a molecule by adding the MFP2 fingerprints of its bond type 1-5 fragments and then substracting one each from the values for bits 264 and 1831 and two from the value for bit 226.\nLet’s look at how well that works across all the molecules. We start by generating the full FP and the 1-5 fragment FP for every molecule that has a 1-5 fragment:\nallfps = []\nfor m in ms:\n    frags = splitMol(m,bondsToKeep[1:2])\n    if not frags:\n        continue\n    fp1 = fpgen.GetCountFingerprint(m)\n    ffps = [getSumFP(x,fpgen,delta1) for x in frags]\n    allfps.append((fp1,ffps))\nlen(allfps)\n\n2801\nAnd calculate the similarity of each molecule to itself by calculating the Tanimoto similarity between the full fingerprint and the fragment fingerprint:\nself_tanis = []\nfor fp1,ffps in allfps:\n    self_tanis.extend([DataStructs.TanimotoSimilarity(fp1,x) for x in ffps])\nVisualize those:\nplt.hist(self_tanis,bins=20);\nplt.title(\"self similarity, fusion 1-5\");\nThough that’s interesting, and good to see that the self-similarities aren’t all too far from 1.0, we’re actually more interested in using the fingerprints for comparing different molecules to each other.\nLook at a bunch of random pairs of molecules that are at least 0.3 similar to each other (the noise threshold for count-based MFP2 is around 0.3), and then look at how different the similarities between their normal and fragment fingerprints are.\nimport random\nrandom.seed(0xf00d)\nps1 = list(range(len(allfps)))\nrandom.shuffle(ps1)\nps1 = ps1[:500]\nps2 = list(range(len(allfps)))\nrandom.shuffle(ps2)\nps2 = ps2[:500]\n\nnCompared = 0\nother_tanidiff = []\nfor i in ps1:\n    fp1,frags1 = allfps[i]\n    for j in ps2:\n        fp2,frags2 = allfps[j]\n        refTani = DataStructs.TanimotoSimilarity(fp1,fp2)\n        if refTani &lt; 0.3:\n            continue\n        nCompared += 1\n        ltanis = []\n        for f1 in frags1:\n            ltanis.extend(DataStructs.BulkTanimotoSimilarity(f1,frags2))\n        other_tanidiff.extend([refTani-x for x in ltanis])\nprint(f\"considered {nCompared} fingerprint pairs from {len(allfps)**2}\")\n\nconsidered 15382 fingerprint pairs from 7845601\nmedian = np.median(np.abs(other_tanidiff))\nbins = np.quantile(np.abs(other_tanidiff),[0.25,0.75, 0.9,0.95])\niqr = bins[1]-bins[0]\nplt.hist(other_tanidiff,bins=20);\ngzero = np.sum(np.array(other_tanidiff)&gt;-0.005) / len(other_tanidiff)\nplt.title(f'MAD={median:.2f}, IQR={iqr:.2f}, 90%={bins[2]:.2f}, 95%={bins[3]:.2f}, {gzero:.2f}&gt;-.005');\nplt.xlabel('$\\\\Delta$Similarity');\nplt.ylabel('count');\nThe title of the plot shows statistics about the similarity differences: the median absolute deviation (MAD), the inter-quartile range (IQR), the 90% and 95% bins of the absolute deviations, and the fraction of the differences which are greater than -0.005 (I chose 0.005 as an conservative tolerance value for considering the similarities identical).\nThat looks pretty good. For at least the 1-5 fragmentation, the similarity calculated with the fragment fingerprint is quite similar to that calculated with the full fingerprint. Even better: most of the deviation happens to the high-similarity side (87% exceed the -0.005 tolerance value), so we should be able to safely use the fragment-fingerprint similarity as a filter to identify interesting molecules."
  },
  {
    "objectID": "posts/2024-09-20-additive-fingerprints1.html#tolerances-for-searching",
    "href": "posts/2024-09-20-additive-fingerprints1.html#tolerances-for-searching",
    "title": "Additive fingerprints",
    "section": "Tolerances for searching",
    "text": "Tolerances for searching\nSuppose we want to use the fragment fingerprints for similarity searching with a threshold and be sure that we don’t miss any results. How would we need to adjust the threshold?\n\nfor thresh in (0.3,0.5,0.7):\n    print(f'Threshold: {thresh}')\n    print('            \\t   frag-frag\\t   fp-frag')\n    for i,btk in enumerate(results.keys()):\n        self_tanis,other_tanidiff1,other_tanidiff2 = results[btk]\n        bins1 = np.quantile(other_tanidiff1[thresh],[0.01,0.05])\n        bins2 = np.quantile(other_tanidiff2[thresh],[0.01,0.05])\n        print(f'{btk}:\\t{bins1[0]: 6.3f} {bins1[1]: 6.3f}\\t{bins2[0]: 6.3f} {bins2[1]: 6.3f}')\n    print('-----------')\n\nThreshold: 0.3\n                   frag-frag       fp-frag\n('4', '5'): -0.025 -0.015   -0.006  0.000\n('1', '5'): -0.022 -0.010   -0.004  0.000\n('8', '16'):    -0.032 -0.021   -0.012 -0.007\n('3', '16'):    -0.026 -0.021   -0.013 -0.010\n('5', '16'):    -0.029 -0.019   -0.016 -0.002\n('3', '4'): -0.032 -0.019   -0.018 -0.009\n('6', '16'):    -0.043 -0.029   -0.025 -0.015\n('5', '15'):    -0.048 -0.026   -0.005 -0.002\n('8', '14'):    -0.042 -0.016   -0.010 -0.002\n('8', '15'):    -0.053 -0.028   -0.014 -0.003\n-----------\nThreshold: 0.5\n                   frag-frag       fp-frag\n('4', '5'): -0.023 -0.008    0.000  0.004\n('1', '5'): -0.022 -0.004   -0.003  0.000\n('8', '16'):    -0.035 -0.019   -0.012 -0.004\n('3', '16'):    -0.030 -0.012   -0.011  0.000\n('5', '16'):    -0.028 -0.016    0.008  0.014\n('3', '4'): -0.028 -0.009   -0.005  0.004\n('6', '16'):    -0.036 -0.028   -0.004  0.006\n('5', '15'):    -0.060 -0.020   -0.006  0.026\n('8', '14'):    -0.050 -0.016   -0.008  0.000\n('8', '15'):    -0.056 -0.035    0.000  0.006\n-----------\nThreshold: 0.7\n                   frag-frag       fp-frag\n('4', '5'): -0.016 -0.003    0.000  0.008\n('1', '5'): -0.023 -0.002    0.000  0.005\n('8', '16'):    -0.035 -0.012   -0.009  0.006\n('3', '16'):    -0.034 -0.003   -0.009  0.029\n('5', '16'):    -0.029 -0.012    0.011  0.047\n('3', '4'): -0.022 -0.006   -0.001  0.014\n('6', '16'):    -0.034 -0.009    0.009  0.035\n('5', '15'):    -0.026 -0.012    0.036  0.058\n('8', '14'):    -0.061 -0.021    0.000  0.028\n('8', '15'):    -0.061 -0.032   -0.001  0.017\n-----------\n\n\nIn order to be sure of retrieving 99% of the actual results when searching using the full fingerprint of the query molecule against the fragment fingerprint of the database molecules (these are the fp-frag results), we’d need to use a search threshold of 0.275 (true threshold = 0.3), 0.488 (true threshold = 0.5), or 0.691 (true threshold = 0.7)."
  },
  {
    "objectID": "posts/2023-02-04-working-with-conformers.html",
    "href": "posts/2023-02-04-working-with-conformers.html",
    "title": "Working with conformers",
    "section": "",
    "text": "The RDKit stores atomic coordinates in Conformer objects which are attached to the corresponding molecules. In this tutorial post we’re going to look in detail at the way conformers are stored and ways to work with them.\nfrom rdkit import Chem\nfrom rdkit.Chem.Draw import IPythonConsole\nIPythonConsole.ipython_3d = True\nimport py3Dmol\nfrom rdkit.Chem import rdDepictor\nfrom rdkit.Chem import rdDistGeom\nimport rdkit\nprint(rdkit.__version__)\n\n2022.09.4\nA molecule constructed from SMILES has no conformer information:\nesomeprazole = Chem.MolFromSmiles('COc1ccc2[n-]c([S@@+]([O-])Cc3ncc(C)c(OC)c3C)nc2c1')\nesomeprazole.GetNumConformers()\n\n0\nAn aside: when you display a molecule without conformers in Jupyter, a 2D conformer is generated so that there’s something to display:\nesomeprazole\nBut this conformer is just temporary; the molecule itself is not modified:\nesomeprazole.GetNumConformers()\n\n0\nWhen we ask to have 2D coordinates generated, they are added as a conformer:\nrdDepictor.Compute2DCoords(esomeprazole)\nesomeprazole.GetNumConformers()\n\n1\nAnd that conformer is flagged as not being 3D:\nesomeprazole.GetConformer().Is3D()\n\nFalse\nGenerating a 3D structure also results in a conformer being added to the molecule (by default any existing conformers are cleared):\nesomeprazole = Chem.AddHs(esomeprazole) # &lt;- add hydrogens so that we get a reasonable conformer\nrdDistGeom.EmbedMolecule(esomeprazole)\nprint(esomeprazole.GetNumConformers(),esomeprazole.GetConformer().Is3D())\n\n1 True\n\n\n[09:59:21] UFFTYPER: Unrecognized charge state for atom: 8\nMolecules can have more than one conformer attached. This is what happens whenever we ask for multiple conformers to be generated:\nrdDistGeom.EmbedMultipleConfs(esomeprazole,10, randomSeed=0xf00d) # &lt;- generate 10 conformers\nprint(esomeprazole.GetNumConformers(),esomeprazole.GetConformer().Is3D())\n\n[09:59:22] UFFTYPER: Unrecognized charge state for atom: 8\n\n\n10 True\nCalling GetConformer() without arguments on a molecule with multiple conformers (as we did above) returns the default conformer. This is also what most RDKit operations that work with conformers do:\nIPythonConsole.drawMol3D(esomeprazole)\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol\nprint(Chem.MolToV3KMolBlock(esomeprazole)[:200])\n\n\n     RDKit          3D\n\n  0  0  0  0  0  0  0  0  0  0999 V3000\nM  V30 BEGIN CTAB\nM  V30 COUNTS 42 44 0 0 0\nM  V30 BEGIN ATOM\nM  V30 1 C 7.673833 1.902627 0.749932 0\nM  V30 2 O 6.455003 1.586360 1.35\nBut functions which use conformer information also generally take an optional confId argument that allows you to change which conformer is used:\nIPythonConsole.drawMol3D(esomeprazole,confId=2)\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol\nprint(Chem.MolToV3KMolBlock(esomeprazole,confId=2)[:200])\n\n\n     RDKit          3D\n\n  0  0  0  0  0  0  0  0  0  0999 V3000\nM  V30 BEGIN CTAB\nM  V30 COUNTS 42 44 0 0 0\nM  V30 BEGIN ATOM\nM  V30 1 C 8.236088 0.676672 -0.133971 0\nM  V30 2 O 7.679673 -0.571643 0.\nAs an aside: the Is3D flag on conformers is used by the RDKit’s jupyter integration to decide how to show the molecule. We can fool it by marking a 3D conformer as 2D:\ntmol = Chem.Mol(esomeprazole)\ntmol.GetConformer().Set3D(False)\ntmol\nor a 2D conformer as 3D:\nrdDepictor.Compute2DCoords(tmol)\ntmol.GetConformer().Set3D(True)\ntmol\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol"
  },
  {
    "objectID": "posts/2023-02-04-working-with-conformers.html#conformer-ids",
    "href": "posts/2023-02-04-working-with-conformers.html#conformer-ids",
    "title": "Working with conformers",
    "section": "Conformer IDs",
    "text": "Conformer IDs\nEach conformer has an ID associated with it:\n\nprint([x.GetId() for x in esomeprazole.GetConformers()])\n\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n\nAnd there’s no guarantee that the IDs are consecutive:\n\ncp = Chem.Mol(esomeprazole)\ncp.RemoveConformer(0)\ncp.RemoveConformer(3)\ncp.RemoveConformer(7)\nprint([x.GetId() for x in cp.GetConformers()])\n\n[1, 2, 4, 5, 6, 8, 9]\n\n\nThe default conformer is just the first one:\n\nesomeprazole.GetConformer().GetId(),cp.GetConformer().GetId()\n\n(0, 1)\n\n\nIf we ask for a conformer Id which doesn’t exist, we get an error\n\ncp.GetConformer(12)\n\n\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\nCell In [33], line 1\n----&gt; 1 cp.GetConformer(12)\n\nValueError: Bad Conformer Id\n\n\n\nSo it’s usually better to loop over conformers by using for conf in m.GetConformers() than to do something like for confid in range(m.GetNumConformers())"
  },
  {
    "objectID": "posts/2023-02-04-working-with-conformers.html#getting-atom-positions",
    "href": "posts/2023-02-04-working-with-conformers.html#getting-atom-positions",
    "title": "Working with conformers",
    "section": "Getting atom positions",
    "text": "Getting atom positions\nWe can get the position of an individual atom using the GetAtomPosition() method:\n\nconf = esomeprazole.GetConformer()\npos = conf.GetAtomPosition(0)\npos\n\n&lt;rdkit.Geometry.rdGeometry.Point3D at 0x24549d77940&gt;\n\n\nPoint3D objects have x, y, an z members:\n\npos.x\n\n7.673833423925606\n\n\nWe can also treat them as vectors:\n\npos[0]\n\n7.673833423925606\n\n\nor convert them to a list:\n\nlist(pos)\n\n[7.673833423925606, 1.9026270201484923, 0.7499323617732389]\n\n\nIf you want to work with all of the atom positions at once, you can get the full set of positions as a numeric python array:\n\nconf = esomeprazole.GetConformer()\nconf.GetPositions()\n\narray([[ 7.67383342,  1.90262702,  0.74993236],\n       [ 6.45500303,  1.5863599 ,  1.35650536],\n       [ 5.47994258,  0.87148768,  0.70572686],\n       [ 5.73975972,  0.49700014, -0.60402982],\n       [ 4.78365557, -0.22724183, -1.28080521],\n       [ 3.59642905, -0.54463893, -0.59986585],\n       [ 2.59405829, -1.21382165, -1.03927358],\n       [ 1.57249064, -1.34923356, -0.0664238 ],\n       [ 0.23760111, -2.18813362, -0.61069031],\n       [ 0.81652921, -3.85758446, -0.60953112],\n       [-1.27391039, -2.26700639,  0.09012225],\n       [-2.10815098, -1.11798724,  0.39836845],\n       [-1.98174435, -0.40660263,  1.56568982],\n       [-2.94381966,  0.4469877 ,  1.9742195 ],\n       [-4.10302205,  0.68692145,  1.27699325],\n       [-5.19127878,  1.57733968,  1.7705111 ],\n       [-4.26093798, -0.01014656,  0.07490913],\n       [-5.42572563,  0.23147474, -0.6552053 ],\n       [-5.42087157,  1.29218749, -1.61825447],\n       [-3.29351791, -0.86279333, -0.31409244],\n       [-3.3729589 , -1.58163605, -1.64292335],\n       [ 2.09334884, -0.69551121,  0.96089041],\n       [ 3.32320448, -0.18671147,  0.68892685],\n       [ 4.28153998,  0.53232818,  1.34410496],\n       [ 8.09389757,  0.95596456,  0.26748966],\n       [ 7.65061035,  2.62967184, -0.06019159],\n       [ 8.38623492,  2.21563152,  1.56819868],\n       [ 6.66853902,  0.74454419, -1.13424145],\n       [ 4.89232116, -0.56528193, -2.30134486],\n       [-1.97542789, -3.01240938, -0.43608787],\n       [-1.27389641, -2.83764033,  1.13153208],\n       [-2.83784116,  0.99189563,  2.93071709],\n       [-5.86663733,  0.96082859,  2.44934068],\n       [-5.84018865,  1.83545526,  0.9297767 ],\n       [-4.86235377,  2.50117065,  2.2287445 ],\n       [-4.78779089,  1.06132465, -2.50433141],\n       [-4.99817085,  2.23486583, -1.20407518],\n       [-6.43595476,  1.42487573, -2.00400931],\n       [-4.24971742, -1.21643589, -2.21758627],\n       [-2.46593717, -1.22685901, -2.26727455],\n       [-3.47585534, -2.65007473, -1.58068986],\n       [ 4.1067109 ,  0.83680778,  2.34637208]])"
  },
  {
    "objectID": "posts/2023-02-04-working-with-conformers.html#addingremoving-conformers",
    "href": "posts/2023-02-04-working-with-conformers.html#addingremoving-conformers",
    "title": "Working with conformers",
    "section": "Adding/removing conformers",
    "text": "Adding/removing conformers\nI already showed how to remove conformer in the section on conformer IDs, but you can also add conformers to a molecule.\nLet’s start by getting a conformer which is a canonical orientation: centered at the origin and with its principle axes aligned with the cartesian axes:\n\nfrom rdkit.Chem import rdMolTransforms\n\n# GetConformer() returns a reference to the existing conformer, we want a copy:\nconf = Chem.Conformer(esomeprazole.GetConformer(0))\nrdMolTransforms.CanonicalizeConformer(conf)\n\nMake a copy of the molecule and add a 2D conformer, by default Compute2DCoords() clears the existing conformers\n\ncp = Chem.Mol(esomeprazole)\nrdDepictor.Compute2DCoords(cp)\n\n0\n\n\nNow add the that canonical conformer and set its ID so that it is unique. The return value is the new conformer ID\n\ncp.AddConformer(conf,assignId=True)\n\n1\n\n\n\ncp.GetConformer().GetPositions()[:3]\n\narray([[8.41075857, 1.90814121, 0.        ],\n       [6.92408705, 2.10766008, 0.        ],\n       [6.00796287, 0.91992422, 0.        ]])\n\n\n\ncp.GetConformer(1).GetPositions()[:3]\n\narray([[ 7.39395019,  1.81765991, -0.52124964],\n       [ 6.17231368,  1.90827963,  0.15172549],\n       [ 5.15244456,  1.01460864, -0.06395248]])"
  },
  {
    "objectID": "posts/2023-02-04-working-with-conformers.html#getting-a-new-molecule-with-just-one-conformer",
    "href": "posts/2023-02-04-working-with-conformers.html#getting-a-new-molecule-with-just-one-conformer",
    "title": "Working with conformers",
    "section": "Getting a new molecule with just one conformer",
    "text": "Getting a new molecule with just one conformer\nThere are often times you want to copy a multi-conformer molecule but just keep one of the conformers.\nThe standard way of copying RDKit molecules will copy all conformers:\n\ncp = Chem.Mol(esomeprazole)\ncp.GetNumConformers()\n\n10\n\n\nBut we can tell it to just copy one:\n\ncp = Chem.Mol(esomeprazole,confId=5)\nprint(cp.GetNumConformers(), cp.GetConformer().GetId())\n\n1 5"
  },
  {
    "objectID": "posts/2022-09-29-optimizing-conformer-generation-parameters.html",
    "href": "posts/2022-09-29-optimizing-conformer-generation-parameters.html",
    "title": "Optimizing conformer generation parameters",
    "section": "",
    "text": "Whether it’s making it go faster or producing better results, we’re always on the lookout for ways to improve the RDKit’s conformer generator. Earlier this year I spent some time using a profiler to look in detail at where the code spends its time and saw that a lot of time is spent in optimizing structures using the so-called “distance geometry forcefield” (see the documentation for more details about conformer generation). Directly changing the optimization code is one of those daunting tasks which is only to be undertaken when one has a lot of time available, so I wasn’t particularly enthusiastic about that. However, while looking at the code I realized that the behavior of the optimizer is controlled by a number of parameters which have rather arbitrary values. Given that I know we never really tried to systematically find the best values for these parameters and that they definitely can have an impact on how quickly the optimizations converge (as well as how well converged they are), it seemed like adjusting these would be a logical place to try and improve things.\nFortunately, we had a student, Thibault Kläy, starting a semester project in the group who was willing to take on this project. This post has a brief description of what Thibault did and an exploration of the key results from his project.\nTL;DR Thibault found that increasing one of the force field convergence parameters (optimizerForceTol) from its default value of 0.001 to 0.0135 reduced the average run time of conformer generation by around 20% for the &gt;4000 molecules in the Platinum set. This improvement in run time came without a significant decrease in the quality of the conformers, as measured by how close we get to the crystal conformer. This will be the default value for optimizerForceTol starting in the 2022.09 release, but you can already change the value yourself, see below."
  },
  {
    "objectID": "posts/2022-09-29-optimizing-conformer-generation-parameters.html#finding-the-best-parameters",
    "href": "posts/2022-09-29-optimizing-conformer-generation-parameters.html#finding-the-best-parameters",
    "title": "Optimizing conformer generation parameters",
    "section": "Finding the best parameters",
    "text": "Finding the best parameters\nAt first I hoped that we’d be able to adjust the parameters while only making small changes to the conformers generated… this turned out to be competely unrealistic, so we decided to evaluate the quality of the results the same way we validated the results in the ETKDG paper: by looking at how well we reproduce crystal conformers. Since using the CSD compounds we used in the original paper was complicated (from a licensing perspective), we just used the PDB structures from the Platinum set. We filtered this down to only include molecules with less than 50 heavy atoms.\nThibault explored changing the following parameters: - optimizerForceTol - basinThresh - ERROR_TOL - MOVETOL - FORCETOL - TOLX\nThe first two of those can be modified by the user; the last four require recompiling the RDKit.\nAfter running a lot of calculations Thibault found that the only parameters which really yielded a significant improvement in runtime performance were optimizerForceTol and basinThresh, that optimizerForceTol gave larger improvements, and that the results were not cumulative (so once optimizerForceTol was set to an optimal value changing basinThresh no longer really improved things).\nThe rest of this post repeats some of Thibault’s analysis to show the impact of setting optimizerForceTol to the new recommended value.\n\nfrom rdkit import Chem\nfrom rdkit.Chem.Draw import IPythonConsole\nIPythonConsole.ipython_3d = True\nfrom rdkit.Chem import rdDistGeom\nfrom rdkit.Chem import TorsionFingerprints\nfrom rdkit.Chem import AllChem\n%matplotlib inline\nimport pylab as plt\nplt.style.use('tableau-colorblind10')\nplt.rcParams['font.size'] = '16'\nimport numpy as np\n\nimport rdkit\nprint(rdkit.__version__)\n\n2022.03.5\n\n\nStart by generating conformers using the original and updated values of optimizerForceTol. This takes quite a while to run:\nimport gzip\nimport time\nimport pickle\n\netkdg = rdDistGeom.ETKDGv3()\netkdg.randomSeed = 0xa700f\netkdg.verbose = False\netkdg.numThreads = 8\nconformer_num=100\n\n# 0.001 was the default value of optimizerForceTol up to and including v2022.03\ntimings = []\nfor forceTol in ('0.001', '0.0135'):\n    print(\nf'''---------------------------\n    forceTol: {forceTol}\n---------------------------''')\n    inf = gzip.open('../data/platinum_dataset_2017_01.sdf.gz')\n    outf = gzip.open(f'./results/platinum_forcetol_{forceTol}.100confs.pkl.gz','wb+')\n    etkdg.optimizerForceTol = float(forceTol)\n    lts = []\n    for i,m in enumerate(Chem.ForwardSDMolSupplier(inf,removeHs=False)):\n        if not m:\n            continue\n        if m.GetNumHeavyAtoms()&gt;50:\n            continue\n        Chem.AssignStereochemistryFrom3D(m)\n        start = time.time()\n        conformation_ids = rdDistGeom.EmbedMultipleConfs(m, numConfs=conformer_num, params=etkdg)\n        lts.append(time.time()-start)\n        if not (i+1)%1000:\n            print(f\"***** done {i+1}\")\n        pickle.dump(m,outf)\n    timings.append(lts)\nwith open('./results/optmizer_force_tol_timings.pkl','wb+') as outf:\n    pickle.dump(timings,outf)\n\nRepeat that exercise for random coordinate embedding, this one takes even longer.\nimport gzip\nimport time\nimport pickle\n\netkdg = rdDistGeom.ETKDGv3()\netkdg.randomSeed = 0xa700f\netkdg.verbose = False\netkdg.numThreads = 8\netkdg.useRandomCoords = True\nconformer_num=100\n\n# 0.001 was the default value of optimizerForceTol up to and including v2022.03\ntimings = []\nfor forceTol in ('0.001', '0.0135'):\n    print(\nf'''---------------------------\n    forceTol: {forceTol}\n---------------------------''')\n    inf = gzip.open('../data/platinum_dataset_2017_01.sdf.gz')\n    outf = gzip.open(f'./results/platinum_forcetol_{forceTol}.random_coords.100confs.pkl.gz','wb+')\n    etkdg.optimizerForceTol = float(forceTol)\n    lts = []\n    for i,m in enumerate(Chem.ForwardSDMolSupplier(inf,removeHs=False)):\n        if not m:\n            continue\n        if m.GetNumHeavyAtoms()&gt;50:\n            continue\n        Chem.AssignStereochemistryFrom3D(m)\n        start = time.time()\n        conformation_ids = rdDistGeom.EmbedMultipleConfs(m, numConfs=conformer_num, params=etkdg)\n        lts.append(time.time()-start)\n        if not (i+1)%1000:\n            print(f\"***** done {i+1}\")\n        pickle.dump(m,outf)\n    timings.append(lts)\nwith open('./results/optmizer_force_tol_timings.random_coords.pkl','wb+') as outf:\n    pickle.dump(timings,outf)"
  },
  {
    "objectID": "posts/2022-09-29-optimizing-conformer-generation-parameters.html#comparison-to-crystal-conformers",
    "href": "posts/2022-09-29-optimizing-conformer-generation-parameters.html#comparison-to-crystal-conformers",
    "title": "Optimizing conformer generation parameters",
    "section": "Comparison to crystal conformers",
    "text": "Comparison to crystal conformers\nIs there an impact on our ability to find the crystal conformer?\n\nRMSD\n\ninf = gzip.open('../data/platinum_dataset_2017_01.sdf.gz')\n\nbase_xtal_rms = []\nmod_xtal_rms = []\nwith gzip.open('./results/platinum_forcetol_0.001.100confs.pkl.gz') as basef,\\\n     gzip.open('./results/platinum_forcetol_0.0135.100confs.pkl.gz') as modf:\n    for i,m in enumerate(Chem.ForwardSDMolSupplier(inf,removeHs=False)):\n        if not m:\n            continue\n        if m.GetNumHeavyAtoms()&gt;50:\n            continue\n        m = Chem.RemoveHs(m)\n        try:\n            m1 = Chem.RemoveHs(pickle.load(basef))\n            m2 = Chem.RemoveHs(pickle.load(modf))\n        except EOFError:\n            break\n        base_best = 1000\n        mod_best = 1000\n        for conf1,conf2 in zip(m1.GetConformers(),m2.GetConformers()):\n            rms = AllChem.GetBestRMS(m1,m,conf1.GetId())\n            base_best = min(base_best,rms)\n            rms = AllChem.GetBestRMS(m2,m,conf2.GetId())\n            mod_best = min(mod_best,rms)\n        if base_best&lt;1000 and mod_best&lt;1000:\n            base_xtal_rms.append(base_best)\n            mod_xtal_rms.append(mod_best)\n\n\nthresh = 0.5\nplt.rcParams['figure.figsize']=(7,7)\nplt.scatter(base_xtal_rms,mod_xtal_rms);\nlim = max(base_xtal_rms+mod_xtal_rms)\nplt.plot((0,lim),(0,lim),'k')\nplt.plot((0,lim),(thresh,lim+thresh),ls='dashed',color='grey')\nplt.plot((thresh,lim),(0,lim-thresh),ls='dashed',color='grey');\nplt.xlabel('optimizerForceTol=0.001');\nplt.ylabel('optimizerForceTol=0.0135');\nplt.title('platinum 100 confs/mol, RMSD to xtal conf');\n\n\n\n\n\n\n\n\n\nthresh = 0.5\nplt.rcParams['figure.figsize']=(7,7)\nplt.hexbin(base_xtal_rms,mod_xtal_rms,cmap='Blues',bins='log');\noutside = [(x,y) for x,y in zip(base_xtal_rms,mod_xtal_rms) if abs(x-y)&gt;thresh]\nplt.scatter([x for x,y in outside],[y for x,y in outside],marker='.')\nlim = max(base_xtal_rms+mod_xtal_rms)\nplt.plot((0,lim),(0,lim),'k')\nplt.plot((0,lim),(thresh,lim+thresh),ls='dashed',color='grey')\nplt.plot((thresh,lim),(0,lim-thresh),ls='dashed',color='grey');\nplt.xlabel('optimizerForceTol=0.001');\nplt.ylabel('optimizerForceTol=0.0135');\nplt.title('platinum 100 confs/mol, RMSD to xtal conf');\n\n\n\n\n\n\n\n\nBased on these plots it looks like we haven’t negatively impacted our ability to reproduce crystal conformers.\nLet’s look at the \\(\\Delta\\) RMSD differences directly:\n\nd = np.array(mod_xtal_rms)-np.array(base_xtal_rms)\nplt.hist(d,bins=20);\nplt.xlabel('RMSD(forceTol=0.0135)-RMSD(forceTol=0.001)')\nplt.title('platinum 100 confs/mol');\n\n\n\n\n\n\n\n\nZoom in:\n\nd = np.array(mod_xtal_rms)-np.array(base_xtal_rms)\nplt.hist([x for x in d if abs(x)&lt;=0.75],bins=20);\nplt.xlabel('RMSD(forceTol=0.0135)-RMSD(forceTol=0.001)')\nplt.title('platinum 100 confs/mol');\n\n\n\n\n\n\n\n\nThere really aren’t significant changes here.\n\n\nTFD\nRMSD, though familiar and intuitive, has some well-documented shortcomings. Torsion Fingerprint Differences (TFDs) were developed as an alternative metric for comparing structures which is less susceptible to some of these problems.\nWe used TFDs in the original ETKDG paper, so let’s try them here too\n\n# The RDKit's TFD implementation doesn't currently (v2022.03) have a fast implementation of\n# the method we need, so do it directly here:\ndef GetBestTFDBetweenMolecules(mol1, mol2, confId1=-1, useWeights=True, maxDev='equal',\n                           symmRadius=2, ignoreColinearBonds=True):\n  \"\"\" Wrapper to calculate the TFD between two molecules.\n      All conformers of mol2 will be compared against a single conformer of mol1\n      and the lowest TFD returned\n      \n      Important: The two molecules must be instances of the same molecule\n\n      Arguments:\n      - mol1:     first instance of the molecule of interest\n      - mol2:     second instance the molecule of interest\n      - confId1:  conformer index for mol1 (default: first conformer)\n      - useWeights: flag for using torsion weights in the TFD calculation\n      - maxDev:   maximal deviation used for normalization\n                  'equal': all torsions are normalized using 180.0 (default)\n                  'spec':  each torsion is normalized using its specific\n                           maximal deviation as given in the paper\n      - symmRadius: radius used for calculating the atom invariants\n                    (default: 2)\n      - ignoreColinearBonds: if True (default), single bonds adjacent to\n                             triple bonds are ignored\n                             if False, alternative not-covalently bound\n                             atoms are used to define the torsion\n\n      Return: TFD value\n  \"\"\"\n  if (Chem.MolToSmiles(mol1) != Chem.MolToSmiles(mol2)):\n    raise ValueError(\"The two molecules must be instances of the same molecule!\")\n  mol2 = TorsionFingerprints._getSameAtomOrder(mol1, mol2)\n  tl, tlr = TorsionFingerprints.CalculateTorsionLists(mol1, maxDev=maxDev, symmRadius=symmRadius,\n                                  ignoreColinearBonds=ignoreColinearBonds)\n  # first molecule\n  torsion1 = TorsionFingerprints.CalculateTorsionAngles(mol1, tl, tlr, confId=confId1)\n  if useWeights:\n    weights = TorsionFingerprints.CalculateTorsionWeights(mol1, ignoreColinearBonds=ignoreColinearBonds)\n  best = 1e8\n  for conf in mol2.GetConformers():\n    # second molecule\n    torsion2 = TorsionFingerprints.CalculateTorsionAngles(mol2, tl, tlr, confId=conf.GetId())\n    if useWeights:\n      tfd = TorsionFingerprints.CalculateTFD(torsion1, torsion2, weights=weights)\n    else:\n      tfd = TorsionFingerprints.CalculateTFD(torsion1, torsion2)\n    best = min(best,tfd)\n  return best\n\n\ninf = gzip.open('../data/platinum_dataset_2017_01.sdf.gz')\nbase_xtal_tfd = []\nmod_xtal_tfd = []\nwith gzip.open('./results/platinum_forcetol_0.001.100confs.pkl.gz') as basef,\\\n     gzip.open('./results/platinum_forcetol_0.0135.100confs.pkl.gz') as modf:\n    for i,m in enumerate(Chem.ForwardSDMolSupplier(inf,removeHs=False)):\n        if not m:\n            continue\n        if m.GetNumHeavyAtoms()&gt;50:\n            continue\n        m = Chem.RemoveHs(m)\n        try:\n            m1 = Chem.RemoveHs(pickle.load(basef))\n            m2 = Chem.RemoveHs(pickle.load(modf))\n        except EOFError:\n            break\n        base_best = 1000\n        mod_best = 1000\n        base_best = GetBestTFDBetweenMolecules(m,m1)\n        mod_best = GetBestTFDBetweenMolecules(m,m2)\n        if base_best&lt;1000 and mod_best&lt;1000:\n            base_xtal_tfd.append(base_best)\n            mod_xtal_tfd.append(mod_best)\n        if not (i+1)%500:\n            print(f\"Done {i+1}\")\n\nDone 500\nDone 1000\nDone 1500\nDone 2000\nDone 2500\nDone 3000\nDone 3500\nDone 4000\nDone 4500\n\n\n\nthresh = 0.2\nplt.rcParams['figure.figsize']=(7,7)\nplt.scatter(base_xtal_tfd,mod_xtal_tfd);\nlim = max(base_xtal_tfd+mod_xtal_tfd)\nplt.plot((0,lim),(0,lim),'k')\nplt.plot((0,lim),(thresh,lim+thresh),ls='dashed',color='grey')\nplt.plot((thresh,lim),(0,lim-thresh),ls='dashed',color='grey');\nplt.xlabel('optimizerForceTol=0.001');\nplt.ylabel('optimizerForceTol=0.0135');\nplt.title('platinum 100 confs/mol, TFD to xtal conf');\n\n\n\n\n\n\n\n\n\nthresh = 0.2\nplt.rcParams['figure.figsize']=(7,7)\nplt.hexbin(base_xtal_tfd,mod_xtal_tfd,cmap='Blues',bins='log');\nlim = max(base_xtal_tfd+mod_xtal_tfd)\nplt.plot((0,lim),(0,lim),'k')\nplt.plot((0,lim),(thresh,lim+thresh),ls='dashed',color='grey')\nplt.plot((thresh,lim),(0,lim-thresh),ls='dashed',color='grey');\nplt.xlabel('optimizerForceTol=0.001');\nplt.ylabel('optimizerForceTol=0.0135');\nplt.title('platinum 100 confs/mol, TFD to xtal conf');\n\n\n\n\n\n\n\n\nLook at the histogram of the changes in TFD between the two methods\n\nd = np.array(mod_xtal_tfd)-np.array(base_xtal_tfd)\nplt.hist(d,bins=20);\nplt.xlabel('TFD(forceTol=0.0135)-TFD(forceTol=0.001)')\nplt.title('platinum 100 confs/mol');\n\n\n\n\n\n\n\n\nZoom in:\n\nd = np.array(mod_xtal_tfd)-np.array(base_xtal_tfd)\nplt.hist([x for x in d if abs(x)&lt;0.1],bins=20);\nplt.xlabel('TFD(forceTol=0.0135)-TFD(forceTol=0.001)')\nplt.title('platinum 100 confs/mol');\n\n\n\n\n\n\n\n\nConclusion: the updated force field parameters don’t have a much of an impact at all on our ability to reproduce crystal conformers as measured by TFD."
  },
  {
    "objectID": "posts/2022-09-29-optimizing-conformer-generation-parameters.html#comparing-to-crystal-structures",
    "href": "posts/2022-09-29-optimizing-conformer-generation-parameters.html#comparing-to-crystal-structures",
    "title": "Optimizing conformer generation parameters",
    "section": "Comparing to crystal structures",
    "text": "Comparing to crystal structures\n\nRMSD\n\nimport gzip\ninf = gzip.open('../data/platinum_dataset_2017_01.sdf.gz')\n\nbase_xtal_rms = []\nmod_xtal_rms = []\nwith gzip.open('./results/platinum_forcetol_0.001.random_coords.100confs.pkl.gz') as basef,\\\n     gzip.open('./results/platinum_forcetol_0.0135.random_coords.100confs.pkl.gz') as modf:\n    for i,m in enumerate(Chem.ForwardSDMolSupplier(inf,removeHs=False)):\n        if not m:\n            continue\n        if m.GetNumHeavyAtoms()&gt;50:\n            continue\n        m = Chem.RemoveHs(m)\n        try:\n            m1 = Chem.RemoveHs(pickle.load(basef))\n            m2 = Chem.RemoveHs(pickle.load(modf))\n        except EOFError:\n            break\n        base_best = 1000\n        mod_best = 1000\n        for conf1,conf2 in zip(m1.GetConformers(),m2.GetConformers()):\n            rms = AllChem.GetBestRMS(m1,m,conf1.GetId())\n            base_best = min(base_best,rms)\n            rms = AllChem.GetBestRMS(m2,m,conf2.GetId())\n            mod_best = min(mod_best,rms)\n        if base_best&lt;1000 and mod_best&lt;1000:\n            base_xtal_rms.append(base_best)\n            mod_xtal_rms.append(mod_best)\n\n\nthresh = 0.5\nplt.rcParams['figure.figsize']=(7,7)\nplt.scatter(base_xtal_rms,mod_xtal_rms);\nlim = max(base_xtal_rms+mod_xtal_rms)\nplt.plot((0,lim),(0,lim),'k')\nplt.plot((0,lim),(thresh,lim+thresh),ls='dashed',color='grey')\nplt.plot((thresh,lim),(0,lim-thresh),ls='dashed',color='grey');\nplt.xlabel('optimizerForceTol=0.001');\nplt.ylabel('optimizerForceTol=0.0135');\nplt.title('platinum 100 confs/mol, RMSD to xtal conf');\n\n\n\n\n\n\n\n\n\nthresh = 0.5\nplt.rcParams['figure.figsize']=(7,7)\nplt.hexbin(base_xtal_rms,mod_xtal_rms,cmap='Blues',bins='log');\noutside = [(x,y) for x,y in zip(base_xtal_rms,mod_xtal_rms) if abs(x-y)&gt;thresh]\nplt.scatter([x for x,y in outside],[y for x,y in outside],marker='.')\nlim = max(base_xtal_rms+mod_xtal_rms)\nplt.plot((0,lim),(0,lim),'k')\nplt.plot((0,lim),(thresh,lim+thresh),ls='dashed',color='grey')\nplt.plot((thresh,lim),(0,lim-thresh),ls='dashed',color='grey');\nplt.xlabel('optimizerForceTol=0.001');\nplt.ylabel('optimizerForceTol=0.0135');\nplt.title('platinum 100 confs/mol, RMSD to xtal conf');\n\n\n\n\n\n\n\n\nOnce again, it looks like we haven’t negatively impacted our ability to reproduce crystal conformers in any serious way.\nLet’s look at the \\(\\Delta\\) RMSD differences directly:\n\nd = np.array(mod_xtal_rms)-np.array(base_xtal_rms)\nplt.hist(d,bins=20);\nplt.xlabel('RMSD(forceTol=0.0135)-RMSD(forceTol=0.001)')\nplt.title('platinum 100 confs/mol');\n\n\n\n\n\n\n\n\nZoom in:\n\nd = np.array(mod_xtal_rms)-np.array(base_xtal_rms)\nplt.hist([x for x in d if abs(x)&lt;=0.5],bins=20);\nplt.xlabel('RMSD(forceTol=0.0135)-RMSD(forceTol=0.001)')\nplt.title('platinum 100 confs/mol');\n\n\n\n\n\n\n\n\n\n\nTFDs\n\ninf = gzip.open('../data/platinum_dataset_2017_01.sdf.gz')\nbase_xtal_tfd = []\nmod_xtal_tfd = []\nwith gzip.open('./results/platinum_forcetol_0.001.random_coords.100confs.pkl.gz') as basef,\\\n     gzip.open('./results/platinum_forcetol_0.0135.random_coords.100confs.pkl.gz') as modf:\n    for i,m in enumerate(Chem.ForwardSDMolSupplier(inf,removeHs=False)):\n        if not m:\n            continue\n        if m.GetNumHeavyAtoms()&gt;50:\n            continue\n        m = Chem.RemoveHs(m)\n        try:\n            m1 = Chem.RemoveHs(pickle.load(basef))\n            m2 = Chem.RemoveHs(pickle.load(modf))\n        except EOFError:\n            break\n        base_best = 1000\n        mod_best = 1000\n        base_best = GetBestTFDBetweenMolecules(m,m1)\n        mod_best = GetBestTFDBetweenMolecules(m,m2)\n        if base_best&lt;1000 and mod_best&lt;1000:\n            base_xtal_tfd.append(base_best)\n            mod_xtal_tfd.append(mod_best)\n        if not (i+1)%500:\n            print(f\"Done {i+1}\")\n\nDone 500\nDone 1000\nDone 1500\nDone 2000\nDone 2500\nDone 3000\nDone 3500\nDone 4000\nDone 4500\n\n\n\nthresh = 0.2\nplt.rcParams['figure.figsize']=(7,7)\nplt.scatter(base_xtal_tfd,mod_xtal_tfd);\nlim = max(base_xtal_tfd+mod_xtal_tfd)\nplt.plot((0,lim),(0,lim),'k')\nplt.plot((0,lim),(thresh,lim+thresh),ls='dashed',color='grey')\nplt.plot((thresh,lim),(0,lim-thresh),ls='dashed',color='grey');\nplt.xlabel('optimizerForceTol=0.001');\nplt.ylabel('optimizerForceTol=0.0135');\nplt.title('platinum 100 confs/mol, TFD to xtal conf');\n\n\n\n\n\n\n\n\n\nthresh = 0.2\nplt.rcParams['figure.figsize']=(7,7)\nplt.hexbin(base_xtal_tfd,mod_xtal_tfd,cmap='Blues',bins='log');\nlim = max(base_xtal_tfd+mod_xtal_tfd)\nplt.plot((0,lim),(0,lim),'k')\nplt.plot((0,lim),(thresh,lim+thresh),ls='dashed',color='grey')\nplt.plot((thresh,lim),(0,lim-thresh),ls='dashed',color='grey');\nplt.xlabel('optimizerForceTol=0.001');\nplt.ylabel('optimizerForceTol=0.0135');\nplt.title('platinum 100 confs/mol, TFD to xtal conf');\n\n\n\n\n\n\n\n\nLook at the histogram of the changes in TFD between the two methods\n\nd = np.array(mod_xtal_tfd)-np.array(base_xtal_tfd)\nplt.hist(d,bins=20);\nplt.xlabel('TFD(forceTol=0.0135)-TFD(forceTol=0.001)')\nplt.title('platinum 100 confs/mol');\n\n\n\n\n\n\n\n\nZoom in:\n\nd = np.array(mod_xtal_tfd)-np.array(base_xtal_tfd)\nplt.hist([x for x in d if abs(x)&lt;0.1],bins=20);\nplt.xlabel('TFD(forceTol=0.0135)-TFD(forceTol=0.001)')\nplt.title('platinum 100 confs/mol');\n\n\n\n\n\n\n\n\nAgain, there are no major changes seen here."
  },
  {
    "objectID": "posts/2023-05-07-binary-molecules-and-the-cartridge.html",
    "href": "posts/2023-05-07-binary-molecules-and-the-cartridge.html",
    "title": "Binary molecules and the cartridge",
    "section": "",
    "text": "Updated 07.05.2023 This is an updated version of a post from 2020 with a few revisions.\nI had a couple of online conversations this week about working with the PostgreSQL cartridge from Python and sending molecules back and forth between Python and the database. Here’s a quick blogpost on that topic.\nfrom rdkit import Chem\nimport gzip\nimport time\nimport psycopg2\nimport json\nimport rdkit\nprint(rdkit.__version__)\n\n2023.03.1\nThe dataset we’ll use here is a set of molecules+activity data from ChEMBL26. We take all the measured Ki values that are less than 1nM.\nHere’s how I constructed the dataset\nThe timing data in this post were generated on a standard desktop PC from 2022 (Dell XPS, 16 core i9 3.2 GHz CPU, 64GB RAM) running Ubuntu 22.04. I used the Ubuntu install of PostgreSQL 14 and didn’t do any tuning of the database configuration."
  },
  {
    "objectID": "posts/2023-05-07-binary-molecules-and-the-cartridge.html#sending-binary-molecules-to-the-database",
    "href": "posts/2023-05-07-binary-molecules-and-the-cartridge.html#sending-binary-molecules-to-the-database",
    "title": "Binary molecules and the cartridge",
    "section": "Sending binary molecules to the database",
    "text": "Sending binary molecules to the database\nIt seems silly to do the work of processing the mol blocks in the database a second time. Fortunately, we can add the molecules to the database in RDKit’s binary form:\n\nconn = psycopg2.connect(\"dbname=demodb host=localhost\")\ncurs = conn.cursor()\ncurs.execute('drop table if exists mols')\ncurs.execute('create table mols (chembl_id text,m mol)')\nt1 = time.time()\ncurs.executemany('insert into mols values (%s,mol_from_pkl(%s))',[(x,y.ToBinary(),) for x,y in zip(nms,ms)])\nconn.commit()\nt2 = time.time()\nprint(f\" that took {t2-t1 :.2f} seconds\")\n\n that took 2.65 seconds"
  },
  {
    "objectID": "posts/2023-05-07-binary-molecules-and-the-cartridge.html#retrieving-binary-molecules-from-the-database",
    "href": "posts/2023-05-07-binary-molecules-and-the-cartridge.html#retrieving-binary-molecules-from-the-database",
    "title": "Binary molecules and the cartridge",
    "section": "Retrieving binary molecules from the database",
    "text": "Retrieving binary molecules from the database\nWhat about going the other way: we have binary molecules in the database and want to pull them back into Python to work with them?\n\nconn = psycopg2.connect(\"dbname=demodb host=localhost\")\ncurs = conn.cursor()\nt1 = time.time()\ncurs.execute('select chembl_id,mol_to_pkl(m) from mols')\ntms = [Chem.Mol(x[1].tobytes()) for x in curs.fetchall()]\nt2 = time.time()\nprint(f\" that took {t2-t1 :.2f} seconds\")\n\n that took 1.72 seconds\n\n\nWe can, of course, do searches in the database and then pull just the molecules from the search results into Python:\n\nconn = psycopg2.connect(\"dbname=demodb host=localhost\")\ncurs = conn.cursor()\nt1 = time.time()\ncurs.execute('select chembl_id,mol_to_pkl(m) from mols where m@&gt;qmol_from_smarts(%s)',('c1ncn[o,n]1',))\ntms = [Chem.Mol(x[1].tobytes()) for x in curs.fetchall()]\nt2 = time.time()\nprint(f\" that took {t2-t1 :.2f} seconds and returned {len(tms)} results\")\n\n that took 0.42 seconds and returned 993 results"
  },
  {
    "objectID": "posts/2023-03-26-fingerprint-size-and-similarity-searching1.html",
    "href": "posts/2023-03-26-fingerprint-size-and-similarity-searching1.html",
    "title": "Doing similarity searches with highly folded fingerprints",
    "section": "",
    "text": "Note this is a revised version of an earlier post\nThis one has been on the back burner for quite a while. When Pat Lorton was working on the initial version of gpusimilarity and his presentation for the 2018 RDKit UGM he dealt with the limited amount of memory available on GPUs by loading highly folded fingerprints into the GPU, retrieving extra compounds for a TopN query, and then rescoring those compounds using full-sized fingerprints. I wanted to go back and look at the same problem again from the perspective of a threshold similarity query - i.e. “give me all of the results that have a similarity above my threshold” - instead of the TopN query - i.e. “give me the N nearest neighbors in the database” - Pat was looking at.\nThis blog post starts that. I’m going to take a more general approach and look at the impact of fingerprint size on search results and performance at various threshold levels. I’m not going to actually use gpusimilarity in this particular post, but hopefully I will get to that in the future.\nThe previous post included performance data for using the different fingerprint sizes do do similarity searches in the RDKit PostgreSQL cartridge and with FPSim2. I’ve not reproduced that here, but I plan to pick that up in a followup post.\nThe TL;DR summary: When working with the RDKit’s Morgan2 fingerprint (MFP2), I think it’s reasonable to fold the fingerprints down to 128 bits, particularly when using higher similarity thresholds. This balances the number of hits missed against the number of extra hits retrieved and can result in significant performance improvements when using a specialized search tool like FPSim2. The smaller fingerprints - 128 bit fingerprints are 1/16th the size of 2048 bit fingerprints - are faster to read from storage and allow us to fit considerably more fingerprints in the same amount of memory, which is particularly helpful with GPUs.\nfrom rdkit import Chem\nfrom rdkit.Chem import rdMolDescriptors\nfrom rdkit.Chem import rdFingerprintGenerator\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit.Chem import Draw\nfrom rdkit import RDLogger\nfrom rdkit import rdBase\nfrom rdkit import DataStructs\nimport pickle\nimport time\nimport gzip\nprint(rdBase.rdkitVersion)\nprint(time.asctime())\n%pylab inline\nplt.style.use('tableau-colorblind10')\n\n2022.09.5\nSun Mar 26 15:51:58 2023\n%pylab is deprecated, use %matplotlib inline and import the required libraries.\nPopulating the interactive namespace from numpy and matplotlib\n\n\n/home/glandrum/miniconda3/envs/rdkit_blog/lib/python3.10/site-packages/IPython/core/magics/pylab.py:162: UserWarning: pylab import has clobbered these variables: ['random', 'inf', 'indices']\n`%matplotlib` prevents importing * from pylab and numpy\n  warn(\"pylab import has clobbered these variables: %s\"  % clobbered +"
  },
  {
    "objectID": "posts/2023-03-26-fingerprint-size-and-similarity-searching1.html#comparing-the-the-number-of-neighbors-retrieved",
    "href": "posts/2023-03-26-fingerprint-size-and-similarity-searching1.html#comparing-the-the-number-of-neighbors-retrieved",
    "title": "Doing similarity searches with highly folded fingerprints",
    "section": "Comparing the the number of neighbors retrieved",
    "text": "Comparing the the number of neighbors retrieved\nTo get a sense of what the data look like, pick a couple of threshold values and do a direct comparison of the number of neighbors found at the other bit counts with the number found at 4096 bits.\n\nsthreshs = list(sorted(thresholds))\nsthreshs.reverse()\nnCols = 2\nnRows = len(sthreshs)//nCols\nif len(sthreshs)%nCols: \n    nRows+=1\n\nfigsize(8*nCols,6*nRows)\n\nbcounts = (2048,1024,512,256,128,64)\nfor i,thresh in enumerate(sthreshs):\n    subplot(nRows,nCols,i+1)\n    hist([results[x][thresh] for x in bcounts],log='true', label=[str(x) for x in bcounts]);\n    legend();\n    title(f'number of neighbors, thresh={thresh:.1f}');\n\n\n\n\n\n\n\n\nSince that is dominated by the 64 bit results, stop showing them.\n\nsthreshs = list(sorted(thresholds))\nsthreshs.reverse()\nnCols = 2\nnRows = len(sthreshs)//nCols\nif len(sthreshs)%nCols: \n    nRows+=1\n\nfigsize(8*nCols,6*nRows)\n\nbcounts = (2048,1024,512,256,128,)\nfor i,thresh in enumerate(sthreshs):\n    subplot(nRows,nCols,i+1)\n    hist([results[x][thresh] for x in bcounts],log='true', label=[str(x) for x in bcounts]);\n    legend();\n    title(f'number of neighbors, thresh={thresh:.1f}');\n\n\n\n\n\n\n\n\nWe can see here that the more folded fingerprints tend to yield more neighors at a given threshold. This makes sense given what we saw above, which is that similarity values tend to be higher as fingerprints are folded.\nIt’s also clear, though not super surprising, that the 64 bit fingerprint isn’t going to be useful with low similarity thresholds: we just get way too many extra hits."
  },
  {
    "objectID": "posts/2023-03-26-fingerprint-size-and-similarity-searching1.html#how-many-hits-do-we-miss",
    "href": "posts/2023-03-26-fingerprint-size-and-similarity-searching1.html#how-many-hits-do-we-miss",
    "title": "Doing similarity searches with highly folded fingerprints",
    "section": "How many hits do we miss?",
    "text": "How many hits do we miss?\nThis does not show the overwhelming number of examples where no hits are missed.\n\nsthreshs = list(sorted(thresholds))\nsthreshs.reverse()\nnCols = 2\nnRows = len(sthreshs)//nCols\nif len(sthreshs)%nCols: \n    nRows+=1\n\nfigsize(8*nCols,6*nRows)\n\nbcounts = (2048,1024,512,256,128,64)\nfor i,thresh in enumerate(sthreshs):\n    subplot(nRows,nCols,i+1)\n    hist([[y for y in missed[x][thresh] if y&gt;0] for x in bcounts],log='true', label=[str(x) for x in bcounts]);\n    legend();\n    title(f'number of neighbors missed, thresh={thresh:.1f}');"
  },
  {
    "objectID": "posts/2023-03-26-fingerprint-size-and-similarity-searching1.html#efficiency-look-at-the-number-of-extra-hits",
    "href": "posts/2023-03-26-fingerprint-size-and-similarity-searching1.html#efficiency-look-at-the-number-of-extra-hits",
    "title": "Doing similarity searches with highly folded fingerprints",
    "section": "Efficiency, look at the number of extra hits",
    "text": "Efficiency, look at the number of extra hits\nWe don’t bother including 64 bits in here since it’s clear that from the above that too many results are returned.\n\nsthreshs = list(sorted(thresholds))\nsthreshs.reverse()\nnCols = 2\nnRows = len(sthreshs)//nCols\nif len(sthreshs)%nCols: \n    nRows+=1\n\nfigsize(8*nCols,6*nRows)\nbcounts = (2048,1024,512,256,128,)\nfor i,thresh in enumerate(sthreshs):\n    subplot(nRows,nCols,i+1)\n    hist([[y-results[4096][thresh][i] for i,y in enumerate(results[x][thresh])] for x in bcounts],log='true', \n         label=[str(x) for x in bcounts]);\n    legend();\n    title(f'number of extra hits, thresh={thresh:.1f}');\n\n\n\n\n\n\n\n\nThere are a small number of instances at higher thresholds where we don’t find all the hits, we saw this above."
  },
  {
    "objectID": "posts/2024-05-31-scaffold-splits-and-murcko-scaffolds1.html",
    "href": "posts/2024-05-31-scaffold-splits-and-murcko-scaffolds1.html",
    "title": "The problem(s) with scaffold splits, part 1",
    "section": "",
    "text": "An unfortunately popular strategy for validating machine-learning models is to do a “scaffold split” of the data. The idea is behind the scaffold split is to identify chemical series/scaffolds in the data set and to move all molecules sharing one or more scaffolds to the test set. The intent here is to see how well a model performs on regions of chemical space which are different from those it was trained on. Scaffold splitting is one of a variety of validation methods proposed to provide a more “realistic” assessment of model performance than random (or bootstrap) splits do. This seems, in principle, like a great idea, particularly for models intended for lead-finding or lead-optimization, where one typically has data for a number of scaffolds which, hopefully, are active (or inactive) for similar reasons. Scaffold splitting, with good scaffold definitions, can also be quite useful in identify systematic problems in global models, like those used for ADME or safety endpoints.\nThe problem with doing a realistic scaffold split is that the definition of “scaffold” is specific to the particular data set (or project). A 2020 paper by Franziska Kruger and a couple of former colleagues at Novartis looked at the challenges here and published a tool which provides suggestions for what the chemical series might be in a particular data set: https://doi.org/10.1021/acs.jcim.0c00204. As an aside, a followup paper by Maximilian Beckers and the same two former colleagues applied this series-finding approach to an interesting historical analysis of med-chem project data: https://doi.org/10.1021/acs.jcim.2c00785\nGiven that Franziska’s method is time-consuming and cannot be fully automated, the standard approach in the literature for doing a scaffold split is to use Bemis-Murcko scaffolds, commonly just called “Murcko scaffolds” (https://doi.org/10.1021/jm9602928). Briefly, the algorithm behind these scaffolds is to iteratively remove all degree-one atoms from a molecule, leaving the “central” set of rings and the atoms which connect them.\n\nAside: The RDKit implementation of “Murcko scaffolds” uses a slight variation of the original algorithm. Degree-one atoms with double bonds to atoms in the scaffold are also preserved. The logic behind this variation is that these atoms have a very strong impact on the shape and properties of the scaffold, so they should be part of the scaffold.\n\nI think that doing a Murcko decomposition is a useful exercise for organizing a collection of molecules, particularly as part of either a scaffold network analysis or the type of scaffold-finding algorithm in Franziska’s paper, but that it is poorly suited for use in either actually identifying the type of scaffold that medicinal chemists use to organize and reason about their data or for splitting data sets for validating machine learning models.\nThis was turning into a mega-post, so I’m going to split it into two. In this first one I will look of the number of “Murcko scaffolds” found in medicinal chemistry papers. This is done by looking at the compounds tested in ChEMBL33 Ki assays with between 20 and 100 unique compounds which came from a document with a DOI. I’d expect a typical med chem assay (these come from a single paper) to have compounds for a small number of chemical series along with a few reference compounds from the literature. And then in a second post, coming later, I will do an analysis of the similarity characteristics of leave-scaffold-out splits for a random selection of the Ki assays mentioned above using the modified spatial statistics we used in the SIMPD paper (https://doi.org/10.1186/s13321-023-00787-9).\n\n\nLooking across 7148 Ki assays, the median number of scaffolds per assay is 12. The median ratio of the number of scaffolds to the number of compounds in an assay is 0.4; the number of scaffolds is 40% of the number of compounds tested in an assay (= the compounds from a single med chem paper). This doesn’t match my expectations at all, nor does it match what is actually observed in the five random papers I selected to spot check.\n\nFinal Note: The analysis in this post is focused on the type of data sets that commonly show up during lead finding or lead optimization. A Murcko scaffold analysis likely to be less wrong when partitioning datasets of diverse compounds that don’t contain SAR series. Of course, in these cases a standard neighbor split works just as well.\n\n\nimport numpy as np\n\nfrom rdkit import Chem\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem import rdFMCS\nDraw.SetComicMode(IPythonConsole.drawOptions)\n%load_ext sql\n\n%matplotlib inline\nimport matplotlib.pyplot as plt\nplt.style.use('tableau-colorblind10')\nplt.rcParams['font.size'] = '16'\n\nThe sql extension is already loaded. To reload it, use:\n  %reload_ext sql"
  },
  {
    "objectID": "posts/2024-05-31-scaffold-splits-and-murcko-scaffolds1.html#tldr",
    "href": "posts/2024-05-31-scaffold-splits-and-murcko-scaffolds1.html#tldr",
    "title": "The problem(s) with scaffold splits, part 1",
    "section": "",
    "text": "Looking across 7148 Ki assays, the median number of scaffolds per assay is 12. The median ratio of the number of scaffolds to the number of compounds in an assay is 0.4; the number of scaffolds is 40% of the number of compounds tested in an assay (= the compounds from a single med chem paper). This doesn’t match my expectations at all, nor does it match what is actually observed in the five random papers I selected to spot check.\n\nFinal Note: The analysis in this post is focused on the type of data sets that commonly show up during lead finding or lead optimization. A Murcko scaffold analysis likely to be less wrong when partitioning datasets of diverse compounds that don’t contain SAR series. Of course, in these cases a standard neighbor split works just as well.\n\n\nimport numpy as np\n\nfrom rdkit import Chem\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem import rdFMCS\nDraw.SetComicMode(IPythonConsole.drawOptions)\n%load_ext sql\n\n%matplotlib inline\nimport matplotlib.pyplot as plt\nplt.style.use('tableau-colorblind10')\nplt.rcParams['font.size'] = '16'\n\nThe sql extension is already loaded. To reload it, use:\n  %reload_ext sql"
  },
  {
    "objectID": "posts/2024-05-14-similarity-and-centrality.html",
    "href": "posts/2024-05-14-similarity-and-centrality.html",
    "title": "The impact of single-atom changes on similarity",
    "section": "",
    "text": "Impact of single-atom changes on similarity\nLast week I got curious about the impact single atoms make on the similarity between two molecules. I was initially wondering whether small differences in the “core” of two molecules have a disproportionate influence on the similarity between them. This blog post came from me trying to answer that question.\nAlong the way I discovered that there’s more to this topic than I thought, so the blog post is longer than planned. It still feels like there’s some exploration to do, so I may still end up doing a follow up.\nHere’s a summary of the analysis of the average Tanimoto similarity of a molecule to itself with a single atom changed to a dummy atom. The analysis was done across 5000 ChEMBL molecules.\n\n\n\nFP\nmean(SD)\n90%\n95%\n\n\n\n\nMFP3\n0.68(0.12)\n0.53\n0.48\n\n\nMFP2\n0.75(0.09)\n0.63\n0.59\n\n\nMFP1\n0.83(0.06)\n0.75\n0.72\n\n\nRDK7\n0.76(0.15)\n0.54\n0.47\n\n\nRDK5\n0.74(0.14)\n0.53\n0.46\n\n\nTT\n0.78(0.12)\n0.61\n0.55\n\n\nAP\n0.88(0.05)\n0.83\n0.81\n\n\n\nWe can think about these values as thresholds for retrieving extremely similar molecules: using the RDK5 fingerprint (RDKit fingerprint with a path length of 5) we need to use a Tanimoto similarity threshold of 0.46 to be 95% certain of retrieving molecules that have the same connectivity and that only differ in the identity of a single atom.\nAs for my original question about centrality: it’s not how central an atom is that matters, but how many atoms are close to it. We can see this in the similarity map showing the contributions of individual atoms to the similarity of one of the test molecules to itself using the RDK5 fingerprint:\n\n\n\nimage.png\n\n\n\nfrom rdkit import Chem\nfrom rdkit.Chem import rdFingerprintGenerator\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit.Chem.MolStandardize import rdMolStandardize\nfrom rdkit.Chem import Draw\nfrom rdkit import DataStructs\nfrom rdkit import RDLogger\nimport numpy as np\n\n\nfrom matplotlib import pyplot as plt\nplt.style.use('tableau-colorblind10')\nplt.rcParams['font.size'] = '16'\n\n%matplotlib inline\n\nimport rdkit\nprint(rdkit.__version__)\n\n2024.03.2\n\n\nLet’s start with one of my favority example molecules, the bioactive part of esomeprazole:\n\nIPythonConsole.molSize = 450,350\nIPythonConsole.drawOptions.addAtomIndices = True\nesomeprazole = Chem.MolFromSmiles('COc1ccc2[nH]c(nc2c1)[S@@+]([O-])Cc3ncc(C)c(OC)c3C')\nesomeprazole\n\n\n\n\n\n\n\n\nDefine a function which changes each of the atoms to a dummy and then compares the similarity of that to the unperturbed molecule.\nWe track the similarity between the modified and original molecules together with the number of atoms within a target radius of the modified atom (this second piece of info will be used at the end of the blog post).\n\ndef get_modified_sims(mol,maxRadius,fpFunc):\n    basefp = fpFunc(mol)\n    dm = Chem.GetDistanceMatrix(mol)\n    res = []\n    for aidx in range(mol.GetNumAtoms()):\n        nm = Chem.Mol(mol)\n        nm.GetAtomWithIdx(aidx).SetAtomicNum(0)\n        count = sum(dm[aidx]&lt;=maxRadius)\n        res.append((count,DataStructs.TanimotoSimilarity(basefp,fpFunc(nm))))\n    return res\n\nNow run that for esomeprazole using Morgan fingerprints with three different radius values.\nWe do the analysis for both count-based and bit-based fingerprints\n\nfrom collections import defaultdict\nres = defaultdict(lambda : defaultdict(list))\n\nfor radius in (1,2,3):\n    fpg = rdFingerprintGenerator.GetMorganGenerator(radius=radius,fpSize=2048)\n    res['counts'][radius].extend(get_modified_sims(esomeprazole,radius,fpg.GetCountFingerprint))\n    res['bits'][radius].extend(get_modified_sims(esomeprazole,radius,fpg.GetFingerprint))\n    \n\nAt each radius value, there’s one entry in res for each atom in the molecule:\n\nprint(esomeprazole.GetNumAtoms(),len(res['counts'][3]))\n\n24 24\n\n\nHere are the values:\n\nres['counts'][3]\n\n[(5, 0.8260869565217391),\n (7, 0.7319587628865979),\n (9, 0.6470588235294118),\n (9, 0.68),\n (10, 0.6310679611650486),\n (10, 0.5849056603773585),\n (11, 0.6),\n (11, 0.5849056603773585),\n (11, 0.6),\n (11, 0.5700934579439252),\n (11, 0.6153846153846154),\n (11, 0.6),\n (7, 0.75),\n (12, 0.6153846153846154),\n (12, 0.6),\n (10, 0.6470588235294118),\n (9, 0.68),\n (10, 0.6633663366336634),\n (7, 0.7684210526315789),\n (11, 0.6470588235294118),\n (9, 0.7319587628865979),\n (5, 0.8260869565217391),\n (12, 0.6153846153846154),\n (8, 0.75)]\n\n\nInterpreting the above: - atom 0 of esomeprazole has 5 atoms (including itself) within radius 2. The count-based fingerprint calculated when setting atom 0 to be a dummy has a similarity of 0.826 to the unmodified fingerprint. - atom 22 (the second to last atom) has 12 atoms (including itself) within radius 2. The count-based fingerprint calculated when setting atom 22 to be a dummy has a similarity of 0.615 to the unmodified fingerprint.\nNow let’s do that perturbation on a bunch of molecules and see what the statistics look like. We’ll use 5000 molecules from this older blog post\n\nwith open('../data/BLSets_actives.txt','r') as inf:\n    d = [x.split('\\t')[0] for x in inf.readlines()]\n    d.pop(0) # title line\nimport random\nrandom.seed(0xf00d)\nrandom.shuffle(d)\nd = d[:5000]\n\nRDLogger.DisableLog('rdApp.info')\nmols = []\nfor smi in d:\n    mol = Chem.MolFromSmiles(smi)\n    mols.append(mol)\nrdMolStandardize.ChargeParentInPlace(mols,numThreads=4)\n    \n\nThe first few molecules, just to get a sense of what we’re dealing with here.\n\nIPythonConsole.drawOptions.addAtomIndices = False\nDraw.MolsToGridImage(mols[:12],molsPerRow=4)\n\n\n\n\n\n\n\n\nHistogram of molecule sizes:\n\nnAts = [x.GetNumHeavyAtoms() for x in mols]\nplt.figure(figsize=(6,6))\nplt.hist(nAts,bins=20);\nplt.xlabel('Num Heavy Atoms');\n\n\n\n\n\n\n\n\nThere’s a reasonable amount of computation to be done here, so we’ll use ipyparallel\n\ntry:\n    import ipyparallel as ipp\n    rc = ipp.Client()\n    dview = rc[:]\n    dview.execute('from rdkit import Chem')\n    dview.execute('from rdkit.Chem import rdFingerprintGenerator')\n    dview.execute('from rdkit import DataStructs')\nexcept:\n    print(\"could not use ipyparallel\")\n    dview = None\n\n\ndef get_modified_sims2(mol,maxRadius,fpgFunc,method):\n    fpg = fpgFunc()\n    fpFunc = getattr(fpg,method)\n    basefp = fpFunc(mol)\n    dm = Chem.GetDistanceMatrix(mol)\n    res = []\n    for aidx in range(mol.GetNumAtoms()):\n        nm = Chem.Mol(mol)\n        nm.GetAtomWithIdx(aidx).SetAtomicNum(0)\n        count = sum(dm[aidx]&lt;=maxRadius)\n        res.append((count,DataStructs.TanimotoSimilarity(basefp,fpFunc(nm))))\n    return res\n\nRun Morgan fingerprints with radius 1, 2, and 3.\n\naccum = defaultdict(lambda : defaultdict(list))\n\nfor radius in (1,2,3):\n    fpg = lambda r=radius:rdFingerprintGenerator.GetMorganGenerator(radius=r,fpSize=2048)\n    lres = dview.map_sync(lambda x,r=radius,y=get_modified_sims2,\n                          z=fpg:y(x,r,z,'GetCountFingerprint'),mols)\n    for entry in lres:\n        accum['counts'][radius].extend(entry)\n    lres = dview.map_sync(lambda x,r=radius,y=get_modified_sims2,\n                          z=fpg:y(x,r,z,'GetFingerprint'),mols)\n    for entry in lres:\n        accum['bits'][radius].extend(entry)\n\nRun RDKit fingerprints with max path length 5, 6, and 7\n\nrdkit_accum = defaultdict(lambda : defaultdict(list))\n\nfor radius in (5,6,7):\n    fpg = lambda r=radius:rdFingerprintGenerator.GetRDKitFPGenerator(maxPath=r,fpSize=2048)\n    lres = dview.map_sync(lambda x,r=radius,y=get_modified_sims2,\n                          z=fpg:y(x,r,z,'GetCountFingerprint'),mols)\n    for entry in lres:\n        rdkit_accum['counts'][radius].extend(entry)\n    lres = dview.map_sync(lambda x,r=radius,y=get_modified_sims2,\n                          z=fpg:y(x,r,z,'GetFingerprint'),mols)\n    for entry in lres:\n        rdkit_accum['bits'][radius].extend(entry)\n\nSame analysis for topological torsions and atom pairs. For these the extra “radius” argument does not really mean anything\n\ntt_accum = defaultdict(lambda : defaultdict(list))\n\nfor radius in (3,):\n    fpg = lambda r=radius:rdFingerprintGenerator.GetTopologicalTorsionGenerator(fpSize=4096)\n    lres = dview.map_sync(lambda x,r=radius,y=get_modified_sims2,\n                          z=fpg:y(x,r,z,'GetCountFingerprint'),mols)\n    for entry in lres:\n        tt_accum['counts'][radius].extend(entry)\n    lres = dview.map_sync(lambda x,r=radius,y=get_modified_sims2,\n                          z=fpg:y(x,r,z,'GetFingerprint'),mols)\n    for entry in lres:\n        tt_accum['bits'][radius].extend(entry)\n\n\nap_accum = defaultdict(lambda : defaultdict(list))\n\nfor radius in (3,):\n    fpg = lambda r=radius:rdFingerprintGenerator.GetAtomPairGenerator(fpSize=4096)\n    lres = dview.map_sync(lambda x,r=radius,y=get_modified_sims2,\n                          z=fpg:y(x,r,z,'GetCountFingerprint'),mols)\n    for entry in lres:\n        ap_accum['counts'][radius].extend(entry)\n    lres = dview.map_sync(lambda x,r=radius,y=get_modified_sims2,\n                          z=fpg:y(x,r,z,'GetFingerprint'),mols)\n    for entry in lres:\n        ap_accum['bits'][radius].extend(entry)\n\nSave all of those results for later analysis\n\nimport copy\ndef to_dict(dd):\n    if not isinstance(dd,defaultdict):\n        return copy.deepcopy(dd)\n    res = {}\n    for k,v in dd.items():\n        res[k] = to_dict(v)\n    return res\n\n\nimport pickle\nimport gzip\nwith gzip.open('./results/fp_perturbation.pkl.gz','wb+') as outf:\n    pickle.dump((to_dict(accum),to_dict(rdkit_accum),to_dict(ap_accum),to_dict(tt_accum)),outf)\n\n\n!chmod gou-w ./results/fp_perturbation.pkl.gz\n\nLoad the saved data:\n\nfrom collections import defaultdict\nimport pickle\nimport gzip\nwith gzip.open('./results/fp_perturbation.pkl.gz','rb') as inf:\n    accum,rdkit_accum,ap_accum,tt_accum = pickle.load(inf)\n\nNow let’s look at the Morgan and RDKit results:\n\nrs = (3,2,1)\ntacc = accum\ntitl='Morgan'\n\nfor which in ('counts','bits'):\n    print(f'---- {which} ----')\n    for rad in rs:\n        yps = [y for x,y in tacc[which][rad]]\n        qs = np.quantile(yps,[0.1,0.05])\n        print(f'  r={rad} mean={np.mean(yps):.2f} stddev={np.std(yps):.2f} median={np.median(yps):.2f} 90%={qs[0]:.2f}, 95%:{qs[1]:.2f}')\n\nplt.figure(figsize=(12,6))\nplt.subplot(1,2,1)\n\nplt.hist([[y for x,y in tacc['counts'][rad]] for rad in rs],\n         label=[f'counts r={rad}' for rad in rs],bins=20);\nplt.xlabel('similarity')\nplt.legend();\nplt.title(titl)\nplt.xlim(0,1)\nplt.subplot(1,2,2)\nplt.hist([[y for x,y in tacc['bits'][rad]] for rad in rs],\n         label=[f'bits r={rad}' for rad in rs],bins=20);\nplt.xlabel('similarity')\nplt.legend();\nplt.xlim(0,1)\nplt.tight_layout()\n\n---- counts ----\n  r=3 mean=0.74 stddev=0.10 median=0.74 90%=0.61, 95%:0.56\n  r=2 mean=0.80 stddev=0.08 median=0.80 90%=0.71, 95%:0.67\n  r=1 mean=0.87 stddev=0.05 median=0.88 90%=0.82, 95%:0.80\n---- bits ----\n  r=3 mean=0.68 stddev=0.12 median=0.69 90%=0.53, 95%:0.48\n  r=2 mean=0.75 stddev=0.09 median=0.76 90%=0.63, 95%:0.59\n  r=1 mean=0.83 stddev=0.06 median=0.84 90%=0.75, 95%:0.72\n\n\n\n\n\n\n\n\n\nObservations here: - The perturbations have a larger effect when the radius is larger. This makes sense because more atoms “feel” the changed atom with a larger radius. - I’m surprised by how large the overall impact on similarity is for these single atom-changes. With bit-based radius 2 or 3 fingerprints (the most commonly used, I believe), the mean similarities are 0.75 or 0.68 and you have to go all the way down to a similarity level of 0.59 or 0.48 to get 95% of the molecules. Those values are 0.56 and 0.67 with count-based fingerprints.\n\nrs = (7,6,5)\ntacc = rdkit_accum\ntitl='RDKit'\n\nfor which in ('counts','bits'):\n    print(f'---- {which} ----')\n    for rad in rs:\n        yps = [y for x,y in tacc[which][rad]]\n        qs = np.quantile(yps,[0.1,0.05])\n        print(f'  maxp={rad} mean={np.mean(yps):.2f} stddev={np.std(yps):.2f} median={np.median(yps):.2f} 90%={qs[0]:.2f}, 95%:{qs[1]:.2f}')\n\n\nplt.figure(figsize=(12,6))\nplt.subplot(1,2,1)\n\nplt.hist([[y for x,y in tacc['counts'][rad]] for rad in rs],\n         label=[f'counts maxp={rad}' for rad in rs],bins=20);\nplt.xlabel('similarity')\nplt.legend();\nplt.title(titl)\nplt.xlim(0,1)\nplt.subplot(1,2,2)\nplt.hist([[y for x,y in tacc['bits'][rad]] for rad in rs],\n         label=[f'bits maxp={rad}' for rad in rs],bins=20);\nplt.xlabel('similarity')\nplt.xlim(0,1)\nplt.legend();\nplt.tight_layout()\n\n---- counts ----\n  maxp=7 mean=0.71 stddev=0.17 median=0.73 90%=0.47, 95%:0.40\n  maxp=6 mean=0.72 stddev=0.16 median=0.75 90%=0.50, 95%:0.42\n  maxp=5 mean=0.75 stddev=0.14 median=0.77 90%=0.55, 95%:0.48\n---- bits ----\n  maxp=7 mean=0.76 stddev=0.15 median=0.78 90%=0.54, 95%:0.47\n  maxp=6 mean=0.74 stddev=0.15 median=0.76 90%=0.52, 95%:0.45\n  maxp=5 mean=0.74 stddev=0.14 median=0.76 90%=0.53, 95%:0.46\n\n\n\n\n\n\n\n\n\nObservations: - In contrast to the Morgan fingerprints, the changes for the bit-based fingerprints are less than count-based. I assume that this has to do with collisions, the RDKit fingerprints set way more bits than the Morgan fingerprints and have many more collisions. - The distributions here have much longer tails than the Morgan FPs did and are more asymmetric (this is inevitable with the longer tails).\nAtom pairs and topological torsions;\n\nplt.figure(figsize=(12,6))\nplt.subplot(1,2,1)\n\nfor which in ('counts','bits'):\n    print(f'---- {which} ----')\n    yps = [y for x,y in tt_accum[which][3]]\n    qs = np.quantile(yps,[0.1,0.05])\n    print(f'  TT mean={np.mean(yps):.2f} stddev={np.std(yps):.2f} median={np.median(yps):.2f} 90%={qs[0]:.2f}, 95%:{qs[1]:.2f}')\n    yps = [y for x,y in ap_accum[which][3]]\n    qs = np.quantile(yps,[0.1,0.05])\n    print(f'  AP mean={np.mean(yps):.2f} stddev={np.std(yps):.2f} median={np.median(yps):.2f} 90%={qs[0]:.2f}, 95%:{qs[1]:.2f}')\n\n\nplt.hist([[y for x,y in tt_accum['counts'][3]],[y for x,y in ap_accum['counts'][3]]],\n         label=[f'TT counts','AP counts'],bins=20);\nplt.xlabel('similarity')\nplt.xlim(0,1)\nplt.legend();\nplt.subplot(1,2,2)\nplt.hist([[y for x,y in tt_accum['bits'][3]],[y for x,y in ap_accum['bits'][3]]],\n         label=[f'TT bits','AP bits'],bins=20);\nplt.xlabel('similarity')\nplt.xlim(0,1)\nplt.legend();\nplt.tight_layout()\n\n---- counts ----\n  TT mean=0.78 stddev=0.12 median=0.79 90%=0.61, 95%:0.55\n  AP mean=0.88 stddev=0.04 median=0.88 90%=0.83, 95%:0.81\n---- bits ----\n  TT mean=0.78 stddev=0.12 median=0.80 90%=0.61, 95%:0.55\n  AP mean=0.88 stddev=0.05 median=0.89 90%=0.83, 95%:0.81\n\n\n\n\n\n\n\n\n\nObservations: - The AP fingerprints are substantially less sensitive to the single-atom perturbations than any of the fingerprints looked at here. - The differences between counts and bits here are so small because both the TT and AP fingerprints use count simulation by default (this is why I used 4096 bits here instead of the 2048 bits used for the other fingerprints)\n\nAside\nAssuming no collisions, we can directly calculate the atom-pair similarity between a molecule and itself with a single atom perturbed.\nThe Tanimoto similarity between fingerprints A and B is calculated as:\n\\[\\frac{\\|A\\&B\\|}{\\|A\\|+\\|B\\|-\\|A\\&B\\|}\\]\nThe number of atom pair bits for a molecule is:\n\\[\\frac{N (N-1)}{2}\\]\nWhen we perturb one atom, this changes \\(N-1\\) of those bits, so the number of bits in common between the perturbed and unperturbed fingerprints is:\n\\[\\frac{N (N-1)}{2} - (N-1)\\]\nAfter a bit of math, we find that the Tanimoto similarity between the perturbed and unperturbed molecules is:\n\\[\\frac{\\frac{N (N-1)}{2} - (N-1)}{\\frac{N (N-1)}{2} + (N-1)}\\]\nPlot this to demonstrate:\n\nnAts = [x.GetNumHeavyAtoms() for x in mols]\npsims = []\nfor x in nAts:\n    if x&lt;=1:\n        continue\n    psims.extend([(x*(x-1)/2 - (x-1))/(x*(x-1)/2 + (x-1))]*x)\n\nplt.figure(figsize=(6,6))\nplt.hist([[y for x,y in ap_accum['counts'][3]],psims],label=['measured','computed'],bins=20);\nplt.xlim(0,1);\nplt.legend();\n\n\n\n\n\n\n\n\n\n\n\nVisualizing the impact of single-atom changes on similarity\nUsing the RDKit’s similarity maps we can directly visualize how much the single-atom changes affect similarity\n\nfrom rdkit.Chem.Draw import SimilarityMaps\nfrom rdkit.Chem import rdDepictor\nfrom PIL import Image\nfrom io import BytesIO\n\n\ndef draw_similarity_map(m,fpfunc,scale_vals=False,fillIt=True,sigma=0.45,w=500,h=300):\n    basefp = fpfunc(m)\n    diffs = []\n    for aidx in range(m.GetNumAtoms()):\n        nm = Chem.Mol(m)\n        nm.GetAtomWithIdx(aidx).SetAtomicNum(0)\n        nfp = fpfunc(nm)\n        sim = DataStructs.TanimotoSimilarity(basefp,nfp)\n        diffs.append(1.-sim)\n\n\n    diffs = np.array(diffs)\n    rng = max(diffs)-min(diffs)\n    \n    # print out the max and min changes caused by a single atom\n    print(f'  max diff={max(diffs):.2f} min diff={min(diffs):.2f}')\n    \n    # optionally scale the values so that differences are more visible\n    if scale_vals:\n        diffs = (diffs - min(diffs))/rng + 0.1\n        \n        \n    d2d = Draw.MolDraw2DCairo(w,h)\n    d2d.drawOptions().useBWAtomPalette()\n\n    ps = Draw.ContourParams()\n    ps.fillGrid = fillIt\n    ps.gridResolution = 0.1\n    ps.extraGridPadding = 0.5\n\n    m = rdMolDraw2D.PrepareMolForDrawing(m, addChiralHs=False)\n    if not m.GetNumConformers():\n      rdDepictor.Compute2DCoords(m)\n    sigmas = [sigma] * m.GetNumAtoms()\n    locs = []\n    for i in range(m.GetNumAtoms()):\n      p = m.GetConformer().GetAtomPosition(i)\n      locs.append(Geometry.Point2D(p.x, p.y))\n\n    Draw.ContourAndDrawGaussians(d2d, locs, list(diffs), sigmas, nContours=8, params=ps)\n    d2d.drawOptions().clearBackground = False\n    d2d.DrawMolecule(m)\n    \n    d2d.FinishDrawing()\n\n    sio = BytesIO(d2d.GetDrawingText())\n    return Image.open(sio)\n\n\nfpg = rdFingerprintGenerator.GetMorganGenerator(radius=1,fpSize=2048)\ndraw_similarity_map(esomeprazole,fpg.GetCountFingerprint)\n\n  max diff=0.19 min diff=0.12\n\n\n\n\n\n\n\n\n\n\nfpg = rdFingerprintGenerator.GetMorganGenerator(radius=3,fpSize=2048)\ndraw_similarity_map(esomeprazole,fpg.GetCountFingerprint)\n\n  max diff=0.43 min diff=0.17\n\n\n\n\n\n\n\n\n\nWhat about the RDKit fingerprint?\n\nfpg = rdFingerprintGenerator.GetRDKitFPGenerator(maxPath=5,fpSize=2048)\ndraw_similarity_map(esomeprazole,fpg.GetCountFingerprint)\n\n  max diff=0.50 min diff=0.06\n\n\n\n\n\n\n\n\n\nThis makes it look like centrality is important - the changes are largest around the central S atom. That’s a bit misleading, as another molecule will show.\nLet’s look at a molecule from the set that we’ve been working with.\nMorgan fingerprint:\n\nfpg = rdFingerprintGenerator.GetMorganGenerator(radius=3,fpSize=2048)\ndraw_similarity_map(mols[4],fpg.GetFingerprint)\n\n  max diff=0.47 min diff=0.21\n\n\n\n\n\n\n\n\n\nAnd RDKit fingerprint:\n\nfpg = rdFingerprintGenerator.GetRDKitFPGenerator(maxPath=5,fpSize=2048)\ndraw_similarity_map(mols[4],fpg.GetFingerprint)\n\n  max diff=0.60 min diff=0.08\n\n\n\n\n\n\n\n\n\nWith both fingerprints (but particularly the RDKit fingerprint), we can see that the perturbations are largest in the “topologically complex” parts of the molecule: areas with a lot of branching.\n\n\nLooking at \\(\\Delta_{similarity}\\) as a function of the number of atoms in the neighborhood\nMy original idea with this post was to look at how much of an impact “centrality” - how close an atom is to the middle of the molecule - has on similarity. I realized pretty quickly that the important factor for more “local” fingerprints is the number of atoms within the fingerprints “radius”, not necessarily where that atom is in the molecule.\nSo let’s look at that.\n\n\nimport matplotlib.patches as mpatches\nplt.figure(figsize=(12,6))\n\nlabels = []\nfor i,rad in enumerate((3,2,1)):\n    d = defaultdict(list)\n    for r,s in accum['counts'][rad]:\n        d[r-1].append(s)\n    labels.append((mpatches.Patch(color=f'C{i}'), f'r={rad}'))\n    \n    # only keep cases where we have at least 10 examples\n    for k in list(d.keys()):\n        if len(d[k])&lt;10:\n            del d[k]\n        ks = sorted(d.keys())\n\n    ps = [x+i*.25 for x in ks]\n    plt.violinplot([d[k] for k in ks],ps,showmedians=True)\n\n    plt.xlabel('number of atoms in radius')\nplt.ylabel('similarity')\nplt.legend(*zip(*labels))\nplt.title('Morgan counts');\n\n\n\n\n\n\n\n\n\nimport matplotlib.patches as mpatches\nplt.figure(figsize=(12,6))\n\nlabels = []\nfor i,rad in enumerate((5,)):\n    d = defaultdict(list)\n    for r,s in rdkit_accum['counts'][rad]:\n        d[r].append(s)\n    labels.append((mpatches.Patch(color=f'C{i}'), f'maxp={rad}'))\n\n    # only keep cases where we have at least 10 examples\n    for k in list(d.keys()):\n        if len(d[k])&lt;10:\n            del d[k]\n    \n    ks = sorted(d.keys())\n    ps = [x+i*.25 for x in ks]\n    plt.violinplot([d[k] for k in ks],ps,showmedians=True)\n\nplt.xlabel('number of atoms in radius')\nplt.ylabel('similarity')\nplt.legend(*zip(*labels),loc=4)\nplt.title('RDKit counts');\n\n\n\n\n\n\n\n\nThe similarity initially decreases before flattening out at around 20 atoms in the radius."
  },
  {
    "objectID": "posts/2024-01-18-molecules-on-plots.html",
    "href": "posts/2024-01-18-molecules-on-plots.html",
    "title": "Adding molecules to matplotlib plots",
    "section": "",
    "text": "Last week I wanted to generate plots of a bunch of spectra and include pictures of the corresponding molecules on the plots. This turned out to be pretty easy to do with the RDKit and matplotlib and I figured that this might be useful to others, thus this short blog post.\n\nfrom rdkit import Chem\nfrom rdkit.Chem import rdDistGeom\nfrom rdkit.Chem import rdDepictor\nrdDepictor.SetPreferCoordGen(True)\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import IPythonConsole\n\n\nfrom matplotlib.offsetbox import (OffsetImage, AnnotationBbox)\nimport numpy as np\n\nfrom matplotlib import pyplot as plt\nplt.rcParams['font.size'] = '16'\nplt.style.use('tableau-colorblind10')\n%matplotlib inline\n\n\n# structure from https://np-mrd.org/natural_products/NP0000004\ncotinine = Chem.MolFromSmiles('CN1C(CCC1=O)C1=CN=CC=C1')\nrdDepictor.Compute2DCoords(cotinine)\ncotinine\n\n\n\n\n\n\n\n\nGet some NMR data:\n\n# C13 spectral data from https://np-mrd.org/external_nmr_submissions/6254\nd =''''''\nimport base64\ndata = base64.b64decode(d)\nimport struct\npts = []\nfor i in range(0,len(data),16):\n    pts.append((struct.unpack('d',data[i:i+8]),struct.unpack('d',data[i+8:i+16])))\nplt.plot([x for x,y in pts],[y for x,y in pts]);\nwindow = plt.xlim()\nplt.xlim(window[1],window[0]);\n\n\n\n\n\n\n\n\nThe peak at around 50ppm is the solvent (deuterated methanol), so zoom in:\n\nplt.plot([x for x,y in pts],[y for x,y in pts]);\nwindow = plt.xlim()\nplt.xlim(window[1],window[0]);\nplt.ylim(0,1)\n\n\n\n\n\n\n\n\nDraw the spectrum and the molecule:\n\n# Start by getting a PNG of the molecular drawing:\nd2d = Draw.MolDraw2DCairo(150,100)\n# make the background transparent\nd2d.drawOptions().setBackgroundColour((1,1,1,0))\nd2d.drawOptions().useBWAtomPalette()\nd2d.DrawMolecule(cotinine)\nimg = Draw._drawerToImage(d2d)\n\n# plot the spectrum\nfig = plt.figure(figsize=(9,6))\nplt.plot([x for x,y in pts],[y for x,y in pts],'k');\nwindow = plt.xlim()\nwidth = window[1] - window[0]\nplt.xlim(window[1],window[0]);\nplt.ylim(0,1)\nplt.xlabel('ppm')\nplt.title('cotinine')\n\n# add the molecule to the plot\n\n# first create a matplotlib object holding the image. In my hands setting the\n# scaling to 0.75 creates nicer looking plots\nimagebox = OffsetImage(np.asarray(img), zoom = .75)\n\n# Now create an annotation object to allow us to place that image box\n# on the plot.\n\n# You'll need to optimize the position based on the plot you are creating\n# The position is provided in data coordinates\nmax_y = plt.ylim()[1]\npos = (window[1]-.2*width, 0.8*max_y)\nab = AnnotationBbox(imagebox, pos, frameon = False)\n\n# add the annotation to the plot:\nfig.axes[0].add_artist(ab);"
  },
  {
    "objectID": "posts/2024-07-28-confgen-and-intramolecular-hbonds.html",
    "href": "posts/2024-07-28-confgen-and-intramolecular-hbonds.html",
    "title": "Conformer generation and intramolecular H-bonds",
    "section": "",
    "text": "This question came up recently on the RDKit discussions group: If I know that a molecule has an intramolecular hydrogen bond, how can I make sure that the bond is present in conformers generated by the RDKit? I did a longer post about this a few years ago, but I will keep this one short.\nLet’s start by looking at a molecule which can have an intra-molecular H bond, 3-hydroxypropanal, and see what the default behavior ETKDGv3 conformers are.\n\nfrom rdkit import Chem\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit.Chem import Draw\nIPythonConsole.ipython_3d = True\nfrom rdkit.Chem import rdDistGeom\nfrom rdkit import DistanceGeometry as DG\n\nfrom matplotlib import pyplot as plt\n%matplotlib inline\n\nimport rdkit\nprint(rdkit.__version__)\n\n2024.03.5\n\n\nHere’s malonaldehyde.\n\nIPythonConsole.drawOptions.addAtomIndices = True\nIPythonConsole.molSize = 300,250\nmol = Chem.AddHs(Chem.MolFromSmiles('O=CCCO'))\nmol\n\n\n\n\n\n\n\n\nThe O–H distance we care about here is that between O(0) and H(10).\nGenerate 20 conformers using the default ETKDGv3 parameters:\n\nparams = rdDistGeom.ETKDGv3()\nparams.randomSeed = 0xf00d\n\nrdDistGeom.EmbedMultipleConfs(mol,20,params)\n\n&lt;rdkit.rdBase._vecti at 0x7fbf1f40d0c0&gt;\n\n\nLooking at the first conformer we see that there is no intramolecular H bond.\n\nmol\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol\n        \n\n\n\n\n\n\nWe can browse all of the conformers (here’s an old blog post about that) and see that none of them have a geometry consistent with an H bond:\n\nimport py3Dmol\nfrom ipywidgets import interact, interactive, fixed\n\ndef drawit(m,p,confId=-1):\n    p.removeAllModels()\n    IPythonConsole.addMolToView(m,p,confId=confId)\n    return p.show()\n\np = py3Dmol.view(width=400,height=400)\ninteract(drawit, m=fixed(mol),p=fixed(p),confId=(0,mol.GetNumConformers()-1));\n\n\n\n\nBut the best way to get a sense of whether or not the H bond is present is just to look at the O(0)–H(10) distances:\n\ndists1 = [(conf.GetAtomPosition(0)-conf.GetAtomPosition(10)).Length() for conf in mol.GetConformers()]\n\nplt.figure(figsize=(4,4))\nplt.hist(dists1);\nplt.xlabel('O--H distance');\n\n\n\n\n\n\n\n\n\nAside: the rest of this isn’t going to make much sense if you don’t have some familiarity with how the RDKit distance-geometry-based conformer generator works. The manual includes an overview along with pointers to the original literature.\n\nThis behavior is not unexpected: the default behavior of the conformer generator is to set the minimal distance between two atoms equal to the sum of their van der Waals radii. We can see this by getting the distance-bounds matrix that the RDKit generates for the molecule and looking at the two entries for the O(0)-H(10) distance:\n\nbounds = rdDistGeom.GetMoleculeBoundsMatrix(mol)\nbounds[10,0],bounds[0,10]\n\n(2.3375, 5.599152703678865)\n\n\nSince the distance-bounds matrix determines which conformers can be generated, we can use it to force conformers that have a distance between O(0) and H(10) consistent with a strong intramolecular H bond.\nWe start by updating the lower and upper bounds for the distance:\n\nbounds[10,0] = 1.6\nbounds[0,10] = 1.8\n\nAnd now do triangle bounds smoothing in order to allow that change to propagate to the other distance bounds:\n\nDG.DoTriangleSmoothing(bounds)\n\nTrue\n\n\nThe return value shows that the bound smoothing succeeded.\nNow we can set that bounds matrix in the ETKDGv3 parameters object and re-generate conformers:\n\nparams.SetBoundsMat(bounds)\nrdDistGeom.EmbedMultipleConfs(mol,20,params)\n\n&lt;rdkit.rdBase._vecti at 0x7fbe6fd21b40&gt;\n\n\nLook at the molecule’s conformers:\n\np = py3Dmol.view(width=400,height=400)\ninteract(drawit, m=fixed(mol),p=fixed(p),confId=(0,mol.GetNumConformers()-1));\n\n\n\n\nThe distance histogram shows that we’ve got an H bond in every conformer.\n\ndists2 = [(conf.GetAtomPosition(0)-conf.GetAtomPosition(10)).Length() for conf in mol.GetConformers()]\n\nplt.figure(figsize=(4,4))\nplt.hist(dists2);\nplt.xlabel('O--H distance');\n\n\n\n\n\n\n\n\nHere’s the before and after histogram:\n\nplt.figure(figsize=(5,4))\nplt.hist([dists1,dists2],label=['unconstrained','constrained'],bins=20);\nplt.legend()\nplt.xlabel('O--H distance');\n\n\n\n\n\n\n\n\nManipulating the distance-bounds matrix provides a lot of flexibility in steering conformer generation into particular areas of the conformer space accessible to a molecule.\nHere are a couple of examples: 1. Using distance bounds to generate conformers matching a pharmacophore. 2. Incorporating experimental distance bounds from NOE measurements in conformer generation."
  },
  {
    "objectID": "posts/2023-11-08-introducingrascalmces.html",
    "href": "posts/2023-11-08-introducingrascalmces.html",
    "title": "Introducing RascalMCES",
    "section": "",
    "text": "This guest post by Dave Cosgrove (GitHub: @DavidACosgrove), is the fifth in a series of posts covering some of the new or improved features in the 2023.09.1 RDKit release.\nThe Rascal (Rapid Similarity CALculation) algorithm of Raymond et al. is a rapid way of finding Maximum Common Edge Subgraphs, optimised for chemical structures. It finds the bonds that are in common between 2 structures, rather than the matching atoms returned by the RDKit’s rdFMCS code. The result is usually, but not always, the same. Two other differences to the rdFMCS approach are:\nfrom rdkit import Chem\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import rdMolDraw2D, rdDepictor\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom IPython.display import SVG\nfrom rdkit.Chem import rdRascalMCES\nfrom rdkit import rdBase\nrdDepictor.SetPreferCoordGen(True)\nprint(rdBase.rdkitVersion)\n\n2023.09.1\nmol1 = Chem.MolFromSmiles('CN(C)c1ccc(CC(=O)NCCCCCCCCCCNC23CC4CC(C2)CC(C3)C4)cc1')\nmol2 = Chem.MolFromSmiles('CN(C)c1ccc(CC(=O)NCCCCCCCCCCCCNC23CC4CC(C2)CC(C3)C4)cc1')\nDraw.MolsToGridImage([mol1,mol2],subImgSize=(400,200))\nThe FindMCES() function returns a list of RascalResult objects that contain the matching bonds and atoms, the SMARTS string for the match and various metrics about the match.\nresults = rdRascalMCES.FindMCES(mol1, mol2)\nres = results[0]\nprint(f'MCES SMARTS : {res.smartsString}')\nprint(f'Matching Bonds : {res.bondMatches()}')\nprint(f'Matching Atoms : {res.atomMatches()}')\n\nMCES SMARTS : CN(-C)-c1:c:c:c(-CC(=O)-NCCCCCCCCCC):c:c:1.NC12CC3CC(-C1)-CC(-C2)-C3\nMatching Bonds : [(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (21, 23), (22, 24), (23, 25), (24, 26), (25, 27), (26, 28), (27, 29), (28, 30), (29, 31), (30, 32), (31, 33), (32, 34), (33, 35), (34, 36), (35, 37), (36, 38)]\nMatching Atoms : [(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 23), (22, 24), (23, 25), (24, 26), (25, 27), (26, 28), (27, 29), (28, 30), (29, 31), (30, 32), (31, 33), (32, 34), (33, 35)]\nEach pair in the list returned by bondMatches() gives the indices of a bonds in the two molecules that match. These can be used to highlight the match in a picture. Here the images highlight the atoms and bonds in the MCES in red and the bonds which are NOT in the MCES in blue.\ndef extractHighlights(res):\n    bondHighlights1 = {}\n    bondHighlights2 = {}\n    for bondPair in res.bondMatches():\n        bondHighlights1[bondPair[0]] = (1.0, 0.0, 0.0)\n        bondHighlights2[bondPair[1]] = (1.0, 0.0, 0.0)\n    atomHighlights1 = {}\n    atomHighlights2 = {}\n    for atomPair in res.atomMatches():\n        atomHighlights1[atomPair[0]] = (1.0, 0.0, 0.0)\n        atomHighlights2[atomPair[1]] = (1.0, 0.0, 0.0)\n    return bondHighlights1, bondHighlights2, atomHighlights1, atomHighlights2\n\ndef drawMCESMatch(mol1, bondHighlights, atomHighlights, highlightNonmatches=(0.3,0.3,1.0)):    \n    d = rdMolDraw2D.MolDraw2DSVG(500, 250)\n    if highlightNonmatches:\n        for bnd in mol1.GetBonds():\n            if bnd.GetIdx() not in bondHighlights:\n                bondHighlights[bnd.GetIdx()] = highlightNonmatches\n    d.DrawMolecule(mol1,highlightAtoms=atomHighlights.keys(),highlightBonds=bondHighlights.keys(),\n                   highlightAtomColors=atomHighlights,highlightBondColors=bondHighlights)\n    d.FinishDrawing()\n    return d\n\n\nbondHighlights1, bondHighlights2, atomHighlights1, atomHighlights2 = extractHighlights(res)\nd = drawMCESMatch(mol1, bondHighlights1, atomHighlights1)\nSVG(d.GetDrawingText())\nd = drawMCESMatch(mol2, bondHighlights2, atomHighlights2)\nSVG(d.GetDrawingText())\nThere are multiple equally valid MCESs for this pair of molecules, with different breaks in the long chain. Which one is returned depends on, amongst other things, the input order of the atoms. It is possible to return all possible results, at the cost of some extra runtime. The results are returned in a sorted order, with the MCESs with the largest number of bonds first, and other properties used as tie-breakers.\nopts = rdRascalMCES.RascalOptions()\nopts.allBestMCESs = True\nresults = rdRascalMCES.FindMCES(mol1, mol2, opts)\nprint(f'Number of MCESs found : {len(results)}')\nprint(f'{results[0].smartsString}')\nprint(f'{results[-1].smartsString}')\n\nNumber of MCESs found : 264\nCN(-C)-c1:c:c:c(-CC(=O)-NCCCCCCCCCC):c:c:1.NC12CC3CC(-C1)-CC(-C2)-C3\nCN(-C)-c1:c:c:c(-CC(=O)-NCCCC):c:c:1.CCCCCCNC12CC3CC(-C1)-CC(-C2)-C3\nbondHighlights1, bondHighlights2, atomHighlights1, atomHighlights2 = extractHighlights(results[-1])\nd = drawMCESMatch(mol1, bondHighlights1, atomHighlights1)\nSVG(d.GetDrawingText())\nd = drawMCESMatch(mol2, bondHighlights2, atomHighlights2)\nSVG(d.GetDrawingText())\nIf you are only interested in the single largest piece of MCES:\nopts = rdRascalMCES.RascalOptions()\nopts.singleLargestFrag = True\nresults = rdRascalMCES.FindMCES(mol1, mol2, opts)\nprint(f'{results[0].smartsString}')\nprint(f'Number of MCESs found : {len(results)}')\n\nCN(-C)-c1:c:c:c(-CC(=O)-NCCCCCCCCCC):c:c:1\nNumber of MCESs found : 1\nThis is equivalent to the code below, using the RascalResult property largestFragmentSize and the method largestFragmentOnly. The largestFragmentSize returns the number of atoms in the largest fragment. Because of the way the results are sorted, the largest fragment may not be in the first result.\nopts = rdRascalMCES.RascalOptions()\nopts.allBestMCESs = True\nresults = rdRascalMCES.FindMCES(mol1, mol2, opts)\nmaxSizeResult = None\nmaxFragSize = 0\nfor res in results:\n    if res.largestFragmentSize &gt; maxFragSize:\n        maxFragSize = res.largestFragmentSize\n        maxSizeResult = res\nprint(f'Largest frag : {maxFragSize}')\nprint(maxSizeResult.smartsString)\nmaxSizeResult.largestFragmentOnly()\nprint(maxSizeResult.smartsString)\n\nLargest frag : 23\nCN(-C)-c1:c:c:c(-CC(=O)-NCCCCCCCCCC):c:c:1.NC12CC3CC(-C1)-CC(-C2)-C3\nCN(-C)-c1:c:c:c(-CC(=O)-NCCCCCCCCCC):c:c:1\nbondHighlights1, bondHighlights2, atomHighlights1, atomHighlights2 = extractHighlights(maxSizeResult)\nd = drawMCESMatch(mol1, bondHighlights1, atomHighlights1)\nSVG(d.GetDrawingText())\nd = drawMCESMatch(mol2, bondHighlights2, atomHighlights2)\nSVG(d.GetDrawingText())"
  },
  {
    "objectID": "posts/2023-11-08-introducingrascalmces.html#similarity-threshold",
    "href": "posts/2023-11-08-introducingrascalmces.html#similarity-threshold",
    "title": "Introducing RascalMCES",
    "section": "Similarity Threshold",
    "text": "Similarity Threshold\nOne of the properties in the RascalResult is a measure of the similarity between the 2 molecules based on the MCES, the Johnson similarity: \\[\\begin{equation}\nsim=\\frac{(E(MCES) + V(MCES))^2}{(E(Mol1) + V(Mol1)) * (E(Mol2) + V(Mol2)}\n\\end{equation}\\] where E(MCES) and V(MCES) are the number of edges (bonds) and vertices (atoms) in the MCES, and similarly for molecule 1 and molecule 2.\nA key reason for the speed of the algorithm is the use of a similarity threshold as an input parameter. There are 2 means of estimating upper limits on the final Johnson similarity between the 2 molecules, the first, tier1 similarity, cheaper to calculate than the second, tier2. If either of these estimates is below the given threshold, then no attempt is made to find an MCES, and an empty list of results is returned. The default threshold is 0.7, but you can vary that (between 0.0 and 1.0) with the similarityThreshold option.\nIf you need to know the tier1 and tier2 similarities, you can do:\n\nad1 = Chem.MolFromSmiles(\"CN(C)c1ccc(CC(=O)NCCCCCCCCCCNC23CC4CC(C2)CC(C3)C4)cc1 CHEMBL153934\")\nad2 = Chem.MolFromSmiles(\"N(C)c1ccc(CC(=O)NCCCCCCCCCCCCNC23CC4CC(C2)CC(C3)C4)cc1 CHEMBL157336\")\nopts = rdRascalMCES.RascalOptions()\nopts.similarityThreshold = 0.95\nopts.returnEmptyMCES = True\nresults = rdRascalMCES.FindMCES(ad1, ad2, opts)\nprint(results[0].tier1Sim, results[0].tier2Sim)\n\n0.9453984179046884 -1.0\n\n\nThe tier1 similarity is 0.94, so the tier2 isn’t calculated (hence the -1). None of the rest of the results fields will contain anything."
  },
  {
    "objectID": "posts/2023-11-08-introducingrascalmces.html#clustering",
    "href": "posts/2023-11-08-introducingrascalmces.html#clustering",
    "title": "Introducing RascalMCES",
    "section": "Clustering",
    "text": "Clustering\nThe Johnson similarity measure can be used for clustering. Raymond and Willett have described a fuzzy clustering method that uses the Johnson similarity between the MCESs of pairs of compounds.\n\nimport os\nfrom pathlib import Path\ncdk2_file = Path(os.environ['RDBASE']) / 'Contrib' / 'Fastcluster' / 'cdk2.smi'\nsuppl = Chem.SmilesMolSupplier(str(cdk2_file), '\\t', 1, 0, False)\nmols = [mol for mol in suppl]\nprint(f'{len(mols)} molecules in set')\nclusters = rdRascalMCES.RascalCluster(mols)\nprint(clusters)\n\n47 molecules in set\n[[3, 4, 1, 2, 0, 28, 29], [25, 26, 38, 24, 46, 39, 27], [6, 34, 35, 7, 5, 44], [36, 44], [13, 14], [19, 20], [21, 22], [16, 18, 17, 10, 23, 32, 30, 15, 33, 31, 9, 37, 42, 12, 11, 8, 40, 41, 43, 45]]\n\n\nThe clusters are returned as lists of indices into the original list of molecules. The final cluster is all the singletons that didn’t fit into another cluster.\nThis is a fuzzy clustering approach, so it’s possible for molecules to be in more than one cluster:\n\nfrom collections import defaultdict\nclustMembership = defaultdict(list)\nfor ci,c in enumerate(clusters):\n    for ai in c:\n        clustMembership[ai].append(ci)\n\nfor ai in clustMembership:\n    if len(clustMembership[ai])&gt;1:\n        print(ai,clustMembership[ai])\n\n44 [2, 3]\n\n\nThe clustering is quite fast:\n\n%timeit clusters = rdRascalMCES.RascalCluster(mols)\n\n75 ms ± 880 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)\n\n\nIf you prefer a more conventional, non-fuzzy clustering method, then there is an implementation of the Butina algorithm, also using the Johnson similarity as the metric.\n\nclusters = rdRascalMCES.RascalButinaCluster(mols)\nprint(clusters)\n\n[[25, 26, 38, 24, 27, 46], [6, 34, 5, 35, 44, 7], [4, 3, 1, 2, 0, 28], [22, 21], [20, 19], [14, 13], [45], [43], [42], [41], [40], [39], [37], [36], [33], [32], [31], [30], [29], [23], [18], [17], [16], [15], [12], [11], [10], [9], [8]]\n\n\nIn this case, the singletons are left in separate clusters.\n\n%timeit clusters = rdRascalMCES.RascalButinaCluster(mols)\n\n46.2 ms ± 408 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)\n\n\nBoth the RascalCluster and RascalButinaCluster methods can take an optional class changing the default options:\n\nclusOpts = rdRascalMCES.RascalClusterOptions()\nclusOpts.similarityCutoff = 0.6\nclusters = rdRascalMCES.RascalButinaCluster(mols, clusOpts)\nprint(clusters)\n\n[[4, 3, 1, 2, 0, 28, 8, 29], [44, 6, 36, 34, 5, 35, 7], [25, 26, 38, 24, 27, 46, 40], [42, 10], [32, 30], [22, 21], [20, 19], [17, 16], [14, 13], [45], [43], [41], [39], [37], [33], [31], [23], [18], [15], [12], [11], [9]]\n\n\nAs you might expect, decreasing the similarity cutoff makes the clustering take a bit longer (though it’s still quite fast):\n\n%timeit clusters = rdRascalMCES.RascalButinaCluster(mols, clusOpts)\n\n188 ms ± 1.43 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)"
  },
  {
    "objectID": "posts/2021-02-22-etkdg-and-distance-constraints.html",
    "href": "posts/2021-02-22-etkdg-and-distance-constraints.html",
    "title": "ETKDG and distance constraints",
    "section": "",
    "text": "The RDKit’s conformer generator allows you to provide distance “constraints” to bias the conformers which it produces. Last week I wondered how those constraints interact with the terms which the ETKDG algorithm adds to the “distance geometry force field”.\nThis post uses a simple example to explore that interaction\nSee another recent blog post for an overview of how the conformer generator works.\n\nfrom rdkit import Chem\nfrom rdkit.Chem import rdDistGeom\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit.Chem import rdMolTransforms\nIPythonConsole.ipython_3d = True\nfrom rdkit.Chem import Draw\nimport rdkit\nprint(rdkit.__version__)\n%pylab inline\n\n2020.09.4\nPopulating the interactive namespace from numpy and matplotlib\n\n\nHere’s the molecule we’ll use:\n\nm = Chem.AddHs(Chem.MolFromSmiles('OCCCCCCCN'))\n\n\nfrom rdkit.Chem import rdDepictor\nm2d = Chem.Mol(m)\nrdDepictor.Compute2DCoords(m2d)\nIPythonConsole.drawOptions.addAtomIndices = True\nm2d\n\n\n\n\n\n\n\n\nGet the bounds matrix for the molecule and look at the min/max values allowed for the O-N distance:\n\nbounds = rdDistGeom.GetMoleculeBoundsMatrix(m)\nbounds[8,0],bounds[0,8]\n\n(3.1500000000000004, 9.902933132591349)\n\n\nLet’s generate a bunch of conformers and look at the distribution of O-N distances:\n\nfigsize(6,6)\nps = rdDistGeom.ETKDGv3()\nps.randomSeed = 0xf00d\ncids = rdDistGeom.EmbedMultipleConfs(m,500,ps)\ndists_etkdg = [rdMolTransforms.GetBondLength(conf,0,8) for conf in m.GetConformers()]\nhist(dists_etkdg,bins=20);\ntitle('ETKDG');\nxlabel('O--N distance');\n\n\n\n\n\n\n\n\nLook at one conformer:\n\nprint(rdMolTransforms.GetBondLength(m.GetConformer(cids[0]),0,8) )\nIPythonConsole.drawMol3D(m,confId=cids[1])\n\n5.989729201561945\n\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol\n        \n\n\n\nCompare the distribution we get doing plain DG:\n\nfigsize(6,6)\nps = rdDistGeom.EmbedParameters()\nps.useExpTorsionAnglePrefs = False\nps.useBasicKnowledge = False\nps.randomSeed = 0xf00d\ncids = rdDistGeom.EmbedMultipleConfs(m,500,ps)\ndists = [rdMolTransforms.GetBondLength(conf,0,8) for conf in m.GetConformers()]\nhist(dists,bins=20);\ntitle('DG');\nxlabel('O--N distance');\n\n\n\n\n\n\n\n\nThere’s not a giant difference, but it does look like the DG conformers for this molecule tend to be more extended: the O and N tend to be farther away from each other.\nHere’s how we can modify the bounds matrix to bring the O and N closer together:\n\nbounds[0,8] = 4.1\nbounds[8,0] = 4.0\nfrom rdkit import DistanceGeometry\nDistanceGeometry.DoTriangleSmoothing(bounds)\n\nTrue\n\n\nStart with using this bounds matrix together with plain DG:\n\nfigsize(6,6)\nps = rdDistGeom.EmbedParameters()\nps.useExpTorsionAnglePrefs = False\nps.useBasicKnowledge = False\nps.randomSeed = 0xf00d\nps.SetBoundsMat(bounds)\ncids = rdDistGeom.EmbedMultipleConfs(m,500,ps)\ndists = [rdMolTransforms.GetBondLength(conf,0,8) for conf in m.GetConformers()]\nhist(dists,bins=20);\ntitle('DG, distance constraints');\nxlabel('O--N distance');\n\n\n\n\n\n\n\n\n\nprint(rdMolTransforms.GetBondLength(m.GetConformer(cids[0]),0,8) )\nIPythonConsole.drawMol3D(m,confId=cids[0])\n\n3.9739942608788374\n\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol\n        \n\n\n\nWhen we do ETKDG we add additional terms to the force field that’s used to optimize the structure. Do these override our distance constraints?\n\nfigsize(6,6)\nps = rdDistGeom.ETKDGv3()\nps.randomSeed = 0xf00d\nps.SetBoundsMat(bounds)\ncids = rdDistGeom.EmbedMultipleConfs(m,500,ps)\ndists = [rdMolTransforms.GetBondLength(conf,0,8) for conf in m.GetConformers()]\nhist(dists,bins=20);\ntitle('ETKDG with constraints');\nxlabel('O--N distance');\n\n\n\n\n\n\n\n\nMost of the distances are longer than what we were looking for, but they are still considerably shorter than what we saw before:\n\nfigsize(9,6)\nps = rdDistGeom.ETKDGv3()\nps.randomSeed = 0xf00d\nps.SetBoundsMat(bounds)\ncids = rdDistGeom.EmbedMultipleConfs(m,500,ps)\ndists = [rdMolTransforms.GetBondLength(conf,0,8) for conf in m.GetConformers()]\nhist(dists,bins=20,label='constraints');\ntitle('ETKDG');\nhist(dists_etkdg,bins=20,label='no constraints');\nlegend();\nxlabel('O--N distance');\n\n\n\n\n\n\n\n\nSo that answers our original question: the “constraints” we place on the conformers by modifying the bounds matrix aren’t strict, so the additional terms added by ETKDG can result in them being violated. But the results are still significant biased towards the region of conformer space we wanted to explore.\nLet’s try forcing conformations which have distances consistent with an intra-molecular hydrogen bond. Here we need to modify the bounds matrix elements between both the O and the N as well as the O and one of the Hs attached to the N. If we don’t adjust the O-N distance bounds too we end up with a bounds matrix which cannot be smoothed.\n\nbounds = rdDistGeom.GetMoleculeBoundsMatrix(m)\nbounds[0,25] = 1.9\nbounds[25,0] = 1.8\nbounds[0,8] = 3.2\nbounds[8,0] = 2.9\nfrom rdkit import DistanceGeometry\nDistanceGeometry.DoTriangleSmoothing(bounds)\n\nTrue\n\n\n\nfigsize(9,6)\n\nps = rdDistGeom.EmbedParameters()\nps.useExpTorsionAnglePrefs = False\nps.useBasicKnowledge = False\nps.randomSeed = 0xf00d\nps.SetBoundsMat(bounds)\ncids = rdDistGeom.EmbedMultipleConfs(m,500,ps)\ndists = [rdMolTransforms.GetBondLength(conf,0,25) for conf in m.GetConformers()]\nhist(dists,bins=20);\nxlabel('O--H-N distance');\n\n\n\n\n\n\n\n\n\nprint(rdMolTransforms.GetBondLength(m.GetConformer(cids[0]),0,25) )\nIPythonConsole.drawMol3D(m,confId=cids[0])\n\n1.9045497511922502\n\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol\n        \n\n\n\nTry using ETKDG:\n\nfigsize(6,6)\nps = rdDistGeom.ETKDGv3()\nps.randomSeed = 0xf00d\nps.SetBoundsMat(bounds)\ncids = rdDistGeom.EmbedMultipleConfs(m,500,ps)\ndists = [rdMolTransforms.GetBondLength(conf,0,25) for conf in m.GetConformers()]\nhist(dists,bins=20);\ntitle('ETKDG, with constraints');\nxlabel('O--H-N distance');\n\n\n\n\n\n\n\n\n\nprint(rdMolTransforms.GetBondLength(m.GetConformer(cids[0]),0,25) )\nIPythonConsole.drawMol3D(m,confId=cids[0])\n\n2.0641816694294173\n\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol\n        \n\n\n\nThe O–H-N distances here aren’t completely obeying the 1.8-1.9 distance bounds we imposed, but they seem to match a bit better than what we saw above when we constrained the O–N distance. I think that’s likely because now we have an additional constraining term - the O–H distance as well as the O–N distance - to help override the ETKDG preferences.\nSo to repeat the conclusion: modifying the distance bounds matrix doesn’t act as a hard constraint when we include ETKDG terms in the conformer generation process, but it definitely biases the results towards the areas of conformer space which we were trying to access."
  },
  {
    "objectID": "posts/2020-01-21-some-thoughts-on-cartridge-performance.html",
    "href": "posts/2020-01-21-some-thoughts-on-cartridge-performance.html",
    "title": "Some thoughts on the performance of the RDKit cartridge",
    "section": "",
    "text": "EDITED on 23.01.2020 John Mayfield pointed out that the way I had constructed the set of 10 million molecules wasn’t reproducible. This update fixes that, but it also changes the results.\nIt’s been a while since I did a post about the cartridge! This one is a little bit ranty, but hopefully it’s still useful."
  },
  {
    "objectID": "posts/2020-01-21-some-thoughts-on-cartridge-performance.html#sizes-of-the-tables-and-indices",
    "href": "posts/2020-01-21-some-thoughts-on-cartridge-performance.html#sizes-of-the-tables-and-indices",
    "title": "Some thoughts on the performance of the RDKit cartridge",
    "section": "Sizes of the tables and indices",
    "text": "Sizes of the tables and indices\npubchem_compound=# \\d+\n                             List of relations\n Schema |      Name       |   Type   |  Owner   |    Size    | Description \n--------+-----------------+----------+----------+------------+-------------\n public | fps             | table    | glandrum | 964 MB     | \n public | mols            | table    | glandrum | 4236 MB    | \n public | raw_data        | table    | glandrum | 9091 MB    | \n public | raw_data_id_seq | sequence | glandrum | 8192 bytes | \n(4 rows)\npubchem_compound=# \\di+\n                              List of relations\n Schema |     Name      | Type  |  Owner   |  Table   |  Size   | Description \n--------+---------------+-------+----------+----------+---------+-------------\n public | fps_mfp2_idx  | index | glandrum | fps      | 1226 MB | \n public | fps_pkey      | index | glandrum | fps      | 214 MB  | \n public | molidx        | index | glandrum | mols     | 4060 MB | \n public | mols_pkey     | index | glandrum | mols     | 214 MB  | \n public | raw_data_pkey | index | glandrum | raw_data | 2193 MB | \n(5 rows)"
  },
  {
    "objectID": "posts/2020-01-21-some-thoughts-on-cartridge-performance.html#performance-of-the-substructure-indices",
    "href": "posts/2020-01-21-some-thoughts-on-cartridge-performance.html#performance-of-the-substructure-indices",
    "title": "Some thoughts on the performance of the RDKit cartridge",
    "section": "Performance of the substructure indices",
    "text": "Performance of the substructure indices\nHere are results for the substructure queries executed above. For the purposes of this analysis I removed the limit on the query:\npubchem_compound=# explain analyze select * from mols where m@&gt;'CC1=C(C=C(C=C1)C(N)=O)C#CC1=CN=CC=C1';\n                                                        QUERY PLAN                                                         \n---------------------------------------------------------------------------------------------------------------------------\n Bitmap Heap Scan on mols  (cost=2157.91..37897.03 rows=9999 width=398) (actual time=167.546..168.902 rows=1 loops=1)\n   Recheck Cond: (m @&gt; 'Cc1ccc(C(N)=O)cc1C#Cc1cccnc1'::mol)\n   Rows Removed by Index Recheck: 328\n   Heap Blocks: exact=309\n   -&gt;  Bitmap Index Scan on molidx  (cost=0.00..2155.41 rows=9999 width=0) (actual time=137.703..137.703 rows=329 loops=1)\n         Index Cond: (m @&gt; 'Cc1ccc(C(N)=O)cc1C#Cc1cccnc1'::mol)\n Planning Time: 0.119 ms\n Execution Time: 169.178 ms\n(8 rows)\n\npubchem_compound=# explain analyze select * from mols where m@&gt;'CC1=CC2=C(S1)C(=O)NC(C)=N2';\n                                                        QUERY PLAN                                                        \n--------------------------------------------------------------------------------------------------------------------------\n Bitmap Heap Scan on mols  (cost=2157.91..37897.03 rows=9999 width=398) (actual time=436.998..510.558 rows=46 loops=1)\n   Recheck Cond: (m @&gt; 'Cc1nc2cc(C)sc2c(=O)[nH]1'::mol)\n   Rows Removed by Index Recheck: 14\n   Heap Blocks: exact=55\n   -&gt;  Bitmap Index Scan on molidx  (cost=0.00..2155.41 rows=9999 width=0) (actual time=436.902..436.902 rows=60 loops=1)\n         Index Cond: (m @&gt; 'Cc1nc2cc(C)sc2c(=O)[nH]1'::mol)\n Planning Time: 0.113 ms\n Execution Time: 510.801 ms\n(8 rows)\n\n\npubchem_compound=# explain analyze select * from mols where m@&gt;'CN1C(=O)N(C)C2=C1C=NC(N)=N2';\n                                                         QUERY PLAN                                                         \n----------------------------------------------------------------------------------------------------------------------------\n Bitmap Heap Scan on mols  (cost=2157.91..37897.03 rows=9999 width=398) (actual time=5111.590..5113.136 rows=38 loops=1)\n   Recheck Cond: (m @&gt; 'Cn1c(=O)n(C)c2nc(N)ncc21'::mol)\n   Rows Removed by Index Recheck: 10\n   Heap Blocks: exact=48\n   -&gt;  Bitmap Index Scan on molidx  (cost=0.00..2155.41 rows=9999 width=0) (actual time=5081.767..5081.768 rows=48 loops=1)\n         Index Cond: (m @&gt; 'Cn1c(=O)n(C)c2nc(N)ncc21'::mol)\n Planning Time: 0.058 ms\n Execution Time: 5113.296 ms\n(8 rows)\nAll of those show that the index is doing a reasonably good job of pruning compounds - the worst case query (the first one) only ends up trying at 329 substructure queries (instead of 10 million!) to find the 1 actual match."
  },
  {
    "objectID": "posts/2020-01-21-some-thoughts-on-cartridge-performance.html#warming-up-the-disk-cache",
    "href": "posts/2020-01-21-some-thoughts-on-cartridge-performance.html#warming-up-the-disk-cache",
    "title": "Some thoughts on the performance of the RDKit cartridge",
    "section": "Warming up the disk cache",
    "text": "Warming up the disk cache\nThere are tons of ways to do this. Here’s the approach I used for this post:\npubchem_compound=# select cid,mol_murckoscaffold(m) scaff into temporary table scaffs from mols order by cid desc limit 10;\nSELECT 10\npubchem_compound=# select count(*) from mols cross join scaffs where mols.m@&gt;scaffs.scaff;\n count  \n--------\n 178828\n(1 row)\npubchem_compound=# select * into blah from fps order by cid desc limit 10;\nSELECT 10\npubchem_compound=# select count(*) from fps cross join blah where blah.mfp2%fps.mfp2;\n count \n-------\n   401\n(1 row)\nThat takes ~10 minutes to run for me."
  },
  {
    "objectID": "posts/2020-01-21-some-thoughts-on-cartridge-performance.html#doing-the-queries-and-making-the-images",
    "href": "posts/2020-01-21-some-thoughts-on-cartridge-performance.html#doing-the-queries-and-making-the-images",
    "title": "Some thoughts on the performance of the RDKit cartridge",
    "section": "Doing the queries and making the images",
    "text": "Doing the queries and making the images\nSince I’m not doing this one from a jupyter notebook, here’s the code snippet I’m using in jupyter to do the substructure queries and display the results:\nq='CN1C(=O)N(C)C2=C1C=NC(N)=N2'\nt1=time.time()\nd = %sql postgresql://localhost/pubchem_compound select * from mols where m@&gt;:q limit 10;\nt2 = time.time()\nprint(f'{t2-t1:.2f} seconds')\nms = [Chem.MolFromSmiles(x) for x in [q]+[x[1] for x in d]]\nls = ['query']+[str(x[0]) for x in d]\nDraw.MolsToGridImage(ms[:8],legends=ls,molsPerRow=4)\nAnd the equivalent thing for nearest-neighbor queries:\nq='CN1CC2=NN=C(C3CCC(CC3)OC3=CC=CC=N3)N2C2=CC=C(Cl)C=C2C1'\nt1=time.time()\nd = %sql postgresql://localhost/pubchem_compound select * from get_mfp2_neighbors2(:q) limit 10;\nt2 = time.time()\nprint(f'{t2-t1:.2f} seconds')\nms = [Chem.MolFromSmiles(x) for x in [q]+[x[1] for x in d]]\nls = ['query']+[f'{x[0]} {x[2] :.2f}' for x in d]\nDraw.MolsToGridImage(ms[:8],legends=ls,molsPerRow=4)\nBoth of these are using the fantastic sql-magic for jupyter from Catherine Devlin."
  },
  {
    "objectID": "posts/2023-03-09-using-intake-for-chemistry.html",
    "href": "posts/2023-03-09-using-intake-for-chemistry.html",
    "title": "Using intake for chemistry",
    "section": "",
    "text": "I work with a bunch of different datasets. One big challenge with this is keeping track of which dataset is which and where they all are. Maybe you recognize the problem. One standard solution to this is to use a data catalog, and the PyData ecosystem happens to have a nice tool for working with data catalogs, intake. A couple of years ago I wrote a blog post about using intake to handle some chemistry file formats and that inspired me to write a small intake plugin which added support for working with SDF and SMILES files using intake.\nI’ve been meaning to do a blog post describing the plugin and how to use it, but somehow never got around to it. However, this week we published a preprint that includes some datasets (Aside: the preprint introduces SIMPD, an algorithm for splitting chemical datasets into training and test sets which differ from each other in the same ways that time splits constructed from medicinal chemistry project data do.) with an intake data catalog. The data sets and intake description are included in the [GitHub repo for the paper].(https://github.com/rinikerlab/molecular_time_series/tree/main/datasets). That’s provided the impetus for me to finally do a quick blog post describing how to use intake for chemistry datasets.\nThis is just a quick one, to show the basics of working with intake and the RDKit, but hopefully it’s enough to make you want to start using the system. Feedback on either this post or the RDKit plugin for intake are very welcome.\n\nGetting started\nThe RDKit plugin is in GitHub: https://github.com/greglandrum/intake-rdkit I haven’t setup packages for it yet, but you can install it directly from the repo like this:\npython -m pip install git+https://github.com/greglandrum/intake-rdkit.git\nYou do need to have both the intake and rdkit packages as well.\n\nfrom rdkit import Chem\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem import PandasTools\nPandasTools.RenderImagesInAllDataFrames(True)\nimport rdkit\nprint(rdkit.__version__)\n\n2022.09.5\n\n\n\nimport intake\nimport pandas as pd\n\n\n\nBasics\nLet’s start at the end: open the data catalog from github and then read one of the SIMPD datasets into a Pandas dataframe. Here I grab the data directly from the GitHub repo, but I could just as easily have worked from a local copy of the files:\n\nrawbase = 'https://raw.githubusercontent.com/rinikerlab/molecular_time_series/main'\ncatalog = intake.open_catalog(f'{rawbase}/datasets/public_data.yaml')\nds = catalog.SIMPD.CHEMBL1267245\ndf = ds.read()\ndf.head()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmol\nUnnamed: 0\ncompound_chembl_id\ncanonical_smiles\nstandard_value\nstandard_units\nstandard_relation\nstandard_type\npchembl_value\npActivity\nactive\nsplit\n\n\n\n\n0\n\n\n\n229\nCHEMBL1256953\nCN(C)c1cc2c(Nc3ccc4c(c3)ncn4Cc3ccccc3)ncnc2cn1\n3162.28\nnM\n=\nIC50\n5.5\n5.5\n1\ntrain\n\n\n1\n\n\n\n398\nCHEMBL375270\nO=C(Nc1ccccc1)c1cc([N+](=O)[O-])ccc1Cl\n10000.00\nnM\n=\nIC50\n5.0\n5.0\n0\ntrain\n\n\n2\n\n\n\n280\nCHEMBL15192\nCC1(C)CCC2=C(O1)c1ccccc1C(=O)C2=O\n10000.00\nnM\n=\nIC50\n5.0\n5.0\n0\ntrain\n\n\n3\n\n\n\n422\nCHEMBL441618\nCN1CCc2ccccc2Cc2[nH]c3ccccc3c2CC1\n5011.87\nnM\n=\nIC50\n5.3\n5.3\n1\ntrain\n\n\n4\n\n\n\n263\nCHEMBL1393\nCC(=O)S[C@@H]1CC2=CC(=O)CC[C@]2(C)[C@H]2CC[C@@...\n12589.25\nnM\n=\nIC50\n4.9\n4.9\n0\ntest\n\n\n\n\n\n\n\nThat’s a pandas DataFrame, so we can take advantage of all that they support. Here we retrieve rows that are marked as active and which have a aromatic five-ring containing an N:\n\nmols = df[(df.active==1) & (df.mol&gt;=Chem.MolFromSmarts('c1cccn1'))]\nmols.head()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmol\nUnnamed: 0\ncompound_chembl_id\ncanonical_smiles\nstandard_value\nstandard_units\nstandard_relation\nstandard_type\npchembl_value\npActivity\nactive\nsplit\n\n\n\n\n3\n\n\n\n422\nCHEMBL441618\nCN1CCc2ccccc2Cc2[nH]c3ccccc3c2CC1\n5011.87\nnM\n=\nIC50\n5.30\n5.300000\n1\ntrain\n\n\n20\n\n\n\n39\nCHEMBL1200517\nCN1C[C@H](C(=O)N[C@]2(C)O[C@@]3(O)[C@@H]4CCCN4...\n2254.00\nnM\n=\nIC50\n5.65\n5.647046\n1\ntrain\n\n\n26\n\n\n\n77\nCHEMBL123\nCc1c2ccncc2c(C)c2c1[nH]c1ccccc12\n0.56\nnM\n=\nIC50\n9.25\n9.251812\n1\ntrain\n\n\n31\n\n\n\n490\nCHEMBL605003\nCN(C)S(=O)(=O)c1ccc2c(c1)/C(=C/c1cc3c([nH]1)CC...\n3981.07\nnM\n=\nIC50\n5.40\n5.400000\n1\ntest\n\n\n40\n\n\n\n507\nCHEMBL772\nCOC(=O)[C@H]1[C@H]2C[C@@H]3c4[nH]c5cc(OC)ccc5c...\n1995.26\nnM\n=\nIC50\n5.70\n5.700001\n1\ntrain\n\n\n\n\n\n\n\nIn the previous example I directly accessed a particular dataset that I knew was there.\nI could have also looped over the available datasets:\n\ncatalog = intake.open_catalog(f'{rawbase}/datasets/public_data.yaml')\nfor i,assay in enumerate(catalog.SIMPD):\n    print(assay)\n    if i&gt;=4: break\n\nCHEMBL1267247\nCHEMBL3705464\nCHEMBL3705282\nCHEMBL1267250\nCHEMBL3705791\n\n\n\n\nMetadata\nThe individual datasets have metadata in the catalog:\n\ncatalog.SIMPD[assay].metadata.keys()\n\ndict_keys(['url', 'source', 'activity_type', 'min pchembl_value', 'max pchembl_value', 'median pchembl_value', 'is_log_data', 'activity bin', 'Compounds', 'Num Active', 'Num Inactive', 'catalog_dir'])\n\n\nAnd we can use that as a filter. Note that commands like this take a few seconds to run when accessing the catalog from github. Using a local copy is much faster.\n\nlarge_assays = [assay for assay in catalog.SIMPD if catalog.SIMPD[assay].metadata['Compounds']&gt;700]\nlarge_assays\n\n['CHEMBL3705362', 'CHEMBL3705899', 'CHEMBL3706373']\n\n\n\ncatalog.SIMPD['CHEMBL3705899'].metadata\n\n{'url': 'https://www.ebi.ac.uk/chembl/assay_report_card/CHEMBL3705899/',\n 'source': 'ChEMBL_30',\n 'activity_type': 'IC50',\n 'min pchembl_value': 4.61,\n 'max pchembl_value': 9.0,\n 'median pchembl_value': 6.96,\n 'is_log_data': True,\n 'activity bin': 7.2,\n 'Compounds': 766,\n 'Num Active': 304,\n 'Num Inactive': 462,\n 'catalog_dir': 'https://raw.githubusercontent.com/rinikerlab/molecular_time_series/main/datasets'}\n\n\nOf course the catalogs themselves also have metadata:\n\ncatalog.metadata\n\n{'version': 1,\n 'creator': {'name': 'greg landrum', 'email': 'glandrum@ethz.ch'},\n 'summary': 'Collection of datasets from the publication\\nG.A. Landrum, M. Beckers, J. Lanini, N. Schneider, N. Stiefl, S. Riniker \\n\"SIMPD: an Algorithm for Generating Simulated Time Splits for Validating Machine Learning Approaches\"\\nhttps://chemrxiv.org/engage/chemrxiv/article-details/6406049e6642bf8c8f10e189\\n\\nPlease cite our paper if you use these datasets.    \\n'}\n\n\n\ncatalog.SIMPD.metadata\n\n{'version': 1,\n 'creator': {'name': 'greg landrum', 'email': 'glandrum@ethz.ch'},\n 'summary': 'Collection of datasets with pchembl_values for bioactivity prediction.\\n\\nEach row includes the reported value. Only values without data_validity_comments are included\\nActive/inactive class assignments were done to give a 40/60 inactive/active ratio\\nThe suggested train/test split was created using the SIMPD algorithm, described in the publication\\nhttps://chemrxiv.org/engage/chemrxiv/article-details/6406049e6642bf8c8f10e189\\n',\n 'split_column': 'split',\n 'class_column': 'active',\n 'activity_column': 'standard_value'}\n\n\n\n\nSupported formats\nThe RDKit intake integration currently supports two formats:\n\nSDF\nSMILES: this can be any delimited text file which includes a column with SMILES\n\nEither format can be read from either compressed or uncompressed files.\n\n\nCreating data descriptions\nCatalogs and datasets in intake are described in YAML files. You can, of course, create these by hand, but it’s certainly more efficient to create them programmatically. Here’s the code I used to do this for the raw ChEMBL assays in our preprint, derived from one of the notebooks in the GitHub repo:\n\nyaml=[]\n# loop over assay IDs:\nfor aid,achemblid in zip(aids,achemblids):\n    # retrieve the assay data from ChEMBL:\n    d = %sql postgresql://localhost/chembl_30 \\\nselect distinct on (cil.chembl_id) cil.chembl_id compound_chembl_id,canonical_smiles, \\\n        standard_value,standard_units,standard_relation,standard_type,pchembl_value \\\n          from activities join assays using(assay_id) \\\n          join compound_structures using(molregno) \\\n          join chembl_id_lookup cil on (molregno=entity_id and entity_type='COMPOUND') \\\n          where pchembl_value is not null  \\\n            and standard_value is not null and standard_units = 'nM' \\\n            and data_validity_comment is null \\\n            and assay_id=:aid \\\n          order by cil.chembl_id;\n    # convert that to a pandas dataframe and write a CSV file:\n    df = d.DataFrame()\n    df.to_csv(f'./datasets/source_data/assay_{achemblid}.csv.gz',index=False)\n    \n    # generate the metadata we care about:\n    minAct = min(df.pchembl_value)\n    maxAct = max(df.pchembl_value)\n    medAct = np.median(df.pchembl_value)\n    actTypes = list(set(df.standard_type))\n    if len(actTypes)&gt;1:\n        print(f'SKIPPING {achemblid} since it has {len(actTypes)} different activity types.')\n        continue\n    actType = actTypes[0]\n    assayd = %sql postgresql://localhost/chembl_30 \\\n    select * from assays  \\\n        where assay_id=:aid\n    assayd = dict(assayd[0])\n    # quotes in the description cause problems with the yaml parsing\n    assayd['description'] = assayd['description'].replace('\"','')\n    \n    # create the YAML for this dataset:\n    template=f'''  {achemblid}:\n    description: \"Assay {achemblid}: {assayd['description']}\"\n    args:\n      filename: '{{{{ CATALOG_DIR }}}}/source_data/assay_{achemblid}.csv.gz'\n      smilesColumn: canonical_smiles\n    metadata:\n      url: https://www.ebi.ac.uk/chembl/assay_report_card/{achemblid}/\n      source: ChEMBL_30\n      activity_type: {actType}\n      min pchembl_value: {minAct:.2f}\n      max pchembl_value: {maxAct:.2f}\n      median pchembl_value: {medAct:.2f}\n    driver: intake_rdkit.smiles.SmilesSource\n'''\n    yaml.append(template)\n\n# print the YAML to the notebook\nprint('\\n'.join(yaml))\n\n# and write the full data catalog file:\nwith open('./datasets/assays.yaml','w+') as outf:\n    header='''metadata:\n  version: 1\n  creator: \n    name: greg landrum\n    email: glandrum@ethz.ch\n\n  summary: |\n    Collection of datasets with pchembl_values for bioactivity prediction.\n\n    Each row includes the reported value. Only values without data_validity_comments are included\n    \nsources:'''\n    print(header,file=outf)\n    print('\\n'.join(yaml),file=outf)```"
  },
  {
    "objectID": "posts/2023-10-27-mcswhatsnew.html",
    "href": "posts/2023-10-27-mcswhatsnew.html",
    "title": "New MCS features in 2023.09.1",
    "section": "",
    "text": "This guest post by Paolo Tosco (GitHub: @ptosco), one of the RDKit core maintainers, is the fourth of a few posts covering some of the new or improved features in the 2023.09.1 RDKit release.\nA PR of mine dealing with MCS code clean up, refactoring and fixing open bugs has been open for one year or so. The growing sense of guilt, together with new and more exciting bugs being found by myself and others during this year, prompted me to take it up again. Eventually, I managed to complete the PR, which fixed all outstanding MCS-related bugs at the time of PR submission. The PR was merged with no changes. A quick glance at the PR will tell you that this was not necessarily due to my impeccable code style.\n\n\n\nimage.png\n\n\nIn addition to several bug fixes, the PR introduces significant performance improvements, particularly for difficult MCS cases involving the CompleteRingsOnly flag, which now run in finite time rather than just hanging and slowly consuming all of the available memory as they used to.\n\n\n\nimage.png\n\n\nHere I would like to showcase the new features introduced as part of this PR, which relate to requests I had from colleagues as well as from members of the community.\n\nCustom Python AtomCompare and BondCompare classes\nActually I have already implemented this feature some time ago, but I am not sure how many users are aware of it; therefore, in the following you will find a quick refresher.\n\nfrom rdkit import Chem\nfrom rdkit.Chem import rdFMCS\nfrom rdkit.Chem.Draw import IPythonConsole, MolsToGridImage\n\nLet’s assume that for some reason we would like to implement a custom MCS criterion that will ignore elements and bond orders/aromaticity in ring systems, while enforcing element and bond order consideration in non-ring portions of the molecules. This is not something which is readily available among the built-in AtomCompare and BondCompare options; therefore, we will need custom subclasses, respectively derived from AtomCompare and BondCompare classes.\n\nmols = [Chem.MolFromSmiles(smi) for smi in \"\"\"C[C@H]1COC2=C3N1C=C(C(=O)C3=CC(=C2N4CCN(CC4)C)F)C(=O)O\nC1[C@@H]2[C@@H](C2N)CN1C3=C(C=C4C(=O)C(=CN(C4=N3)C5=C(C=C(C=C5)F)F)C(=O)O)F\nCN(C)CC[C@@](C1=CC=CC2=CC=CC=C21)([C@H](C3=CC=CC=C3)C4=C(N=C5C=CC(=CC5=C4)Br)OC)O\n\"\"\".split()]\n\n\nMolsToGridImage(mols, subImgSize=(300, 200))\n\n\n\n\n\n\n\n\nWIth this rather standard set of parameters, which enforces that ring bonds should only match ring bonds and that rings should be complete, the MCS is 3-methylpyridine:\n\nparams = rdFMCS.MCSParameters()\nparams.AtomTyper = rdFMCS.AtomCompare.CompareElements\nparams.BondTyper = rdFMCS.BondCompare.CompareOrder\nparams.BondCompareParameters.RingMatchesRingOnly = True\nparams.BondCompareParameters.CompleteRingsOnly = True\n\n\nmcs = rdFMCS.FindMCS(mols, params)\n\n\nMolsToGridImage(mols, subImgSize=(300, 200), highlightAtomLists=[m.GetSubstructMatch(mcs.queryMol) for m in mols])\n\n\n\n\n\n\n\n\n\nclass CompareOrderOutsideRings(rdFMCS.MCSBondCompare):\n    def __call__(self, p, mol1, bond1, mol2, bond2):\n        b1 = mol1.GetBondWithIdx(bond1)\n        b2 = mol2.GetBondWithIdx(bond2)\n        if (b1.IsInRing() and b2.IsInRing()) or (b1.GetBondType() == b2.GetBondType()):\n            if (p.MatchStereo and not self.CheckBondStereo(p, mol1, bond1, mol2, bond2)):\n                return False\n            if p.RingMatchesRingOnly:\n                return self.CheckBondRingMatch(p, mol1, bond1, mol2, bond2)\n            return True\n        return False\n\n\nclass CompareElementsOutsideRings(rdFMCS.MCSAtomCompare):\n    def __call__(self, p, mol1, atom1, mol2, atom2):\n        a1 = mol1.GetAtomWithIdx(atom1)\n        a2 = mol2.GetAtomWithIdx(atom2)\n        if (a1.GetAtomicNum() != a2.GetAtomicNum()) and not (a1.IsInRing() and a2.IsInRing()):\n            return False\n        if (p.MatchChiralTag and not self.CheckAtomChirality(p, mol1, atom1, mol2, atom2)):\n            return False\n        if p.RingMatchesRingOnly:\n            return self.CheckAtomRingMatch(p, mol1, atom1, mol2, atom2)\n        return True\n\nBy using our more lenient atom/bond comparison criterion, while keeping the constraint that ring atoms should only match ring atoms and that rings should be complete, we retrieve a larger MCS:\n\nparams = rdFMCS.MCSParameters()\nparams.AtomTyper = CompareElementsOutsideRings()\nparams.BondTyper = CompareOrderOutsideRings()\nparams.BondCompareParameters.RingMatchesRingOnly = True\nparams.BondCompareParameters.CompleteRingsOnly = True\n\n\nmcs = rdFMCS.FindMCS(mols, params)\n\n\nMolsToGridImage(mols, subImgSize=(300, 200), highlightAtomLists=[m.GetSubstructMatch(mcs.queryMol) for m in mols])\n\n\n\n\n\n\n\n\nNote that the first molecule can actually match two equivalent ring systems:\n\n[m.GetSubstructMatches(mcs.queryMol) for m in mols]\n\n[((1, 2, 6, 3, 7, 4, 8, 5, 9, 23, 11, 25),\n  (5, 4, 6, 14, 7, 13, 8, 12, 9, 23, 11, 25)),\n ((9, 8, 10, 7, 11, 17, 13, 16, 14, 26, 15, 28),),\n ((9, 10, 8, 11, 7, 12, 6, 13, 15, 5, 14, 36),)]\n\n\nThe fact that we instantiate custom compare classes rather than custom compare functions allows to put some non-molecule specific (i.e., static) data that we may need for the comparison in addition to the MCSParameters that get passed to the __call__ method by the MCS code. We may access this data stored on the class instance inside the __call__ method. For example, let’s assume that we want to enforce that aromatic only matches aromatic based on a user-specified setting. All we need to do is modify our CompareOrderOutsideRings as follows:\n\nclass CompareOrderOutsideRings(rdFMCS.MCSBondCompare):\n    def __init__(self, aromatic_match_aromatic=False):\n        super().__init__()\n        self.aromatic_match_aromatic = aromatic_match_aromatic\n\n    def __call__(self, p, mol1, bond1, mol2, bond2):\n        b1 = mol1.GetBondWithIdx(bond1)\n        b2 = mol2.GetBondWithIdx(bond2)\n        if ((b1.IsInRing() and b2.IsInRing()\n            and (not self.aromatic_match_aromatic or not (b1.GetIsAromatic() ^ b2.IsInRing())))\n            or b1.GetBondType() == b2.GetBondType()):\n            if (p.MatchStereo and not self.CheckBondStereo(p, mol1, bond1, mol2, bond2)):\n                return False\n            if p.RingMatchesRingOnly:\n                return self.CheckBondRingMatch(p, mol1, bond1, mol2, bond2)\n            return True\n        return False\n\nIf we instantiate the CompareOrderOutsideRings class without passing the aromatic_match_aromatic optional parameter, which defaults to False, we will get the same results as before:\n\nparams = rdFMCS.MCSParameters()\nparams.AtomTyper = CompareElementsOutsideRings()\nparams.BondTyper = CompareOrderOutsideRings()\nparams.BondCompareParameters.RingMatchesRingOnly = True\nparams.BondCompareParameters.CompleteRingsOnly = True\n\n\nmcs = rdFMCS.FindMCS(mols, params)\n\n\nMolsToGridImage(mols, subImgSize=(300, 200), highlightAtomLists=[m.GetSubstructMatch(mcs.queryMol) for m in mols])\n\n\n\n\n\n\n\n\n\n[m.GetSubstructMatches(mcs.queryMol) for m in mols]\n\n[((1, 2, 6, 3, 7, 4, 8, 5, 9, 23, 11, 25),\n  (5, 4, 6, 14, 7, 13, 8, 12, 9, 23, 11, 25)),\n ((9, 8, 10, 7, 11, 17, 13, 16, 14, 26, 15, 28),),\n ((9, 10, 8, 11, 7, 12, 6, 13, 15, 5, 14, 36),)]\n\n\nHowever, if we instantiate the CompareOrderOutsideRings class setting the aromatic_match_aromatic optional parameter to True, the first molecule will match only on the quinoline ring system:\n\nparams = rdFMCS.MCSParameters()\nparams.AtomTyper = CompareElementsOutsideRings()\nparams.BondTyper = CompareOrderOutsideRings(True)\nparams.BondCompareParameters.RingMatchesRingOnly = True\nparams.BondCompareParameters.CompleteRingsOnly = True\n\n\nmcs = rdFMCS.FindMCS(mols, params)\n\n\nMolsToGridImage(mols, subImgSize=(300, 200), highlightAtomLists=[m.GetSubstructMatch(mcs.queryMol) for m in mols])\n\n\n\n\n\n\n\n\n\n[m.GetSubstructMatches(mcs.queryMol) for m in mols]\n\n[((4, 5, 14, 6, 13, 7, 12, 8, 11, 9, 23, 25),),\n ((8, 9, 7, 10, 17, 11, 16, 13, 15, 14, 26, 28),),\n ((10, 9, 11, 8, 12, 7, 13, 6, 14, 15, 5, 36),)]\n\n\n\n\nRetrieve all degenerate MCSs\nIt may happen that there are multiple degenerate MCSs (i.e., with the same size) across a set of molecules. Before my PR, the MCS algorithm implemented in RDKit would return only one of them, but which one would be rather unpredictable, as it depends on atom ordering in the molecules. This topic was raised during an RDKit UGM 2-3 years ago, but I did not realize its importance until one of my colleagues was bitten by the degenerate MCS issue. Now there is an optional StoreAll parameter, which defaults to False, which if set to True will trigger the storage of all degenerate MCSs in an array. See below for an example.\n\nmols = [Chem.MolFromSmiles(smi) for smi in [\n    \"Nc1ccc(cc1)C-Cc1c(N)cccc1\",\n    \"Nc1ccc(cc1)C=Cc1c(N)cccc1\"]\n]\n\n\nMolsToGridImage(mols, subImgSize=(300, 200))\n\n\n\n\n\n\n\n\nYou can see at a glance that two degenerate MCSs can be found between the above molecules, i.e., o-methylaniline and p-methylaniline. However, by default rdFMCS will only find one, in this case the para isomer:\n\nmcs = rdFMCS.FindMCS(mols)\n\n\nmcs.numAtoms, mcs.numBonds\n\n(8, 8)\n\n\n\nmcs.queryMol\n\n\n\n\n\n\n\n\n\nMolsToGridImage(mols, subImgSize=(300, 200), highlightAtomLists=[m.GetSubstructMatch(mcs.queryMol) for m in mols])\n\n\n\n\n\n\n\n\n\nparams = rdFMCS.MCSParameters()\nparams.StoreAll = True\n\n\nmcs = rdFMCS.FindMCS(mols, params)\n\nThe number of atoms and bonds that constitute the MCS, as expected, are the same as before, since the MCSs are degenerate:\n\nmcs.numAtoms, mcs.numBonds\n\n(8, 8)\n\n\nHowever, this time mcs.queryMol and mcs.smartsString are None and '', respectively. This is by design, as with StoreAll we need to be able to potentially access multiple MCSs, rather than only one as is the case for the MCSResult.queryMol and MCSResult.smartsString properties. The property that allows to browse all degenerate MCSs is MCSResult.degenerateSmartsQueryMolDict, which is a dict:\n\nmcs.queryMol\n\n\nmcs.smartsString\n\n''\n\n\n\nmcs.degenerateSmartsQueryMolDict\n\n{'[#6]-[#6]1:[#6]:[#6]:[#6]:[#6]:[#6]:1-[#7]': &lt;rdkit.Chem.rdchem.Mol at 0x21594654c10&gt;,\n '[#7]-[#6]1:[#6]:[#6]:[#6](:[#6]:[#6]:1)-[#6]': &lt;rdkit.Chem.rdchem.Mol at 0x215946550e0&gt;}\n\n\nBelow I show all degenerate MCSs found, labelled with their respective SMARTS pattern:\n\nmols_highlights_smarts_list = [[mols, [m.GetSubstructMatch(query) for m in mols], [smarts for _ in mols]] for smarts, query in mcs.degenerateSmartsQueryMolDict.items()]\n\n\nmols_to_display, highlight_atom_lists, legends = [sum(item, []) for item in map(list, list(zip(*mols_highlights_smarts_list)))]\n\n\nMolsToGridImage(mols_to_display, molsPerRow=2, subImgSize=(300, 200), highlightAtomLists=highlight_atom_lists, legends=legends)\n\n\n\n\n\n\n\n\n\n\nFinalMatchChecker\nMCSParameters.FinalMatchChecker allows to implement a final check on a growing MCS to determine whether it should be accepted (and eventually be allowed to grow further, if possible) or discarded. Just to clarify a bit, the MCS algorithm already implements some built-in, optional final match checkers, e.g. to check: * stereochemistry, in case MCSParameters.AtomCompareParameters.MatchChiralTag is set to True * ring fusion, in case MCSParameters.BondCompareParameters.MatchFusedRings is set to True\nBy implementing a custom class derived from rdFMCS.MCSFinalMatchCheck you may enforce your own check. For example, the following class will prevent any MCS containing nitrogen from growing further, causing it to be discarded straightaway:\n\nclass FinalMatchCheckNoNitrogen(rdFMCS.MCSFinalMatchCheck):\n    def __call__(self, mol1, mol2, atom_idx_match, bond_idx_match, params):\n        return not any(mol1.GetAtomWithIdx(mol1_atom_idx).GetAtomicNum() == 7\n               or mol2.GetAtomWithIdx(mol2_atom_idx).GetAtomicNum() == 7\n               for mol1_atom_idx, mol2_atom_idx in atom_idx_match)\n\nTaking again as an example the two molecules from above, if we blacklist nitrogen we would expect the MCS to be toluene.\n\nmols = [Chem.MolFromSmiles(smi) for smi in [\n    \"Nc1ccc(cc1)C-Cc1c(N)cccc1\",\n    \"Nc1ccc(cc1)C=Cc1c(N)cccc1\"]\n]\n\n\nMolsToGridImage(mols, subImgSize=(300, 200))\n\n\n\n\n\n\n\n\n\nparams = rdFMCS.MCSParameters()\nparams.FinalMatchChecker = FinalMatchCheckNoNitrogen()\n\n\nmcs = rdFMCS.FindMCS(mols, params)\n\nThe number of atoms and bonds that constitute the MCS, as expected, are the same as before, since the MCSs are degenerate:\n\nmcs.numAtoms, mcs.numBonds\n\n(7, 7)\n\n\nAnd indeed, toluene is what we get:\n\nmcs.queryMol\n\n\n\n\n\n\n\n\n\nmcs.smartsString\n\n'[#6]1:[#6]:[#6]:[#6](:[#6]:[#6]:1)-[#6]'\n\n\n\nMolsToGridImage(mols, subImgSize=(300, 200), highlightAtomLists=[m.GetSubstructMatch(mcs.queryMol) for m in mols])\n\n\n\n\n\n\n\n\n\n\nShouldAcceptMCS\nMCSParameters.ShouldAcceptMCS allows to implement a user-defined acceptance criterion on a complete MCS (which is already fully grown and potentially ready to be returned as result). If the complete NCS fails the check, it will be discarded and not returned to the user. A quite specific use case that we recently had internally was to find an MCS between two molecules, one of which containing a dummy atom. We needed to enforce that, for the molecule containing the dummy atom, this dummy atom was actually part of the MCS. We did this by using a custom TerminalDummyMatchesAnyNonTerminalAtom AtomCompare subclass and a custom EnforceDummyAcceptance MCSAcceptance subclass; see below.\n\nclass TerminalDummyMatchesAnyNonTerminalAtom(rdFMCS.MCSAtomCompare):\n    def __call__(self, p, mol1, atom1, mol2, atom2):\n        a1 = mol1.GetAtomWithIdx(atom1)\n        a2 = mol2.GetAtomWithIdx(atom2)\n        a1_is_dummy = (a1.GetAtomicNum() == 0)\n        a2_is_dummy = (a2.GetAtomicNum() == 0)\n        if a1_is_dummy ^ a2_is_dummy:\n            atoms = (a1, a2)\n            dummy_atom_idx = 0 if a1_is_dummy else 1\n            other_atom_idx = 1 - dummy_atom_idx\n            return atoms[dummy_atom_idx].GetDegree() == 1 and atoms[other_atom_idx].GetDegree() &gt; 1\n        if a1.GetAtomicNum() != a2.GetAtomicNum():\n            return False\n        return self.CheckAtomRingMatch(p, mol1, atom1, mol2, atom2)\n\n\nclass EnforceDummyAcceptance(rdFMCS.MCSAcceptance):\n    def __call__(self, mol1, mol2, atom_idx_match, bond_idx_match, params):\n        for mol1_atom_idx, mol2_atom_idx in atom_idx_match:\n            if mol1.GetAtomWithIdx(mol1_atom_idx).GetAtomicNum() == 0:\n                return True \n            if mol2.GetAtomWithIdx(mol2_atom_idx).GetAtomicNum() == 0:\n                return True\n        return False\n\n\nmols = [\n    Chem.MolFromSmiles(smi) for smi in [\n    \"OC(=O)CCc1c(C)ccc2ccccc12\",\n    \"c1(C)cc(cccc2)c2c(*)c1\"\n    ]\n]\n\n\nMolsToGridImage(mols, subImgSize=(300, 200))\n\n\n\n\n\n\n\n\nIf we set neither a custom AtomCompare class nor a custom MCSAcceptance but rather only request BondCompareParameters.RingMatchesRingOnly and BondCompareParameters.CompleteRingsOnly and set StoreAll to True, the only MCS found will be 2-naphthalene:\n\nparams = rdFMCS.MCSParameters()\nparams.BondCompareParameters.RingMatchesRingOnly = True\nparams.BondCompareParameters.CompleteRingsOnly = True\nparams.StoreAll = True\n\n\nmcs = rdFMCS.FindMCS(mols, params)\n\n\nmcs.numAtoms, mcs.numBonds\n\n(11, 12)\n\n\n\nlen(mcs.degenerateSmartsQueryMolDict)\n\n1\n\n\n\nsmarts_string, query_mol = tuple(mcs.degenerateSmartsQueryMolDict.items())[0]\n\n\nsmarts_string\n\n'[#6]1(-&!@[#6]):&@[#6]:&@[#6]2:&@[#6]:&@[#6]:&@[#6]:&@[#6]:&@[#6]:&@2:&@[#6]:&@[#6]:&@1'\n\n\n\nMolsToGridImage(mols, subImgSize=(300, 200), highlightAtomLists=[m.GetSubstructMatch(query_mol) for m in mols])\n\n\n\n\n\n\n\n\nInstead, if in addiiton to the above we specify the custom TerminalDummyMatchesAnyNonTerminalAtom AtomCompare subclass allowing dummy atoms to match any other atom, we will find two degenerate MCSs:\n\nparams = rdFMCS.MCSParameters()\nparams.AtomTyper = TerminalDummyMatchesAnyNonTerminalAtom()\nparams.BondCompareParameters.RingMatchesRingOnly = True\nparams.BondCompareParameters.CompleteRingsOnly = True\nparams.StoreAll = True\n\n\nmcs = rdFMCS.FindMCS(mols, params)\n\n\nmcs.numAtoms, mcs.numBonds\n\n(11, 12)\n\n\n\nlen(mcs.degenerateSmartsQueryMolDict)\n\n2\n\n\n\nmcs.degenerateSmartsQueryMolDict\n\n{'[#6]1(-&!@[#6]):&@[#6]:&@[#6]:&@[#6]2:&@[#6]:&@[#6]:&@[#6]:&@[#6]:&@[#6]:&@2:&@[#6]:&@1': &lt;rdkit.Chem.rdchem.Mol at 0x215946566c0&gt;,\n '[#6]1:&@[#6]:&@[#6]2:&@[#6](:&@[#6](-&!@[#0,#6]):&@[#6]:&@1):&@[#6]:&@[#6]:&@[#6]:&@[#6]:&@2': &lt;rdkit.Chem.rdchem.Mol at 0x21594656810&gt;}\n\n\nBelow I display I display all degenerate MCSs found, labelled with their respective SMARTS pattern:\n\nmols_highlights_smarts_list = [[mols, [m.GetSubstructMatch(query) for m in mols], [smarts for _ in mols]] for smarts, query in mcs.degenerateSmartsQueryMolDict.items()]\n\n\nmols_to_display, highlight_atom_lists, legends = [sum(item, []) for item in map(list, list(zip(*mols_highlights_smarts_list)))]\n\n\nMolsToGridImage(mols_to_display, molsPerRow=2, subImgSize=(300, 200), highlightAtomLists=highlight_atom_lists, legends=legends)\n\n\n\n\n\n\n\n\nAs expected, since we allowed terminal dummies to match any non-terminal atom, we get both 1- and 2-naphthalene as degenerate MCSs.\nFinally, if in addition to the above we also use EnforceDummyAcceptance as custom MCSAcceptance criterion enforcing that the dummy atom should be part of the MCS if possible, we will again get a single MCS, i.e. 1-naphthalene as it is the only one including the dummy atom:\n\nparams = rdFMCS.MCSParameters()\nparams.AtomTyper = TerminalDummyMatchesAnyNonTerminalAtom()\nparams.BondCompareParameters.RingMatchesRingOnly = True\nparams.BondCompareParameters.CompleteRingsOnly = True\nparams.ShouldAcceptMCS = EnforceDummyAcceptance()\nparams.StoreAll = True\n\n\nmcs = rdFMCS.FindMCS(mols, params)\n\n\nmcs.numAtoms, mcs.numBonds\n\n(11, 12)\n\n\n\nlen(mcs.degenerateSmartsQueryMolDict)\n\n1\n\n\n\nsmarts_string, query_mol = tuple(mcs.degenerateSmartsQueryMolDict.items())[0]\n\n\nsmarts_string\n\n'[#6]1:&@[#6]:&@[#6]2:&@[#6](:&@[#6](-&!@[#0,#6]):&@[#6]:&@1):&@[#6]:&@[#6]:&@[#6]:&@[#6]:&@2'\n\n\n\nMolsToGridImage(mols, subImgSize=(300, 200), highlightAtomLists=[m.GetSubstructMatch(query_mol) for m in mols])"
  },
  {
    "objectID": "posts/2024-10-22-using-acs1996-style-in-pandastools.html",
    "href": "posts/2024-10-22-using-acs1996-style-in-pandastools.html",
    "title": "Using the ACS1996 drawing style in PandasTools",
    "section": "",
    "text": "This is a short one showing how to improve the legibility of small structure drawings in Pandas DataFrames displayed in the notebook.\n\nfrom rdkit import Chem\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit.Chem import PandasTools\nPandasTools.RenderImagesInAllDataFrames(True)\n\nStart by reading in an SDF:\n\ndf = PandasTools.LoadSDF('../data/chembl26_very_active.sdf.gz')\ndf.head()\n\n[04:36:24] Warning: ambiguous stereochemistry - zero final chiral volume - at atom 50 ignored\n[04:36:25] Warning: ambiguous stereochemistry - overlapping neighbors  - at atom 7 ignored\n[04:36:25] Warning: ambiguous stereochemistry - overlapping neighbors  - at atom 9 ignored\n[04:36:25] Warning: ambiguous stereochemistry - overlapping neighbors  - at atom 9 ignored\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncompound_chembl_id\nassay_chembl_id\ntarget_chembl_id\npref_name\nstandard_relation\nstandard_value\nstandard_units\nstandard_type\nID\nROMol\n\n\n\n\n0\nCHEMBL86971\nCHEMBL690412\nCHEMBL243\nHuman immunodeficiency virus type 1 protease\n=\n0.8\nnM\nKi\n\n\n\n\n\n\n1\nCHEMBL6710\nCHEMBL621508\nCHEMBL324\nSerotonin 2c (5-HT2c) receptor\n=\n0.26\nnM\nKi\n\n\n\n\n\n\n2\nCHEMBL314218\nCHEMBL677606\nCHEMBL248\nLeukocyte elastase\n=\n0.03\nnM\nKi\n\n\n\n\n\n\n3\nCHEMBL438897\nCHEMBL877834\nCHEMBL1855\nGonadotropin-releasing hormone receptor\n=\n0.24\nnM\nKi\n\n\n\n\n\n\n4\nCHEMBL15928\nCHEMBL616937\nCHEMBL1983\nSerotonin 1d (5-HT1d) receptor\n=\n0.7\nnM\nKi\n\n\n\n\n\n\n\n\n\n\n\nMove the molecule to the first column\n\ncols = list(df.columns)\ncols.insert(0,cols.pop(-1))\ndf = df[cols]\ndf.head()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nROMol\ncompound_chembl_id\nassay_chembl_id\ntarget_chembl_id\npref_name\nstandard_relation\nstandard_value\nstandard_units\nstandard_type\nID\n\n\n\n\n0\n\n\n\nCHEMBL86971\nCHEMBL690412\nCHEMBL243\nHuman immunodeficiency virus type 1 protease\n=\n0.8\nnM\nKi\n\n\n\n1\n\n\n\nCHEMBL6710\nCHEMBL621508\nCHEMBL324\nSerotonin 2c (5-HT2c) receptor\n=\n0.26\nnM\nKi\n\n\n\n2\n\n\n\nCHEMBL314218\nCHEMBL677606\nCHEMBL248\nLeukocyte elastase\n=\n0.03\nnM\nKi\n\n\n\n3\n\n\n\nCHEMBL438897\nCHEMBL877834\nCHEMBL1855\nGonadotropin-releasing hormone receptor\n=\n0.24\nnM\nKi\n\n\n\n4\n\n\n\nCHEMBL15928\nCHEMBL616937\nCHEMBL1983\nSerotonin 1d (5-HT1d) receptor\n=\n0.7\nnM\nKi\n\n\n\n\n\n\n\n\nThe default drawing style doesn’t look great when the molecule images are small like this; the ACS1996 style really works a lot better.\nWe can use the ACS996 style in the DataFrame by setting the drawing options for PandasTools. We do this by creating a new drawing options instance, setting that to ACS1996 mode, and then setting the drawOptions variable in the PandasTools module.\n\ndopts = Draw.MolDrawOptions()\nDraw.SetACS1996Mode(dopts,Draw.MeanBondLength(df.ROMol[0]))\n\nPandasTools.drawOptions = dopts\n\nThe new options are now used when we show the DataFrame:\n\ndf.head()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nROMol\ncompound_chembl_id\nassay_chembl_id\ntarget_chembl_id\npref_name\nstandard_relation\nstandard_value\nstandard_units\nstandard_type\nID\n\n\n\n\n0\n\n\n\nCHEMBL86971\nCHEMBL690412\nCHEMBL243\nHuman immunodeficiency virus type 1 protease\n=\n0.8\nnM\nKi\n\n\n\n1\n\n\n\nCHEMBL6710\nCHEMBL621508\nCHEMBL324\nSerotonin 2c (5-HT2c) receptor\n=\n0.26\nnM\nKi\n\n\n\n2\n\n\n\nCHEMBL314218\nCHEMBL677606\nCHEMBL248\nLeukocyte elastase\n=\n0.03\nnM\nKi\n\n\n\n3\n\n\n\nCHEMBL438897\nCHEMBL877834\nCHEMBL1855\nGonadotropin-releasing hormone receptor\n=\n0.24\nnM\nKi\n\n\n\n4\n\n\n\nCHEMBL15928\nCHEMBL616937\nCHEMBL1983\nSerotonin 1d (5-HT1d) receptor\n=\n0.7\nnM\nKi\n\n\n\n\n\n\n\n\nThe ACS1996 style will also be used when we do things like generate an XLSX file:\n\nPandasTools.SaveXlsxFromFrame(df.head(100),'../data/output.xlsx')\n\nAs an aside: we can also set ACS1996 mode for the rendering in the notebook;\n\nDraw.SetACS1996Mode(IPythonConsole.drawOptions,Draw.MeanBondLength(df.ROMol[0]))\n\ndf.ROMol[0]\n\n\n\n\n\n\n\n\nThat style is also used in Draw.MolsToGridImage():\n\nDraw.MolsToGridImage(df.ROMol[:8],molsPerRow=4)"
  },
  {
    "objectID": "posts/2023-02-10-more-on-constrained-embedding.html",
    "href": "posts/2023-02-10-more-on-constrained-embedding.html",
    "title": "More on constrained embedding",
    "section": "",
    "text": "This is a reformatted and lightly revised version of a blog post from 2019.\nQuite a while ago I did a blog post showing how to use the Python function AllChem.ConstrainedEmbed() to generate conformers where the positions of a set of atoms are constrained to match the coordinates of a template molecule. More recently a question came up on the mailing list about how to use the core embedding functionality that lies underneath AllChem.ConstrainedEmbed(); this short post will look at that.\nfrom rdkit import Chem\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit.Chem.Draw import rdDepictor\nrdDepictor.SetPreferCoordGen(True)\nIPythonConsole.molSize = (350,350)\nfrom rdkit.Chem import AllChem\nimport math\nimport rdkit\nprint(rdkit.__version__)\n\n2022.09.4\nWe’re going to work with cyclosporine here, since it’s delightfully complicated, which makes it fun. :-) In this case we’re going to ignore atomic stereochemistry in order to speed the conformer generation up (the RDKit tends to take a while to generate conformers for molecules with a large number of stereocenters).\nWe’ll also define the macrocylce as the core; this is what we’re going to use to provide constraints.\nm = Chem.MolFromSmiles('C/C=C/CC(C)C(O)C1C(=O)NC(CC)C(=O)N(C)CC(=O)N(C)C(CC(C)C)C(=O)NC(C(C)C)C(=O)N(C)C(CC(C)C)C(=O)NC(C)C(=O)NC(C)C(=O)N(C)C(CC(C)C)C(=O)N(C)C(CC(C)C)C(=O)N(C)C(C(C)C)C(=O)N1C')\nrdDepictor.Compute2DCoords(m)\n\ncore = Chem.MolFromSmiles('C1C(=O)NCC(=O)NCC(=O)NCC(=O)NCC(=O)NCC(=O)NCC(=O)NCC(=O)NCC(=O)NCC(=O)NCC(=O)N1')\nm.GetSubstructMatch(core)\nm\nStart by generating a conformer for cyclosporine itself.\nmh = Chem.AddHs(m)\nAllChem.EmbedMolecule(mh,randomSeed=0xf00d)\n\n0\nFor the other molecule, we’ll take a molecule I pulled from ChEMBL that includes the core. I also removed stereochemistry here.\nsmi = 'CCC1NC(=O)C(C(O)C(C)CCCC(=O)OC)N(C)C(=O)C(C(C)C)N(C)C(=O)C(CC(C)C)N(C)C(=O)C(CC(C)C)N(C)C(=O)C(C)NC(=O)C(C)NC(=O)C(CC(C)C)N(C)C(=O)C(C(C)C)NC(=O)C(CC(C)C)N(C)C(=O)CN(C)C1=O'\nnewm = Chem.MolFromSmiles(smi)\nrdDepictor.Compute2DCoords(newm)\nnewm.GetSubstructMatch(core)\nnewm\nGenerate an unconstrained conformer for that:\nnewmh = Chem.AddHs(newm)\nAllChem.EmbedMolecule(newmh,randomSeed=0xf00d)\n\n0\nNow calculate the RMSD between the core atoms in cylosporine and in our test molecule.\nm_match = mh.GetSubstructMatch(core)\nnewm_match = newmh.GetSubstructMatch(core)\ndelta2 = 0.0\nfor mi,newmi in zip(m_match,newm_match):\n    d = (mh.GetConformer().GetAtomPosition(mi) - newmh.GetConformer().GetAtomPosition(newmi)).LengthSq()\n    delta2 += d\nprint('core RMSD:',math.sqrt(delta2/len(m_match)))\n\ncore RMSD: 7.101400868778492\nThere’s no reason to expect this RMSD to be anything other than huge: we’re using different conformer of a flexible core and haven’t aligned them to each other.\nWe can go ahead and do an alignmeent and see how that affects the RMSD:\nAllChem.AlignMol(newmh,mh,atomMap = list(zip(newm_match,m_match)))\ndelta2 = 0.0\nfor mi,newmi in zip(m_match,newm_match):\n    d = (mh.GetConformer().GetAtomPosition(mi) - newmh.GetConformer().GetAtomPosition(newmi)).LengthSq()\n    delta2 += d\nprint('aligned core RMSD:',math.sqrt(delta2/len(m_match)))\n\naligned core RMSD: 2.067717832557964\nAgain, it’s not surprising that this is a large RMSD: the core is quite flexible and we haven’t constrained it at all.\nAdding constraints is the point of this blog post though, so let’s move onto that.\nAllChem.EmbedMolecule() can be given constraints for the positions of certain atoms using the coordMap argument, which expects a dictionary that provides a Point3D for each atom that should have a fixed position.\ncmap = {newm_match[i]:mh.GetConformer().GetAtomPosition(m_match[i]) for i in range(len(m_match))}\nAllChem.EmbedMolecule(newmh,randomSeed=0xf00d,coordMap=cmap)\ndelta2 = 0.0\nfor mi,newmi in zip(m_match,newm_match):\n    d = (mh.GetConformer().GetAtomPosition(mi) - newmh.GetConformer().GetAtomPosition(newmi)).LengthSq()\n    delta2 += d\nprint('core RMSD:',math.sqrt(delta2/len(m_match)))\n\ncore RMSD: 2.5231352176127078\nWait… what happened here? Shouldn’t this number be smaller since we introduced constraints? This was the question on the mailing list.\nThe function AllChem.EmbedMolecule() uses the coordinates provided in coordMap to set elements of the distance bounds matrix that is used to generate conformers (details about the RDKit’s distance-geometry-based conformer generator are in the documentation). This results in conformers where the distances between the atoms in the conformer closely match the corresponding distances in the coordMap.\nNote that, because the coordinates are being constrained using the distances between them, you should expect rigid shifts of the core atoms relative to the constraints. This is solveable by aligning the core of the test molecule to the core of the reference:\nAllChem.AlignMol(newmh,mh,atomMap = list(zip(newm_match,m_match)))\ndelta2 = 0.0\nfor mi,newmi in zip(m_match,newm_match):\n    d = (mh.GetConformer().GetAtomPosition(mi) - newmh.GetConformer().GetAtomPosition(newmi)).LengthSq()\n    delta2 += d\nprint('aligned core RMSD:',math.sqrt(delta2/len(m_match)))\n\naligned core RMSD: 0.9007025663628238\nNote that the output coordinates don’t match the constraint coordinates exactly. This will almost always be the case; they should be close, but some differences are, unforunately, expected due to the nature of the algorithm.\nAn alternative is to use random coordinate embedding instead of the usual distance-bounds embedding to generate the initial coordinates in the conformer generation. When we do this it’s possible to get exact coordinate matches of the core and no alignment is necessary. Random-coordinate embedding is not the default because the current RDKit implementation tends to be slower than the other approach.\nAllChem.EmbedMolecule(newmh,randomSeed=0xf00d,coordMap=cmap,useRandomCoords=True)\ndelta2 = 0.0\nfor mi,newmi in zip(m_match,newm_match):\n    d = (mh.GetConformer().GetAtomPosition(mi) - newmh.GetConformer().GetAtomPosition(newmi)).LengthSq()\n    delta2 += d\nprint('core RMSD:',math.sqrt(delta2/len(m_match)))\n\ncore RMSD: 0.0\nIt’s worth taking a look at the conformers of our molecules. We’ll do that using py3Dmol. This code snippet uses a bit of convenience functionality that the RDKit’s IPythonConsole provides, but it also demonstrates how to draw molecules with different colors.\nimport py3Dmol\ndef drawit(ms, p=None, confId=-1, removeHs=True,colors=('cyanCarbon','redCarbon','blueCarbon')):\n        if p is None:\n            p = py3Dmol.view(width=400, height=400)\n        p.removeAllModels()\n        for i,m in enumerate(ms):\n            if removeHs:\n                m = Chem.RemoveHs(m)\n            IPythonConsole.addMolToView(m,p,confId=confId)\n            p.setStyle({'model':-1,},\n                            {'stick':{'colorscheme':colors[i%len(colors)]}})\n        p.zoomTo()\n        return p.show()\ndrawit((mh,newmh))\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol\nHere one molecule is drawn with cyan bonds and the other with red bonds."
  },
  {
    "objectID": "posts/2023-02-10-more-on-constrained-embedding.html#extra-minimize-with-constraints",
    "href": "posts/2023-02-10-more-on-constrained-embedding.html#extra-minimize-with-constraints",
    "title": "More on constrained embedding",
    "section": "Extra: minimize with constraints",
    "text": "Extra: minimize with constraints\n\nfrom rdkit.Chem import rdForceFieldHelpers\nmcp = Chem.Mol(newmh)\nmmffps = rdForceFieldHelpers.MMFFGetMoleculeProperties(mcp)\nff = rdForceFieldHelpers.MMFFGetMoleculeForceField(mcp,mmffps)\nmaxIters = 10\nwhile ff.Minimize(maxIts=1000) and maxIters&gt;0:\n    maxIters -= 1\n\n\ndelta2 = 0.0\nfor mi,newmi in zip(m_match,newm_match):\n    d = (mh.GetConformer().GetAtomPosition(mi) - mcp.GetConformer().GetAtomPosition(newmi)).LengthSq()\n    delta2 += d\nprint('core RMSD:',math.sqrt(delta2/len(m_match)))\n\ncore RMSD: 2.313775204899967\n\n\n\ndrawit((mh,mcp))\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol\n        \n\n\n\nThat’s messed up the core coordinates… we can fix that by adding some position constraints to the force field:\n\nmcp = Chem.Mol(newmh)\nmmffps = rdForceFieldHelpers.MMFFGetMoleculeProperties(mcp)\nff = rdForceFieldHelpers.MMFFGetMoleculeForceField(mcp,mmffps)\nfor atidx in newm_match:\n    ff.MMFFAddPositionConstraint(atidx,0.05,200)\nmaxIters = 10\nwhile ff.Minimize(maxIts=1000) and maxIters&gt;0:\n    maxIters -= 1\n\n\ndelta2 = 0.0\nfor mi,newmi in zip(m_match,newm_match):\n    d = (mh.GetConformer().GetAtomPosition(mi) - mcp.GetConformer().GetAtomPosition(newmi)).LengthSq()\n    delta2 += d\nprint('core RMSD:',math.sqrt(delta2/len(m_match)))\n\ncore RMSD: 0.12659186987312163\n\n\nMuch better!\n\ndrawit((mh,mcp))\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol"
  },
  {
    "objectID": "posts/2025-01-10-fp-generators-and-invariants.html",
    "href": "posts/2025-01-10-fp-generators-and-invariants.html",
    "title": "Using custom atom and bond invariants with fingerprint generators",
    "section": "",
    "text": "When using the RDKit fingerprint generators - there is a tutorial on using these - it’s possible to change the invariants that are used to describe the atoms and/or bonds. This post provides a short intro to how to do that.\n\nfrom rdkit import Chem\nfrom rdkit.Chem import rdFingerprintGenerator\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit import DataStructs\nimport rdkit\nprint(rdkit.__version__)\n\n2024.09.4\n\n\nFor this blog post I’m going to use the Morgan fingerprint generator, but this approach works for any fingerprint generator.\n\nfpg = rdFingerprintGenerator.GetMorganGenerator()\n\nWe’ll start by looking at atom invariants, so construct two molecules that differ in a single atom:\n\nm1 = Chem.MolFromSmiles('c1ccccc1')\nm2 = Chem.MolFromSmiles('c1ccccn1')\n\nGenerate fingerprints for those and calculate the similarity between them:\n\nfps = [fpg.GetFingerprint(m) for m in (m1,m2)]\nprint(DataStructs.TanimotoSimilarity(fps[0],fps[1]))\n\n0.2727272727272727\n\n\nThe GetFingerprint() function takes an optional argument, customAtomInvariants, that allows you to provide the atom invariants that are used.\nHere’s how that works. We’ll use a simple function that just uses the explicit degree (number of explicit bonds) of the atom as its invariant:\n\natomGen = lambda atom: atom.GetDegree()*1000\n\n# generate fingerprints using the custom invariants:\nfps_ats = [fpg.GetFingerprint(m,customAtomInvariants=[atomGen(at) for at in m.GetAtoms()]) for m in (m1,m2)]\n\nprint(DataStructs.TanimotoSimilarity(fps_ats[0],fps_ats[1]))\n\n1.0\n\n\nNow the fingerprints are identical\nWe can do the same thing for bond invariants.\nTo simplify the demonstration, I will just kekulize the first molecule so that it has alternating single and double bonds instead of aromatic bonds:\n\nm3 = Chem.Mol(m1)\nChem.Kekulize(m3,clearAromaticFlags=True)\n\nBy default, the similarity between these is quite low:\n\nfps = [fpg.GetFingerprint(m) for m in (m1,m3)]\n\nprint(DataStructs.TanimotoSimilarity(fps[0],fps[1]))\n\n0.14285714285714285\n\n\nHowever, if we define a bond invariant which treats all conjugated bonds the same, the molecules are identical:\n\nbondGen = lambda bond: 10 if bond.GetIsConjugated() else int(2*bond.GetBondTypeAsDouble())\n\nfps_bnds = [fpg.GetFingerprint(m,customBondInvariants=[bondGen(b) for b in m.GetBonds()]) for m in (m1,m3)]\n\nprint(DataStructs.TanimotoSimilarity(fps_bnds[0],fps_bnds[1]))\n\n1.0\n\n\nFinally, an example to show how to combine multiple components into the atom invariants. This is a silly one, but it hopefully demonstrates the idea.\nThe important things here is to make sure that the different pieces of information are stored in different parts of the invariant, so we multiple the degree by 1000 (to ensure a number larger than any possible atomic number) and then add the atomic number.\n\n# define an invariant generator that combines atom degree and atomic number:\natomGen = lambda atom: atom.GetDegree()*1000 + atom.GetAtomicNum()\n\n# generate fingerprints using the custom invariants:\nfps_ats = [fpg.GetFingerprint(m,customAtomInvariants=[atomGen(at) for at in m.GetAtoms()]) for m in (m1,m2)]\n\nprint(DataStructs.TanimotoSimilarity(fps_ats[0],fps_ats[1]))\n\n0.2727272727272727\n\n\nThat’s it for this one, I hope this brief intro was useful!"
  },
  {
    "objectID": "posts/2025-01-18-efficient-molecule-editing.html",
    "href": "posts/2025-01-18-efficient-molecule-editing.html",
    "title": "Efficient molecule editing",
    "section": "",
    "text": "This is another tutorial post, this time looking at editing molecules: adding and removing atoms and bonds.\nfrom rdkit import Chem\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import IPythonConsole\nimport rdkit\nprint(rdkit.__version__)\n\n2024.09.4\nIPythonConsole.drawOptions.addAtomIndices = True\nIPythonConsole.molSize = 300,300\nm = Chem.MolFromSmiles('c1c(Cl)cc(F)cc1O')\nm"
  },
  {
    "objectID": "posts/2025-01-18-efficient-molecule-editing.html#removing-atoms-and-bonds",
    "href": "posts/2025-01-18-efficient-molecule-editing.html#removing-atoms-and-bonds",
    "title": "Efficient molecule editing",
    "section": "Removing atoms and bonds",
    "text": "Removing atoms and bonds\nIf we want to add or remove atoms and bonds we construct an RWMol (a Read/Write molecule) and then call RemoveAtom():\n\nrwm = Chem.RWMol(m)\nrwm.RemoveAtom(8)\nrwm\n\n\n\n\n\n\n\n\nTo remove bonds, we provide the atom indices:\n\nrwm.RemoveBond(4,5)\nrwm\n\n\n\n\n\n\n\n\nThis is a bit awkward since atom numbers change when we remove atoms. We can see this by getting a new copy of the original molecule and removing atom 2:\n\nrwm = Chem.RWMol(m)\nrwm.RemoveAtom(2)\nrwm\n\n\n\n\n\n\n\n\nNow the O is atom 7 instead of being atom 8 and atoms 4 and 5 are no longer connected (the bond we want is between atoms 3 and 4).\nSo when working this way, we need to be sure to remove the atoms in order of decreasing atomic index, and to remove bonds before we remove atoms. Otherwise we get errors or incorrect results:\n\nrwm.RemoveAtom(8)\n\n[05:24:31] \n\n****\nRange Error\nidx\nViolation occurred on line 209 in file /home/conda/feedstock_root/build_artifacts/rdkit-meta_1736094075412/work/Code/GraphMol/ROMol.cpp\nFailed Expression: 8 &lt; 8\n----------\nStacktrace:\n 0# Invar::Invariant::toString[abi:cxx11]() const in /home/glandrum/mambaforge/envs/rdkit_blog/lib/python3.12/site-packages/rdkit/../../../libRDKitRDGeneral.so.1\n 1# Invar::operator&lt;&lt;(std::ostream&, Invar::Invariant const&) in /home/glandrum/mambaforge/envs/rdkit_blog/lib/python3.12/site-packages/rdkit/../../../libRDKitRDGeneral.so.1\n 2# RDKit::ROMol::getAtomWithIdx(unsigned int) in /home/glandrum/mambaforge/envs/rdkit_blog/lib/python3.12/site-packages/rdkit/Chem/../../../../libRDKitGraphMol.so.1\n 3# RDKit::RWMol::removeAtom(unsigned int) in /home/glandrum/mambaforge/envs/rdkit_blog/lib/python3.12/site-packages/rdkit/Chem/../../../../libRDKitGraphMol.so.1\n 4# 0x0000735214F7531E in /home/glandrum/mambaforge/envs/rdkit_blog/lib/python3.12/site-packages/rdkit/Chem/rdchem.so\n 5# boost::python::objects::function::call(_object*, _object*) const in /home/glandrum/mambaforge/envs/rdkit_blog/lib/python3.12/site-packages/rdkit/../../../libboost_python312.so.1.86.0\n 6# 0x00007353092E0779 in /home/glandrum/mambaforge/envs/rdkit_blog/lib/python3.12/site-packages/rdkit/../../../libboost_python312.so.1.86.0\n 7# boost::python::detail::exception_handler::operator()(boost::function_n&lt;void&gt; const&) const in /home/glandrum/mambaforge/envs/rdkit_blog/lib/python3.12/site-packages/rdkit/../../../libboost_python312.so.1.86.0\n 8# 0x00007352EA17E134 in /home/glandrum/mambaforge/envs/rdkit_blog/lib/python3.12/site-packages/rdkit/Chem/rdChemReactions.so\n 9# 0x00007352EA17E184 in /home/glandrum/mambaforge/envs/rdkit_blog/lib/python3.12/site-packages/rdkit/Chem/rdChemReactions.so\n10# 0x00007352F7582864 in /home/glandrum/mambaforge/envs/rdkit_blog/lib/python3.12/site-packages/rdkit/Chem/rdDepictor.so\n11# 0x0000735300D1DD14 in /home/glandrum/mambaforge/envs/rdkit_blog/lib/python3.12/site-packages/rdkit/Chem/rdmolfiles.so\n12# 0x0000735300D1DD64 in /home/glandrum/mambaforge/envs/rdkit_blog/lib/python3.12/site-packages/rdkit/Chem/rdmolfiles.so\n13# 0x0000735309C0A8E4 in /home/glandrum/mambaforge/envs/rdkit_blog/lib/python3.12/site-packages/rdkit/Chem/rdCIPLabeler.so\n14# 0x0000735214F76EF4 in /home/glandrum/mambaforge/envs/rdkit_blog/lib/python3.12/site-packages/rdkit/Chem/rdchem.so\n15# 0x0000735214F09CBD in /home/glandrum/mambaforge/envs/rdkit_blog/lib/python3.12/site-packages/rdkit/Chem/rdchem.so\n16# 0x0000735214F0992D in /home/glandrum/mambaforge/envs/rdkit_blog/lib/python3.12/site-packages/rdkit/Chem/rdchem.so\n17# 0x0000735214F0959D in /home/glandrum/mambaforge/envs/rdkit_blog/lib/python3.12/site-packages/rdkit/Chem/rdchem.so\n18# 0x0000735214F0920D in /home/glandrum/mambaforge/envs/rdkit_blog/lib/python3.12/site-packages/rdkit/Chem/rdchem.so\n19# 0x0000735214F08E7D in /home/glandrum/mambaforge/envs/rdkit_blog/lib/python3.12/site-packages/rdkit/Chem/rdchem.so\n20# 0x0000735308652C04 in /home/glandrum/mambaforge/envs/rdkit_blog/lib/python3.12/site-packages/rdkit/rdBase.so\n21# 0x0000735308652C54 in /home/glandrum/mambaforge/envs/rdkit_blog/lib/python3.12/site-packages/rdkit/rdBase.so\n22# 0x0000735308652CA4 in /home/glandrum/mambaforge/envs/rdkit_blog/lib/python3.12/site-packages/rdkit/rdBase.so\n23# 0x0000735308652CF4 in /home/glandrum/mambaforge/envs/rdkit_blog/lib/python3.12/site-packages/rdkit/rdBase.so\n24# boost::python::handle_exception_impl(boost::function_n&lt;void&gt;) in /home/glandrum/mambaforge/envs/rdkit_blog/lib/python3.12/site-packages/rdkit/../../../libboost_python312.so.1.86.0\n25# 0x00007353092DD3B3 in /home/glandrum/mambaforge/envs/rdkit_blog/lib/python3.12/site-packages/rdkit/../../../libboost_python312.so.1.86.0\n26# _PyObject_MakeTpCall in /home/glandrum/mambaforge/envs/rdkit_blog/bin/python\n27# 0x000055BEF1BF62F7 in /home/glandrum/mambaforge/envs/rdkit_blog/bin/python\n28# PyEval_EvalCode in /home/glandrum/mambaforge/envs/rdkit_blog/bin/python\n29# 0x000055BEF1DB9E2E in /home/glandrum/mambaforge/envs/rdkit_blog/bin/python\n30# 0x000055BEF1BF6BE4 in /home/glandrum/mambaforge/envs/rdkit_blog/bin/python\n31# 0x000055BEF1DB490F in /home/glandrum/mambaforge/envs/rdkit_blog/bin/python\n32# 0x000055BEF1DB5BC7 in /home/glandrum/mambaforge/envs/rdkit_blog/bin/python\n33# 0x000055BEF1BF7A8E in /home/glandrum/mambaforge/envs/rdkit_blog/bin/python\n34# 0x000055BEF1D34E4C in /home/glandrum/mambaforge/envs/rdkit_blog/bin/python\n35# 0x000055BEF1D3492E in /home/glandrum/mambaforge/envs/rdkit_blog/bin/python\n36# _PyObject_Call in /home/glandrum/mambaforge/envs/rdkit_blog/bin/python\n37# 0x000055BEF1BF6F8F in /home/glandrum/mambaforge/envs/rdkit_blog/bin/python\n38# 0x000055BEF1DB490F in /home/glandrum/mambaforge/envs/rdkit_blog/bin/python\n39# 0x000073530CAA225C in /home/glandrum/mambaforge/envs/rdkit_blog/lib/python3.12/lib-dynload/_asyncio.cpython-312-x86_64-linux-gnu.so\n40# 0x000073530CAA29E5 in /home/glandrum/mambaforge/envs/rdkit_blog/lib/python3.12/lib-dynload/_asyncio.cpython-312-x86_64-linux-gnu.so\n41# 0x000055BEF1D0635C in /home/glandrum/mambaforge/envs/rdkit_blog/bin/python\n42# 0x000055BEF1E30D5C in /home/glandrum/mambaforge/envs/rdkit_blog/bin/python\n43# 0x000055BEF1CA7F90 in /home/glandrum/mambaforge/envs/rdkit_blog/bin/python\n44# 0x000055BEF1CFC86B in /home/glandrum/mambaforge/envs/rdkit_blog/bin/python\n45# 0x000055BEF1BF6F8F in /home/glandrum/mambaforge/envs/rdkit_blog/bin/python\n46# PyEval_EvalCode in /home/glandrum/mambaforge/envs/rdkit_blog/bin/python\n47# 0x000055BEF1DB9E2E in /home/glandrum/mambaforge/envs/rdkit_blog/bin/python\n48# 0x000055BEF1CFC86B in /home/glandrum/mambaforge/envs/rdkit_blog/bin/python\n49# PyObject_Vectorcall in /home/glandrum/mambaforge/envs/rdkit_blog/bin/python\n50# 0x000055BEF1BF62F7 in /home/glandrum/mambaforge/envs/rdkit_blog/bin/python\n51# 0x000055BEF1DCEE48 in /home/glandrum/mambaforge/envs/rdkit_blog/bin/python\n52# Py_RunMain in /home/glandrum/mambaforge/envs/rdkit_blog/bin/python\n53# Py_BytesMain in /home/glandrum/mambaforge/envs/rdkit_blog/bin/python\n54# 0x000073530D829D90 in /lib/x86_64-linux-gnu/libc.so.6\n55# __libc_start_main in /lib/x86_64-linux-gnu/libc.so.6\n56# 0x000055BEF1D87131 in /home/glandrum/mambaforge/envs/rdkit_blog/bin/python\n----------\n****\n\n\n\n\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\nCell In[7], line 1\n----&gt; 1 rwm.RemoveAtom(8)\n\nRuntimeError: Range Error\n    idx\n    Violation occurred on line 209 in file Code/GraphMol/ROMol.cpp\n    Failed Expression: 8 &lt; 8\n    RDKIT: 2024.09.4\n    BOOST: \n\n\n\n\n\nrwm.RemoveBond(4,5)  # nothing happens since there is no bond to remove\nrwm\n\n\n\n\n\n\n\n\nSince that’s all kind of a pain, a few years ago we added functionality to allow you to batch the removal of atoms and bonds. The atoms and bonds are not removed until the batch is finished:\n\nrwm = Chem.RWMol(m)\nrwm.BeginBatchEdit() # start a batch\nrwm.RemoveAtom(2)\nrwm.RemoveAtom(8)\nrwm.RemoveBond(4,5)\nrwm.CommitBatchEdit()  # finish the batch\nrwm\n\n\n\n\n\n\n\n\nThis has the added benefit of being a bit faster.\nFinally, when we are done modifying the molecule, we can easily convert back to standard RDKit molecule:\n\nm2 = rwm.GetMol()\nChem.SanitizeMol(m2)\nm2"
  },
  {
    "objectID": "posts/2025-01-18-efficient-molecule-editing.html#adding-atoms-and-bonds",
    "href": "posts/2025-01-18-efficient-molecule-editing.html#adding-atoms-and-bonds",
    "title": "Efficient molecule editing",
    "section": "Adding atoms and bonds",
    "text": "Adding atoms and bonds\nHere’s there’s no equivalent of batch editing, but it’s less important\n\nm = Chem.MolFromSmiles('c1ccc(O)cc1')\nm\n\n\n\n\n\n\n\n\n\nrwm = Chem.RWMol(m)\n\nrwm.AddAtom(Chem.Atom(6))\n\n7\n\n\nThat’s the new atom index, which we can directly use:\n\nrwm.AddBond(4,7,Chem.BondType.SINGLE)\nrwm\n\n\n\n\n\n\n\n\nNotice that the chemistry is wrong here (it’s still showing an implicit H on the O), but sanitization will clear this up:\n\nm2 = rwm.GetMol()\nChem.SanitizeMol(m2)\nm2"
  },
  {
    "objectID": "posts/2025-01-18-efficient-molecule-editing.html#some-gotchas",
    "href": "posts/2025-01-18-efficient-molecule-editing.html#some-gotchas",
    "title": "Efficient molecule editing",
    "section": "Some gotchas",
    "text": "Some gotchas\nThe most likely way to end up with molecules that are in an unhappy state, even though you’ve done (mostly) everything right, involve aromatic heteroatoms. This will come as no surprise if you’ve spent much time working with chemistry in the computer.\nHere’s an example:\n\nm = Chem.MolFromSmiles('c1cccn1C')\nm\n\n\n\n\n\n\n\n\n\nrwm = Chem.RWMol(m)\nrwm.BeginBatchEdit()\nrwm.RemoveAtom(5)\nrwm.CommitBatchEdit()\nrwm\n\n\n\n\n\n\n\n\nThat looks ok, but we can’t sanitize it:\n\nm2 = rwm.GetMol()\nChem.SanitizeMol(m2)\n\n[05:24:37] Can't kekulize mol.  Unkekulized atoms: 0 1 2 3 4\n\n\n\n---------------------------------------------------------------------------\nKekulizeException                         Traceback (most recent call last)\nCell In[20], line 2\n      1 m2 = rwm.GetMol()\n----&gt; 2 Chem.SanitizeMol(m2)\n\nKekulizeException: Can't kekulize mol.  Unkekulized atoms: 0 1 2 3 4\n\n\n\nThis fails because we removed a bond from the aromatic N without updating its implicit H count. We can fix that:\n\nat = rwm.GetAtomWithIdx(4) \nat.SetNoImplicit(True)\nat.SetNumExplicitHs(1)\n\nm2 = rwm.GetMol()\nChem.SanitizeMol(m2)\nm2\n\n\n\n\n\n\n\n\nA similar problem happens when we add bonds to aromatic heteroatoms:\n\nrwm = Chem.RWMol(m2)\naid = rwm.AddAtom(Chem.Atom(6))\nrwm.AddBond(4,aid,Chem.BondType.SINGLE)\nrwm\n\n\n\n\n\n\n\n\n\nm3 = rwm.GetMol()\nChem.SanitizeMol(m3)\n\n[05:24:38] Explicit valence for atom # 4 N, 5, is greater than permitted\n\n\n\n---------------------------------------------------------------------------\nAtomValenceException                      Traceback (most recent call last)\nCell In[23], line 2\n      1 m3 = rwm.GetMol()\n----&gt; 2 Chem.SanitizeMol(m3)\n\nAtomValenceException: Explicit valence for atom # 4 N, 5, is greater than permitted\n\n\n\nThe fix, once again, is to update the implicit H parameters on the aromatic heteroatom:\n\nrwm = Chem.RWMol(m2)\naid = rwm.AddAtom(Chem.Atom(6))\nrwm.AddBond(4,aid,Chem.BondType.SINGLE)\nat = rwm.GetAtomWithIdx(4)\nat.SetNumExplicitHs(0)\nat.SetNoImplicit(False)\nrwm\n\n\n\n\n\n\n\n\n\nm3 = rwm.GetMol()\nChem.SanitizeMol(m3)\nm3\n\n\n\n\n\n\n\n\nAs usual, I hope this was useful."
  },
  {
    "objectID": "posts/2025-01-24-property-tutorial.html",
    "href": "posts/2025-01-24-property-tutorial.html",
    "title": "A tutorial on properties",
    "section": "",
    "text": "RDKit molecules, atoms, bonds, conformers, and reactions support an interface, we call it the property interface, for storing arbitrary data that is used a lot internally but that can also very useful in other code. This post provides a quick overview of how properties work and what you can do with them\n\nfrom rdkit import Chem\n\nimport rdkit\nprint(rdkit.__version__)\n\n2024.09.4\n\n\n\nProperty basics\nThe properties are stored in a key:value data structure (similar to a dictionary in Python). The keys must be strings but the values can be various types.\nOne obvious use of properties is to store the additional data found in an SDF file on the molecule. Here’s an example of that:\n\nimport gzip\nwith gzip.open('/scratch/Data/PubChem/Compound_004500001_005000000.sdf.gz') as inf:\n    suppl = Chem.ForwardSDMolSupplier(inf)\n    ms = [next(suppl) for x in range(10)]\n\nWe can get a list of the properties present:\n\nm = ms[0]\nlist(m.GetPropNames())\n\n['PUBCHEM_COMPOUND_CID',\n 'PUBCHEM_COMPOUND_CANONICALIZED',\n 'PUBCHEM_CACTVS_COMPLEXITY',\n 'PUBCHEM_CACTVS_HBOND_ACCEPTOR',\n 'PUBCHEM_CACTVS_HBOND_DONOR',\n 'PUBCHEM_CACTVS_ROTATABLE_BOND',\n 'PUBCHEM_CACTVS_SUBSKEYS',\n 'PUBCHEM_IUPAC_OPENEYE_NAME',\n 'PUBCHEM_IUPAC_CAS_NAME',\n 'PUBCHEM_IUPAC_NAME_MARKUP',\n 'PUBCHEM_IUPAC_NAME',\n 'PUBCHEM_IUPAC_SYSTEMATIC_NAME',\n 'PUBCHEM_IUPAC_TRADITIONAL_NAME',\n 'PUBCHEM_IUPAC_INCHI',\n 'PUBCHEM_IUPAC_INCHIKEY',\n 'PUBCHEM_XLOGP3_AA',\n 'PUBCHEM_EXACT_MASS',\n 'PUBCHEM_MOLECULAR_FORMULA',\n 'PUBCHEM_MOLECULAR_WEIGHT',\n 'PUBCHEM_OPENEYE_CAN_SMILES',\n 'PUBCHEM_OPENEYE_ISO_SMILES',\n 'PUBCHEM_CACTVS_TPSA',\n 'PUBCHEM_MONOISOTOPIC_WEIGHT',\n 'PUBCHEM_TOTAL_CHARGE',\n 'PUBCHEM_HEAVY_ATOM_COUNT',\n 'PUBCHEM_ATOM_DEF_STEREO_COUNT',\n 'PUBCHEM_ATOM_UDEF_STEREO_COUNT',\n 'PUBCHEM_BOND_DEF_STEREO_COUNT',\n 'PUBCHEM_BOND_UDEF_STEREO_COUNT',\n 'PUBCHEM_ISOTOPIC_ATOM_COUNT',\n 'PUBCHEM_COMPONENT_COUNT',\n 'PUBCHEM_CACTVS_TAUTO_COUNT',\n 'PUBCHEM_COORDINATE_TYPE',\n 'PUBCHEM_BONDANNOTATIONS']\n\n\nAnd then retrieve the property values themselves with GetProp():\n\nm.GetProp('PUBCHEM_MOLECULAR_WEIGHT')\n\n'516.3'\n\n\nGetProp() returns the property values as strings, but we can also get them as specific types by asking for the type:\n\nm.GetDoubleProp('PUBCHEM_MOLECULAR_WEIGHT')\n\n516.3\n\n\n\nm.GetIntProp('PUBCHEM_HEAVY_ATOM_COUNT')\n\n31\n\n\nThe retrieval functions currently supported on molecules are: - GetProp() -&gt; string - GetDoubleProp() -&gt; floating point - GetIntProp() -&gt; integer - GetUnsignedProp() -&gt; unsigned integer - GetBoolProp() -&gt; boolean\nIt’s possible to retrieve all of the properties, with the correct types, in one call:\n\nm.GetPropsAsDict()\n\n{'PUBCHEM_COMPOUND_CID': 4500001,\n 'PUBCHEM_COMPOUND_CANONICALIZED': 1,\n 'PUBCHEM_CACTVS_COMPLEXITY': 626,\n 'PUBCHEM_CACTVS_HBOND_ACCEPTOR': 4,\n 'PUBCHEM_CACTVS_HBOND_DONOR': 1,\n 'PUBCHEM_CACTVS_ROTATABLE_BOND': 7,\n 'PUBCHEM_CACTVS_SUBSKEYS': 'AAADceB7oABHAAAAAAAAAAAAGAAAAWAAAAAwYAAAAAAAAAAB0AAAHgYYAAAADQrF2ySz0IfMEAiqAidydACS0AthB7AdykA4ZoiIKCLBm5HEIAhgnALIyAcQgMAOhABQAAKAABQIAKAABQAAKAAAAAAAAA==',\n 'PUBCHEM_IUPAC_OPENEYE_NAME': '2-[[5-[2-(4-chlorophenyl)cyclopropyl]-4-ethyl-1,2,4-triazol-3-yl]sulfanyl]-N-(2,4,5-trichlorophenyl)acetamide',\n 'PUBCHEM_IUPAC_CAS_NAME': '2-[[5-[2-(4-chlorophenyl)cyclopropyl]-4-ethyl-1,2,4-triazol-3-yl]thio]-N-(2,4,5-trichlorophenyl)acetamide',\n 'PUBCHEM_IUPAC_NAME_MARKUP': '2-[[5-[2-(4-chlorophenyl)cyclopropyl]-4-ethyl-1,2,4-triazol-3-yl]sulfanyl]-&lt;I&gt;N&lt;/I&gt;-(2,4,5-trichlorophenyl)acetamide',\n 'PUBCHEM_IUPAC_NAME': '2-[[5-[2-(4-chlorophenyl)cyclopropyl]-4-ethyl-1,2,4-triazol-3-yl]sulfanyl]-N-(2,4,5-trichlorophenyl)acetamide',\n 'PUBCHEM_IUPAC_SYSTEMATIC_NAME': '2-[[5-[2-(4-chlorophenyl)cyclopropyl]-4-ethyl-1,2,4-triazol-3-yl]sulfanyl]-N-[2,4,5-tris(chloranyl)phenyl]ethanamide',\n 'PUBCHEM_IUPAC_TRADITIONAL_NAME': '2-[[5-[2-(4-chlorophenyl)cyclopropyl]-4-ethyl-1,2,4-triazol-3-yl]thio]-N-(2,4,5-trichlorophenyl)acetamide',\n 'PUBCHEM_IUPAC_INCHI': 'InChI=1S/C21H18Cl4N4OS/c1-2-29-20(14-7-13(14)11-3-5-12(22)6-4-11)27-28-21(29)31-10-19(30)26-18-9-16(24)15(23)8-17(18)25/h3-6,8-9,13-14H,2,7,10H2,1H3,(H,26,30)',\n 'PUBCHEM_IUPAC_INCHIKEY': 'JGFAHFCLMPEOJM-UHFFFAOYSA-N',\n 'PUBCHEM_XLOGP3_AA': 6,\n 'PUBCHEM_EXACT_MASS': 515.992593,\n 'PUBCHEM_MOLECULAR_FORMULA': 'C21H18Cl4N4OS',\n 'PUBCHEM_MOLECULAR_WEIGHT': 516.3,\n 'PUBCHEM_OPENEYE_CAN_SMILES': 'CCN1C(=NN=C1SCC(=O)NC2=CC(=C(C=C2Cl)Cl)Cl)C3CC3C4=CC=C(C=C4)Cl',\n 'PUBCHEM_OPENEYE_ISO_SMILES': 'CCN1C(=NN=C1SCC(=O)NC2=CC(=C(C=C2Cl)Cl)Cl)C3CC3C4=CC=C(C=C4)Cl',\n 'PUBCHEM_CACTVS_TPSA': 85.1,\n 'PUBCHEM_MONOISOTOPIC_WEIGHT': 513.995543,\n 'PUBCHEM_TOTAL_CHARGE': 0,\n 'PUBCHEM_HEAVY_ATOM_COUNT': 31,\n 'PUBCHEM_ATOM_DEF_STEREO_COUNT': 0,\n 'PUBCHEM_ATOM_UDEF_STEREO_COUNT': 2,\n 'PUBCHEM_BOND_DEF_STEREO_COUNT': 0,\n 'PUBCHEM_BOND_UDEF_STEREO_COUNT': 0,\n 'PUBCHEM_ISOTOPIC_ATOM_COUNT': 0,\n 'PUBCHEM_COMPONENT_COUNT': 1,\n 'PUBCHEM_CACTVS_TAUTO_COUNT': -1,\n 'PUBCHEM_COORDINATE_TYPE': '1\\n5\\n255',\n 'PUBCHEM_BONDANNOTATIONS': '11  14  3\\n12  15  3\\n15  16  8\\n15  17  8\\n16  20  8\\n17  21  8\\n20  22  8\\n21  22  8\\n26  27  8\\n26  28  8\\n27  30  8\\n28  29  8\\n29  31  8\\n30  31  8\\n7  14  8\\n7  19  8\\n8  14  8\\n8  9  8\\n9  19  8'}\n\n\nYou can check whether or not a property is there:\n\nm.HasProp('foo')\n\n0\n\n\nAsking for a property that’s not present throws an exception:\n\nm.GetProp('foo')\n\n\n---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\nCell In[9], line 1\n----&gt; 1 m.GetProp('foo')\n\nKeyError: 'foo'\n\n\n\nAnd you can remove properties:\n\nm.ClearProp('PUBCHEM_HEAVY_ATOM_COUNT')\nm.HasProp('PUBCHEM_HEAVY_ATOM_COUNT')\n\n0\n\n\n\n\nSpecial property types\nProperties whose names start with an underscore - _ - are considered to be private and any property can be marked as computed. These properties are not displayed by default by calls to GetPropNames() or GetPropsAsDict() for molecules.\nOne frequently used private property is _Name, which is read from the header of mol files:\n\nm.GetProp('_Name')\n\n'4500001'\n\n\nYou can see the full list of property names by passing the includePrivate and includeComputed flags to GetPropNames() or GetPropsAsDict():\n\nlist(m.GetPropNames(includePrivate=True, includeComputed=True))\n\n['__computedProps',\n '_Name',\n '_MolFileInfo',\n '_MolFileComments',\n '_MolFileChiralFlag',\n 'numArom',\n '_StereochemDone',\n 'PUBCHEM_COMPOUND_CID',\n 'PUBCHEM_COMPOUND_CANONICALIZED',\n 'PUBCHEM_CACTVS_COMPLEXITY',\n 'PUBCHEM_CACTVS_HBOND_ACCEPTOR',\n 'PUBCHEM_CACTVS_HBOND_DONOR',\n 'PUBCHEM_CACTVS_ROTATABLE_BOND',\n 'PUBCHEM_CACTVS_SUBSKEYS',\n 'PUBCHEM_IUPAC_OPENEYE_NAME',\n 'PUBCHEM_IUPAC_CAS_NAME',\n 'PUBCHEM_IUPAC_NAME_MARKUP',\n 'PUBCHEM_IUPAC_NAME',\n 'PUBCHEM_IUPAC_SYSTEMATIC_NAME',\n 'PUBCHEM_IUPAC_TRADITIONAL_NAME',\n 'PUBCHEM_IUPAC_INCHI',\n 'PUBCHEM_IUPAC_INCHIKEY',\n 'PUBCHEM_XLOGP3_AA',\n 'PUBCHEM_EXACT_MASS',\n 'PUBCHEM_MOLECULAR_FORMULA',\n 'PUBCHEM_MOLECULAR_WEIGHT',\n 'PUBCHEM_OPENEYE_CAN_SMILES',\n 'PUBCHEM_OPENEYE_ISO_SMILES',\n 'PUBCHEM_CACTVS_TPSA',\n 'PUBCHEM_MONOISOTOPIC_WEIGHT',\n 'PUBCHEM_TOTAL_CHARGE',\n 'PUBCHEM_ATOM_DEF_STEREO_COUNT',\n 'PUBCHEM_ATOM_UDEF_STEREO_COUNT',\n 'PUBCHEM_BOND_DEF_STEREO_COUNT',\n 'PUBCHEM_BOND_UDEF_STEREO_COUNT',\n 'PUBCHEM_ISOTOPIC_ATOM_COUNT',\n 'PUBCHEM_COMPONENT_COUNT',\n 'PUBCHEM_CACTVS_TAUTO_COUNT',\n 'PUBCHEM_COORDINATE_TYPE',\n 'PUBCHEM_BONDANNOTATIONS']\n\n\n\n\nAdding your own properties\nI’m demonstrating this for molecules, but the same thing works for the other types.\n\nm = Chem.MolFromSmiles('CCC')\nm.SetProp('prop1','val1')\nm.SetIntProp('prop2',2)\nm.SetDoubleProp('prop3',3.14159)\n\nm.GetPropsAsDict()\n\n{'prop1': 'val1', 'prop2': 2, 'prop3': 3.14159}\n\n\n\nm.SetProp('computed1','val', computed=True)\nm.SetProp('_private1','val', computed=False)\n\nm.GetPropsAsDict()\n\n{'prop1': 'val1', 'prop2': 2, 'prop3': 3.14159}\n\n\n\nm.GetPropsAsDict(includeComputed=True)\n\n{'numArom': 0,\n 'prop1': 'val1',\n 'prop2': 2,\n 'prop3': 3.14159,\n 'computed1': 'val'}\n\n\n\nm.GetPropsAsDict(includePrivate=True,includeComputed=True)\n\n{'__computedProps': &lt;rdkit.rdBase._vectNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE at 0x7b88e3f5f040&gt;,\n 'numArom': 0,\n '_StereochemDone': 1,\n 'prop1': 'val1',\n 'prop2': 2,\n 'prop3': 3.14159,\n 'computed1': 'val',\n '_private1': 'val'}\n\n\n\n\nProperties and copying/serialization/pickling\n\nm = Chem.MolFromSmiles('CC')\nm.SetProp('prop1','v1')\nm.SetProp('computed1','v2')\nm.GetAtomWithIdx(0).SetIntProp('aprop',1)\n\nProperties are copied when molecules are copied, either using the RDKit’s recommended approach:\n\nm2 = Chem.Mol(m)\nprint('mol:',list(m2.GetPropNames(includeComputed=True)))\nprint('atom:',list(m2.GetAtomWithIdx(0).GetPropNames(includeComputed=True)))\n\nmol: ['numArom', 'prop1', 'computed1']\natom: ['aprop']\n\n\nOr using the copy module:\n\nimport copy\nm2 = copy.deepcopy(m)\nprint('mol:',list(m2.GetPropNames(includeComputed=True)))\nprint('atom:',list(m2.GetAtomWithIdx(0).GetPropNames(includeComputed=True)))\n\nmol: ['numArom', 'prop1', 'computed1']\natom: ['aprop']\n\n\nProperties are not, by default, captured when molecules are serialized (converted to binary):\n\nm2 = Chem.Mol(m.ToBinary())\nprint('mol:',list(m2.GetPropNames(includeComputed=True)))\nprint('atom:',list(m2.GetAtomWithIdx(0).GetPropNames(includeComputed=True)))\n\nmol: []\natom: []\n\n\nBut you can change this:\n\nm2 = Chem.Mol(m.ToBinary(Chem.PropertyPickleOptions.AllProps))\nprint('mol:',list(m2.GetPropNames(includeComputed=True)))\nprint('atom:',list(m2.GetAtomWithIdx(0).GetPropNames(includeComputed=True)))\n\nmol: ['numArom', 'prop1', 'computed1']\natom: ['aprop']\n\n\nAnd finally, Python’s pickling tool does not serialize properties by default:\n\nimport pickle\n\nm2 = pickle.loads(pickle.dumps(m))\nprint('mol:',list(m2.GetPropNames(includeComputed=True)))\nprint('atom:',list(m2.GetAtomWithIdx(0).GetPropNames(includeComputed=True)))\n\nmol: []\natom: []\n\n\nBut you can change this with a global variable:\n\nChem.SetDefaultPickleProperties(Chem.PropertyPickleOptions.AllProps)\n\nm2 = pickle.loads(pickle.dumps(m))\nprint('mol:',list(m2.GetPropNames(includeComputed=True)))\nprint('atom:',list(m2.GetAtomWithIdx(0).GetPropNames(includeComputed=True)))\n\nmol: ['numArom', 'prop1', 'computed1']\natom: ['aprop']\n\n\n\n\nWriting properties\nBoth the SDWriter and the SmilesWriter can write properties\n\nfrom io import StringIO\nm = Chem.MolFromSmiles('CC')\nm.SetProp('prop1','v1')\nm.SetProp('computed1','v2')\n\nThe SDWriter will by default write all non-private properties (include computed properties):\n\nsio = StringIO()\nwith Chem.SDWriter(sio) as w:\n    w.write(m)\nprint(sio.getvalue())\n\n\n     RDKit          2D\n\n  2  1  0  0  0  0  0  0  0  0999 V2000\n    0.0000    0.0000    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    1.2990    0.7500    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n  1  2  1  0\nM  END\n&gt;  &lt;prop1&gt;  (1) \nv1\n\n&gt;  &lt;computed1&gt;  (1) \nv2\n\n$$$$\n\n\n\nBut you can control which properties are written:\n\nsio = StringIO()\nwith Chem.SDWriter(sio) as w:\n    w.SetProps(['prop1'])\n    w.write(m)\nprint(sio.getvalue())\n\n\n     RDKit          2D\n\n  2  1  0  0  0  0  0  0  0  0999 V2000\n    0.0000    0.0000    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    1.2990    0.7500    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n  1  2  1  0\nM  END\n&gt;  &lt;prop1&gt;  (1) \nv1\n\n$$$$\n\n\n\nThe SmilesWriter doesn’t write properties by default, but we can tell it to:\n\nsio = StringIO()\nwith Chem.SmilesWriter(sio) as w:\n    w.SetProps(m.GetPropNames())\n    w.write(m)\nprint(sio.getvalue())\n\nSMILES Name prop1 computed1\nCC 0 v1 v2"
  },
  {
    "objectID": "posts/2025-02-02-chembl-document-similarity-1.html",
    "href": "posts/2025-02-02-chembl-document-similarity-1.html",
    "title": "ChEMBL Document Similarity",
    "section": "",
    "text": "For a couple of other ideas I want to explore, I need some “clumpy” sets of compounds: a group of compounds with a number of separate clusters of different sizes and cohesiveness (I’m not sure what the right word here is, I mean how tightly packed the cluster is). As I almost always do, I’m going to do this using data from ChEMBL and I will use groups of compounds from individual med chem papers as my clumps. Since I want clumpiness at different similarity ranges, I want to be able to find groups of “related” papers: papers with similar compounds. This post is a first step towards finding those related papers.\nThere’s an old ChEMBL blog post about document similarity. Not too long after that, I did a blog post with a related approach. This time instead of looking at the number of highly similar compounds between papers, I’m going to look at the median similarity between the compounds the papers..\nI start by comparing at the distribution of similarities between compounds in med chem papers to those between papers in order to demonstrate that there is a significant difference there. To do this I pick a random sample of 20000 documents with between 20 and 100 compounds and use the usual Morgan fingerprint with radius 2 (there are plots below for radius 3 as well).\nHere are the distributions of the median compound similarities within the papers and the median similarities between 500K random pairs of papers:\n\n\n\nimage.png\n\n\nThe plot also contains lines showing the threshold values for similarity between random compounds and related compounds taken from this blog post. Unsurprisingly, the intra-paper similarity values tend to be significantly higher than the inter-paper similarity values. The intra-paper similarity values tend to be above the “related” threshold value while the inter-paper values are below the “random” threshold value.\nMoving on to finding related documents. One simple measure for document similarity is to count how many exact matches they have in common. This isn’t particularly interesting for my purposes, so I chose to focus on pairs of documents that have high ratios of compounds that have similarities above the “related” threshold. Here’s the overall distribution for fraction of exact matches, and fraction of pairs above the “random” and “related” thresholds for a set of 20 million random document pairs:\n\n\n\nimage-2.png\n\n\nLooking through the papers with the highest “related” fraction shows that they contain peptides or other large molecules. This is less useful for me, so I’m going to come back to this in a follow-up post where I either limit the size of the compounds considered or use a count-based fingerprint to calculate similarity so that larger molecules don’t automatically have higher similarity scores.|\n\nfrom rdkit import Chem\nfrom rdkit.Chem import rdFingerprintGenerator\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem import rdDepictor\nrdDepictor.SetPreferCoordGen(True)\n\nfrom rdkit import DataStructs\n\nimport numpy as np\n\nfrom matplotlib import pyplot as plt\nplt.style.use('tableau-colorblind10')\n%matplotlib inline\nimport psycopg2\n%load_ext sql\n\nimport rdkit\nprint(rdkit.__version__)\n\n2024.09.4\n\n\n\n%config SqlMagic.feedback = False\n\n\nData collection\nStart by getting a collection of documents with between 20 and 100 compounds; this is my normal heuristic for trying to get med chem papers.\n\n%sql postgresql://localhost/chembl_35 \\\n    select doc_id,count(distinct molregno) cnt into temporary table doc_compound_counts \\\n      from docs join compound_records using (doc_id) join compound_structures using (molregno) \\\n      group by (doc_id);\n\n[]\n\n\n\n%sql \\\n    select count(*) from doc_compound_counts where cnt&gt;=20 and cnt&lt;=100;\n\n * postgresql://localhost/chembl_35\n\n\n\n\n\ncount\n\n\n\n\n34821\n\n\n\n\n\n\ndocs = %sql \\\n   select doc_id from doc_compound_counts tablesample bernoulli(80) repeatable (8723346) \\\n    where cnt&gt;=20 and cnt&lt;=100 limit 20000;\nlen(docs)\n\n * postgresql://localhost/chembl_35\n\n\n20000\n\n\nGenerate fingerprints for the compounds from the papers\n\nfpg2 = rdFingerprintGenerator.GetMorganGenerator(radius=2)\nfpg3 = rdFingerprintGenerator.GetMorganGenerator(radius=3)\n\nfps2 = {}\nfps3 = {}\nfor doc_id in docs:\n    doc_id = doc_id[0]\n    pkls = %sql postgresql://localhost/chembl_35 \\\n        select molregno,mol_to_pkl(m) from rdk.mols join compound_records using (molregno) \\\n        where doc_id=:doc_id\n    ms = [Chem.Mol(x[1].tobytes()) for x in pkls]\n    fps2[doc_id] = fpg2.GetFingerprints(ms)\n    fps3[doc_id] = fpg3.GetFingerprints(ms)\n\n\n\nIntra- and inter-paper similarity distributions\nCalculate intra-paper similarity distributions\n\nsims2 = {}\nsims3 = {}\nfor idx,doc_id in enumerate(docs):\n    if not idx%1000:\n        print(f'Done {idx}')\n    doc_id = doc_id[0]\n    a = []\n    fps = fps2[doc_id]\n    for i in range(1,len(fps)):\n        a.extend(DataStructs.BulkTanimotoSimilarity(fps[i],fps[0:i]))\n    sims2[doc_id] = np.quantile(a,[0.5,0.9,0.95,0.99])\n    a = []\n    fps = fps3[doc_id]\n    for i in range(1,len(fps)):\n        a.extend(DataStructs.BulkTanimotoSimilarity(fps[i],fps[0:i]))\n    sims3[doc_id] = np.quantile(a,[0.5,0.9,0.95,0.99])\n    \n\nDone 0\nDone 1000\nDone 2000\nDone 3000\nDone 4000\nDone 5000\nDone 6000\nDone 7000\nDone 8000\nDone 9000\nDone 10000\nDone 11000\nDone 12000\nDone 13000\nDone 14000\nDone 15000\nDone 16000\nDone 17000\nDone 18000\nDone 19000\n\n\n\nplt.figure(figsize=(8,8))\n\nplt.subplot(2,1,1)\nplt.hist([[x[0] for x in sims2.values()],[x[0] for x in sims3.values()]],bins=20,label=(['mfp2','mfp3']));\nplt.xlabel('median intra-doc similarity');\nplt.legend();\n\nplt.subplot(2,1,2)\nplt.hist([[x[2] for x in sims2.values()],[x[2] for x in sims3.values()]],bins=20,label=(['mfp2','mfp3']));\nplt.xlabel('95% intra-doc similarity');\nplt.legend();\n\n\n\n\n\n\n\n\nNow calculate the inter-paper similarity distributions; I’ll choose 500,000 random pairs for this:\n\ntarget = 500000\n\nimport random\nimport math\nimport time\n# from: https://stackoverflow.com/a/55245866\ndef decode(i):\n    k = math.floor((1+math.sqrt(1+8*i))/2)\n    return k,i-k*(k-1)//2\n\ndef rand_pairs(n,m):\n    return [decode(i) for i in random.sample(range(n*(n-1)//2),m)]\n\npairs = rand_pairs(len(docs),target)\npairs = [(docs[i][0],docs[j][0]) for i,j in pairs]\n       \n        \ninter_sims2 = {}\nrelated_sims2 = {}\ninter_sims3 = {}\nrelated_sims3 = {}\nfor idx in range(target):\n    if not idx%(target//20):\n        print(f'Done {idx}')\n    di,dj = pairs[idx]\n   \n    a = []\n    fpsi = fps2[di]\n    fpsj = fps2[dj]\n    for i in range(len(fpsi)):\n        a.extend(DataStructs.BulkTanimotoSimilarity(fpsi[i],fpsj))\n    inter_sims2[(di,dj)] = np.quantile(a,[0.5,0.9,0.95,0.99])\n    related_sims2[(di,dj)] = (len([1 for x in a if x&gt;0.27]),len([1 for x in a if x&gt;0.4]),len(fpsi),len(fpsj))\n\n    a = []\n    fpsi = fps3[di]\n    fpsj = fps3[dj]\n    for i in range(len(fpsi)):\n        a.extend(DataStructs.BulkTanimotoSimilarity(fpsi[i],fpsj))\n    inter_sims3[(di,dj)] = np.quantile(a,[0.5,0.9,0.95,0.99])\n    related_sims3[(di,dj)] = (len([1 for x in a if x&gt;0.22]),len([1 for x in a if x&gt;0.3]),len(fpsi),len(fpsj) )\n\nDone 0\nDone 25000\nDone 50000\nDone 75000\nDone 100000\nDone 125000\nDone 150000\nDone 175000\nDone 200000\nDone 225000\nDone 250000\nDone 275000\nDone 300000\nDone 325000\nDone 350000\nDone 375000\nDone 400000\nDone 425000\nDone 450000\nDone 475000\n\n\nCompare the intra- and inter-paper distributions.\nThe line labeled noise in the plot below is the “noise level” for the fingerprint - the 95% threshold for similarity between random compound. The dashed line labeled “related” is the threshold level for compounds which are related to each other. You can find more information about these definitions in this blog post\n\nplt.figure(figsize=(8,8))\n\nplt.subplot(2,1,1)\nplt.hist([[x[0] for x in sims2.values()],[x[0] for x in inter_sims2.values()]],bins=20,\n         label=(['intra-document','inter-document']),density=True);\nymax = plt.ylim()[1]\nplt.plot([0.27,0.27],[0,ymax],'k-',label='noise')\nplt.plot([0.4,0.4],[0,ymax],'k--',label='related')\nplt.xlabel('median mfp2 similarity');\nplt.legend();\n\nplt.subplot(2,1,2)\nplt.hist([[x[2] for x in sims2.values()],[x[2] for x in inter_sims2.values()]],bins=20,\n         label=(['intra-document','inter-document']),density=True);\nymax = plt.ylim()[1]\nplt.plot([0.22,0.22],[0,ymax],'k-',label='noise')\nplt.plot([0.35,0.35],[0,ymax],'k--',label='related')\nplt.xlabel('95% mfp2 similarity');\nplt.legend();\n\n\n\n\n\n\n\n\nGet just the first of those plots, because that’s what we’ll use in the summary above:\n\nplt.figure(figsize=(8,4))\n\nplt.hist([[x[0] for x in sims2.values()],[x[0] for x in inter_sims2.values()]],bins=20,\n         label=(['intra-document','inter-document']),density=True);\nymax = plt.ylim()[1]\nplt.plot([0.27,0.27],[0,ymax],'k-',label='noise')\nplt.plot([0.4,0.4],[0,ymax],'k--',label='related')\nplt.xlabel('median mfp2 similarity');\nplt.legend();\n\n\n\n\n\n\n\n\n\nnp.quantile([x[0] for x in sims2.values()],[0.5,0.9,0.95,0.99])\n\narray([0.48979592, 0.65753425, 0.7       , 0.78703901])\n\n\n\nnp.quantile([x[0] for x in inter_sims2.values()],[0.5,0.9,0.95,0.99])\n\narray([0.10227273, 0.14      , 0.15306122, 0.18390805])\n\n\n\n\nFinding related documents\nGet the molregnos for the compounds in all the papers. We will use these to identify overlapping compounds and to retrieve the compounds themselves\n\nmrns = {}\nfor doc_id in docs:\n    doc_id = doc_id[0]\n    pkls = %sql postgresql://localhost/chembl_35 \\\n        select molregno from rdk.mols join compound_records using (molregno) \\\n        where doc_id=:doc_id\n    mrns[doc_id] = [x[0] for x in pkls]\n\n\n(len(docs)*(len(docs)-1))//2\n\n199990000\n\n\nI’ll look at 10,000,000 random pairs of documents:\n\npairs2 = rand_pairs(len(docs),10000000)\npairs2 = [(docs[i][0],docs[j][0]) for i,j in pairs2]\n\nFor each pair calculate the number of compounds in common and the fractions of compound pairs with similarity values above the random and related thresholds.\n\nmrn_overlaps = []\nnoise_sim_overlaps = []\nrelated_sim_overlaps = []\n\nfor idx in range(len(pairs2)):\n    if not idx%(len(pairs2)//20):\n        print(f'Done {idx}')\n    di,dj = pairs2[idx]\n   \n    mrnsi = set(mrns[di])\n    mrnsj = set(mrns[dj])\n    mrn_overlaps.append(len(mrnsi.intersection(mrnsj))/(len(mrnsi)+len(mrnsj)-len(mrnsi.intersection(mrnsj))))\n    \n    if (di,dj) not in related_sims2:\n        a = []\n        fpsi = fps2[di]\n        fpsj = fps2[dj]\n        for i in range(len(fpsi)):\n            a.extend(DataStructs.BulkTanimotoSimilarity(fpsi[i],fpsj))\n        inter_sims2[(di,dj)] = np.quantile(a,[0.5,0.9,0.95,0.99])\n        related_sims2[(di,dj)] = (len([1 for x in a if x&gt;0.27]),len([1 for x in a if x&gt;0.4]),len(fpsi),len(fpsj))   \n    \n    noise,related,ni,nj = related_sims2[(di,dj)]\n    denom = ni*nj\n    noise_sim_overlaps.append(noise/denom)\n    related_sim_overlaps.append(related/denom)\n    \n\nDone 0\nDone 500000\nDone 1000000\nDone 1500000\nDone 2000000\nDone 2500000\nDone 3000000\nDone 3500000\nDone 4000000\nDone 4500000\nDone 5000000\nDone 5500000\nDone 6000000\nDone 6500000\nDone 7000000\nDone 7500000\nDone 8000000\nDone 8500000\nDone 9000000\nDone 9500000\n\n\n\nlen(inter_sims2),len([1 for v in inter_sims2.values() if v[0]&gt;0.27]),len([1 for v in inter_sims2.values() if v[0]&gt;0.4])\n\n(10474902, 6329, 707)\n\n\nLook at the fraction of exact matches, the fraction of pairs of compounds with similarity above the random threshold, and the fraction of pairs of compounds with similarity above the related threshold:\n\nplt.figure(figsize=(8,4))\n\nplt.hist([mrn_overlaps,noise_sim_overlaps,related_sim_overlaps],bins=20,log=True,\n        label=('mrns','mfp2-nonrandom','mfp2-related'))\nplt.xlabel('compound overlap');\nplt.legend();\n\n\n\n\n\n\n\n\nLet’s look at an example with a high fraction of compounds above the noise level but a low fraction above the related level:\n\n[(i,ovl,related_sim_overlaps[i]) for i,ovl in enumerate(noise_sim_overlaps) if ovl&gt;0.5][:2]\n\n[(1606, 0.5188034188034188, 0.09487179487179487),\n (5770, 0.5236270753512133, 0.14431673052362706)]\n\n\n\npairs2[1606]\n\n(66679, 21372)\n\n\n\ndidi,didj = pairs2[1606]\npklsi = %sql postgresql://localhost/chembl_35 \\\n   select chembl_id,mol_to_pkl(m) from rdk.mols join compound_records using (molregno) \\\n    join chembl_id_lookup on (molregno=entity_id and entity_type='COMPOUND') \\\n    where doc_id=:didi\nmolsi = [(x,Chem.Mol(y.tobytes())) for x,y in pklsi]\npklsj = %sql postgresql://localhost/chembl_35 \\\n   select chembl_id,mol_to_pkl(m) from rdk.mols join compound_records using (molregno) \\\n    join chembl_id_lookup on (molregno=entity_id and entity_type='COMPOUND') \\\n    where doc_id=:didj\nmolsj = [(x,Chem.Mol(y.tobytes())) for x,y in pklsj]\n\n\nlen(molsi),len(molsj)\n\n(45, 26)\n\n\n\nDraw.MolsToGridImage([y for x,y in molsi][:12],legends=[x for x,y in molsi],molsPerRow=4)\n\n\n\n\n\n\n\n\n\nDraw.MolsToGridImage([y for x,y in molsj][:12],legends=[x for x,y in molsj],molsPerRow=4)\n\n\n\n\n\n\n\n\nAnb bibliographic info on those:\n\n%sql postgresql://localhost/chembl_35 \\\n    select doc_id,title,authors from docs where doc_id in (:didi,:didj)\n\n\n\n\ndoc_id\ntitle\nauthors\n\n\n\n\n9752\nSynthesis and hypolipidemic activity of 2-substituted isobutyric acid derivatives.\nMorishita S, Saito T, Hirai Y, Shoji M, Mishima Y, Kawakami M.\n\n\n15546\nSynthesis and immunosuppressive activity of 2-substituted 2-aminopropane-1,3-diols and 2-aminoethanols.\nKiuchi M, Adachi K, Kohara T, Minoguchi M, Hanano T, Aoki Y, Mishina T, Arita M, Nakao N, Ohtsuki M, Hoshino Y, Teshima K, Chiba K, Sasaki S, Fujita T.\n\n\n\n\n\nLook about a pair with a high fraction of “related” structures but a small number of exact matches:\n\n[(i,ovl,noise_sim_overlaps[i],mrn_overlaps[i]) for i,ovl in enumerate(related_sim_overlaps) if ovl&gt;0.5][:2]\n\n[(6704, 0.7841269841269841, 0.9206349206349206, 0.0),\n (34215, 0.5823095823095823, 0.8341523341523341, 0.03508771929824561)]\n\n\n\ndidi,didj = pairs2[6704]\npklsi = %sql postgresql://localhost/chembl_35 \\\n   select chembl_id,mol_to_pkl(m) from rdk.mols join compound_records using (molregno) \\\n    join chembl_id_lookup on (molregno=entity_id and entity_type='COMPOUND') \\\n    where doc_id=:didi\nmolsi = [(x,Chem.Mol(y.tobytes())) for x,y in pklsi]\npklsj = %sql postgresql://localhost/chembl_35 \\\n   select chembl_id,mol_to_pkl(m) from rdk.mols join compound_records using (molregno) \\\n    join chembl_id_lookup on (molregno=entity_id and entity_type='COMPOUND') \\\n    where doc_id=:didj\nmolsj = [(x,Chem.Mol(y.tobytes())) for x,y in pklsj]\nlen(molsi),len(molsj)\n\n(21, 30)\n\n\n\nDraw.MolsToGridImage([y for x,y in molsi][1:10],legends=[x for x,y in molsi[1:]],molsPerRow=3,subImgSize=(250,200))\n\n\n\n\n\n\n\n\n\nDraw.MolsToGridImage([y for x,y in molsj][1:10],legends=[x for x,y in molsj[1:]],molsPerRow=3,subImgSize=(250,200))\n\n\n\n\n\n\n\n\n\n%sql postgresql://localhost/chembl_35 \\\n    select doc_id,title,authors from docs where doc_id in (:didi,:didj)\n\n\n\n\ndoc_id\ntitle\nauthors\n\n\n\n\n5559\nSynthesis, stereochemical assignment and biological activity of a novel series of C-4\" modified aza-macrolides.\nBronk BS, Letavic MA, Bertsche CD, George DM, Hayashi SF, Kamicker BJ, Kolosko NL, Norcia LJ, Rushing MA, Santoro SL, Yang BV.\n\n\n62283\nDesign, synthesis, and in vitro activity of novel 2'-O-substituted 15-membered azalides.\nPešić D, Starčević K, Toplak A, Herreros E, Vidal J, Almela MJ, Jelić D, Alihodžić S, Spaventi R, Perić M.\n\n\n\n\n\nOrder the document pairs by the median inter-document similarity.\n\nordered = sorted((v[0],k) for k,v in inter_sims2.items())\nordered.reverse()\n\n\n[(k,inter_sims2[k],related_sims2[k]) for _,k in ordered[:10]]\n\n[((12331, 7482),\n  array([0.83809524, 0.91428571, 0.96      , 1.        ]),\n  (594, 594, 27, 22)),\n ((93472, 15907),\n  array([0.76190476, 0.82279986, 0.85034014, 0.88860906]),\n  (1656, 1656, 46, 36)),\n ((14825, 9122),\n  array([0.73387097, 0.9380531 , 0.9826087 , 1.        ]),\n  (1817, 1817, 79, 23)),\n ((31412, 6280),\n  array([0.71590909, 0.77286602, 0.81410256, 0.87204231]),\n  (651, 651, 31, 22)),\n ((42121, 13617),\n  array([0.71551724, 0.8411215 , 0.86538462, 0.91116191]),\n  (1711, 1711, 59, 30)),\n ((2880, 923),\n  array([0.71028037, 0.7979798 , 0.82501752, 0.89473684]),\n  (2470, 2470, 26, 95)),\n ((65011, 5969),\n  array([0.70748299, 0.78516762, 0.82269504, 0.86639801]),\n  (1081, 1081, 24, 47)),\n ((46543, 4410),\n  array([0.703125  , 0.83928571, 0.85714286, 1.        ]),\n  (575, 575, 23, 25)),\n ((98553, 55691),\n  array([0.7029703 , 0.84946237, 0.88172043, 0.92391304]),\n  (716, 716, 36, 30)),\n ((10959, 923),\n  array([0.69194824, 0.83333333, 0.88282071, 1.        ]),\n  (4370, 4368, 46, 95))]\n\n\n\ndidi,didj = ordered[0][1]\npklsi = %sql postgresql://localhost/chembl_35 \\\n   select chembl_id,mol_to_pkl(m) from rdk.mols join compound_records using (molregno) \\\n    join chembl_id_lookup on (molregno=entity_id and entity_type='COMPOUND') \\\n    where doc_id=:didi\nmolsi = [(x,Chem.Mol(y.tobytes())) for x,y in pklsi]\npklsj = %sql postgresql://localhost/chembl_35 \\\n   select chembl_id,mol_to_pkl(m) from rdk.mols join compound_records using (molregno) \\\n    join chembl_id_lookup on (molregno=entity_id and entity_type='COMPOUND') \\\n    where doc_id=:didj\nmolsj = [(x,Chem.Mol(y.tobytes())) for x,y in pklsj]\n\n\nDraw.MolsToGridImage([y for x,y in molsi][1:10],legends=[x for x,y in molsi[1:]],molsPerRow=3,subImgSize=(250,200))\n\n\n\n\n\n\n\n\n\nDraw.MolsToGridImage([y for x,y in molsj][1:10],legends=[x for x,y in molsj[1:]],molsPerRow=3,subImgSize=(250,200))\n\n\n\n\n\n\n\n\n\n%sql postgresql://localhost/chembl_35 \\\n    select doc_id,title,authors from docs where doc_id in (:didi,:didj)\n\n\n\n\ndoc_id\ntitle\nauthors\n\n\n\n\n7482\nSynthesis of peptides by the solid-phase method. 7. Substance P and analogues.\nFournier A, Couture R, Regoli D, Gendreau M, St-Pierre S.\n\n\n12331\nDesign and synthesis of side-chain conformationally restricted phenylalanines and their use for structure-activity studies on tachykinin NK-1 receptor.\nJosien H, Lavielle S, Brunissen A, Saffroy M, Torrens Y, Beaujouan JC, Glowinski J, Chassaing G.\n\n\n\n\n\nI looked at a number of different highly ranked document pairs here and they all contain peptides or other fairly large molecules. This makes sense given that I am using a bit vector fingerprint for similarity, but isn’t ideal for what I am trying to do. In a followup post I will explore a bit deeper into the list of highly ranked documents and/or try using count-based fingerprints."
  },
  {
    "objectID": "posts/2025-02-08-more-on-generalized-substructure-search.html",
    "href": "posts/2025-02-08-more-on-generalized-substructure-search.html",
    "title": "More on generalized substructure search",
    "section": "",
    "text": "This post builds on, and updates, an older blog post as well as some material from the 2024 RDKit UGM What’s New session. It’s a tutorial on some functionality for making substructure searching considerably more flexible that we call “Generalized Substructure Search”.\nI will show how use to use generalized substructure search with both a SubstructLibrary and the RDKit PostgreSQL cartridge.\nimport copy\nimport json\nfrom rdkit import Chem\nfrom rdkit.Chem import rdGeneralizedSubstruct\nfrom rdkit.Chem import rdTautomerQuery\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import IPythonConsole\nIPythonConsole.drawOptions.minFontSize = 10\nDraw.SetComicMode(IPythonConsole.drawOptions)\nfrom rdkit.Chem import rdDepictor\nrdDepictor.SetPreferCoordGen(True)\nimport rdkit\nprint(rdkit.__version__)\n\n2024.09.5\n%load_ext sql\nLoad a SubstructLibrary created using ChEMBL 35. I do this using Charles Hoyt’s chembl_downloader Python package to handle downloading the ChEMBL SDF data. For reference, on my 2.5 year old linux box, processing the 2.4 million molecules took ~990 seconds.\nThe code used to construct this is:\nLoad the pickled SubstructLibrary and the order information:\nimport pickle\nwith open('../data/chembl35_ssslib.pkl','rb') as inf:\n    sslib = pickle.load(inf)\n    order = pickle.load(inf)\nprint(f'SubstructLibrary loaded with {len(sslib)} molecules')\n\nSubstructLibrary loaded with 2430167 molecules"
  },
  {
    "objectID": "posts/2025-02-08-more-on-generalized-substructure-search.html#sketchers",
    "href": "posts/2025-02-08-more-on-generalized-substructure-search.html#sketchers",
    "title": "More on generalized substructure search",
    "section": "Sketchers",
    "text": "Sketchers\nAt the time I wrote this post, none of the freely available chemical sketchers I was aware of were able to create either link nodes or variable attachment points. The open sketchers like ketcher are steadily improving, but, at least as far as I can tell, they don’t support these advanced query features. I drew all the queries for the post using ChemAxon’s MarvinSketch, which has been my go-to sketcher for years. It’s cross-platform, not insanely expensive, and generaly quite good. Biovia Draw, as you’d expect, can also deal with all of these features (at least it used to back when I still had a license. I stopped paying for that one a few years ago since I wasn’t using it). I haven’t used any of the other commercial chemical sketchers recently, so I can’t comment on their support."
  },
  {
    "objectID": "posts/2025-02-08-more-on-generalized-substructure-search.html#by-hand",
    "href": "posts/2025-02-08-more-on-generalized-substructure-search.html#by-hand",
    "title": "More on generalized substructure search",
    "section": "By hand",
    "text": "By hand\nIf you know SMARTS, it’s pretty easy to add either link nodes or variable attachment points to CXSMARTS; here’s some documentation on the subset of CXSMARTS that the RDKit currently supports\nHere’s an example for a link node. Here you need to provide the index (all indices in CXSMARTS are zero-based) for the atom that is the link node along with the possible repeat counts:\n\nm = Chem.MolFromSmarts('[#6]-1-[#6]-c2ccccc2-[#7]-1 |LN:1:1.2|')\nm\n\n\n\n\n\n\n\n\nFor variable attachment points you provide the index of the multi-center attachment point (the atom that will not be actual enumerated molecule) and the indices of the atoms that are bonded to the attachment point’s neighbor:\n\nm = Chem.MolFromSmarts('[#6]-*.c1nc2cccnc2n1 |m:1:3.10|')\nm\n\n\n\n\n\n\n\n\nNotice that we currently do a pretty crappy job of generating coordinates for these multi-center attachments. That’s something we need to work on at some point in the future.\nSRUs (repeat units that can include multiple atoms) are a bit trickier to provide by hand, but still doable:\n\nm = Chem.MolFromSmarts('c1ccccc1-[#6]-[#8]-C=O |Sg:n:6,7:2-4:ht:::|')\nm\n\n\n\n\n\n\n\n\nNote that the current rendering code does not automagically insert missing brackets (something we should fix), but we can see that the correct substance group type has been added:\n\nsgs = Chem.GetMolSubstanceGroups(m)\nsg = sgs[0]\nsg.GetPropsAsDict()\n\n{'TYPE': 'SRU',\n '_cxsmilesindex': 0,\n 'LABEL': '2-4',\n 'CONNECT': 'HT',\n 'XBHEAD': &lt;rdkit.rdBase._vectj at 0x78dfc975fb40&gt;,\n 'XBCORR': &lt;rdkit.rdBase._vectj at 0x78dfc975f840&gt;,\n 'index': 1}\n\n\nHere’s the same query provided as a mol block, so we can see the brackets:\n\nqmb = '''\n  Mrv2401 02082507292D          \n\n  0  0  0     0  0            999 V3000\nM  V30 BEGIN CTAB\nM  V30 COUNTS 10 10 1 0 0\nM  V30 BEGIN ATOM\nM  V30 1 C -9.3703 -7.3117 0 0\nM  V30 2 C -10.7039 -8.0817 0 0\nM  V30 3 C -10.7039 -9.6218 0 0\nM  V30 4 C -9.3703 -10.3918 0 0\nM  V30 5 C -8.0366 -9.6218 0 0\nM  V30 6 C -8.0366 -8.0817 0 0\nM  V30 7 C -6.7029 -7.3117 0 0\nM  V30 8 O -5.3692 -8.0818 0 0\nM  V30 9 C -4.0357 -7.3118 0 0\nM  V30 10 O -4.0357 -5.7718 0 0\nM  V30 END ATOM\nM  V30 BEGIN BOND\nM  V30 1 1 1 2\nM  V30 2 2 2 3\nM  V30 3 1 3 4\nM  V30 4 2 4 5\nM  V30 5 1 5 6\nM  V30 6 2 1 6\nM  V30 7 1 6 7\nM  V30 8 1 7 8\nM  V30 9 1 8 9\nM  V30 10 2 9 10\nM  V30 END BOND\nM  V30 BEGIN SGROUP\nM  V30 1 SRU 0 ATOMS=(2 7 8) XBONDS=(2 7 9) BRKXYZ=(9 -5.2821 -6.9645 0 -\nM  V30 -4.3581 -8.5649 0 0 0 0) BRKXYZ=(9 -6.7901 -8.429 0 -7.7141 -6.8286 0 -\nM  V30 0 0 0) CONNECT=HT LABEL=\"2-4\"\nM  V30 END SGROUP\nM  V30 END CTAB\nM  END\n'''\nqry = Chem.MolFromMolBlock(qmb)\nqry\n\n\n\n\n\n\n\n\nAnd a quick demonstration that it actually works:\n\ntmols = [Chem.MolFromSmiles(smi) for smi in ('c1ccccc1COC(=O)O','c1ccccc1COCOC(=O)O',\n                                             'c1ccccc1COCOCOC(=O)O','c1ccccc1COCOCOCOC(=O)O',\n                                            'c1ccccc1COCOCOCOCOC(=O)O')]\nxqry = rdGeneralizedSubstruct.CreateExtendedQueryMol(qry)\n\nhighlights = []\nfor mol in tmols:\n    highlights.append(rdGeneralizedSubstruct.MolGetSubstructMatch(mol,xqry))\ndopts = Draw.MolDrawOptions()\ndopts.useBWAtomPalette()\nlegends = [f'n={i}' for i in range(1,6)]\nDraw.MolsToGridImage(tmols,subImgSize=(250,150),legends=legends,\n                     highlightAtomLists=highlights,drawOptions=dopts)"
  },
  {
    "objectID": "posts/2025-02-15-storing-molecules-in-images.html",
    "href": "posts/2025-02-15-storing-molecules-in-images.html",
    "title": "Storing molecules in images",
    "section": "",
    "text": "We added the ability to store metadata about molecules in the PNG and SVG images that the RDKit generates some years ago. This tutorial post shows how to use that information.\nThese days you can do some pretty amazing work with using a deep neural network to “understand” the image and translate it into a chemical structure, but it’s a lot easier (and less noisy!) to just save the molecular structure as part of the image file itself.\nfrom rdkit import Chem\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem import rdDepictor\nrdDepictor.SetPreferCoordGen(True)\nfrom rdkit.Chem.Draw import IPythonConsole\n\nfrom PIL import Image\n\nimport rdkit\nprint(rdkit.__version__)\n\n2024.09.5\nRead in some molecules and generating coordinates for them.\nimport pandas as pd\ndf = pd.read_csv('../data/S1P1_data.csv')\nms = [Chem.MolFromSmiles(x) for x in df.canonical_smiles][:12]\nfor m in ms:\n    rdDepictor.Compute2DCoords(m)\ndf.columns\n\nIndex(['doc_id', 'molregno', 'standard_relation', 'standard_value',\n       'standard_units', 'standard_flag', 'standard_type', 'pchembl_value',\n       'canonical_smiles', 'compound_chembl_id'],\n      dtype='object')"
  },
  {
    "objectID": "posts/2025-02-15-storing-molecules-in-images.html#additional-metadata",
    "href": "posts/2025-02-15-storing-molecules-in-images.html#additional-metadata",
    "title": "Storing molecules in images",
    "section": "Additional metadata",
    "text": "Additional metadata\nThere’s also a function to add additional metadata to the PNG file. Here we’ll just add the information about the molecule that we read in from the input CSV file:\n\ndf.iloc[0]\n\ndoc_id                                                             5839\nmolregno                                                         189018\nstandard_relation                                                     =\nstandard_value                                                     82.0\nstandard_units                                                       nM\nstandard_flag                                                         1\nstandard_type                                                      EC50\npchembl_value                                                      7.09\ncanonical_smiles      CCCCCCCCc1ccc(NC(=O)[C@@H](N)COP(=O)(O)O)cc1.O...\ncompound_chembl_id                                         CHEMBL332050\nName: 0, dtype: object\n\n\n\n# get a string with PNG data:\nd2d = Draw.MolDraw2DCairo(300,300)\nd2d.DrawMolecule(ms[0])\nd2d.FinishDrawing()\npng = d2d.GetDrawingText()\n\n# construct a dictionary with the metadat we want to add:\nmetadata = {k:str(v) for k,v in zip(df.iloc[0].keys(),df.iloc[0])}\n\n# and then add the data to the PNG string:\npng = Chem.AddMetadataToPNGString(metadata,png)\n\n\nRead the molecule and the metadata from the PNG string:\n\nnm = Chem.MolFromPNGString(png)\nnprops = Chem.MetadataFromPNGString(png)\nnm\n\n\n\n\n\n\n\n\n\nnprops.keys()\n\ndict_keys(['rdkitPKL rdkit 2024.09.5', 'MOL rdkit 2024.09.5', 'SMILES rdkit 2024.09.5', 'doc_id', 'molregno', 'standard_relation', 'standard_value', 'standard_units', 'standard_flag', 'standard_type', 'pchembl_value', 'canonical_smiles', 'compound_chembl_id'])\n\n\nHere we can see metadata that the RDKit added - pkl data, a Mol block, and SMILES - as well as the properties that we added. The Mol block and the SMILES can be used by other tools, so there’s a bit of interoperability here too.\nThe values are all strings:\n\nnprops['compound_chembl_id'], nprops['pchembl_value']\n\n(b'CHEMBL332050', b'7.09')"
  },
  {
    "objectID": "posts/2025-02-21-highlighting-atoms-tutorial.html",
    "href": "posts/2025-02-21-highlighting-atoms-tutorial.html",
    "title": "Highlight atoms in drawings",
    "section": "",
    "text": "This is a tutorial blog post demonstrating some of the options the RDKit has for highlighting parts of molecules to show additional information.\nAn older blog post shows a more advanced application: using multiple highlights together with R-group decomposition: https://greglandrum.github.io/rdkit-blog/posts/2021-08-07-rgd-and-highlighting.html\nfrom rdkit import Chem\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import SimilarityMaps\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit.Chem import rdDepictor\nrdDepictor.SetPreferCoordGen(True)\n\nimport rdkit\nprint(rdkit.__version__)\n\n2024.09.5\nTest molecule:\nesomep = Chem.MolFromSmiles('COc1ccc2nc([nH]c2c1)[S@](=O)Cc1ncc(C)c(OC)c1C')\nrdDepictor.Compute2DCoords(esomep)\nesomep\nesomep_h = Chem.AddHs(esomep)\nrdDepictor.Compute2DCoords(esomep_h)\nesomep_h"
  },
  {
    "objectID": "posts/2025-02-21-highlighting-atoms-tutorial.html#single-color",
    "href": "posts/2025-02-21-highlighting-atoms-tutorial.html#single-color",
    "title": "Highlight atoms in drawings",
    "section": "Single color",
    "text": "Single color\nThis time we’re going to highlight regions of the molecule that match a substructure\n\n# build a list that has all atoms that match the substructure:\nmatches1 = esomep.GetSubstructMatches(Chem.MolFromSmarts('a1aaaaa1'))\nhighlightAtoms = []\nfor match in matches1:\n    highlightAtoms.extend(match)\n\n# and now draw with highlights on those atoms:    \nd2d = Draw.MolDraw2DSVG(350,200)\ndopts = d2d.drawOptions()\ndopts.useBWAtomPalette()\nd2d.DrawMolecule(esomep,highlightAtoms=highlightAtoms)\nd2d.FinishDrawing()\nSVG(d2d.GetDrawingText())"
  },
  {
    "objectID": "posts/2025-02-21-highlighting-atoms-tutorial.html#multiple-colors",
    "href": "posts/2025-02-21-highlighting-atoms-tutorial.html#multiple-colors",
    "title": "Highlight atoms in drawings",
    "section": "Multiple colors",
    "text": "Multiple colors\nWe can also have multiple different highlighting colors.\n\n# rather than trying to guess discernible colors, I will just use \n# matplotlib's color scheme\nimport matplotlib.pyplot as plt\nplt.style.use('tableau-colorblind10')\nfrom matplotlib import colors\n\n\nfrom collections import defaultdict\n\nmatches1 = esomep.GetSubstructMatches(Chem.MolFromSmarts('a1aaaaa1'))\ncolor1 = colors.to_rgb('C0')\nmatches2 = esomep.GetSubstructMatches(Chem.MolFromSmarts('a1aaaa1'))\ncolor2 = colors.to_rgb('C1')\n\nrad = 0.4\natomHighlights = defaultdict(list)\natomRads = {}\nfor (matches,color) in zip((matches1,matches2),(color1,color2)):\n    for match in matches:\n        for aid in match:\n            atomHighlights[aid].append(color)\n            atomRads[aid] = rad\n        \nd2d = Draw.MolDraw2DSVG(350,200)\ndopts = d2d.drawOptions()\ndopts.useBWAtomPalette()\nd2d.DrawMoleculeWithHighlights(esomep,\"\",dict(atomHighlights),{},atomRads,{})\nd2d.FinishDrawing()\nSVG(d2d.GetDrawingText())\n\n\n\n\n\n\n\n\nWe can also just draw the outlines of the highlighted atoms:\n\nd2d = Draw.MolDraw2DSVG(350,200)\ndopts = d2d.drawOptions()\ndopts.useBWAtomPalette()\ndopts.fillHighlights = False\nd2d.DrawMoleculeWithHighlights(esomep,\"\",dict(atomHighlights),{},atomRads,{})\nd2d.FinishDrawing()\nSVG(d2d.GetDrawingText())\n\n\n\n\n\n\n\n\nRepeat that, but include the bonds as well.\n\nrad = 0.3\natomHighlights = defaultdict(list)\nbondHighlights = defaultdict(list)\natomRads = {}\n\nfor (matches,color) in zip((matches1,matches2),(color1,color2)):\n    for match in matches:\n        for i,aid in enumerate(match):\n            atomHighlights[aid].append(color1)\n            atomRads[aid] = rad\n            bnd = esomep.GetBondBetweenAtoms(aid,match[(i+1)%len(match)])\n            bondHighlights[bnd.GetIdx()].append(color)\n        \nd2d = Draw.MolDraw2DSVG(350,200)\ndopts = d2d.drawOptions()\ndopts.useBWAtomPalette()\n# I think this looks better if we ensure that the atom highlights are always circles:\ndopts.atomHighlightsAreCircles = True\nd2d.DrawMoleculeWithHighlights(esomep,\"\",dict(atomHighlights),dict(bondHighlights),atomRads,{})\nd2d.FinishDrawing()\nSVG(d2d.GetDrawingText())\n\n\n\n\n\n\n\n\nWe can also do that in a more “subway map” style. I will add a third highlight to make it more dramatic.\n\nfrom collections import defaultdict\n\nmatches1 = esomep.GetSubstructMatches(Chem.MolFromSmarts('a1aaaaa1'))\ncolor1 = colors.to_rgb('C0')\nmatches2 = esomep.GetSubstructMatches(Chem.MolFromSmarts('a1aaaa1'))\ncolor2 = colors.to_rgb('C1')\nmatches3 = esomep.GetSubstructMatches(Chem.MolFromSmarts('Occc[nH]c'))\ncolor3 = colors.to_rgb('C2')\n\nrad = 0.2\natomHighlights = defaultdict(list)\nbondHighlights = defaultdict(list)\natomRads = {}\nfor matches,color in zip((matches1,matches2,matches3),(color1,color2,color3)):\n    for match in matches:\n        for i,aid in enumerate(match):\n            atomHighlights[aid].append(color)\n            atomRads[aid] = rad\n            bnd = esomep.GetBondBetweenAtoms(aid,match[(i+1)%len(match)])\n            if bnd is not None:\n                bondHighlights[bnd.GetIdx()].append(color)\n        \nd2d = Draw.MolDraw2DSVG(450,300)\ndopts = d2d.drawOptions()\ndopts.useBWAtomPalette()\n# turn off the highlight fill and ensure circular atom highlights:\ndopts.fillHighlights = False\ndopts.atomHighlightsAreCircles = True\nd2d.DrawMoleculeWithHighlights(esomep,\"\",dict(atomHighlights),dict(bondHighlights),atomRads,{})\nd2d.FinishDrawing()\nSVG(d2d.GetDrawingText())"
  },
  {
    "objectID": "posts/2025-03-01-more-on-tuning-substructure-queries-1.html",
    "href": "posts/2025-03-01-more-on-tuning-substructure-queries-1.html",
    "title": "Tuning substructure queries",
    "section": "",
    "text": "This is another tutorial post, this time looking at use of the function AdjustQueryProperties() to tune substructure queries without having to write SMARTS patterns. I show how to use the functionality both in the RDKit PostgreSQL cartridge and from Python.\nThis is an updated and expanded version of an old blog post.\nfrom rdkit import Chem\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import IPythonConsole\nimport json\n\nimport rdkit\n%load_ext sql\nprint(rdkit.__version__)\nimport time\nprint(time.asctime())\n\n2024.09.5\nSat Mar  1 06:53:41 2025"
  },
  {
    "objectID": "posts/2025-03-01-more-on-tuning-substructure-queries-1.html#queries-from-mol-blocks",
    "href": "posts/2025-03-01-more-on-tuning-substructure-queries-1.html#queries-from-mol-blocks",
    "title": "Tuning substructure queries",
    "section": "Queries from mol blocks",
    "text": "Queries from mol blocks\nThe same adjustments can be used on query molecules constructed from mol blocks:\n\nmb=\"\"\"\n  Mrv1561 07261609522D          \n\n  8  8  0  0  0  0            999 V2000\n   -1.9866    0.7581    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n   -2.7011    0.3455    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -2.7011   -0.4795    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -1.9866   -0.8920    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -1.2721   -0.4795    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -1.2721    0.3455    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -3.4155    0.7580    0.0000 A   0  0  0  0  0  0  0  0  0  0  0  0\n   -0.5577    0.7580    0.0000 A   0  0  0  0  0  0  0  0  0  0  0  0\n  1  2  1  0  0  0  0\n  1  6  2  0  0  0  0\n  2  3  2  0  0  0  0\n  3  4  1  0  0  0  0\n  4  5  2  0  0  0  0\n  5  6  1  0  0  0  0\n  2  7  1  0  0  0  0\n  6  8  1  0  0  0  0\nM  END\n\"\"\"\nChem.MolFromMolBlock(mb)\n\n\n\n\n\n\n\n\nThe semantics of mol block queries are a bit different since we already have query atoms:\n\ndata = %sql \\\n    select chembl_id,molfile from rdk.mols join compound_structures \\\n    using (molregno) \\\n    join chembl_id_lookup on (entity_id=molregno and entity_type='COMPOUND')\\\n    where m@&gt;mol_from_ctab(:mb) limit 10 ;\nmols = [Chem.MolFromMolBlock(y) for x,y in data]\nDraw.MolsToGridImage(mols,legends=[str(x) for x,y in data],molsPerRow=4)    \n\n * postgresql://localhost/chembl_35\n10 rows affected.\n\n\n\n\n\n\n\n\n\nCalling mol_adjust_query_properties() here effectively just adds the degree queries (since the dummies are already queries), providing the same results as in Block 4 above:\n\ndata = %sql \\\n    select chembl_id,molfile from rdk.mols join compound_structures \\\n    using (molregno) \\\n    join chembl_id_lookup on (entity_id=molregno and entity_type='COMPOUND')\\\n    where m@&gt;mol_adjust_query_properties(mol_from_ctab(:mb)) limit 10 ;\nmols = [Chem.MolFromMolBlock(y) for x,y in data]\nDraw.MolsToGridImage(mols,legends=[str(x) for x,y in data],molsPerRow=4)    \n\n * postgresql://localhost/chembl_35\n10 rows affected."
  },
  {
    "objectID": "posts/2025-03-01-more-on-tuning-substructure-queries-1.html#adjustringchain",
    "href": "posts/2025-03-01-more-on-tuning-substructure-queries-1.html#adjustringchain",
    "title": "Tuning substructure queries",
    "section": "adjustRingChain",
    "text": "adjustRingChain\nQuery atoms in rings/chains only match atoms in rings/chains.\n\nm1 = Chem.MolFromSmiles('C1CCCCO1')\nm2 = Chem.MolFromSmiles('CCOCC')\nq = Chem.MolFromSmiles('COC')\nDraw.MolsToGridImage((m1,m2,q),legends=['','','query'])\n\n\n\n\n\n\n\n\n\nprint(m1.HasSubstructMatch(q),m2.HasSubstructMatch(q))\n\nTrue True\n\n\n\nparams = Chem.AdjustQueryParameters.NoAdjustments()\nparams.adjustRingChain = True\ntq = Chem.AdjustQueryProperties(q,params)\nprint(m1.HasSubstructMatch(tq),m2.HasSubstructMatch(tq))\n\nFalse True"
  },
  {
    "objectID": "posts/2025-03-01-more-on-tuning-substructure-queries-1.html#adjustconjugatedfiverings",
    "href": "posts/2025-03-01-more-on-tuning-substructure-queries-1.html#adjustconjugatedfiverings",
    "title": "Tuning substructure queries",
    "section": "adjustConjugatedFiveRings",
    "text": "adjustConjugatedFiveRings\nThis one is there to allow queries, particularly sketched queries, with conjugated 5 rings to match both aromatic and non-aromatic molecules.\nBonds in conjugated 5 rings are converted to SINGLE|DOUBLE|AROMATIC\nIt’s easiest to demonstrate with a mol block query:\n\nmb = '''atom list query\n  Mrv2007 05282011072D          \n\n  0  0  0     0  0            999 V3000\nM  V30 BEGIN CTAB\nM  V30 COUNTS 5 5 0 0 0\nM  V30 BEGIN ATOM\nM  V30 1 [C,N,O,S] -4.9583 2.185 0 0\nM  V30 2 C -6.2042 1.2798 0 0\nM  V30 3 C -5.7283 -0.1848 0 0\nM  V30 4 C -4.1883 -0.1848 0 0\nM  V30 5 C -3.7125 1.2798 0 0\nM  V30 END ATOM\nM  V30 BEGIN BOND\nM  V30 1 1 1 2\nM  V30 2 1 3 4\nM  V30 3 1 1 5\nM  V30 4 2 2 3\nM  V30 5 2 4 5\nM  V30 END BOND\nM  V30 END CTAB\nM  END\n'''\nq = Chem.MolFromMolBlock(mb)\nq\n\n\n\n\n\n\n\n\n\nm1 = Chem.MolFromSmiles('C1=CCC=C1')\nm2 = Chem.MolFromSmiles('C1=COC=C1')\nm3 = Chem.MolFromSmiles('C1=CNC=C1')\nm4 = Chem.MolFromSmiles('C1=CS(=O)C=C1')\nDraw.MolsToGridImage((m1,m2,m3,m4),molsPerRow=4)\n\n\n\n\n\n\n\n\n\nprint(m1.HasSubstructMatch(q),m2.HasSubstructMatch(q),m3.HasSubstructMatch(q),m4.HasSubstructMatch(q))\n\nTrue False False True\n\n\n\nparams = Chem.AdjustQueryParameters.NoAdjustments()\nparams.adjustConjugatedFiveRings = True\ntq = Chem.AdjustQueryProperties(q,params)\nprint(m1.HasSubstructMatch(tq),m2.HasSubstructMatch(tq),m3.HasSubstructMatch(tq),m4.HasSubstructMatch(tq))\n\nTrue True True True\n\n\nNote that this can make make the query more generic than expected:\n\nm5 = Chem.MolFromSmiles('C1CCCC1')\nm6 = Chem.MolFromSmiles('C1CC=CC1')\nDraw.MolsToGridImage((m5,m6))\n\n\n\n\n\n\n\n\n\nprint(m5.HasSubstructMatch(q),m6.HasSubstructMatch(q))\nprint(m5.HasSubstructMatch(tq),m6.HasSubstructMatch(tq))\n\nFalse False\nTrue True"
  },
  {
    "objectID": "posts/2025-03-01-more-on-tuning-substructure-queries-1.html#makeatomsgenericmakebondsgeneric",
    "href": "posts/2025-03-01-more-on-tuning-substructure-queries-1.html#makeatomsgenericmakebondsgeneric",
    "title": "Tuning substructure queries",
    "section": "makeAtomsGeneric/makeBondsGeneric",
    "text": "makeAtomsGeneric/makeBondsGeneric\nThese two options convert the affected query atoms/bonds to match any atom/bond.\n\nm1 = Chem.MolFromSmiles('c1ccccc1')\nm2 = Chem.MolFromSmiles('c1nnccc1')\nm3 = Chem.MolFromSmiles('C1NNCCC1')\nq = Chem.MolFromSmiles('c1nnccc1')\nDraw.MolsToGridImage((m1,m2,m3,q),legends=['','','','query'],molsPerRow=4)\n\n\n\n\n\n\n\n\n\nprint(m1.HasSubstructMatch(q),m2.HasSubstructMatch(q),m3.HasSubstructMatch(q))\n\nFalse True False\n\n\n\nparams = Chem.AdjustQueryParameters.NoAdjustments()\nparams.makeAtomsGeneric = True\ntq = Chem.AdjustQueryProperties(q,params)\nprint(m1.HasSubstructMatch(tq),m2.HasSubstructMatch(tq),m3.HasSubstructMatch(tq))\n\nTrue True False\n\n\n\nparams = Chem.AdjustQueryParameters.NoAdjustments()\nparams.makeBondsGeneric = True\ntq = Chem.AdjustQueryProperties(q,params)\nprint(m1.HasSubstructMatch(tq),m2.HasSubstructMatch(tq),m3.HasSubstructMatch(tq))\n\nFalse True True\n\n\n\nparams = Chem.AdjustQueryParameters.NoAdjustments()\nparams.makeBondsGeneric = True\nparams.makeAtomsGeneric = True\ntq = Chem.AdjustQueryProperties(q,params)\nprint(m1.HasSubstructMatch(tq),m2.HasSubstructMatch(tq),m3.HasSubstructMatch(tq))\n\nTrue True True"
  },
  {
    "objectID": "posts/2025-03-01-more-on-tuning-substructure-queries-1.html#adjustsinglebondstodegreeoneneighbors",
    "href": "posts/2025-03-01-more-on-tuning-substructure-queries-1.html#adjustsinglebondstodegreeoneneighbors",
    "title": "Tuning substructure queries",
    "section": "adjustSingleBondsToDegreeOneNeighbors",
    "text": "adjustSingleBondsToDegreeOneNeighbors\nConverts single bonds from aromatic or conjugated atoms and neighboring atoms with degree one to be SINGLE | AROMATIC\n\nm1 = Chem.MolFromSmiles('C1CCCc2c1nncc2')\nm2 = Chem.MolFromSmiles('c1cccc2c1nncc2')\nq = Chem.MolFromSmiles('Cc1nnccc1')\nDraw.MolsToGridImage((m1,m2,q),legends=['','','query'])\n\n\n\n\n\n\n\n\n\nprint(m1.HasSubstructMatch(q),m2.HasSubstructMatch(q))\n\nTrue False\n\n\n\nparams = Chem.AdjustQueryParameters.NoAdjustments()\nparams.adjustSingleBondsToDegreeOneNeighbors = True\ntq = Chem.AdjustQueryProperties(q,params)\nprint(m1.HasSubstructMatch(tq),m2.HasSubstructMatch(tq))\n\nTrue True"
  },
  {
    "objectID": "posts/2025-03-01-more-on-tuning-substructure-queries-1.html#adjustsinglebondsbetweenaromaticatoms",
    "href": "posts/2025-03-01-more-on-tuning-substructure-queries-1.html#adjustsinglebondsbetweenaromaticatoms",
    "title": "Tuning substructure queries",
    "section": "adjustSingleBondsBetweenAromaticAtoms",
    "text": "adjustSingleBondsBetweenAromaticAtoms\nConverts single bonds between aromatic or conjugated atoms to SINGLE | AROMATIC\n\nm1 = Chem.MolFromSmiles('C1CC2=CC=CC=C2C2=CC=CC=C12')\nm2 = Chem.MolFromSmiles('C1=CC=C2C(C=CC3=CC=CC=C23)=C1')\nq = Chem.MolFromSmiles('c1ccccc1c2ccccc2')\nDraw.MolsToGridImage((m1,m2,q),legends=['','','query'])\n\n\n\n\n\n\n\n\n\nprint(m1.HasSubstructMatch(q),m2.HasSubstructMatch(q))\n\nTrue False\n\n\n\nparams = Chem.AdjustQueryParameters.NoAdjustments()\nparams.adjustSingleBondsBetweenAromaticAtoms = True\ntq = Chem.AdjustQueryProperties(q,params)\nprint(m1.HasSubstructMatch(tq),m2.HasSubstructMatch(tq))\n\nTrue True"
  },
  {
    "objectID": "posts/2025-03-01-more-on-tuning-substructure-queries-1.html#usestereocareforbonds",
    "href": "posts/2025-03-01-more-on-tuning-substructure-queries-1.html#usestereocareforbonds",
    "title": "Tuning substructure queries",
    "section": "useStereoCareForBonds",
    "text": "useStereoCareForBonds\nThis one provides a fine grain control over how double bond stereo in the query is matched.\n\nIPythonConsole.drawOptions.addStereoAnnotation = True\n\n\nmb = '''\n  Mrv2401 03012506222D          \n\n  0  0  0     0  0            999 V3000\nM  V30 BEGIN CTAB\nM  V30 COUNTS 4 3 0 0 0\nM  V30 BEGIN ATOM\nM  V30 1 C -10.037 2.8148 0 0\nM  V30 2 C -8.7034 3.5848 0 0\nM  V30 3 C -11.3707 3.5848 0 0\nM  V30 4 C -7.3697 2.8148 0 0\nM  V30 END ATOM\nM  V30 BEGIN BOND\nM  V30 1 2 1 2\nM  V30 2 1 1 3\nM  V30 3 1 2 4\nM  V30 END BOND\nM  V30 END CTAB\nM  END\n'''\nq = Chem.MolFromMolBlock(mb)\nq\n\n\n\n\n\n\n\n\n\nm1 = Chem.MolFromSmiles('C/C=C/C')\nm2 = Chem.MolFromSmiles(r'C/C=C\\C')\nm3 = Chem.MolFromSmiles('CC=CC')\nDraw.MolsToGridImage((m1,m2,m3))\n\n\n\n\n\n\n\n\n\nssopts = Chem.SubstructMatchParameters()\nssopts.useChirality = True\nprint(m1.HasSubstructMatch(q,ssopts),m2.HasSubstructMatch(q,ssopts),m3.HasSubstructMatch(q,ssopts))\n\nTrue False False\n\n\n\nparams = Chem.AdjustQueryParameters.NoAdjustments()\nparams.useStereoCareForBonds = True\ntq = Chem.AdjustQueryProperties(q,params)\nprint(m1.HasSubstructMatch(tq,ssopts),m2.HasSubstructMatch(tq,ssopts),m3.HasSubstructMatch(tq,ssopts))\n\nTrue True True\n\n\nThis isn’t particularly interesting for this simple case, but it can become relevant for more complex queries\n\nmb = '''\n  Mrv2401 03012506432D          \n\n  0  0  0     0  0            999 V3000\nM  V30 BEGIN CTAB\nM  V30 COUNTS 12 12 0 0 0\nM  V30 BEGIN ATOM\nM  V30 1 C -6.2311 2.2894 0 0\nM  V30 2 N -7.7711 2.2893 0 0\nM  V30 3 C -8.5412 0.9556 0 0\nM  V30 4 C -7.7712 -0.378 0 0\nM  V30 5 C -6.2312 -0.378 0 0\nM  V30 6 C -5.4612 0.9557 0 0\nM  V30 7 C -3.9212 0.9557 0 0\nM  V30 8 C -3.1512 2.2893 0 0\nM  V30 9 C -1.6112 2.2893 0 0\nM  V30 10 C -10.0812 0.9557 0 0 STBOX=1\nM  V30 11 C -10.8512 -0.378 0 0 STBOX=1\nM  V30 12 C -10.0812 -1.7117 0 0\nM  V30 END ATOM\nM  V30 BEGIN BOND\nM  V30 1 1 1 2\nM  V30 2 2 2 3\nM  V30 3 1 3 4\nM  V30 4 2 4 5\nM  V30 5 1 5 6\nM  V30 6 2 1 6\nM  V30 7 1 6 7\nM  V30 8 1 8 9\nM  V30 9 1 3 10\nM  V30 10 1 11 12\nM  V30 11 2 7 8\nM  V30 12 2 10 11 STBOX=1\nM  V30 END BOND\nM  V30 END CTAB\nM  END\n'''\nIPythonConsole.drawOptions.addAtomIndices = True\nq = Chem.MolFromMolBlock(mb)\nq\n\n\n\n\n\n\n\n\nThe RDKit renderer doesn’t currently display it (memo to self: that’s a feature we should add), but the double bond between atoms 9 and 10 has the stereo care flag set:\n\nq.GetBondBetweenAtoms(9,10).HasProp('molStereoCare')\n\n1\n\n\n\nIPythonConsole.drawOptions.addAtomIndices = False\n\nTwo molecules:\n\nm1 = Chem.MolFromSmiles(r'C/C=C\\c1ncc(cc1)/C=C/C')\nm2 = Chem.MolFromSmiles(r'C/C=C\\c1ncc(cc1)/C=C\\C')\nDraw.MolsToGridImage((m1,m2))\n\n\n\n\n\n\n\n\nThe default behavior is to only match the first molecule, because our query has one cis and one trans but the second molecule has two cis bonds.\n\nssopts = Chem.SubstructMatchParameters()\nssopts.useChirality = True\nprint(m1.HasSubstructMatch(q,ssopts),m2.HasSubstructMatch(q,ssopts))\n\nTrue False\n\n\nIf we set useStereoCareForBonds the stereochemistry on the trans bond in the query (the one that does not have the molStereoCare flag set) is ignored when querying.\n\nparams = Chem.AdjustQueryParameters.NoAdjustments()\nparams.useStereoCareForBonds = True\ntq = Chem.AdjustQueryProperties(q,params)\nprint(m1.HasSubstructMatch(tq,ssopts),m2.HasSubstructMatch(tq,ssopts))\n\nTrue True\n\n\nWe could, of course, have accomplished the same thing by explicitly marking the second query bond as stereo unknown:\n\nmb = '''\n  Mrv2401 03012506492D          \n\n  0  0  0     0  0            999 V3000\nM  V30 BEGIN CTAB\nM  V30 COUNTS 12 12 0 0 0\nM  V30 BEGIN ATOM\nM  V30 1 C -6.2311 2.2894 0 0\nM  V30 2 N -7.7711 2.2893 0 0\nM  V30 3 C -8.5412 0.9556 0 0\nM  V30 4 C -7.7712 -0.378 0 0\nM  V30 5 C -6.2312 -0.378 0 0\nM  V30 6 C -5.4612 0.9557 0 0\nM  V30 7 C -3.9212 0.9557 0 0\nM  V30 8 C -3.1512 2.2893 0 0\nM  V30 9 C -1.6112 2.2893 0 0\nM  V30 10 C -10.0812 0.9557 0 0\nM  V30 11 C -10.8512 -0.378 0 0\nM  V30 12 C -10.0812 -1.7117 0 0\nM  V30 END ATOM\nM  V30 BEGIN BOND\nM  V30 1 1 1 2\nM  V30 2 2 2 3\nM  V30 3 1 3 4\nM  V30 4 2 4 5\nM  V30 5 1 5 6\nM  V30 6 2 1 6\nM  V30 7 1 6 7\nM  V30 8 1 8 9\nM  V30 9 1 3 10\nM  V30 10 1 11 12\nM  V30 11 2 7 8 CFG=2\nM  V30 12 2 10 11\nM  V30 END BOND\nM  V30 END CTAB\nM  END\n'''\nq = Chem.MolFromMolBlock(mb)\nq\n\n\n\n\n\n\n\n\n\nssopts = Chem.SubstructMatchParameters()\nssopts.useChirality = True\nprint(m1.HasSubstructMatch(q,ssopts),m2.HasSubstructMatch(q,ssopts))\n\nTrue True\n\n\nBut sometimes it’s easier to just mark the double bonds you care about rather than marking the ones you don’t care about."
  },
  {
    "objectID": "posts/2025-03-07-drawing-on-drawings.html",
    "href": "posts/2025-03-07-drawing-on-drawings.html",
    "title": "Drawing on drawings",
    "section": "",
    "text": "In addition to the expected functions to draw one more more molecules, the RDKit MolDraw2D objects lets you add annotations (text, lines, arrows, shapes, etc) to your drawings. This post shows how to use that to layout the molecules and data from some free-energy calculations.\nThe data here and the overall figure layout is from Figure 8 of this open-access paper from our group.\n\nfrom rdkit import Chem\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem import rdDepictor\nrdDepictor.SetPreferCoordGen(True)\nfrom rdkit.Chem.Draw import IPythonConsole\nIPythonConsole.molSize = 350,300\nimport rdkit\nprint(rdkit.__version__)\n\n2024.09.6\n\n\nStart with the scaffold for the molecules:\n\ncore = Chem.MolFromMolBlock('''\n  Mrv2401 03062519142D          \n\n  0  0  0     0  0            999 V3000\nM  V30 BEGIN CTAB\nM  V30 COUNTS 21 23 0 0 0\nM  V30 BEGIN ATOM\nM  V30 1 C -1.8519 5.7623 0 0\nM  V30 2 C -3.1855 4.9922 0 0\nM  V30 3 C -3.1855 3.4522 0 0\nM  V30 4 C -1.8519 2.6822 0 0\nM  V30 5 C -0.5182 3.4522 0 0\nM  V30 6 C -0.5182 4.9922 0 0\nM  V30 7 N -1.8519 1.1422 0 0\nM  V30 8 C -3.1855 0.3722 0 0\nM  V30 9 C -3.1855 -1.1679 0 0\nM  V30 10 N -1.8519 -1.9379 0 0\nM  V30 11 C -0.5182 -1.1679 0 0\nM  V30 12 C -0.5182 0.3722 0 0\nM  V30 13 N -4.5192 2.6822 0 0\nM  V30 14 C -5.8529 3.4522 0 0\nM  V30 15 C -7.1866 2.6822 0 0\nM  V30 16 O -5.8529 4.9922 0 0\nM  V30 17 N -8.5934 3.3086 0 0\nM  V30 18 C -9.6238 2.1642 0 0\nM  V30 19 S -8.8538 0.8305 0 0\nM  V30 20 C -7.3476 1.1507 0 0\nM  V30 21 A -11.1554 2.3252 0 1\nM  V30 END ATOM\nM  V30 BEGIN BOND\nM  V30 1 1 1 2\nM  V30 2 2 2 3\nM  V30 3 1 3 4\nM  V30 4 2 4 5\nM  V30 5 1 5 6\nM  V30 6 2 1 6\nM  V30 7 1 4 7\nM  V30 8 1 8 9\nM  V30 9 1 9 10\nM  V30 10 1 10 11\nM  V30 11 1 11 12\nM  V30 12 1 7 8\nM  V30 13 1 7 12\nM  V30 14 1 3 13\nM  V30 15 1 13 14\nM  V30 16 1 14 15\nM  V30 17 2 14 16\nM  V30 18 1 18 19\nM  V30 19 1 19 20\nM  V30 20 1 15 17\nM  V30 21 2 15 20\nM  V30 22 2 17 18\nM  V30 23 1 18 21\nM  V30 END BOND\nM  V30 END CTAB\nM  END\n''')\ncore\n\n\n\n\n\n\n\n\nNow define the side chains:\n\nchains = (('L20','[*:1]C1=CC2=C(OCO2)C=C1'),\n          ('L1','[*:1]C1=CC2=C(OCC2)C=C1'),\n          ('L21','[*:1]C1=CC2=C(OCCO2)C=C1'),\n          ('L17', '[*:1]c1ccc(OC)cc1'),\n          ('L19', '[*:1]c1ccc(OC)c(OC)c1'),\n         )\n\nchainmols = [Chem.MolFromSmiles(y) for x,y in chains]\nDraw.MolsToGridImage(chainmols,legends=[x for x,y in chains])\n\n\n\n\n\n\n\n\nI’d like the side chains to all be oriented consistently, so I’m going to construct the full molecules, lay them out, and then remove the core from each of those.\nHere’s the easy way to construct the full molecules, using Chem.molzip()\n\nmols = []\nfor lbl,smi in chains:\n    nm = Chem.molzip(core,Chem.MolFromSmiles(smi))\n    rdDepictor.Compute2DCoords(nm)\n    mols.append(nm)\n    \nDraw.MolsToGridImage(mols,legends = [x for x,y in chains])\n\n\n\n\n\n\n\n\nNow use Chem.ReplaceCore() to remove the core atoms from each molecule, leaving us with just the sidechains in a consistent orientation:\n\njustcore = Chem.RWMol(core)\n# We need to remove the dummy atom:\njustcore.RemoveAtom(20)\n\nnewchains = {}\nfor (lbl,smi),mol in zip(chains,mols):\n    tmol = Chem.ReplaceCore(mol,justcore)\n    # label the dummy atom:\n    for atom in tmol.GetAtoms():\n        if not atom.GetAtomicNum():\n            atom.SetProp('atomLabel',\"R\")\n    newchains[lbl] = tmol\n\nDraw.MolsToGridImage(newchains.values(), legends=newchains.keys())\n\n\n\n\n\n\n\n\nThe easiest way to reproduce the target figure is by laying the molecules out on a 3x3 grid with some empty spaces:\n\nlbls = ['L20','','L21',\n        '','L17','',\n        'L1','','L19']\ngrid = [newchains[l] if l else None for l in lbls]\nDraw.MolsToGridImage(grid,legends=lbls)\n\n\n\n\n\n\n\n\n\nfrom IPython.display import SVG\nfrom rdkit import Geometry\n\n# set up the drawing object:\nnRows = 3\nnCols = 3\npanelx = 250\npanely = 250\nd2d = Draw.MolDraw2DSVG(panelx*nCols,panely*nRows,panelx,panely)\ndopts = d2d.drawOptions()\ndopts.legendFontSize = 20\n\n# draw the sidechains\nd2d.DrawMolecules(grid,legends=lbls)\n\n# Now draw all the arrows and add the free-energy values\nd2d.SetLineWidth(4)\nd2d.SetFontSize(20)\n\n# use gray arrows so that they don't stand out quite so much\n#   (the original figure has solid black, but I find this nicer)\narrowColor = (.4,.4,.4)\n\np1 = Geometry.Point2D(panelx,panely/2)\np2 = Geometry.Point2D(2*panelx,panely/2)\nd2d.DrawArrow(p2,p1,color=arrowColor,rawCoords=True, asPolygon=True)\n\n# draw the free-energy value slightly offset along the y axis\n# (this is a horizontal arrow) from the mid-point of the arrow:\nmidp = p2 + (p1-p2)/2\nmidp.y += 20\nd2d.DrawString(\"-0.3\",midp,rawCoords=True)\n\n\np1 = Geometry.Point2D(panelx/2,panely)\np2 = Geometry.Point2D(panelx/2,2*panely)\nd2d.DrawArrow(p2,p1,color=arrowColor,rawCoords=True, asPolygon=True)\nmidp = p2 + (p1-p2)/2\nmidp.x += 20\nd2d.DrawString(\"2.0\",midp,rawCoords=True, align=1)\n\np1 = Geometry.Point2D(panelx,2*panely+panely/2)\np2 = Geometry.Point2D(2*panelx,2*panely+panely/2)\nd2d.DrawArrow(p1,p2,color=arrowColor,rawCoords=True, asPolygon=True)\nmidp = p2 + (p1-p2)/2\nmidp.y += 20\nd2d.DrawString(\"4.8\",midp,rawCoords=True)\n\np1 = Geometry.Point2D(2*panelx + panelx/2,panely)\np2 = Geometry.Point2D(2*panelx + panelx/2,2*panely)\nd2d.DrawArrow(p1,p2,color=arrowColor,rawCoords=True, asPolygon=True)\nmidp = p2 + (p1-p2)/2\nmidp.x += 20\nd2d.DrawString(\"2.5\",midp,rawCoords=True, align=1)\n\n# do the diagonals... these are trickier\n\n# this is the fraction of the side length of the grid boxes that the arrows\n# will extend into each box.\nfrac = 0.2\n\np1 = Geometry.Point2D((1-frac)*panelx,(1-frac)*panely)\np2 = Geometry.Point2D((1+frac)*panelx,(1+frac)*panely)\nd2d.DrawArrow(p2,p1,color=arrowColor,rawCoords=True, asPolygon=True,frac = 0.1)\nmidp = p2 + (p1-p2)/2\nmidp.x += 25\nd2d.DrawString(\"2.1\",midp,rawCoords=True, align=1)\n\np1 = Geometry.Point2D((2+frac)*panelx,(1-frac)*panely)\np2 = Geometry.Point2D((2-frac)*panelx,(1+frac)*panely)\nd2d.DrawArrow(p2,p1,color=arrowColor,rawCoords=True, asPolygon=True,frac = 0.1)\nmidp = p2 + (p1-p2)/2\nmidp.x -= 25\nd2d.DrawString(\"2.4\",midp,rawCoords=True, align=2)\n\np1 = Geometry.Point2D((2+frac)*panelx,(2+frac)*panely)\np2 = Geometry.Point2D((2-frac)*panelx,(2-frac)*panely)\nd2d.DrawArrow(p2,p1,color=arrowColor,rawCoords=True, asPolygon=True,frac = 0.1)\nmidp = p2 + (p1-p2)/2\nmidp.x -= 25\nd2d.DrawString(\"4.9\",midp,rawCoords=True, align=2)\n\np1 = Geometry.Point2D((1-frac)*panelx,(2+frac)*panely)\np2 = Geometry.Point2D((1+frac)*panelx,(2-frac)*panely)\nd2d.DrawArrow(p2,p1,color=arrowColor,rawCoords=True, asPolygon=True,frac = 0.1)\nmidp = p2 + (p1-p2)/2\nmidp.x += 25\nd2d.DrawString(\"0.1\",midp,rawCoords=True, align=1)\n\n\nd2d.FinishDrawing()\nsvg = d2d.GetDrawingText()\nSVG(svg)\n\n\n\n\n\n\n\n\nAt the moment it’s not possible to change the font colour used for DrawText(), so I can’t sensibly add the predicted free energy values to the plot. I will fix that for the next RDKit release and update this post at some point in the future once that has been done.\nIf you’re doing a figure for a paper and you want to so some fine tuning of the result, it’s almost definitely faster (and likely better) to save the SVG to a file and then use your favorite drawing package that can open SVG files (inkscape, Adobe Illustrator, whatever) to do the final polishing."
  },
  {
    "objectID": "posts/2025-03-15-constructing-SAR-tables.html",
    "href": "posts/2025-03-15-constructing-SAR-tables.html",
    "title": "Constructing SAR tables in Jupyter",
    "section": "",
    "text": "This is an updated and expanded version of an old blog post.\nThis one was inspired by a thread on the rdkit-discuss mailing list: https://www.mail-archive.com/rdkit-discuss@lists.sourceforge.net/msg09068.html\nAn SAR table is often a convenient way to summarize a dataset. These compact views of an SAR dataset have R1 structures in the rows, R2 structures in the columns, and measured values in the cells. I guess you probably know what I’m talking about even if I’m not describing it particularly well; if not, scroll down a bit and you’ll see one. :-)\nThe question on the mailing list was how to build one of these with the RDKit and display it in Jupyter. That’s what we’ll do in this blog post.\n\nfrom rdkit import Chem\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem.Draw import IPythonConsole\nfrom rdkit.Chem import rdRGroupDecomposition\nfrom rdkit.Chem import rdDepictor\nimport rdkit\nimport pandas as pd\nimport numpy as np\nfrom rdkit.Chem import PandasTools\nPandasTools.RenderImagesInAllDataFrames()\n\nimport time\nprint(rdkit.__version__)\nprint(time.ctime())\n\n2024.09.6\nSat Mar 15 06:00:22 2025\n\n\n\nRead in our dataset\nThis is data from ChEMBL for a set of compounds with EC50 values measured against S1P1.\n\n!head ../data/S1P1_data.csv\n\n\"doc_id\",\"molregno\",\"standard_relation\",\"standard_value\",\"standard_units\",\"standard_flag\",\"standard_type\",\"pchembl_value\",\"canonical_smiles\",\"compound_chembl_id\"\n5839,189018,\"=\",82,\"nM\",1,\"EC50\",7.09,\"CCCCCCCCc1ccc(NC(=O)[C@@H](N)COP(=O)(O)O)cc1.OC(=O)C(F)(F)F\",\"CHEMBL332050\"\n5839,188442,\"=\",322.1,\"nM\",1,\"EC50\",6.49,\"CCCCCCCCCCCCCCONC(=O)[C@@H](N)COP(=O)(O)O.OC(=O)C(F)(F)F\",\"CHEMBL115505\"\n5839,188375,\"=\",260,\"nM\",1,\"EC50\",6.58,\"CCCCCCc1ccc(NC(=O)[C@H](N)COP(=O)(O)O)cc1.OC(=O)C(F)(F)F\",\"CHEMBL115344\"\n5839,188376,\"=\",598.4,\"nM\",1,\"EC50\",6.22,\"CCCCCCCCCCCCNC(=O)[C@@H](N)COP(=O)(O)O.OC(=O)C(F)(F)F\",\"CHEMBL324358\"\n5839,188766,\"=\",12.7,\"nM\",1,\"EC50\",7.9,\"CCCCCCCCCCCCCCNC(=O)[C@H](N)COP(=O)(O)O.OC(=O)C(F)(F)F\",\"CHEMBL332472\"\n5839,188278,\"=\",58,\"nM\",1,\"EC50\",7.24,\"CCCCCCCCc1ccc(NC(=O)[C@H](N)COP(=O)(O)O)cc1.OC(=O)C(F)(F)F\",\"CHEMBL422074\"\n5839,188644,\"=\",130,\"nM\",1,\"EC50\",6.89,\"CCCCCCCCCCCCc1ccc(NC(=O)[C@H](N)COP(=O)(O)O)cc1.OC(=O)C(F)(F)F\",\"CHEMBL116953\"\n5839,188322,\"=\",8.6,\"nM\",1,\"EC50\",8.07,\"CCCCCCCCCCc1ccc(NC(=O)[C@H](N)COP(=O)(O)O)cc1.OC(=O)C(F)(F)F\",\"CHEMBL334038\"\n5839,188407,\"=\",1805,\"nM\",1,\"EC50\",5.74,\"CCCCCCCCCCCCCCCCNC(=O)[C@@H](N)COP(=O)(O)O.OC(=O)C(F)(F)F\",\"CHEMBL325408\"\n\n\n\ndf = pd.read_csv('../data/S1P1_data.csv')\nPandasTools.AddMoleculeColumnToFrame(df,smilesCol='canonical_smiles')\ndf.head()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndoc_id\nmolregno\nstandard_relation\nstandard_value\nstandard_units\nstandard_flag\nstandard_type\npchembl_value\ncanonical_smiles\ncompound_chembl_id\nROMol\n\n\n\n\n0\n5839\n189018\n=\n82.0\nnM\n1\nEC50\n7.09\nCCCCCCCCc1ccc(NC(=O)[C@@H](N)COP(=O)(O)O)cc1.O...\nCHEMBL332050\n\n\n\n\n\n1\n5839\n188442\n=\n322.1\nnM\n1\nEC50\n6.49\nCCCCCCCCCCCCCCONC(=O)[C@@H](N)COP(=O)(O)O.OC(=...\nCHEMBL115505\n\n\n\n\n\n2\n5839\n188375\n=\n260.0\nnM\n1\nEC50\n6.58\nCCCCCCc1ccc(NC(=O)[C@H](N)COP(=O)(O)O)cc1.OC(=...\nCHEMBL115344\n\n\n\n\n\n3\n5839\n188376\n=\n598.4\nnM\n1\nEC50\n6.22\nCCCCCCCCCCCCNC(=O)[C@@H](N)COP(=O)(O)O.OC(=O)C...\nCHEMBL324358\n\n\n\n\n\n4\n5839\n188766\n=\n12.7\nnM\n1\nEC50\n7.90\nCCCCCCCCCCCCCCNC(=O)[C@H](N)COP(=O)(O)O.OC(=O)...\nCHEMBL332472\n\n\n\n\n\n\n\n\n\n\n\n\nDo the R-group decomposition to get something to work with\nFor the demo here I’m going to use the structures from this paper, which is in ChEMBL as CHEMBL3352346.\nTo get the data in the form we need, we start with an R-group decomposition. This is another one of those topics where I need to do a blog post and/or write more documentation… fortunately, we’re just doing the basics here:\n\n# we need to provide a scaffold to use for the r-group decomposition:\ndoc_scaffold = Chem.MolFromSmarts('[*:1]c1nc([*:2])on1')\n\n# filter the data to just include the rows from our document:\ndoc_id = 89753\ndocdf = df[df.doc_id==doc_id]\n\n# align all the molecules to the scaffold:\nrdDepictor.Compute2DCoords(doc_scaffold)\nfor m in docdf.ROMol:\n    rdDepictor.GenerateDepictionMatching2DStructure(m,doc_scaffold)\n\n# do an r-group decomposition:\ngroups,unmatched = rdRGroupDecomposition.RGroupDecompose([doc_scaffold],docdf.ROMol,asSmiles=False,asRows=False) \n\n# and look at the results:\nms = [y for x,y in enumerate(docdf.ROMol) if x not in unmatched]\n#res = groups_to_df(groups,ms,include_core=False)\nres = PandasTools.RGroupDecompositionToFrame(groups,ms,include_core=False)\nres.head()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMol\nR1\nR2\n\n\n\n\n0\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\n2\n\n\n\n\n\n\n\n\n\n\n\n3\n\n\n\n\n\n\n\n\n\n\n\n4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFor the purposes of this analysis, it’s quicker/easier to get the data from the RGD code in a different format:\n\ngroups,unmatched = rdRGroupDecomposition.RGroupDecompose([doc_scaffold],docdf.ROMol,asSmiles=False,asRows=False) \n\nThis next block defines the function that actually creates the SAR matrix as HTML\n\nfrom collections import Counter\nfrom IPython.display import HTML\nimport base64\ndef mol_to_img(m):\n    dm = Draw.PrepareMolForDrawing(m)\n    d2d = Draw.MolDraw2DCairo(250,200)\n    dopts = d2d.drawOptions()\n    dopts.dummiesAreAttachments=True\n    d2d.DrawMolecule(dm)\n    d2d.FinishDrawing()\n    png_data = d2d.GetDrawingText() \n    png_data = base64.encodebytes(png_data)\n    html ='&lt;img src=\"data:image/png;base64,%s\"&gt;'%png_data.decode()\n    return html\n\ndef run_groups(groups,unmatched,mols,values,r1_label='R1',r2_label='R2',threshold=1):\n    # generate SAR matrix\n    \n    # generate SMILES for each of the R-groups and map those \n    # to the R-group's molecule objects:\n    r1_smiles = [Chem.MolToSmiles(x) for x in groups[r1_label]]\n    r2_smiles = [Chem.MolToSmiles(x) for x in groups[r2_label]]\n    r1_lookup = dict(zip(r1_smiles,groups[r1_label]))\n    r2_lookup = dict(zip(r2_smiles,groups[r2_label]))\n    \n    # all_r1s and all_r2s map R indices to the corresponding SMILES:\n    all_r1s = dict([(y,x) for x,y in enumerate(r1_lookup.keys())])\n    all_r2s = dict([(y,x) for x,y in enumerate(r2_lookup.keys())])\n    \n    # labelled_mols will contain 3-tuples:\n    #   (molecule_index,R1_index,R2_index)\n    labelled_mols = []\n    residx = 0\n    for i,m in enumerate(mols):\n        if i in unmatched:\n            continue\n        r1_idx = all_r1s[r1_smiles[residx]]\n        r2_idx = all_r2s[r2_smiles[residx]]\n        residx += 1\n        labelled_mols.append((i,r1_idx,r2_idx))\n        \n    # We only keep r groups that appear at least `threshold times in the full list:\n    c1 = Counter()\n    c2 = Counter()\n    for idx,i,j in labelled_mols:\n        c1[i] += 1\n        c2[j] += 1\n    freq1 = [x for x,y in c1.items() if y&gt;=threshold]\n    freq2 = [x for x,y in c2.items() if y&gt;=threshold]\n    reverse_r1s = dict([(y,x) for x,y in all_r1s.items()])\n    reverse_r2s = dict([(y,x) for x,y in all_r2s.items()])\n    freq_r1s = [reverse_r1s[i] for i in freq1]\n    freq_r2s = [reverse_r2s[i] for i in freq2]\n    n_r1 = len(freq1)\n    n_r2 = len(freq2)\n    \n    # now construct a matrix \n    matrix = [None]*(n_r1*n_r2)\n    matrix = np.reshape(matrix,(n_r1,n_r2))\n    for idx,i,j in labelled_mols:\n        if i not in freq1 or j not in freq2:\n            continue\n        r1idx = freq1.index(i)\n        r2idx = freq2.index(j)\n        matrix[r1idx,r2idx] = idx\n        \n    # now create the html from that\n    html = \"&lt;table&gt;\"\n    ths = \"\".join(\"&lt;th&gt;%s&lt;/th&gt;\"%mol_to_img(r2_lookup[x]) for x in freq_r2s)\n    html += f\"&lt;tr&gt;&lt;td&gt;&lt;/td&gt;{ths}&lt;/tr&gt;\"\n    for i1,x in enumerate(freq_r1s):\n        img = mol_to_img(r1_lookup[x])\n        row = f\"&lt;tr&gt;&lt;td&gt;{img}&lt;/td&gt;\"\n        for i2,y in enumerate(freq_r2s):\n            if matrix[i1,i2] is not None:\n                elem = matrix[i1,i2]\n                elem = values.iloc[elem]\n            else:\n                elem = ''\n            row += f'&lt;td&gt;{elem}&lt;/td&gt;'    \n        row += \"&lt;/tr&gt;\"\n        html += row\n    html += \"&lt;/table&gt;\"\n    return html\n\n\nhtml = run_groups(groups,unmatched,docdf.ROMol,docdf.pchembl_value)\nHTML(html)\n\n\n\n\n\n\n\n\n\n\n\n\n8.0\n7.4\n\n\n\n\n\n8.3\n\n\n\n\n\n\n8.6\n\n\n\n\n\n\n8.3\n\n\n\n\n\n\n7.7\n\n8.3\n\n\n\n\n\n\n8.1\n\n\n\n\n8.1\n\n\n\n\n\n\n\n\n8.4\n\n\n\n\n7.4\n\n\n\n\n\n\n\n\n8.1\n\n\n\n\n\n\n8.2\n\n\n\n\n\n\n7.2\n\n\n\n\n6.9\n\n7.3\n\n\n\n\n5.6\n\n\n\n\n\n\n6.8\n\n\n\n\n\n\n6.3\n\n6.4\n\n\n\n\n6.5\n\n\n\n\n\n\n6.2\n\n\n\n\n\n\n6.4\n\n6.9\n\n\n\n\n6.5\n\n7.1\n\n\n\n\n6.8\n\n7.6\n\n\n\n\n6.9\n\n7.6\n\n\n\n\n7.1\n\n\n\n\n\n\n7.4\n\n\n\n\n\n\n\n\n8.4\n\n\n\n\n7.8\n\n8.7\n\n\n\n\n8.1\n\n\n\n\n\n\n7.7\n\n\n\n\n\n\n7.5\n\n\n\n\n\n\n\n\n\n6.6\n\n\n\n\n\nLet’s make that more convenient by creating a single wrapper function:\n\ndef create_SAR_table(mols,scaffold,values,r1_label='R1',r2_label='R2',threshold=1):\n    # align all the molecules to the scaffold:\n    rdDepictor.Compute2DCoords(scaffold)\n    for m in mols:\n        if m.HasSubstructMatch(scaffold):\n            rdDepictor.GenerateDepictionMatching2DStructure(m,scaffold)\n\n    # do an r-group decomposition:\n    groups,unmatched = rdRGroupDecomposition.RGroupDecompose([scaffold],mols,asSmiles=False,asRows=False) \n    html = run_groups(groups,unmatched,mols,values,\n                      r1_label=r1_label,r2_label=r2_label,threshold=threshold)\n    return html\n\n\n\n# Pull all the structures that contain a common scaffold:\ndoc_scaffold = Chem.MolFromSmarts('[*:1]c1nc([*:2])on1')\nmatch_df = df[df.ROMol&gt;=doc_scaffold]\n\n# Show the table for R-groups that appear at least 5 times:\nhtml = create_SAR_table(match_df.ROMol,doc_scaffold,match_df.pchembl_value,threshold=5)\nHTML(html)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n9.14\n10.1\n9.82\n9.3\n10.1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n9.7\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n7.41\n7.51\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n8.19\n\n\n8.07\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n8.4\n\n\n\n\n\n\n\n\n9.4\n\n10.9\n\n\n\n\n\n\n8.5\n\n\n\n\n\n\n\n\n8.12\n\n\n\n\n7.12\n7.44\n\n\n\n\n\n\n\n\n\n\n9.21\n\n\n\n\n8.68\n8.32\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n8.51\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n8.77\n\n\n\n\n\n7.89\n10.0\n8.39\n\n\n\n\n\n\n\n7.7\n\n8.4\n\n\n\n\n\n9.77\nnan\n\n\n\n\nnan\n\n\n\n\n\n\n\n\n\n\nnan\n\n\n10.3\n\n\n\n\n10.3\n\n\n\n\n\n\n\n\nnan\n\n\n9.3\n\n\n\n\n10.3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n8.54\n\n\n\n\n\n\n\n\n\n8.46\n\n\n\n\n\n\n6.46\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n8.17\n\n\n\n\n\n\n\n\n\nIt’d be shiny if we could get that to pop up into a separate HTML window so that the images were a bit bigger, but I’m not willing to dive down that hole at the moment.\nThis is clearly just a starting point (particularly since it can only show two sets of R groups at a time), but hopefully it’s already useful."
  },
  {
    "objectID": "posts/2025-03-16-building-a-similarity-comparison-set.html",
    "href": "posts/2025-03-16-building-a-similarity-comparison-set.html",
    "title": "Building a similarity comparison set",
    "section": "",
    "text": "This is a revised and expanded version of an old blog post which has already been updated once.\nGoal: construct a set of molecular pairs that can be used to compare similarity methods to each other.\nThis works with ChEMBL35.\nI want to start with molecules that have some connection to each other, so I will pick pairs that have a baseline similarity: a Tanimoto similarity using count based Morgan0 fingerprints of at least 0.65. I also create a second set of somewhat more closely related molecules where the baseline similarity is 0.55 with a Morgan1 fingerprint. The thresholds were selected based on the analysis in this blog post\nIf you are interested in using the sets generated in this post, you can find them in the source repo for this blog.\n\nCreating the tables in PostgreSQL\nI’m going to use ChEMBL as my data source, so I’ll start by adding a table with count-based morgan fingerprints. Here’s the SQL for that, assuming that you’ve installed the RDKit extension and setup an RDKit schema as described in the docs\nselect molregno,morgan_fp(m,0) mfp0,morgan_fp(m,1) mfp1,morgan_fp(m,2) mfp2 into rdk.countfps from rdk.mols;\ncreate index cfps_mfp0 on rdk.countfps using gist(mfp0);\ncreate index cfps_mfp1 on rdk.countfps using gist(mfp1);\ncreate index cfps_mfp2 on rdk.countfps using gist(mfp2);\nFingerprints that only contains molecules with &lt;= 50 heavy atoms and a single fragment (we recognize this because there is no ‘.’ in the SMILES):\nselect molregno,mfp0,mfp1 into table rdk.tfps_smaller from rdk.countfps join compound_properties using (molregno) join compound_structures using (molregno) where heavy_atoms&lt;=50 and canonical_smiles not like '%.%';\ncreate index sfps_mfp0_idx on rdk.tfps_smaller using gist(mfp0);\ncreate index sfps_mfp1_idx on rdk.tfps_smaller using gist(mfp1);\nAnd now I’ll build the set of pairs using Python. This is definitely doable in SQL, but my SQL-fu isn’t that strong.\nStart by getting a set of 60K random small molecules:\n\nfrom rdkit import Chem\nimport rdkit\nprint(rdkit.__version__)\nimport time\nprint(time.asctime())\n\n2024.09.6\nSat Mar 15 18:36:20 2025\n\n\n\nimport psycopg2\ncn = psycopg2.connect(host='localhost',dbname='chembl_35')\ncurs = cn.cursor()\ncurs.execute(\"select chembl_id,m from rdk.mols join rdk.tfps_smaller using (molregno)\"\n             \" join chembl_id_lookup on (molregno=entity_id and entity_type='COMPOUND')\"\n             \" order by random() limit 60000\")\nqs = curs.fetchall()\n\nAnd now find one neighbor for 50K of those from the mfp0 table of smallish molecules:\n\ncn.rollback()\ncurs.execute('set rdkit.tanimoto_threshold=0.65')\n\nkeep=[]\nfor i,row in enumerate(qs):\n    curs.execute(\"select chembl_id,m from rdk.mols join (select chembl_id,molregno from rdk.tfps_smaller \"\n                 \"join chembl_id_lookup on (molregno=entity_id and entity_type='COMPOUND') \"\n                 \"where mfp0%%morgan_fp(%s,0) \"\n                 \"and chembl_id!=%s limit 1) t2 using (molregno) \"\n                 \"limit 1\",(row[1],row[0]))\n    d = curs.fetchone()\n    if not d: \n        continue\n    keep.append((row[0],row[1],d[0],d[1]))\n    if len(keep)&gt;=50000: \n        break\n    if not i%1000: print('Done: %d'%i)\n\nDone: 0\nDone: 1000\nDone: 2000\nDone: 3000\nDone: 4000\nDone: 5000\nDone: 6000\nDone: 7000\nDone: 8000\nDone: 9000\nDone: 10000\nDone: 11000\nDone: 12000\nDone: 13000\nDone: 14000\nDone: 15000\nDone: 16000\nDone: 17000\nDone: 18000\nDone: 19000\nDone: 20000\nDone: 21000\nDone: 22000\nDone: 23000\nDone: 24000\nDone: 25000\nDone: 26000\nDone: 27000\nDone: 28000\nDone: 29000\nDone: 30000\nDone: 31000\nDone: 32000\nDone: 33000\nDone: 34000\nDone: 35000\nDone: 36000\nDone: 37000\nDone: 38000\nDone: 39000\nDone: 40000\nDone: 41000\nDone: 42000\nDone: 43000\nDone: 44000\nDone: 45000\nDone: 46000\nDone: 47000\nDone: 48000\nDone: 49000\nDone: 50000\n\n\nFinally, write those out to a file so that we can use them elsewhere:\n\nimport gzip\nwith gzip.open('../data/chembl35_50K.mfp0.pairs.txt.gz','wb+') as outf:\n    for cid1,smi1,cid2,smi2 in keep: \n        outf.write(f'{cid1}\\t{smi1}\\t{cid2}\\t{smi2}\\n'.encode('UTF-8'))\n\n\n\nTry molecules that are a bit more similar.\nUse a similarity threshold for the pairs using MFP1 bits.\n\ncn.rollback()\ncurs.execute('set rdkit.tanimoto_threshold=0.55')\n\nkeep=[]\nfor i,row in enumerate(qs):\n    curs.execute(\"select chembl_id,m from rdk.mols join (select chembl_id,molregno from rdk.tfps_smaller \"\n                 \"join chembl_id_lookup on (molregno=entity_id and entity_type='COMPOUND') \"\n                 \"where mfp1%%morgan_fp(%s,1) \"\n                 \"and chembl_id!=%s limit 1) t2 using (molregno) \"\n                 \"limit 1\",(row[1],row[0]))\n    d = curs.fetchone()\n    if not d: \n        continue\n    keep.append((row[0],row[1],d[0],d[1]))\n    if len(keep)&gt;=50000: \n        break\n    if not i%1000: print('Done: %d'%i)\n\nDone: 0\nDone: 1000\nDone: 2000\nDone: 3000\nDone: 4000\nDone: 5000\nDone: 6000\nDone: 7000\nDone: 8000\nDone: 9000\nDone: 10000\nDone: 11000\nDone: 12000\nDone: 13000\nDone: 14000\nDone: 15000\nDone: 16000\nDone: 17000\nDone: 18000\nDone: 19000\nDone: 20000\nDone: 21000\nDone: 22000\nDone: 23000\nDone: 24000\nDone: 25000\nDone: 26000\nDone: 27000\nDone: 28000\nDone: 29000\nDone: 30000\nDone: 31000\nDone: 32000\nDone: 33000\nDone: 34000\nDone: 35000\nDone: 36000\nDone: 37000\nDone: 38000\nDone: 39000\nDone: 40000\nDone: 41000\nDone: 42000\nDone: 43000\nDone: 44000\nDone: 45000\nDone: 46000\nDone: 47000\nDone: 48000\nDone: 49000\nDone: 50000\n\n\n\nimport gzip\nwith gzip.open('../data/chembl35_50K.mfp1.pairs.txt.gz','wb+') as outf:\n    for cid1,smi1,cid2,smi2 in keep: \n        outf.write(f'{cid1}\\t{smi1}\\t{cid2}\\t{smi2}\\n'.encode('UTF-8'))"
  }
]